{"version":3,"file":"static/chunks/5735-86758c79078c76fc.js","mappings":"oLAWA,EAAuB,OAAU,SACjC,MAAiB,OAAa,GAC9B,MAAyB,SAAG,CACxB,GAAM,QACV,CACA,MACA,KACA,OACA,sBACA,kBACA,oBACA,UACA,YAEA,EAEA,CAAC,EACD,EAAiB,OAAU,CAC3B,QACA,aAAY,aAA4B,EACxC,EAAwB,QAAa,MACrC,OACA,MAA2B,SAAG,CAC9B,EACA,CACA,KACA,UAAmB,QAAE,yCACrB,SAAkC,SAAG,CAC3B,GAAM,MAChB,CACA,OAAqB,4CAAkD,CACvE,qBAGA,EAEA,GAEA,6GC5CA,MACA,cAAU,mBAA+B,EACzC,EAAgB,UAAQ,SACxB,EAAgB,oBAAc,IAAU,kBAAY,IACpD,kBACA,iBACA,UAAe,QAAE,uCACjB,CAAG,OACH,EAAqB,QAAE,gCACvB,MAAyB,SAAG,CACxB,GAAM,MACV,CACA,YACA,KACA,OACA,sBACA,oBACA,wBACA,YACA,CAAO,CACP,UACA,EAEA,EACA,0MGoBA,gBACA,MACA,qBACA,MAEA,CADA,KACA,WAFA,GAKA,2CACA,CACA,cACA,MACA,0DACA,uEC7BA,CACA,EACA,EACA,EACA,EACA,CAAI,OAAuB,GAC3B,MAAqC,OAAa,EAClD,UACA,kBACA,CAAC,EAQD,SAAS,EAAgB,GACzB,MACA,oBAFyB,EAEzB,oCACA,CACA,cAEA,OADc,EAAgB,GAC9B,iBACA,CACA,QAH8B,CAG9B,MAA2B,EAC3B,IACA,KACA,mBACA,iBACA,kBACA,gBACA,SACA,SACA,gBACA,UACA,SACA,2BACA,yBACA,YACA,4BACA,KACA,CAAI,EACJ,EAAkB,YAAM,OACxB,EAAoB,YAAM,OAC1B,MACA,EAAoB,iBAAW,MAC/B,2BACA,KACA,+BAA2D,iBAAsB,CACjF,CAAK,CACL,CAAG,KACH,EAAyB,iBAAW,MACpC,sBACA,MACA,KACA,mCACQ,CACR,uBACA,GACA,UACA,CACA,CAAK,EACL,gBACA,CAAG,QACH,EAAwB,iBAAW,MACnC,sBACA,sBACA,GACA,UACA,CAAK,EACL,gBACA,CAAG,MACH,EAAyB,iBAAW,MACpC,aACA,EACA,IAEA,GAEA,CAAG,YACH,QAAU,iCAAoC,CAAE,MAAa,EAC7D,SACA,gBACA,UACA,QACA,CAAG,GDpHH,YACA,GCoHiB,CDpHP,8BAA+B,EACzC,EAAuB,OAAc,IAKrC,EAJmB,YAAM,EACzB,iBACA,4BACA,CAAG,EACH,QACE,eAAS,MACX,MACA,OACA,UACA,QACA,oBAEA,EACA,MACA,gCACA,+BACA,MACA,CACA,6BACA,mBACA,KAEA,EACA,MACA,+BACA,6BACA,mBACA,KAEA,EACA,eAKA,OAJA,qCACA,mCACA,sCACA,oCACA,KACA,wCACA,sCACA,yCACA,sCACA,CACA,CAAG,aACH,ECwEiB,CACjB,aACA,MACA,YACA,MACA,mDACA,GAEA,CACA,CAAG,EACH,MAAiB,OAAS,EAC1B,KACA,aACA,YACA,WACA,CAAG,EACH,MAA0C,cAAQ,KAChD,OAAe,MACjB,GACA,KAEA,CAAG,MACD,OAAc,IAChB,WACA,UACA,cACA,CAAG,EACH,MAAyB,OAAiB,SAAG,QAAsB,EACnE,MAzGA,iBACA,MAAkB,WAAK,GACvB,OACA,MAAS,aAAO,KAChB,YAAuC,EAAO,GAAG,EAAG,GACjD,MACH,EAmGA,6BACA,EAA2B,iBAAW,MACtC,IACA,GACA,CAAG,QACH,EAAqB,YAAM,eAC3B,SA4XA,QACS,eAAS,CAClB,YACA,EAEA,EAjYA,KACA,sCACA,iBACA,CAAG,EACH,MAAgC,iBAAW,MAC3C,IACA,GACA,CAAG,QACH,EAA+B,iBAAW,MAC1C,IACA,GACA,CAAG,QACH,EAAkB,iBAAW,MAC7B,QACA,MAAgB,EAAgB,WAChC,kBADgC,EAChC,qCAEA,IADA,QAEA,OACA,8CACA,YACA,CAAG,UACH,EAAgB,YAAM,OACtB,OACA,mBACA,wBACA,uBACA,kBACA,2BACA,cACA,SACA,WACA,SACA,0BACA,uBACA,SACA,WACA,SACA,UACA,UACA,YACA,eACA,gBACA,cACA,aACA,kBACA,SACA,eACA,kBACA,OACA,CACA,CACA,eAAiC,SACjC,UACA,UAAU,2DAAgE,EAC1E,EAAoB,iBAAW,CAC/B,IACA,IAMA,EALA,CACA,QACA,YACA,SACA,CACA,CANA,MAMA,CACA,IACA,mBACA,oBACA,KAEA,CAAK,CACL,OAEA,OACA,KACA,IAAS,QAAS,+BAClB,cACA,cAAmB,QAAQ,WAC3B,yBACA,uBACA,yBACA,QAAa,QAAe,cAC5B,UAAe,QAAe,eAC9B,CACA,CACA,cACA,MACA,gBA4RA,OACA,EACA,IAMA,OANA,GAMA,iBANA,GAMA,aANA,KAMA,8BALA,SACA,qDACA,mCAjSA,uFACA,CACA,eAA+B,SAC/B,UACA,MACA,YACA,0FAGA,IACA,eACA,kBACA,UACA,SACA,UACA,SACA,SACA,eACA,2BACA,CAAI,EACJ,MACA,EAAiC,SH/PjC,EG+P4C,CH/P5C,CAA+B,EAC/B,YAAU,+BAA6C,EACvD,MAA0B,cAAQ,KAClC,EAAqB,YAAM,GAC3B,OACA,YACA,wBACA,eAEA,EACA,OACA,IACA,0BACA,MACA,cACA,CAAK,GACL,QACE,eAAS,WACX,YACA,WACA,wBACA,aACA,QACA,KACA,MACA,CACA,YA9BA,GACA,QAAU,GAAM,EAChB,uDACA,EA2BA,IACA,sBACA,OACA,mBACA,qBAEA,KACA,cACA,GACA,CACA,CACA,CAEA,EGwN4C,CAC5C,0CACA,CAAG,EACH,EAAoB,iBAAW,CAC/B,IACA,uCACA,OACA,IAeA,GAbA,0BACA,SACA,eACA,uBACA,GACA,UACA,CAAS,CACT,aACA,uBACA,GACA,UACA,CACA,CACA,CAfA,MAeA,CACA,MACA,mBACA,KACA,MACA,CACA,YACA,MAAyB,SFjSzB,SACA,GEgS8C,MFhS9C,EACA,SAEA,MAIA,OAHA,OACA,mDAIA,eACA,mDAEA,eACA,aACA,eAEA,KADA,WACA,KACA,UACA,MAEA,OAEA,kBACA,KACA,CACA,QACA,EEuQA,WACA,EACA,IACA,QACA,0EACA,CAAW,CACX,WAEA,GAEA,EADA,kBAGA,CAAO,EACP,aACA,IAEA,CAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EAEA,EAAwB,YAAM,KAC9B,GACA,eAEA,MAA+B,OAAc,EAC7C,sBACA,UACA,OACA,qBACG,EACH,OACA,KACA,IAAS,QAAS,MAClB,2BACA,YACA,YACA,KACA,OACA,WACA,gDACA,CAAK,CACL,8BACA,UAAe,QAAe,eAC9B,CACA,CACA,eAAqC,EACrC,WAAU,YAAiB,IAC3B,yBACA,KACA,OACA,gCACA,WAEA,CAAG,CACH,CACA,eAA+B,SAC/B,IACA,eACA,cACA,eACA,UACA,UACA,aACA,cACA,gBACA,OACA,KACA,CAAI,EAEJ,CACA,kBACA,eACA,gBACA,UACA,UACA,SACA,SACA,QACA,CAAI,IACJ,EAAc,YAAM,OACpB,KAAgB,EAAO,YAAY,WAAK,GAAG,EAC3C,OAAU,cAAkB,GAC5B,cACA,CAAG,EACH,EAAuB,iBAAW,CAClC,IACA,cACA,GAEA,IACA,CAAK,CACL,WAEA,EAAsB,iBAAW,CACjC,IACA,cACA,0BACA,IAEA,CAAK,CACL,OAEA,EAAuB,iBAAW,CAClC,IACA,cACA,GAEA,KACA,CAAK,CACL,SAEA,EAAkB,iBAAW,CAC7B,IACA,cACA,oBAEA,eACA,GAEA,CAAK,CACL,WAEA,EAAkB,iBAAW,CAC7B,IACA,cACA,IACA,CAAK,CACL,SAEA,QACA,QACE,OAAe,MACjB,IAEA,kBACA,WACA,gCAEA,qCACA,KACA,gCACA,cACA,CAAO,GACD,0BACN,iBAA8B,iBAAqB,EAEnD,CAAG,YACH,MAAyB,OAAY,EACrC,UACA,UACA,eACA,cACA,eACA,IAAS,QAAS,QAClB,aACA,aACA,CAAG,EACH,OACA,KACA,KACA,sBACA,KACA,gBACA,eACA,CACA,qHC/bA,GACA,OACA,qBACA,UACA,QACA,YACA,YACA,iBAEA,CAAG,CACH,MACA,eACA,mBACA,CAAK,CACL,UACA,SACA,YACA,YACA,iBACA,CACA,CACA,EACA,EAAqB,OAAM,CAAC,GAAM,MAClC,EAAe,OAAU,eACzB,QACA,cAAU,sBAAkC,EAC5C,CACA,SACA,kBACA,2BACA,CAAI,CAAE,OAAc,GACpB,EAAoB,QAAW,MAC/B,EAA0B,QAAiB,IAC3C,EAAiB,OAAa,GAC9B,MAAyB,SAAG,CACxB,GAAM,KACV,CACA,KACA,OAAe,6DAA4F,CAC3G,SAAgC,SAAG,CACnC,EACA,CACA,WACA,WACA,yBACA,OAAmB,oBAA4B,CAC/C,KACA,UAAqB,QAAE,uCACvB,KACA,WACA,oBAA+B,QAAO,CACtC,aACA,sBAEA,EAEA,EAEA,CAAC,EACD,8JCzDA,MAA0C,OAAa,EACvD,yBACA,8GACA,CAAC,EACD,MACA,aAAU,GAAW,EACrB,EAAiB,QAAmB,WACpC,EAAmB,QAAgB,IACnC,WAAU,GAAY,CAAE,MAAQ,GAChC,aAAU,QAAsB,CAAE,MAAO,EAAG,iBAAwB,EACpE,EAAkB,aAAO,YACzB,QAAU,2BAA+B,EACzC,MAAyB,SAAG,CAAC,IAAuB,EAAI,iBAA8C,SAAG,CAAC,IAAY,EAAI,iBAA0C,SAAG,IAAuB,iBAAyB,QAAO,WAAa,0BAA8B,EAAG,EAAG,EAAG,CAClR,CACA,wGCvBA,EAAkB,OAAU,CAC5B,QACA,MAAmB,OAAa,GAChC,MAA2B,SAAG,CACxB,GAAM,MACZ,CACA,MACA,KACA,gBACA,gCACA,EAEA,GAEA,2CCbA,EAAqB,OAAU,CAC/B,QACA,SAAY,QAAgB,EAC5B,EAAmB,OAAa,GAChC,oCACA,EAAyB,aAAO,CAChC,MACA,sBACA,gBACA,kBACA,eACA,aACA,oBACA,kBACA,gBACA,UACA,UACA,CAAO,CACP,UAEA,MAA2B,SAAG,CAAC,GAAM,aAAW,sBAAkD,CAClG,oCCZA,EAAe,OAAU,SACzB,IACA,OACA,wBACA,UACA,2BACA,WACA,KACA,CAAI,EACJ,EAAwB,QAAW,MAEnC,EADA,KACiD,SAAG,SAAW,OAAS,4BAAgC,YAAY,IACpH,MAAyB,UAAI,CACzB,EACJ,CACA,KACA,MAHkB,IAGD,QAAE,sCACnB,UACA,GAAgC,SAAG,CAAC,GAAQ,EAAI,wCAA2D,EAC3G,EACA,GAAmC,SAAG,CAAC,EAAW,CAAI,QAAJ,IAAI,aAAgD,EACtG,EAGA,CAAC,EACD","sources":["webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-4G4PB64H.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-BT5PZJJ3.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-CLDV4JKZ.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-B4RAWM5W.mjs","webpack://_N_E/./node_modules/@chakra-ui/react-use-outside-click/dist/index.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-FXGID3ZC.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-KC3TV7GR.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-MBJIMMAG.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-ZJTZEOFR.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-WLBVP567.mjs","webpack://_N_E/./node_modules/@chakra-ui/menu/dist/chunk-T2R3NUUY.mjs"],"sourcesContent":["import {\n  useMenuStyles\n} from \"./chunk-MBJIMMAG.mjs\";\nimport {\n  useMenuButton\n} from \"./chunk-FXGID3ZC.mjs\";\n\n// src/menu-button.tsx\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledMenuButton = forwardRef((props, ref) => {\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.button,\n    {\n      ref,\n      ...props,\n      __css: {\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button\n      }\n    }\n  );\n});\nvar MenuButton = forwardRef(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props;\n    const buttonProps = useMenuButton(rest, ref);\n    const Element = As || StyledMenuButton;\n    return /* @__PURE__ */ jsx(\n      Element,\n      {\n        ...buttonProps,\n        className: cx(\"chakra-menu__menu-button\", props.className),\n        children: /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            __css: { pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 },\n            children: props.children\n          }\n        )\n      }\n    );\n  }\n);\nMenuButton.displayName = \"MenuButton\";\n\nexport {\n  MenuButton\n};\n","// src/menu-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MenuIcon = (props) => {\n  const { className, children, ...rest } = props;\n  const child = Children.only(children);\n  const clone = isValidElement(child) ? cloneElement(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: cx(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n  const _className = cx(\"chakra-menu__icon-wrapper\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      className: _className,\n      ...rest,\n      __css: {\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexShrink: 0\n      },\n      children: clone\n    }\n  );\n};\nMenuIcon.displayName = \"MenuIcon\";\n\nexport {\n  MenuIcon\n};\n","// src/use-shortcut.ts\nimport { useEffect, useRef, useState } from \"react\";\nfunction isPrintableCharacter(event) {\n  const { key } = event;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\nfunction useShortcut(props = {}) {\n  const { timeout = 300, preventDefault = () => true } = props;\n  const [keys, setKeys] = useState([]);\n  const timeoutRef = useRef();\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  const clearKeysAfterDelay = () => {\n    flush();\n    timeoutRef.current = setTimeout(() => {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n  useEffect(() => flush, []);\n  function onKeyDown(fn) {\n    return (event) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys];\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key);\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        setKeys(keysCopy);\n        fn(keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n  return onKeyDown;\n}\n\nexport {\n  useShortcut\n};\n","// src/get-next-item-from-search.ts\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  }\n  if (!currentItem) {\n    const foundItem = items.find(\n      (item) => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase())\n    );\n    return foundItem;\n  }\n  const matchingItems = items.filter(\n    (item) => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase())\n  );\n  if (matchingItems.length > 0) {\n    let nextIndex;\n    if (matchingItems.includes(currentItem)) {\n      const currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n      return matchingItems[nextIndex];\n    }\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  }\n  return currentItem;\n}\n\nexport {\n  getNextItemFromSearch\n};\n","// src/index.ts\nimport { useEffect, useRef } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useOutsideClick(props) {\n  const { ref, handler, enabled = true } = props;\n  const savedHandler = useCallbackRef(handler);\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  const state = stateRef.current;\n  useEffect(() => {\n    if (!enabled)\n      return;\n    const onPointerDown = (e) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n    const onMouseUp = (event) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    const onTouchEnd = (event) => {\n      state.ignoreEmulatedMouseEvents = true;\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    const doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\nfunction isValidEvent(event, ref) {\n  var _a;\n  const target = event.target;\n  if (target) {\n    const doc = getOwnerDocument(target);\n    if (!doc.contains(target))\n      return false;\n  }\n  return !((_a = ref.current) == null ? void 0 : _a.contains(target));\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return (_a = node == null ? void 0 : node.ownerDocument) != null ? _a : document;\n}\nexport {\n  useOutsideClick\n};\n","import {\n  useShortcut\n} from \"./chunk-CLDV4JKZ.mjs\";\nimport {\n  getNextItemFromSearch\n} from \"./chunk-B4RAWM5W.mjs\";\n\n// src/use-menu.ts\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { useFocusOnHide } from \"@chakra-ui/react-use-focus-effect\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport {\n  useDisclosure\n} from \"@chakra-ui/react-use-disclosure\";\nimport { useOutsideClick } from \"@chakra-ui/react-use-outside-click\";\nimport { useAnimationState } from \"@chakra-ui/react-use-animation-state\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { dataAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { lazyDisclosure } from \"@chakra-ui/lazy-utils\";\nimport {\n  cloneElement,\n  useCallback,\n  useRef,\n  useState,\n  useId,\n  useMemo,\n  useEffect\n} from \"react\";\nvar [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant\n] = createDescendantContext();\nvar [MenuProvider, useMenuContext] = createContext({\n  strict: false,\n  name: \"MenuContext\"\n});\nfunction useIds(idProp, ...prefixes) {\n  const reactId = useId();\n  const id = idProp || reactId;\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return (_a = node == null ? void 0 : node.ownerDocument) != null ? _a : document;\n}\nfunction isActiveElement(element) {\n  const doc = getOwnerDocument(element);\n  return doc.activeElement === element;\n}\nfunction useMenu(props = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    initialFocusRef,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount = false,\n    ...popperProps\n  } = props;\n  const menuRef = useRef(null);\n  const buttonRef = useRef(null);\n  const descendants = useMenuDescendants();\n  const focusMenu = useCallback(() => {\n    requestAnimationFrame(() => {\n      var _a;\n      (_a = menuRef.current) == null ? void 0 : _a.focus({ preventScroll: false });\n    });\n  }, []);\n  const focusFirstItem = useCallback(() => {\n    const id2 = setTimeout(() => {\n      var _a;\n      if (initialFocusRef) {\n        (_a = initialFocusRef.current) == null ? void 0 : _a.focus();\n      } else {\n        const first = descendants.firstEnabled();\n        if (first)\n          setFocusedIndex(first.index);\n      }\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants, initialFocusRef]);\n  const focusLastItem = useCallback(() => {\n    const id2 = setTimeout(() => {\n      const last = descendants.lastEnabled();\n      if (last)\n        setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants]);\n  const onOpenInternal = useCallback(() => {\n    onOpenProp == null ? void 0 : onOpenProp();\n    if (autoSelect) {\n      focusFirstItem();\n    } else {\n      focusMenu();\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp]);\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenInternal\n  });\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event) => {\n      var _a;\n      if (!((_a = buttonRef.current) == null ? void 0 : _a.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  const popper = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction\n  });\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  const animationState = useAnimationState({ isOpen, ref: menuRef });\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`);\n  const openAndFocusMenu = useCallback(() => {\n    onOpen();\n    focusMenu();\n  }, [onOpen, focusMenu]);\n  const timeoutIds = useRef(/* @__PURE__ */ new Set([]));\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id2) => clearTimeout(id2));\n    timeoutIds.current.clear();\n  });\n  const openAndFocusFirstItem = useCallback(() => {\n    onOpen();\n    focusFirstItem();\n  }, [focusFirstItem, onOpen]);\n  const openAndFocusLastItem = useCallback(() => {\n    onOpen();\n    focusLastItem();\n  }, [onOpen, focusLastItem]);\n  const refocus = useCallback(() => {\n    var _a, _b;\n    const doc = getOwnerDocument(menuRef.current);\n    const hasFocusWithin = (_a = menuRef.current) == null ? void 0 : _a.contains(doc.activeElement);\n    const shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus)\n      return;\n    const node = (_b = descendants.item(focusedIndex)) == null ? void 0 : _b.node;\n    node == null ? void 0 : node.focus();\n  }, [isOpen, focusedIndex, descendants]);\n  const rafId = useRef(null);\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n    initialFocusRef,\n    rafId\n  };\n}\nfunction useMenuButton(props = {}, externalRef = null) {\n  const menu = useMenuContext();\n  const { onToggle, popper, openAndFocusFirstItem, openAndFocusLastItem } = menu;\n  const onKeyDown = useCallback(\n    (event) => {\n      const eventKey = event.key;\n      const keyMap = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem\n      };\n      const action = keyMap[eventKey];\n      if (action) {\n        event.preventDefault();\n        event.stopPropagation();\n        action(event);\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem]\n  );\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  };\n}\nfunction isTargetMenuItem(target) {\n  var _a;\n  return isHTMLElement(target) && !!((_a = target == null ? void 0 : target.getAttribute(\"role\")) == null ? void 0 : _a.startsWith(\"menuitem\"));\n}\nfunction useMenuList(props = {}, ref = null) {\n  const menu = useMenuContext();\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`\n    );\n  }\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n    unstable__animationState: animated\n  } = menu;\n  const descendants = useMenuDescendantsContext();\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) => event.key !== \" \" && isTargetMenuItem(event.target)\n  });\n  const onKeyDown = useCallback(\n    (event) => {\n      if (!event.currentTarget.contains(event.target))\n        return;\n      const eventKey = event.key;\n      const keyMap = {\n        Tab: (event2) => event2.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex);\n          if (next)\n            setFocusedIndex(next.index);\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex);\n          if (prev)\n            setFocusedIndex(prev.index);\n        }\n      };\n      const fn = keyMap[eventKey];\n      if (fn) {\n        event.preventDefault();\n        fn(event);\n        return;\n      }\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => {\n            var _a, _b;\n            return (_b = (_a = item == null ? void 0 : item.node) == null ? void 0 : _a.textContent) != null ? _b : \"\";\n          },\n          descendants.item(focusedIndex)\n        );\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node);\n          setFocusedIndex(index);\n        }\n      });\n      if (isTargetMenuItem(event.target)) {\n        onTypeahead(event);\n      }\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex\n    ]\n  );\n  const hasBeenOpened = useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\"\n    },\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  };\n}\nfunction useMenuPositioner(props = {}) {\n  const { popper, isOpen } = useMenuContext();\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style\n    }\n  });\n}\nfunction useMenuItem(props = {}, externalRef = null) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    onFocus: onFocusProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    type: typeProp,\n    ...htmlProps\n  } = props;\n  const menu = useMenuContext();\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n    rafId\n  } = menu;\n  const ref = useRef(null);\n  const id = `${menuId}-menuitem-${useId()}`;\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  const onMouseEnter = useCallback(\n    (event) => {\n      onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n      if (isDisabled)\n        return;\n      setFocusedIndex(index);\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp]\n  );\n  const onMouseMove = useCallback(\n    (event) => {\n      onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event);\n      }\n    },\n    [onMouseEnter, onMouseMoveProp]\n  );\n  const onMouseLeave = useCallback(\n    (event) => {\n      onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n      if (isDisabled)\n        return;\n      setFocusedIndex(-1);\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp]\n  );\n  const onClick = useCallback(\n    (event) => {\n      onClickProp == null ? void 0 : onClickProp(event);\n      if (!isTargetMenuItem(event.currentTarget))\n        return;\n      if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {\n        onClose();\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]\n  );\n  const onFocus = useCallback(\n    (event) => {\n      onFocusProp == null ? void 0 : onFocusProp(event);\n      setFocusedIndex(index);\n    },\n    [setFocusedIndex, onFocusProp, index]\n  );\n  const isFocused = index === focusedIndex;\n  const trulyDisabled = isDisabled && !isFocusable;\n  useUpdateEffect(() => {\n    if (!isOpen)\n      return;\n    if (isFocused && !trulyDisabled && ref.current) {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n      rafId.current = requestAnimationFrame(() => {\n        var _a;\n        (_a = ref.current) == null ? void 0 : _a.focus();\n        rafId.current = null;\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({ preventScroll: true });\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  const clickableProps = useClickable({\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable\n  });\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    type: typeProp != null ? typeProp : clickableProps.type,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  };\n}\nfunction useMenuOption(props = {}, ref = null) {\n  const { type = \"radio\", isChecked, ...rest } = props;\n  const ownProps = useMenuItem(rest, ref);\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked\n  };\n}\nfunction useMenuOptionGroup(props = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props;\n  const isRadio = type === \"radio\";\n  const fallback = isRadio ? \"\" : [];\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue != null ? defaultValue : fallback,\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  const onChange = useCallback(\n    (selectedValue) => {\n      if (type === \"radio\" && typeof value === \"string\") {\n        setValue(selectedValue);\n      }\n      if (type === \"checkbox\" && Array.isArray(value)) {\n        const nextValue = value.includes(selectedValue) ? value.filter((item) => item !== selectedValue) : value.concat(selectedValue);\n        setValue(nextValue);\n      }\n    },\n    [value, setValue, type]\n  );\n  const validChildren = getValidChildren(children);\n  const clones = validChildren.map((child) => {\n    if (child.type.id !== \"MenuItemOption\")\n      return child;\n    const onClick = (event) => {\n      var _a, _b;\n      onChange(child.props.value);\n      (_b = (_a = child.props).onClick) == null ? void 0 : _b.call(_a, event);\n    };\n    const isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return cloneElement(child, {\n      type,\n      onClick,\n      isChecked\n    });\n  });\n  return {\n    ...htmlProps,\n    children: clones\n  };\n}\nfunction useMenuState() {\n  const { isOpen, onClose } = useMenuContext();\n  return { isOpen, onClose };\n}\nfunction isHTMLElement(el) {\n  var _a;\n  if (!isElement(el))\n    return false;\n  const win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction useUnmountEffect(fn, deps = []) {\n  return useEffect(\n    () => () => fn(),\n    deps\n  );\n}\n\nexport {\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n  MenuProvider,\n  useMenuContext,\n  useMenu,\n  useMenuButton,\n  useMenuList,\n  useMenuPositioner,\n  useMenuItem,\n  useMenuOption,\n  useMenuOptionGroup,\n  useMenuState\n};\n","import {\n  useMenuStyles\n} from \"./chunk-MBJIMMAG.mjs\";\nimport {\n  useMenuContext,\n  useMenuList,\n  useMenuPositioner\n} from \"./chunk-FXGID3ZC.mjs\";\n\n// src/menu-list.tsx\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { motion } from \"framer-motion\";\nimport { jsx } from \"react/jsx-runtime\";\nvar motionVariants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\"\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\"\n    }\n  }\n};\nvar MenuTransition = chakra(motion.div);\nvar MenuList = forwardRef(function MenuList2(props, ref) {\n  var _a, _b;\n  const { rootProps, motionProps, ...rest } = props;\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated\n  } = useMenuContext();\n  const listProps = useMenuList(rest, ref);\n  const positionerProps = useMenuPositioner(rootProps);\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...positionerProps,\n      __css: { zIndex: (_b = props.zIndex) != null ? _b : (_a = styles.list) == null ? void 0 : _a.zIndex },\n      children: /* @__PURE__ */ jsx(\n        MenuTransition,\n        {\n          variants: motionVariants,\n          initial: false,\n          animate: isOpen ? \"enter\" : \"exit\",\n          __css: { outline: 0, ...styles.list },\n          ...motionProps,\n          className: cx(\"chakra-menu__menu-list\", listProps.className),\n          ...listProps,\n          onUpdate: onTransitionEnd,\n          onAnimationComplete: callAll(\n            animated.onComplete,\n            listProps.onAnimationComplete\n          )\n        }\n      )\n    }\n  );\n});\nMenuList.displayName = \"MenuList\";\n\nexport {\n  MenuList\n};\n","import {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu\n} from \"./chunk-FXGID3ZC.mjs\";\n\n// src/menu.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  omitThemingProps,\n  useMultiStyleConfig,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [MenuStylesProvider, useMenuStyles] = createContext({\n  name: `MenuStylesContext`,\n  errorMessage: `useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\" `\n});\nvar Menu = (props) => {\n  const { children } = props;\n  const styles = useMultiStyleConfig(\"Menu\", props);\n  const ownProps = omitThemingProps(props);\n  const { direction } = useTheme();\n  const { descendants, ...ctx } = useMenu({ ...ownProps, direction });\n  const context = useMemo(() => ctx, [ctx]);\n  const { isOpen, onClose, forceUpdate } = context;\n  return /* @__PURE__ */ jsx(MenuDescendantsProvider, { value: descendants, children: /* @__PURE__ */ jsx(MenuProvider, { value: context, children: /* @__PURE__ */ jsx(MenuStylesProvider, { value: styles, children: runIfFn(children, { isOpen, onClose, forceUpdate }) }) }) });\n};\nMenu.displayName = \"Menu\";\n\nexport {\n  useMenuStyles,\n  Menu\n};\n","import {\n  useMenuStyles\n} from \"./chunk-MBJIMMAG.mjs\";\n\n// src/menu-command.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MenuCommand = forwardRef(\n  (props, ref) => {\n    const styles = useMenuStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ref,\n        ...props,\n        __css: styles.command,\n        className: \"chakra-menu__command\"\n      }\n    );\n  }\n);\nMenuCommand.displayName = \"MenuCommand\";\n\nexport {\n  MenuCommand\n};\n","import {\n  useMenuStyles\n} from \"./chunk-MBJIMMAG.mjs\";\n\n// src/styled-menu-item.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledMenuItem = forwardRef(\n  (props, ref) => {\n    const { type, ...rest } = props;\n    const styles = useMenuStyles();\n    const btnType = rest.as || type ? type != null ? type : void 0 : \"button\";\n    const buttonStyles = useMemo(\n      () => ({\n        textDecoration: \"none\",\n        color: \"inherit\",\n        userSelect: \"none\",\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"center\",\n        textAlign: \"start\",\n        flex: \"0 0 auto\",\n        outline: 0,\n        ...styles.item\n      }),\n      [styles.item]\n    );\n    return /* @__PURE__ */ jsx(chakra.button, { ref, type: btnType, ...rest, __css: buttonStyles });\n  }\n);\n\nexport {\n  StyledMenuItem\n};\n","import {\n  MenuCommand\n} from \"./chunk-ZJTZEOFR.mjs\";\nimport {\n  StyledMenuItem\n} from \"./chunk-WLBVP567.mjs\";\nimport {\n  useMenuItem\n} from \"./chunk-FXGID3ZC.mjs\";\nimport {\n  MenuIcon\n} from \"./chunk-BT5PZJJ3.mjs\";\n\n// src/menu-item.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuItem = forwardRef((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props;\n  const menuitemProps = useMenuItem(rest, ref);\n  const shouldWrap = icon || command;\n  const _children = shouldWrap ? /* @__PURE__ */ jsx(\"span\", { style: { pointerEvents: \"none\", flex: 1 }, children }) : children;\n  return /* @__PURE__ */ jsxs(\n    StyledMenuItem,\n    {\n      ...menuitemProps,\n      className: cx(\"chakra-menu__menuitem\", menuitemProps.className),\n      children: [\n        icon && /* @__PURE__ */ jsx(MenuIcon, { fontSize: \"0.8em\", marginEnd: iconSpacing, children: icon }),\n        _children,\n        command && /* @__PURE__ */ jsx(MenuCommand, { marginStart: commandSpacing, children: command })\n      ]\n    }\n  );\n});\nMenuItem.displayName = \"MenuItem\";\n\nexport {\n  MenuItem\n};\n"],"names":[],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}