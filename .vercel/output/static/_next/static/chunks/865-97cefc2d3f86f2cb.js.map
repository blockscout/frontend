{"version":3,"file":"static/chunks/865-97cefc2d3f86f2cb.js","mappings":"uIAIe,SAASA,IACtB,GAAM,CAAEC,EAAMC,EAAS,CAAGC,EAAAA,QAAc,CAAiB,MACnDC,EAAUD,EAAAA,MAAY,GAEtBE,EAAMF,EAAAA,WAAiB,CAAEG,IAChB,MAAM,CAAfA,GACFJ,EAAQI,EAAKC,qBAAqB,IAEpCH,EAAQI,OAAO,CAAGF,CACpB,EAAG,EAAE,EAsBL,OApBAH,EAAAA,SAAe,CAAC,KACd,IAAMM,EAAUC,OAAOC,QAAQ,CAACC,aAAa,CAAC,QAC9C,GAAI,CAACH,EACH,OAOF,IAAMI,EAAiB,IAAIC,eAAeC,CAJpBC,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,SACrBZ,EAAAA,EAARF,EAAQE,QAAAA,EAAAA,QAAAA,EAAAA,EAAQI,OAAAA,GAARJ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBG,qBAAqB,KAAtCH,KAAAA,IAAAA,EAAAA,EAA4C,KACtD,EAAG,MAMH,OAHAS,EAAeI,OAAO,CAACR,GACvBI,EAAeI,OAAO,CAACP,OAAOC,QAAQ,CAACO,IAAI,EAEpC,SAASC,EACdN,EAAeO,SAAS,CAACX,GACzBI,EAAeO,SAAS,CAACV,OAAOC,QAAQ,CAACO,IAAI,CAC/C,CACF,EAAG,EAAG,EAEC,CAAEjB,EAAMI,EAAK,oHC0CtB,MAAeF,EAAAA,IAAU,CA7DP,OAAC,CAAEkB,EA6DeC,EA7Db,QAAEC,CAAM,QAAEC,CAAM,OAAEC,CAAK,MAAEC,CAAI,aAAEC,CAAW,CAAE,GAAGC,EAAc,GAC5EvB,EAAMF,EAAAA,MAAY,CAAC,MACnB0B,EAAQC,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,GAEhBC,EAAkB,GAA0BN,MAAAA,CAAtBJ,GAAM,WAAY,KAAW,OAAPI,EAAO,UACnDO,EAAoBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAAC,SAAUC,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,iBAAkB,mBAC3EC,EAAkB,CACtBC,WAAYH,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAAC,SAAUC,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,aAC7DG,UAAWJ,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAAC,SAAUK,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACJ,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,YAAa,GAAGL,GAC7F,EAEA1B,EAAAA,SAAe,CAAC,KACd,GAAIwB,EAAa,CACfY,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAAEgC,IAAI,CAAC,UAAW,GACvC,MACF,CACAD,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAAEiC,UAAU,GAC9BC,QAAQ,CAAC,KACTC,IAAI,CAACJ,EAAAA,GAAa,EAClBC,IAAI,CAAC,UAAW,EACrB,EAAG,CAAEb,EAAa,EAElB,IAAMiB,EAAIzC,EAAAA,OAAa,CAAC,IAOf0C,EANMN,GAAO,GACjBO,OAAO,CAAC,OAAC,eAAEC,CAAa,CAAE,SAAK,CAACA,IAChCC,CAAC,CAAC,OAAC,MAAEC,CAAI,CAAE,UAAK1B,EAAO0B,KACvBC,EAAE,CAAC,OAAC,OAAEC,CAAK,CAAE,UAAK3B,EAAO2B,KACzBC,EAAE,CAAC,IAAM5B,EAAOA,EAAO6B,MAAM,EAAE,CAAC,EAAE,GAClCC,KAAK,CAACf,EAAAA,GAAiB,EACdb,SAAS6B,EACpB,CAAEhC,EAAQC,EAAQE,EAAM,EAE3B,MACE,iCACE,UAAC8B,OAAAA,CACCnD,IAAMA,EACNuC,EAAIA,EACJa,KAAOhC,EAAQ,QAA0B,OAAjBM,EAAiB,KAAK,oCAC9C2B,QAAU,EACVC,YAAYtC,GAAM,sBAChB,GAAGO,CAAK,GAEVH,EACA,UAACmC,OAAAA,UACC,WAACC,iBAAAA,CAAexC,GAAK,GAAqB,OAAjBU,GAAqB+B,GAAG,KAAKC,GAAG,KAAKb,GAAG,KAAKc,GAAG,iBACvE,UAACC,OAAAA,CAAKC,OAAO,KAAK7B,UAAYZ,IAC9B,UAACwC,OAAAA,CAAKC,OAAO,OAAO7B,UAAYL,SAIpC,UAAC4B,OAAAA,UACC,WAACC,iBAAAA,CAAexC,GAAG,8BAA8ByC,GAAG,KAAKC,GAAG,KAAKb,GAAG,KAAKc,GAAG,iBAC1E,UAACC,OAAAA,CAAKC,OAAO,KAAK7B,UAAYF,EAAgBC,UAAU,GACxD,UAAC6B,OAAAA,CAAKC,OAAO,OAAO7B,UAAYF,EAAgBE,SAAS,UAMrE,0EC/CO,IAAM8B,EAAoE,CAC/EC,KAzB0BZ,CAyBpBa,GAxBN,IAAMC,EAAcd,EAAKe,cAAc,IAAM,EAC7ChC,EAAAA,GAAS,CAACiB,GACPhB,IAAI,CAAC,UAAW,GAChBA,IAAI,CAAC,mBAAoB,GAAqB8B,MAAAA,CAAjBA,EAAa,KAAiB,OAAbA,IAC9C9B,IAAI,CAAC,oBAAqB8B,GAC1B7B,UAAU,GACVC,QAAQ,CAAC,KACTC,IAAI,CAACJ,EAAAA,GAAa,EAClBC,IAAI,CAAC,oBAAqB,EAC/B,EAAE,OAE2B,CAcnBgC,GAbRjC,EAAAA,GAAS,CAACiB,GACPf,UAAU,GACVC,QAAQ,CAAC,KACTC,IAAI,CAACJ,EAAAA,GAAa,EAClBC,IAAI,CAAC,UAAW,EACrB,EAAE,KAE2B,CAOrBiC,GANNlC,EAAAA,GAAS,CAACiB,GAAMhB,IAAI,CAAC,UAAW,EAClC,CAMA,CANE,CAMA,EC9ByC,IACzC,IAAMkC,EAA+B,EAAE,CAEvC,IAAK,IAAIC,EAAQ,EAAGA,EAAQjD,EAAKkD,MAAM,CAAED,IAAS,CAChD,IAAMnE,EAAUkB,CAAI,CAACiD,EAAM,CAC3B,GAAInE,EAAQuC,aAAa,CAAE,CACzB,IAAM8B,EAAOnD,CAAI,CAACiD,EAAQ,EAAE,CACtBG,EAAOpD,CAAI,CAACiD,EAAQ,EAAE,CAE5BE,GAAQ,CAACA,EAAK9B,aAAa,EAAI2B,EAAOK,IAAI,CAACF,GAC3CH,EAAOK,IAAI,CAACvE,GACZsE,GAAQ,CAACA,EAAK/B,aAAa,EAAI2B,EAAOK,IAAI,CAACD,EAC7C,CACF,CAEA,OAAOJ,CACT,EAAE,ECuDavE,EAAAA,IAAU,CAzDP,OAAC,GAyDiB6E,EAAC,GAzDhBzD,CAAM,QAAEC,CAAM,MAAEE,CAAI,WAAEuD,CAAS,CAAE,GAAGrD,EAAc,GAC/DsD,EAAc/E,EAAAA,MAAY,CAAiB,MAC3CgF,EAAwBhF,EAAAA,MAAY,CAAiB,MAE3DA,EAAAA,SAAe,CAAC,KACd,IAAMiF,EAAcjB,CAAU,CAACc,EAAU,CACnCI,EAAY3E,OAAO4E,UAAU,CAAC,KAClCJ,EAAY1E,OAAO,EAAI4E,EAAYF,EAAY1E,OAAO,EACtD2E,EAAsB3E,OAAO,EAAI4E,EAAYD,EAAsB3E,OAAO,CAC5E,EAAG,KAEH,MAAO,KACLE,OAAO6E,YAAY,CAACF,EACtB,CACF,EAAG,CAAEJ,EAAW,EAGhB9E,EAAAA,SAAe,CAAC,KACd,GAAkB,SAAd8E,EAAsB,KACJC,EAApB,IAAMZ,EAAiC,QAAnBY,EAAAA,EAAY1E,OAAO,GAAnB0E,KAAAA,MAAAA,KAAAA,EAAAA,EAAqBX,cAAc,GACvDhC,EAAAA,GAAS,CAAC2C,EAAY1E,OAAO,EAAEgC,IAAI,CACjC,mBACA,GAAqB8B,MAAAA,CAAjBA,EAAa,KAAiB,OAAbA,GAEzB,CACF,EAAG,CAAE/C,EAAQC,EAAQyD,EAAW,EAEhC,IAAMO,EAAOjD,EAAAA,GAAO,GACjBS,CAAC,CAAEJ,GAAMrB,EAAOqB,EAAEK,IAAI,GACtBwC,CAAC,CAAC,GAAOjE,EAAOoB,EAAEO,KAAK,GACvBG,KAAK,CAACf,EAAAA,GAAiB,EAE1B,MACE,iCACE,UAACiB,OAAAA,CACCnD,IAAM8E,EACNvC,EAAI4C,EAAKE,EAA4BhE,UAAU6B,EAC/CoC,YAAc,CADsBD,CAEpCE,cAAc,QACdnC,KAAK,OACLoC,gBAAgB,MAChBnC,QAAU,EACR,GAAG9B,CAAK,GAEZ,UAAC4B,OAAAA,CACCnD,IAAM6E,EACNtC,EAAI4C,EAAK9D,EAAKoE,MAAM,CAAC,OAAC,eAAE/C,CAAa,CAAE,SAAK,CAACA,WAAmBQ,EAChEoC,YAAc,EACdC,cAAc,QACdnC,KAAK,OACLC,QAAU,EACR,GAAG9B,CAAK,KAIlB,oDCtDA,MAAezB,SAAAA,UAAgB,CATV,GAAqCE,QAApC,EASuB0F,EAAC,GATtBC,CAAK,QAAEC,CAAM,UAAEC,CAAQ,CAAS,GACtD,MACE,WAACC,IAAAA,CAAEC,UAAU,yBACTF,EACF,UAACjG,OAAAA,CAAKI,IAAMA,EAAM2F,MAAQA,EAAQC,OAASA,EAASvC,QAAU,MAGpE,gGCTO,IAAM2C,EAA2B,CAACC,EAAmBC,KAC1D,IAAMC,EAAWD,EAAeD,EAAY,EAAIA,EAAY,EAE5D,OAAO,GATuB,CASnBG,EATsB,EASkB,CAACD,EAAW,GAPvC,EAO4CE,CAApCC,CAChC,EAEwC,IACxC,IAAMC,EAAMC,KAAKC,GAAG,CAAC,EAAGL,GAAoBC,GAAVK,GAClC,MAAO,CADkDJ,YACvBC,IADsC,EACtCA,CAAbH,GAAS,KAAS,OAALG,EAAK,IACzC,EAAE,ECIazG,EAAAA,IAAU,CAAC6G,KAZxB,IAAMC,EAAUhF,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAAC,CAYoB+E,EAAC,MAZX,kBAEnC,MACE,UAAC/G,OAAAA,CACCmG,UAAU,yBACVc,GAAK,GACLC,GAAK,GACL1D,KAAOwD,GAGb,kBCHA,MAAe9G,EAAAA,IAAU,CAJG,OAAC,UAAE+F,CAAQ,CAAS,CAIFkB,EAH5C,MAAO,UAACjB,IAAAA,CAAEC,UAAU,iCAA0BF,GAChD,GCHA,EAAe/F,EAAAA,IAAU,CALA,KACvB,IAAMkH,EAAYpF,CAAAA,EAAAA,EAAAA,CAIuBqF,CAJvBrF,CAAQA,CAAC,SAAU,YACrC,MAAO,UAACuD,OAAAA,CAAKY,UAAU,qBAAqBmB,OAASF,EAAYxB,gBAAgB,KACnF,GCgBA,EAAe1F,EAAAA,IAAU,CAACqH,IAXtB,UAACC,IAWuCD,EAAC,GAXxCC,CACCrB,UAAU,sBACVsB,EAAIC,EACJjE,QADciE,EAEdlE,CAFiB,IANL,CAQLwD,OACPM,OARgB,CAQPK,OACTjC,YAAc,KCuBpB,EAAexF,EAAAA,IAAU,CA5BD,OAAC,OAAE0H,CAAK,CA4BUC,EAAC,MA5BTC,CAAO,UAAE7B,CAAQ,CAAS,GACpD8B,EAAa/F,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAAC,SAAU,YAChCgG,EAAYhG,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAAC,SAAU,SAErC,MACE,UAACkE,IAAAA,CAAEC,UAAU,oBAAoB8B,UAAYC,EAA2BJ,YACpE7B,GACA,SAFmEiC,EAEnE,sBACE,UAACC,OAAAA,CACChC,UAAU,sBACV8B,UAAU,iBACVG,iBAAiB,UACjB5E,KAAOuE,WAELH,IAEJ,UAACO,OAAAA,CACChC,UAAU,sBACV8B,UAAY,aAA2B,OAAbI,GAAa,OACvCD,CADqCC,gBACpB,UACjB7E,KAAOwE,QAMnB,kBCVA,MAAe9H,EAAAA,IAAU,CAnBC,QAEAoI,KAFC,KAmBiBC,EAAC,KAnBhBC,EAAaC,EAAAA,EAAUA,CAACC,GAAG,CAA+B,GAC/EC,EAAa3G,CAAAA,EAAAA,EAAAA,EAAAA,CAAQA,CAAC,SAAU,cAChC4G,EAAkBN,CAAAA,OAAAA,GAAAA,EAAAA,CAAiBA,CAACO,IAAI,CAACpB,GAAKA,EAAErG,EAAE,GAAKoH,EAAAA,GAArCF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkDQ,KAAAA,GAAS,MAEnF,MACE,UAACjB,EAAeA,CAACC,QAAU,WACzB,UAACK,OAAAA,CACChC,UAAU,sBACV8B,UAAU,iBACVzE,KAAOmF,EACPlF,QAAU,EACV2E,iBAAiB,mBAEf,cAA8C,OAA/BQ,EAAgBG,WAAW,OAIpD,GEkJA,EAAe7I,EAAAA,IAAU,CAlJJ,OAAC,CACpBoB,KAiJqC0H,EAAC,CAjJhC,CACNzH,QAAM,OACNwE,CAAK,cACLkD,EAAe,GAAG,QAClBjD,CAAM,MACNvE,CAAI,UACJyH,CAAQ,aACRxH,CAAW,YACX8G,CAAU,CACV,GAAG7G,EACG,GACAvB,EAAMF,EAAAA,MAAY,CAAc,MAChCiJ,EAAYjJ,EAAAA,MAAY,GACxBkJ,EAAYlJ,EAAAA,MAAY,EAAC,GAEzBmJ,EAAqB,EAAqB,KAAN,IAEpCC,ELlCD,SAASC,CAA+C,CAAEC,CAA+B,CKkC9DD,CLjChC,OAAOrJ,EAAAA,WAAiB,CAAC,IACvBoC,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClBkJ,MAAM,CAAC,uBACPlH,IAAI,CAAC,KAAMQ,GACXR,IAAI,CAAC,KAAMQ,GACXR,IAAI,CAAC,KAAM,GACXA,IAAI,CAAC,KAAMiH,GAAe,EAC/B,EAAG,CAAEpJ,EAAKoJ,EAAa,CACzB,EKyBmCpJ,EAAK4F,GAChC0D,ENtBD,SAASC,CAAkD,CAAE,CAAqD,IMsBjFA,CNtB4B,OAAEC,CAAK,oBAAEP,CAAkB,CAA0B,CAArD,EAClE,OAAOnJ,EAAAA,WAAiB,CAAC,CAAC6C,EAAWyC,KACnC,IAAMqE,EAAiBvH,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAAEkJ,MAAM,CAAC,0BAE/CK,EAAiE,CAACC,EAAKC,EAAGC,KAC9E,IAAM5J,EAAO4J,CAAK,CAACD,EAAE,CACf,CAAEjE,MAAOmE,CAAS,CAAElE,OAAQmE,CAAU,CAAE,CAAG9J,OAAAA,EAAAA,KAAAA,EAAAA,EAAMC,MAAND,eAA2B,KAAM,CAAE0F,MAAO,EAAGC,OAAQ,CAAE,EAClG,CAAEoE,EAAYC,EAAY,CAAGC,SAoChCA,CAAuH,KAArG,QAAEC,CAAM,QAAEC,CAAM,aAAEC,CAAW,cAAEC,CAAY,WAAER,CAAS,YAAEC,CAAU,QAAElG,CAAM,CAA2B,CAArG,SAEzB,EAAaA,EAASiG,GAAaO,EAG1B,CAFGF,EAAStG,EACT0G,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAACH,EAASL,EAAa,EAAG,EAAGO,EAAeP,GAC5C,CAIbD,EAAYjG,GAAUsG,EAGjB,CAFGA,EAAStG,EAASiG,CADI,CAEtBS,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAACH,EAASL,EAAa,EAAG,EAAGO,EAAeP,GAC5C,CAIbA,EAAalG,GAAUuG,EAGlB,CAFGG,CAAAA,EAAAA,EADuB,CACvBA,CAAKA,CAACJ,EAASL,EAAY,EAAG,EAAGO,EAAcP,GAC/CM,EAASvG,EAASkG,EACb,CAIbK,EAASvG,EAASkG,GAAcO,EAG3B,CAFGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAACJ,EAASL,CADuB,CACX,EAAG,EAAGO,EAAcP,GAC/CM,EAASvG,EACJ,CAMV,CAHG0G,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAACJ,EAAS,EAAG,EAAGE,EAAcP,GACnCS,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAACH,EAAS,EAAG,EAAGE,EAAeP,GAGhD,EArE2D,CACnDM,YAAab,EAAM7D,KAAK,EAAI,EAC5B2E,aAAcd,EAAM5D,MAAM,EAAI,YAC9BkE,aACAC,EACAI,OAAQxH,EACRyH,OAAQhF,EACRvB,OFnCkB,CEmCVyD,CACV,CFpCuB,EEqCvB,MAAO,aAA+B2C,MAAAA,CAAjBD,EAAY,MAAiB,OAAZC,EAAY,IACpD,EAEIhB,EACFQ,EACGrH,UAAU,GACVC,GAHmB,KAGX,CAAC4G,GACT3G,IAAI,CAACJ,EAAAA,GAAa,EAClBC,IAAI,CAAC,YAAauH,GAErBD,EACGtH,IAAI,CAAC,YAAauH,EAGzB,EAAG,CAAEF,EAAM5D,MAAM,CAAE4D,EAAM7D,KAAK,CAAE3F,EAAKiJ,EAAoB,CAC3D,EMTyCjJ,EAAK,CAAEwJ,MAAO,OAAE7D,SAAOC,CAAO,qBAAGqD,CAAmB,GACrFuB,EJLD,SAASC,CAAiD,CAAEC,CAA6B,EAC9F,CIIoCD,MJJ7B3K,EAAAA,WAAiB,CAAC,IACvB,IAAM6K,EAAQD,EAAOxJ,MAAM,CAAC0J,MAAM,CAACjI,GAC7BkI,EAAa3I,EAAAA,GAAW,CAAyB,GAAOK,EAAEK,IAAI,EAAEmB,IAAI,CACtE+G,EAAW,EACXC,EAAW,EACTC,EAAqC,EAAE,CAqC7C,OAnCA9I,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClB8K,SAAS,CAAC,wBACV9I,IAAI,CAAC,YAAa,CAACwH,EAAKuB,KACvB,IAAMC,EAAQT,EAAOrJ,IAAI,CAAC6J,EAAa,CACjC5G,EAAQuG,EAAWM,EAAMC,KAAK,CAAET,EAAO,GACvCU,EAAKF,EAAMC,KAAK,CAAC9G,EAAQ,EAAE,CAC3BgH,EAAKH,EAAMC,KAAK,CAAC9G,EAAM,CACvB/B,EACC8I,EADG,CAAC,CACL,CAMGV,CAHE,CAGIY,OAAO,GAAKF,EAAGzI,IAAI,CAAC2I,OAAO,GAAKD,EAAG1I,IAAI,CAAC2I,OAAO,GAAKZ,EAAMY,OAAO,GAAKD,EAAKD,EAL/EC,EAQX,GAAI/I,OAAAA,EAAAA,KAAAA,EAAAA,EAAGK,GAAHL,CAAGK,SAASM,GAAaX,OAAAA,EAAAA,KAAAA,EAAAA,EAAGO,GAAHP,EAAGO,SAAUI,EAExC,MAAO,GAF4C,oBAKrD,IAAMsI,EAAOd,EAAOxJ,MAAM,CAACqB,EAAEK,IAAI,EAC3B6I,EAAOf,EAAOvJ,MAAM,CAACoB,EAAEO,KAAK,EASlC,OAPqB,GAAG,CAApBoI,IACFJ,EAAWU,EACXT,EAAWU,GAGbT,EAActG,IAAI,CAAC,CAAEgH,KAAMnJ,EAAGoJ,WAAYT,CAAa,GAEhD,aAAyBO,MAAAA,CAAXD,EAAM,MAAW,OAANC,EAAM,IACxC,GAEK,CACL9I,EAAGmI,EACH1F,EAAG2F,gBACHC,CACF,CACF,EAAG,CAAEhL,EAAK0K,EAAQ,CACpB,EI5CuC1K,EAAK,MAAEqB,SAAMH,SAAQC,CAAO,GAC3DyK,EFjBD,SAASC,CAAgD,EAC9D,EEgBkCA,KFhB3B/L,EAAAA,WAAiB,CAAC,IACvBoC,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClBkJ,MAAM,CAAC,wBACPlH,IAAI,CAAC,UAAW6G,EAAY,EAAI,EACrC,EAAG,CAAEhJ,EAAK,CACZ,EEWqCA,GAC7B8L,EHID,SAASC,CAA+C,CAAE,CAA+C,CGJ9EA,IHI+B,MAAE1K,CAAI,QAAEH,CAAM,UAAE8K,CAAQ,CAAuB,CAA/C,EAC/D,OAAOlM,EAAAA,WAAiB,CAAC,CAAC6C,EAAWqI,KAGnC,IAAMiB,EAAmBjB,EAAckB,IAAI,CAAC,OAAC,MAAER,CAAI,CAAE,UAAKA,EAAKhJ,aAAa,GAmC5E,OAlCAR,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClB8K,SAAS,CAAyB,sBAClC9I,IAAI,CAAC,YAAa,CAACgJ,EAAO7G,IAClBwD,EAA2BxD,GAAS2H,EAAmB,GAAnBA,IA+BxC,CAAEtG,MAFWa,CAEJ2F,IAFS1F,GAAG,CAACuF,EAAU,IADjBxF,KAAKC,EACuBL,CADpB,EACuB6B,EAxBlC/F,EAAAA,GAAS,CAAClC,EAAIG,CAwB+B8H,GAAGmE,GAxB3B,EACrCnB,SAAS,CAAyB,wBAClClD,IAAI,CAAC,CAACsE,EAAG/H,SAaMjD,EAAAA,EACAA,EAA+BA,EAXzBA,EAUNA,EAZd,GAAc,IAAViD,EAAa,CACf,IAAM1B,EAAO1B,EAAO0J,MAAM,CAACjI,GACrB2J,EAAAA,QAAYjL,EAAAA,CAAI,CAAC,EAAE,CAAC+J,KAAK,CAAC3C,IAAI,CAAC,GAAUiD,EAAK9I,IAAI,CAAC2I,OAAO,KAAO3I,EAAK2I,OAAO,MAAjElK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsEkL,SAAS,CAC3FC,EAAoBtK,EAAAA,GAAa,CAAC,YAAYhB,EAAO0J,MAAM,CAACjI,IAClE,OAAO2J,GAAaE,CACtB,CAEA,GAAM,YAAEb,CAAU,MAAED,CAAI,CAAE,CAAGV,EAAcvC,IAAI,CAAC,OAAC,CAAEkD,YAAU,CAAE,UAAKA,IAAerH,EAAQ,KAAM,CAAC,SAClG,KAAmBpB,IAAfyI,GAA6BD,EAO1B5I,CAHoD,GAJpB,IAOxB2J,CAHDpL,EAAgB,QAAhBA,EAAAA,CAAI,CAACsK,EAAAA,GAALtK,KAAAA,IAAAA,EAAAA,KAAAA,EAAgC,QAAhCA,EAAAA,EAAkBqL,cAAAA,GAAlBrL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAAA,IAAAA,CAAAA,EAAmCqK,EAAK5I,MAAK,GAA7CzB,KAAAA,IAAAA,EAAAA,EAAkDqK,EAAK5I,KAAK,CAAC6J,cAAc,MAACzJ,EAAW,CAAE0J,yBAA0B,CAAE,KACrHvL,CAAAA,QAAAA,EAAAA,CAAI,CAACsK,EAAAA,GAALtK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBoL,KAAAA,EAAQ,IAA8B,eAAzBpL,EAAAA,CAAI,CAACsK,EAAAA,GAALtK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBoL,KAAK,EAAM,IAJjE,IAOX,GACC5C,KAAK,GAEuBgD,GAAG,CAAE5M,QAASA,eAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAMC,qBAAAA,GAAND,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAAA,IAAAA,CAAAA,GAAgC0F,KAAK,IAItD,CAE9B,EAAG,CAAEtE,EAAM2K,EAAUhM,EAAKkB,EAAQ,CACpC,EG9CmClB,EAAK,MAAEqB,SAAMH,EAAQ8K,SAAUnD,CAAa,GACvEiE,EAAiBC,SPxBS/M,CAAiC,CAAE,CAA0D,KOwBrF+M,WPxB6B9G,CAAS,oBAAEgD,CAAkB,CAA2B,CAA1D,EACnE,OAAOnJ,EAAAA,WAAiB,CAAC,CAAC6F,EAAesG,KACvC,IAAMrG,EAASI,EAAyBC,EAAWgG,GAE/ChD,EACF/G,EAAAA,GAAS,CAAClC,EAAIG,OAHuB6F,EAIlCqD,CAFmB,KAEb,CAAC,2BACPjH,UAAU,GACVC,QAAQ,CAAC4G,GACT3G,IAAI,CAACJ,EAAAA,GAAa,EAClBC,IAAI,CAAC,QAASwD,GACdxD,IAAI,CAAC,SAAUyD,GAElB1D,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClBkJ,MAAM,CAAC,2BACPlH,IAAI,CAAC,QAASwD,GACdxD,IAAI,CAAC,SAAUyD,EAEtB,EAAG,CAAE5F,EAAKiG,EAAWgD,EAAoB,CAC3C,EOK2CjJ,EAAK,CAAEiG,UAAW5E,EAAKkD,MAAM,oBAAE0E,CAAmB,GAErF+D,EAAOlN,EAAAA,WAAiB,CAAC,IAC7B,GAAImN,EAAQC,KAAK,CAAE,CACjB,GAAM,CAAEvK,GAAC,CAAEyC,GAAC,eAAE4F,CAAa,CAAE,CAAGR,EAAayC,EAAQC,KAAK,CAAC,EAAE,EACvDjB,EAAmBjB,EAAckB,IAAI,CAAC,OAAC,MAAER,CAAI,CAAE,UAAKA,EAAKhJ,aAAa,GAC5EwG,EAAWvG,GACX2G,EAAc3G,EAAGyC,GACjBwG,EAAYK,GACZ,GAAM,OAAEtG,CAAK,CAAE,CAAGmG,EAAWnJ,EAAGqI,GAChC8B,EAAenH,EAAOsG,EACxB,CACF,EAAG,CAAEzB,EAActB,EAAYI,EAAesC,EAAaE,EAAYgB,EAAgB,EAEjFK,EAAcrN,EAAAA,WAAiB,CAAC,KAC/BkJ,EAAU7I,OAAO,EAAE,CAClB8I,EACF/G,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClBiC,CAFmB,SAET,GACVgL,KAAK,CAACnE,GACN9G,IAAI,CAAC,UAAW,GAEnBD,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClBgC,IAAI,CAAC,UAAW,GAErB6G,EAAU7I,OAAO,EAAG,EAExB,EAAG,CAAE8I,EAAoB,EAEnBoE,EAAcvN,EAAAA,WAAiB,CAAC,KAChCmJ,EACF/G,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClBiC,CAFmB,SAET,GACVgL,KAAK,CAACnE,GACN9G,IAAI,CAAC,UAAW,GAEnBD,EAAAA,GAAS,CAAClC,EAAIG,OAAO,EAClBgC,IAAI,CAAC,UAAW,GAErB6G,EAAU7I,OAAO,EAAG,CACtB,EAAG,CAAE8I,EAAoB,EAEnBqE,EAAuBxN,EAAAA,WAAiB,CAAC,CAACyN,EAAqBC,KACnE,IAAIC,EAAkC,UAAtBF,EAAMG,WAAW,EAA+B,gBAAfH,EAAMI,IAAI,EAAsB,CAACH,EAMlF,OAJIC,GACFJ,IAGKO,IAJQ,KD/EHA,CAAgC,CAAE,CCmF3BA,KDnF2B,OAAEC,CAAK,MAAEC,CAAI,KAAEC,CAAG,KAAEC,CAAG,CAAkB,CAAzC,EAC1CC,EAAmB,CACvBjN,GAAIuM,EAAMW,SAAS,CACnBhB,MAAO,KACP1I,KAAM,IACR,EAEMxD,EAAKuM,EAAMW,SAAS,CACpBC,EAASZ,EAAMY,MAAM,CAC3BF,EAAQf,KAAK,CAAGhL,EAAAA,GAAU,CAACqL,EAAOY,GAClCA,EAAOC,iBAAiB,CAACpN,GAEzB,IAAMqN,EAAU,IACdJ,EAAQK,WAAW,CAAGA,EACtBpM,EAAAA,GAAS,CAACiM,GAAQI,EAAE,CAAC,IAAS,OAAJvN,GAAO,MACjCmN,EAAOK,qBAAqB,CAACxN,SAC7BgN,GAAAA,EAAMC,EACR,EAqCA,OAnCA/L,EAAAA,GAAS,CAACiM,GACPI,EAAE,CAAC,cAAmB,OAAJvN,GAAO,IACxB,IAAMmN,EAASG,EAAYH,MAAM,CACjBjM,EAAAA,GAAW,CAACoM,EAAaH,GAGjC5J,MAAM,CAAG,GAAK8J,EAAQC,EAChC,GACCC,EAAE,CAAC,aAAoCvN,MAAAA,CAAtBA,EAAI,mBAA6CA,MAAAA,CAA3BA,EAAI,wBAA2B,OAAJA,GAAQsN,IACrEA,EAAYJ,SAAS,GAAKlN,GAI9BqN,CAJkC,CAI1BC,EACV,GACCC,EAAE,CAAC,eAAoB,OAAJvN,GAAO,IACrBsN,EAAYJ,SAAS,GAAKlN,IAAI,EAG1BsN,WAAW,CAAGA,EACtBL,EAAQzJ,IAAI,CAAGyJ,EAAQf,KAAK,CAC5Be,EAAQf,KAAK,CAAGhL,EAAAA,GAAU,CAACoM,EAAaH,SACxCL,GAAAA,EAAOG,GACT,GACCM,EAAE,CAAC,GAFFT,WAEqB,OAAJ9M,GAAO,IACpByN,EAAEP,SAAS,GAAKlN,IAGpBiN,EAAQK,WAAW,CAAGG,EACtBR,EAAQf,KAAK,CAAG,WAChBa,GAAAA,EAAME,GACR,QADEF,CAGJF,GAAAA,EAAQI,GAEDjN,CACT,EC4BwBuM,EAAO,CACzBO,IDhCJD,CCgCU,IACCZ,EAAQC,KAAK,GAAIO,IAGtBT,EAAKC,GACLE,EAJiC,EAKnC,EACAY,IAAK,KACHV,IACAtE,EAAU5I,OAAO,MAAG+C,CACtB,EACA8K,IAAK,KACHX,IACAtE,EAAU5I,OAAO,MAAG+C,EACpBuK,GAAY,CACd,CACF,EACF,EAAG,CAAET,EAAMK,EAAaF,EAAa,EAoCrC,OAlCArN,EAAAA,SAAe,CAAC,KACd,IAAM4O,EAAWxM,EAAAA,GAAS,CAAC4G,GACvB6F,GAAe,EAuBnB,KAvB0B,EAE1BD,EACGH,EAAE,CAAC,oBAAqB,GAAuBhB,EAAMqB,cAAc,IAAI,EACrE,CAAE,GAJ2E,cAGY,IAClE,IACxBD,EAAepB,EAAMsB,OAAO,CAACtK,MAAM,CAAG,CACxC,GACCgK,EAAE,CAAE,mBAAmB,IAClBI,GAAyC,GAAG,CAA5BpB,EAAMsB,OAAO,CAACtK,MAAM,EACtCoK,IAAe,EAEnB,GACCJ,EAAE,CAAC,2CAA4C,IACzCI,IACH5F,EAAU5I,OAAO,CAAGmN,EAAqBC,EAAAA,CAE7C,GACCgB,EAAE,CAAC,sBAAuB,IACC,UAAtBhB,CAAiC,CAA3BG,WAAW,EAAiBiB,GAAgB5F,WAAU5I,OAAO,GACrE4I,EAAU5I,OAAO,CAAGmN,EAAqBC,EAAAA,CAE7C,GAEK,KACLmB,EAASH,EAAE,CAAC,6DAA8D,MAC1ExF,EAAU5I,OAAO,EAAIuO,EAASH,EAAE,CAC9B,CAAE,YAAa,gBAAiB,qBAAsB,cAAe,aAAc,CAAC1B,GAAG,CAAC,GAAW,GAAe9D,MAAAA,CAAXwE,EAAO,KAAuB,OAAnBxE,EAAU5I,OAAO,GAAK2O,IAAI,CAAC,KAC7I,KAEJ,CACF,EAAG,CAAEhG,EAAUwE,EAAsBN,EAAMK,EAAaF,EAAa,EAGnE,WAACrH,IAAAA,CACC9F,IAAMA,EACNqD,QAAU,EACV0L,SAAS,OACTC,WAAW,MACT,GAAGzN,CAAK,WAEV,UAAC0F,EAAgBA,CAAAA,GACf5F,EAAKwL,GAAG,CAAC,OAAC,KADK5F,CACHgI,CAAI,CAAE,SAAK,UAAC9H,EAAiBA,CAAAA,EAAO8H,KAClD,WAAClI,EAAmBA,EADuBI,SAEzC,UAACR,EAAoBA,CAAAA,CADHI,EAElB,UAACoB,EAAiBA,CAACC,SADEzB,EACWyB,IAChC,OADkBD,CAClB,EAACV,EAAeA,CAACD,MASzB,SAAS0H,CAAoC,EAC3C,EAVsBzH,KAUdW,GACN,KAAKC,EAAAA,EAAUA,CAAC8G,IAAI,CAClB,MAAO,OACT,MAAK9G,EAAAA,EAAUA,CAAC+G,KAAK,CACnB,MAAO,OACT,MAAK/G,EAAAA,EAAUA,CAACgH,IAAI,CAClB,MAAO,MACT,SACE,MAAO,MACX,CACF,EApB8CjH,GAAcV,QAAU,IAC5DrG,EAAKwL,GAAG,CAAC,GAAWvI,QAAV,MAAE2K,CAAI,CAAE,SAAY,UAACxH,EAAeA,CAAcD,MAAQyH,EAAOvH,QAAUpD,EAAQ,EAA/CmD,CAAOwH,UAI/D,2GEjIA,IAAMK,EAAiB,GAAoC/M,IAGzD,IAAMgN,EAASC,EADIA,KAAK,GACHxM,MAAM,GAErByM,EAAOC,OAAOH,CAAM,CAAC,EAAE,EAAIG,OAAOH,CAAM,CAAC,EAAE,EAUjD,MAAOI,CARHF,EAAO,EAAIJ,EAAAA,EAAIA,CACRnN,CADU,CACVA,GAAa,CAAC,MACduN,EAAO,EAAIL,EAAAA,EAAKA,CAChBlN,CADkB,CAClBA,GAAa,CAAC,UAEdA,EAAAA,GAAa,CAAC,UAGXK,EAChB,EAmBMqN,EAAoB,GAAsC,IAAM,GACxDF,OAAOnN,GACRoK,cAAc,CAACzJ,OAAWwH,GChExB,SAASmF,EAAuB,CAAmC,MAgBpBC,EF7ByBC,KEaxC,EFb6D,IEa3D1O,CAAI,QAAE2O,CAAM,YAAEF,CAAU,CAAS,CAAnC,EAEvC,CAAElQ,EAAMI,EAAK,CAAGL,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAI7BsQ,EAAanQ,EAAAA,OAAa,CAAC,IDH5B,SAASoQ,CAAc7O,CAAU,CAAEyO,CAAuB,EAC/D,GAAM,CAAEK,kBAAmBC,CAAkB,CAAEZ,MAAOrO,CAAM,CAAE,CAAGkP,SAyC1DA,CAAyB,CAAEC,CAAmB,MAEzCpO,EACAA,EAIFoO,EAIgBA,EAT1B,IAAMC,EAAMrO,QAAAA,EAAAA,EAAAA,GAAM,CAACb,EAAM,OAAC,OAAE+J,CAAK,CAAE,UAAKlJ,EAAAA,GAAM,CAACkJ,EAAO,OAAC,OAAEtI,CAAK,CAAE,UAAKA,QAAzDZ,KAAAA,IAAAA,EAAAA,EAAoE,EAC1EuE,EAAMvE,QAAAA,EAAAA,EAAAA,GAAM,CAACb,EAAM,OAAC,OAAE+J,CAAK,CAAE,UAAKlJ,EAAAA,GAAM,CAACkJ,EAAO,OAAC,OAAEtI,CAAK,CAAE,UAAKA,QAAzDZ,KAAAA,IAAAA,EAAAA,EAAoE,EAC1EsN,EAAQc,OAAAA,EAAAA,KAAAA,EAAAA,EAAQE,IAAAA,EACpBtO,EADYoO,GACE,GACXtN,MAAM,CAAC,CAAEuN,EAAK9J,EAAK,EACnB+J,IAAI,CAACF,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,EAAQG,KAAAA,GAARH,KAAAA,MAAAA,KACRpO,EAAAA,GAAc,GACXc,GAFsB0N,GAEhB,CAAC,CAAEH,EAAK9J,EAAK,EAGlB0J,EAAoBQ,SAUnBA,EAAsBF,CAAoB,MAQ1BG,EAAAA,EAlByBH,IAUGI,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CA3EH,EAAE,EA4EnC,CACbC,sBA5E2C,CA4EpBC,CA5EsB,yBA6E7CF,EACAG,SAAU,SACZ,EAEMC,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAIA,CAACT,EAAM5D,GAAG,CAAC,GAAUsE,EAAKxE,cAAc,MAACzJ,EAAWwH,KACvE0G,EAAiBR,QAAAA,EAAAA,OAAAA,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAACK,EAAc,GAAW7F,EAAM7G,OAAM,GAA3CqM,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA8CrM,MAAAA,GAA9CqM,KAAAA,MAAAA,EAhFW,EAAE,OAkFpC,EAAiBrM,GAF8D8M,GAExD,GAAKZ,EAAMlM,MAAM,EAnFM,EAAE,EAmFJsM,EACnC,CAAE,GAAGnG,CAAM,gBAAE0G,CAAe,EAG9BT,EAAsBF,CAJ4Ca,CAIrCT,EAA2B,EACjE,EA1BgBrB,EAAMiB,KAAK,CAAc,QAAbH,QAAAA,EAAAA,CAqBiF,IArBjFA,EAAAA,EAAQG,KAAAA,GAARH,KAAAA,IAAAA,EAAAA,EAVA,IAa1B,MAAO,KAHoCI,MAG7BjK,QAAK+I,oBAAOW,CAAkB,CAC9C,EAxDkF9O,QAAMyO,EAAAA,KAAAA,EAAAA,EAAY1K,CAAC,EAEnG,MAAO,CACLzC,EAAG,CACD6M,MAAO+B,SAWJA,CAAyB,MACpBrP,EACAA,EADZ,IAAMqO,EAAMrO,QAAAA,EAAAA,EAAAA,GAAM,CAACb,EAAM,OAAC,OAAE+J,CAAK,CAAE,UAAKlJ,EAAAA,GAAM,CAACkJ,EAAO,OAAC,MAAExI,CAAI,CAAE,UAAKA,QAAxDV,KAAAA,IAAAA,EAAAA,EAAkE,IAAIsP,KAC5E/K,EAAMvE,QAAAA,EAAAA,EAAAA,GAAM,CAACb,EAAM,OAAC,OAAE+J,CAAK,CAAE,UAAKlJ,EAAAA,GAAM,CAACkJ,EAAO,OAAC,MAAExI,CAAI,CAAE,UAAKA,QAAxDV,KAAAA,IAAAA,EAAAA,EAAkE,IAAIsP,KAC5EhC,EAAQtN,EAAAA,GAAY,GAAGc,MAAM,CAAC,CAAEuN,EAAK9J,EAAK,EAEhD,MAAO,KAAE8J,MAAK9J,QAAK+I,CAAM,CAC3B,EAjB4BnO,GAAMmO,KAAK,CACjCiC,cAAenC,CACjB,EACAlK,EAAG,CACDoK,MAAOrO,EACPgP,kBAAmBC,EACnBqB,cAAe7B,EAAkBQ,EACnC,CACF,EACF,ECXuD/O,EAAMyO,GAAa,CAAEzO,EAAMyO,EAAYlQ,QAAAA,KAAAA,EAAAA,EAAAA,KAAW,CAAE,EAEnG8R,EAAc5R,EAAAA,OAAa,CAAC,SAEdgQ,EAITE,EAJT,IAAM2B,EAAY7B,OAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,GAAY1K,CAAZ0K,EAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAe8B,OAAAA,EAAU,EAAIC,EAAmB5B,EAAW7K,CAAC,CAAC+K,iBAAiB,CAACiB,cAAc,CAE/G,MAAO,CACL,GAAGpB,CAAM,CACTjM,KAAM,CAACiM,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,EAAQjM,IAAAA,GAARiM,CAAAA,IAAAA,IAAAA,EAAAA,GAAgB,EAAK2B,CAC9B,CACF,EAAG,CAAE1B,EAAW7K,CAAC,CAAC+K,iBAAiB,CAACiB,cAAc,CAAEpB,QAAQF,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,GAAY1K,CAAZ0K,EAAAA,KAAAA,MAAAA,KAAAA,EAAAA,EAAe8B,OAAO,CAAE,EAE9E,YAAEE,CAAU,aAAEC,CAAW,CAAE,CAAsBnS,EF1BhD,CACLkS,WAAYtL,KAAKC,CEyBmCuL,EFzBhC,CAACpS,EAAK+F,KAAK,CAAkB,EAAdoK,CAAAA,CAAAA,CAAoBC,OAAAA,KAAAA,EAAAA,EAAQjM,EAARiM,CAApBD,CAA4BhM,IAAQ,GAAMiM,CAAAA,CAAAA,OAAAA,KAAAA,EAAAA,EAAQiC,EAARjC,EAA1CD,CAAuD,IAAI,EAAI,CAAtDpN,CAAC,CAC7CoP,YAAavL,KAAKC,GAAG,CAAC7G,EAAKgG,MAAM,EAAImK,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAS3K,IAAK,GAAM4K,CAApBD,CAAoBC,OAAAA,KAAAA,EAAAA,EAAQkC,EAARlC,IAAQkC,IAAU,EAAMlC,EAAAA,CAAAA,KEwBtB0B,EFxBsB1B,KAAAA,EAAAA,EAAQzJ,EAARyJ,CAAW,IAAI,EAAI,EACtG,EANS,CAAE8B,WAAY,EAAGC,YAAa,CAAE,EE+BnC7Q,EAASpB,EAAAA,OAAa,CAAC,IACpBmQ,EAAWtN,CAAC,CAAC6M,KAAK,CAAC2C,KAAK,CAAC,CAAE,EAAGL,EAAY,EAChD,CAAE7B,EAAWtN,CAAC,CAAC6M,KAAK,CAAEsC,EAAY,EAE/B3Q,EAASrB,EAAAA,OAAa,CAAC,IACpBmQ,EAAW7K,CAAC,CAACoK,KAAK,CAAC2C,KAAK,CAAC,CAAEJ,EAAa,EAAG,EACjD,CAAE9B,EAAW7K,CAAC,CAACoK,KAAK,CAAEuC,EAAa,EAEtC,OAAOjS,EAAAA,OAAa,CAAC,KACZ,MACLF,MACAI,cACA0R,aACAI,cACAC,EACAK,KAAM,CACJzP,EAAG,CACD8O,cAAexB,EAAWtN,CAAC,CAAC8O,aAAa,CACzCjC,MAAOtO,CACT,EACAkE,EAAG,CACDqM,cAAexB,EAAW7K,CAAC,CAACqM,aAAa,CACzCjC,MAAOrO,CACT,CACF,EACF,EACC,CAAE8O,EAAWtN,CAAC,CAAC8O,aAAa,CAAExB,EAAW7K,CAAC,CAACqM,aAAa,CAAEC,EAAaK,EAAaD,EAAYlS,EAAMI,EAAKkB,EAAQC,EAAQ,CAChI,2DC3DO,IAAM+G,EAA8D,CACzE,CACElH,GAAIqH,EAAAA,EAAUA,CAACC,GAAG,CAClBI,MAAO,KACT,EACA,CACE1H,GAAIqH,EAAAA,EAAUA,CAAC8G,IAAI,CACnBzG,MAAO,MACT,EACA,CACE1H,GAAIqH,EAAAA,EAAUA,CAAC+G,KAAK,CACpB1G,MAAO,OACT,EACA,CACE1H,GAAIqH,EAAAA,EAAUA,CAACgH,IAAI,CACnB3G,MAAO,MACT,EACD,CAAC,EAEiH,CACjH2J,IAAK,CACH3J,MAAO,WACP4J,WAAY,UACd,EACAC,SAAU,CACR7J,MAAO,UACP4J,WAAY,KACZzE,MAAO2E,EAAmB,EAC5B,EACAC,YAAa,CACX/J,MAAO,WACP4J,WAAY,KACZzE,MAAO2E,EAAmB,EAC5B,EACAE,UAAW,CACThK,MAAO,WACP4J,WAAY,KACZzE,MAAO2E,EAAmB,EAC5B,EACAG,QAAS,CACPjK,MAAO,SACP4J,WAAY,KACZzE,MAAO2E,EAAmB,GAC5B,CACF,EAAE,SAEOA,EAAmBI,CAAc,EACxC,IAAMhQ,EAAO,IAAI4O,KAEjB,OADA5O,EAAKiQ,QAAQ,CAACjQ,EAAKkQ,QAAQ,GAAKF,GACzBhQ,CACT","sources":["webpack://_N_E/./lib/hooks/useClientRect.tsx","webpack://_N_E/./ui/shared/chart/ChartArea.tsx","webpack://_N_E/./ui/shared/chart/utils/animations.ts","webpack://_N_E/./ui/shared/chart/utils/formatters.ts","webpack://_N_E/./ui/shared/chart/ChartLine.tsx","webpack://_N_E/./ui/shared/chart/ChartOverlay.tsx","webpack://_N_E/./ui/shared/chart/tooltip/utils.ts","webpack://_N_E/./ui/shared/chart/tooltip/ChartTooltipBackdrop.tsx","webpack://_N_E/./ui/shared/chart/tooltip/ChartTooltipContent.tsx","webpack://_N_E/./ui/shared/chart/tooltip/ChartTooltipLine.tsx","webpack://_N_E/./ui/shared/chart/tooltip/ChartTooltipPoint.tsx","webpack://_N_E/./ui/shared/chart/tooltip/ChartTooltipRow.tsx","webpack://_N_E/./ui/shared/chart/tooltip/ChartTooltipTitle.tsx","webpack://_N_E/./ui/shared/chart/tooltip/pointerTracker.ts","webpack://_N_E/./ui/shared/chart/ChartTooltip.tsx","webpack://_N_E/./ui/shared/chart/utils/calculateInnerSize.ts","webpack://_N_E/./ui/shared/chart/utils/timeChartAxis.ts","webpack://_N_E/./ui/shared/chart/useTimeChartController.tsx","webpack://_N_E/./ui/stats/constants/index.ts"],"sourcesContent":["import { debounce } from 'es-toolkit';\nimport type { LegacyRef } from 'react';\nimport React from 'react';\n\nexport default function useClientRect<E extends Element>(): [ DOMRect | null, LegacyRef<E> | undefined ] {\n  const [ rect, setRect ] = React.useState<DOMRect | null>(null);\n  const nodeRef = React.useRef<E>();\n\n  const ref = React.useCallback((node: E) => {\n    if (node !== null) {\n      setRect(node.getBoundingClientRect());\n    }\n    nodeRef.current = node;\n  }, []);\n\n  React.useEffect(() => {\n    const content = window.document.querySelector('main');\n    if (!content) {\n      return;\n    }\n\n    const resizeHandler = debounce(() => {\n      setRect(nodeRef.current?.getBoundingClientRect() ?? null);\n    }, 100);\n\n    const resizeObserver = new ResizeObserver(resizeHandler);\n    resizeObserver.observe(content);\n    resizeObserver.observe(window.document.body);\n\n    return function cleanup() {\n      resizeObserver.unobserve(content);\n      resizeObserver.unobserve(window.document.body);\n    };\n  }, [ ]);\n\n  return [ rect, ref ];\n}\n","import { useColorModeValue, useToken, useTheme } from '@chakra-ui/react';\nimport { transparentize } from '@chakra-ui/theme-tools';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport type { TimeChartItem } from 'ui/shared/chart/types';\n\ninterface Props extends React.SVGProps<SVGPathElement> {\n  id?: string;\n  xScale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  yScale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  color?: string;\n  data: Array<TimeChartItem>;\n  noAnimation?: boolean;\n}\n\nconst ChartArea = ({ id, xScale, yScale, color, data, noAnimation, ...props }: Props) => {\n  const ref = React.useRef(null);\n  const theme = useTheme();\n\n  const gradientColorId = `${ id || 'gradient' }-${ color }-color`;\n  const gradientStopColor = useToken('colors', useColorModeValue('whiteAlpha.200', 'blackAlpha.100'));\n  const defaultGradient = {\n    startColor: useToken('colors', useColorModeValue('blue.100', 'blue.400')),\n    stopColor: useToken('colors', transparentize(useColorModeValue('blue.100', 'blue.400'), 0)(theme)),\n  };\n\n  React.useEffect(() => {\n    if (noAnimation) {\n      d3.select(ref.current).attr('opacity', 1);\n      return;\n    }\n    d3.select(ref.current).transition()\n      .duration(750)\n      .ease(d3.easeBackIn)\n      .attr('opacity', 1);\n  }, [ noAnimation ]);\n\n  const d = React.useMemo(() => {\n    const area = d3.area<TimeChartItem>()\n      .defined(({ isApproximate }) => !isApproximate)\n      .x(({ date }) => xScale(date))\n      .y1(({ value }) => yScale(value))\n      .y0(() => yScale(yScale.domain()[0]))\n      .curve(d3.curveMonotoneX);\n    return area(data) || undefined;\n  }, [ xScale, yScale, data ]);\n\n  return (\n    <>\n      <path\n        ref={ ref }\n        d={ d }\n        fill={ color ? `url(#${ gradientColorId })` : 'url(#gradient-chart-area-default)' }\n        opacity={ 0 }\n        data-name={ id || 'gradient-chart-area' }\n        { ...props }\n      />\n      { color ? (\n        <defs>\n          <linearGradient id={ `${ gradientColorId }` } x1=\"0%\" x2=\"0%\" y1=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={ color }/>\n            <stop offset=\"100%\" stopColor={ gradientStopColor }/>\n          </linearGradient>\n        </defs>\n      ) : (\n        <defs>\n          <linearGradient id=\"gradient-chart-area-default\" x1=\"0%\" x2=\"0%\" y1=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={ defaultGradient.startColor }/>\n            <stop offset=\"100%\" stopColor={ defaultGradient.stopColor }/>\n          </linearGradient>\n        </defs>\n      ) }\n    </>\n  );\n};\n\nexport default React.memo(ChartArea);\n","import * as d3 from 'd3';\n\nexport type AnimationType = 'left' | 'fadeIn' | 'none';\n\nexport const animateLeft = (path: SVGPathElement) => {\n  const totalLength = path.getTotalLength() || 0;\n  d3.select(path)\n    .attr('opacity', 1)\n    .attr('stroke-dasharray', `${ totalLength },${ totalLength }`)\n    .attr('stroke-dashoffset', totalLength)\n    .transition()\n    .duration(750)\n    .ease(d3.easeLinear)\n    .attr('stroke-dashoffset', 0);\n};\n\nexport const animateFadeIn = (path: SVGPathElement) => {\n  d3.select(path)\n    .transition()\n    .duration(750)\n    .ease(d3.easeLinear)\n    .attr('opacity', 1);\n};\n\nexport const noneAnimation = (path: SVGPathElement) => {\n  d3.select(path).attr('opacity', 1);\n};\n\nexport const ANIMATIONS: Record<AnimationType, (path: SVGPathElement) => void> = {\n  left: animateLeft,\n  fadeIn: animateFadeIn,\n  none: noneAnimation,\n};\n","import type { TimeChartItem } from '../types';\n\nexport const getIncompleteDataLineSource = (data: Array<TimeChartItem>): Array<TimeChartItem> => {\n  const result: Array<TimeChartItem> = [];\n\n  for (let index = 0; index < data.length; index++) {\n    const current = data[index];\n    if (current.isApproximate) {\n      const prev = data[index - 1];\n      const next = data[index + 1];\n\n      prev && !prev.isApproximate && result.push(prev);\n      result.push(current);\n      next && !next.isApproximate && result.push(next);\n    }\n  }\n\n  return result;\n};\n","import * as d3 from 'd3';\nimport React from 'react';\n\nimport type { TimeChartItem } from 'ui/shared/chart/types';\n\nimport type { AnimationType } from './utils/animations';\nimport { ANIMATIONS } from './utils/animations';\nimport { getIncompleteDataLineSource } from './utils/formatters';\n\ninterface Props extends React.SVGProps<SVGPathElement> {\n  xScale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  yScale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  data: Array<TimeChartItem>;\n  animation: AnimationType;\n}\n\nconst ChartLine = ({ xScale, yScale, data, animation, ...props }: Props) => {\n  const dataPathRef = React.useRef<SVGPathElement>(null);\n  const incompleteDataPathRef = React.useRef<SVGPathElement>(null);\n\n  React.useEffect(() => {\n    const animationFn = ANIMATIONS[animation];\n    const timeoutId = window.setTimeout(() => {\n      dataPathRef.current && animationFn(dataPathRef.current);\n      incompleteDataPathRef.current && animationFn(incompleteDataPathRef.current);\n    }, 100);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [ animation ]);\n\n  // Recalculate line length if scale has changed\n  React.useEffect(() => {\n    if (animation === 'left') {\n      const totalLength = dataPathRef.current?.getTotalLength();\n      d3.select(dataPathRef.current).attr(\n        'stroke-dasharray',\n        `${ totalLength },${ totalLength }`,\n      );\n    }\n  }, [ xScale, yScale, animation ]);\n\n  const line = d3.line<TimeChartItem>()\n    .x((d) => xScale(d.date))\n    .y((d) => yScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  return (\n    <>\n      <path\n        ref={ incompleteDataPathRef }\n        d={ line(getIncompleteDataLineSource(data)) || undefined }\n        strokeWidth={ 1 }\n        strokeLinecap=\"round\"\n        fill=\"none\"\n        strokeDasharray=\"6 6\"\n        opacity={ 0 }\n        { ...props }\n      />\n      <path\n        ref={ dataPathRef }\n        d={ line(data.filter(({ isApproximate }) => !isApproximate)) || undefined }\n        strokeWidth={ 1 }\n        strokeLinecap=\"round\"\n        fill=\"none\"\n        opacity={ 0 }\n        { ...props }\n      />\n    </>\n  );\n};\n\nexport default React.memo(ChartLine);\n","import React from 'react';\n\ninterface Props {\n  width: number;\n  height: number;\n  children: React.ReactNode;\n}\n\nconst ChartOverlay = ({ width, height, children }: Props, ref: React.ForwardedRef<SVGRectElement>) => {\n  return (\n    <g className=\"ChartOverlay\">\n      { children }\n      <rect ref={ ref } width={ width } height={ height } opacity={ 0 }/>\n    </g>\n  );\n};\n\nexport default React.forwardRef(ChartOverlay);\n","export const TEXT_LINE_HEIGHT = 12;\nexport const PADDING = 16;\nexport const LINE_SPACE = 10;\nexport const POINT_SIZE = 16;\nexport const LABEL_WIDTH = 80;\n\nexport const calculateContainerHeight = (seriesNum: number, isIncomplete?: boolean) => {\n  const linesNum = isIncomplete ? seriesNum + 2 : seriesNum + 1;\n\n  return 2 * PADDING + linesNum * TEXT_LINE_HEIGHT + (linesNum - 1) * LINE_SPACE;\n};\n\nexport const calculateRowTransformValue = (rowNum: number) => {\n  const top = Math.max(0, PADDING + rowNum * (LINE_SPACE + TEXT_LINE_HEIGHT));\n  return `translate(${ PADDING },${ top })`;\n};\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport { calculateContainerHeight } from './utils';\n\nconst ChartTooltipBackdrop = () => {\n  const bgColor = useToken('colors', 'blackAlpha.900');\n\n  return (\n    <rect\n      className=\"ChartTooltip__backdrop\"\n      rx={ 12 }\n      ry={ 12 }\n      fill={ bgColor }\n    />\n  );\n};\n\nexport default React.memo(ChartTooltipBackdrop);\n\ninterface UseRenderBackdropParams {\n  seriesNum: number;\n  transitionDuration: number | null;\n}\n\nexport function useRenderBackdrop(ref: React.RefObject<SVGGElement>, { seriesNum, transitionDuration }: UseRenderBackdropParams) {\n  return React.useCallback((width: number, isIncompleteData: boolean) => {\n    const height = calculateContainerHeight(seriesNum, isIncompleteData);\n\n    if (transitionDuration) {\n      d3.select(ref.current)\n        .select('.ChartTooltip__backdrop')\n        .transition()\n        .duration(transitionDuration)\n        .ease(d3.easeLinear)\n        .attr('width', width)\n        .attr('height', height);\n    } else {\n      d3.select(ref.current)\n        .select('.ChartTooltip__backdrop')\n        .attr('width', width)\n        .attr('height', height);\n    }\n  }, [ ref, seriesNum, transitionDuration ]);\n}\n","import * as d3 from 'd3';\nimport { clamp } from 'es-toolkit';\nimport React from 'react';\n\nimport { POINT_SIZE } from './utils';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst ChartTooltipContent = ({ children }: Props) => {\n  return <g className=\"ChartTooltip__content\">{ children }</g>;\n};\n\nexport default React.memo(ChartTooltipContent);\n\ninterface UseRenderContentParams {\n  chart: {\n    width?: number;\n    height?: number;\n  };\n  transitionDuration: number | null;\n}\n\nexport function useRenderContent(ref: React.RefObject<SVGGElement>, { chart, transitionDuration }: UseRenderContentParams) {\n  return React.useCallback((x: number, y: number) => {\n    const tooltipContent = d3.select(ref.current).select('.ChartTooltip__content');\n\n    const transformAttributeFn: d3.ValueFn<d3.BaseType, unknown, string> = (cur, i, nodes) => {\n      const node = nodes[i] as SVGGElement | null;\n      const { width: nodeWidth, height: nodeHeight } = node?.getBoundingClientRect() || { width: 0, height: 0 };\n      const [ translateX, translateY ] = calculatePosition({\n        canvasWidth: chart.width || 0,\n        canvasHeight: chart.height || 0,\n        nodeWidth,\n        nodeHeight,\n        pointX: x,\n        pointY: y,\n        offset: POINT_SIZE,\n      });\n      return `translate(${ translateX }, ${ translateY })`;\n    };\n\n    if (transitionDuration) {\n      tooltipContent\n        .transition()\n        .duration(transitionDuration)\n        .ease(d3.easeLinear)\n        .attr('transform', transformAttributeFn);\n    } else {\n      tooltipContent\n        .attr('transform', transformAttributeFn);\n    }\n\n  }, [ chart.height, chart.width, ref, transitionDuration ]);\n}\n\ninterface CalculatePositionParams {\n  pointX: number;\n  pointY: number;\n  offset: number;\n  nodeWidth: number;\n  nodeHeight: number;\n  canvasWidth: number;\n  canvasHeight: number;\n}\n\nfunction calculatePosition({ pointX, pointY, canvasWidth, canvasHeight, nodeWidth, nodeHeight, offset }: CalculatePositionParams): [ number, number ] {\n  // right\n  if (pointX + offset + nodeWidth <= canvasWidth) {\n    const x = pointX + offset;\n    const y = clamp(pointY - nodeHeight / 2, 0, canvasHeight - nodeHeight);\n    return [ x, y ];\n  }\n\n  // left\n  if (nodeWidth + offset <= pointX) {\n    const x = pointX - offset - nodeWidth;\n    const y = clamp(pointY - nodeHeight / 2, 0, canvasHeight - nodeHeight);\n    return [ x, y ];\n  }\n\n  // top\n  if (nodeHeight + offset <= pointY) {\n    const x = clamp(pointX - nodeWidth / 2, 0, canvasWidth - nodeWidth);\n    const y = pointY - offset - nodeHeight;\n    return [ x, y ];\n  }\n\n  // bottom\n  if (pointY + offset + nodeHeight <= canvasHeight) {\n    const x = clamp(pointX - nodeWidth / 2, 0, canvasWidth - nodeWidth);\n    const y = pointY + offset;\n    return [ x, y ];\n  }\n\n  const x = clamp(pointX / 2, 0, canvasWidth - nodeWidth);\n  const y = clamp(pointY / 2, 0, canvasHeight - nodeHeight);\n\n  return [ x, y ];\n}\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nconst ChartTooltipLine = () => {\n  const lineColor = useToken('colors', 'gray.400');\n  return <line className=\"ChartTooltip__line\" stroke={ lineColor } strokeDasharray=\"3\"/>;\n};\n\nexport default React.memo(ChartTooltipLine);\n\nexport function useRenderLine(ref: React.RefObject<SVGGElement>, chartHeight: number | undefined) {\n  return React.useCallback((x: number) => {\n    d3.select(ref.current)\n      .select('.ChartTooltip__line')\n      .attr('x1', x)\n      .attr('x2', x)\n      .attr('y1', 0)\n      .attr('y2', chartHeight || 0);\n  }, [ ref, chartHeight ]);\n}\n","import * as d3 from 'd3';\nimport React from 'react';\n\nimport type { TimeChartData, TimeChartItem } from 'ui/shared/chart/types';\n\nimport { POINT_SIZE } from './utils';\n\nconst ChartTooltipPoint = () => {\n  const bgColor = 'black';\n  const borderColor = 'white';\n\n  return (\n    <circle\n      className=\"ChartTooltip__point\"\n      r={ POINT_SIZE / 2 }\n      opacity={ 1 }\n      fill={ bgColor }\n      stroke={ borderColor }\n      strokeWidth={ 4 }\n    />\n  );\n};\n\nexport default React.memo(ChartTooltipPoint);\n\ninterface UseRenderPointsParams {\n  data: TimeChartData;\n  xScale: d3.ScaleTime<number, number>;\n  yScale: d3.ScaleLinear<number, number>;\n}\n\nexport interface CurrentPoint {\n  datumIndex: number;\n  item: TimeChartItem;\n}\n\ninterface RenderPointsReturnType {\n  x: number;\n  y: number;\n  currentPoints: Array<CurrentPoint>;\n}\n\nexport function useRenderPoints(ref: React.RefObject<SVGGElement>, params: UseRenderPointsParams) {\n  return React.useCallback((x: number): RenderPointsReturnType => {\n    const xDate = params.xScale.invert(x);\n    const bisectDate = d3.bisector<TimeChartItem, unknown>((d) => d.date).left;\n    let baseXPos = 0;\n    let baseYPos = 0;\n    const currentPoints: Array<CurrentPoint> = [];\n\n    d3.select(ref.current)\n      .selectAll('.ChartTooltip__point')\n      .attr('transform', (cur, elementIndex) => {\n        const datum = params.data[elementIndex];\n        const index = bisectDate(datum.items, xDate, 1);\n        const d0 = datum.items[index - 1] as TimeChartItem | undefined;\n        const d1 = datum.items[index] as TimeChartItem | undefined;\n        const d = (() => {\n          if (!d0) {\n            return d1;\n          }\n          if (!d1) {\n            return d0;\n          }\n          return xDate.getTime() - d0.date.getTime() > d1.date.getTime() - xDate.getTime() ? d1 : d0;\n        })();\n\n        if (d?.date === undefined && d?.value === undefined) {\n          // move point out of container\n          return 'translate(-100,-100)';\n        }\n\n        const xPos = params.xScale(d.date);\n        const yPos = params.yScale(d.value);\n\n        if (elementIndex === 0) {\n          baseXPos = xPos;\n          baseYPos = yPos;\n        }\n\n        currentPoints.push({ item: d, datumIndex: elementIndex });\n\n        return `translate(${ xPos }, ${ yPos })`;\n      });\n\n    return {\n      x: baseXPos,\n      y: baseYPos,\n      currentPoints,\n    };\n  }, [ ref, params ]);\n}\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport type { TimeChartData } from '../types';\n\nimport type { CurrentPoint } from './ChartTooltipPoint';\nimport { calculateRowTransformValue, LABEL_WIDTH, PADDING } from './utils';\n\ntype Props = {\n  lineNum: number;\n} & ({ label: string; children?: never } | { children: React.ReactNode; label?: never });\n\nconst ChartTooltipRow = ({ label, lineNum, children }: Props) => {\n  const labelColor = useToken('colors', 'blue.100');\n  const textColor = useToken('colors', 'white');\n\n  return (\n    <g className=\"ChartTooltip__row\" transform={ calculateRowTransformValue(lineNum) }>\n      { children || (\n        <>\n          <text\n            className=\"ChartTooltip__label\"\n            transform=\"translate(0,0)\"\n            dominantBaseline=\"hanging\"\n            fill={ labelColor }\n          >\n            { label }\n          </text>\n          <text\n            className=\"ChartTooltip__value\"\n            transform={ `translate(${ LABEL_WIDTH },0)` }\n            dominantBaseline=\"hanging\"\n            fill={ textColor }\n          />\n        </>\n      ) }\n    </g>\n  );\n};\n\nexport default React.memo(ChartTooltipRow);\n\ninterface UseRenderRowsParams {\n  data: TimeChartData;\n  xScale: d3.ScaleTime<number, number>;\n  minWidth: number;\n}\n\ninterface UseRenderRowsReturnType {\n  width: number;\n}\n\nexport function useRenderRows(ref: React.RefObject<SVGGElement>, { data, xScale, minWidth }: UseRenderRowsParams) {\n  return React.useCallback((x: number, currentPoints: Array<CurrentPoint>): UseRenderRowsReturnType => {\n\n    // update \"transform\" prop of all rows\n    const isIncompleteData = currentPoints.some(({ item }) => item.isApproximate);\n    d3.select(ref.current)\n      .selectAll<Element, TimeChartData>('.ChartTooltip__row')\n      .attr('transform', (datum, index) => {\n        return calculateRowTransformValue(index - (isIncompleteData ? 0 : 1));\n      });\n\n    // update date and indicators value\n    // here we assume that the first value element contains the date\n    const valueNodes = d3.select(ref.current)\n      .selectAll<Element, TimeChartData>('.ChartTooltip__value')\n      .text((_, index) => {\n        if (index === 0) {\n          const date = xScale.invert(x);\n          const dateValue = data[0].items.find((item) => item.date.getTime() === date.getTime())?.dateLabel;\n          const dateValueFallback = d3.timeFormat('%e %b %Y')(xScale.invert(x));\n          return dateValue || dateValueFallback;\n        }\n\n        const { datumIndex, item } = currentPoints.find(({ datumIndex }) => datumIndex === index - 1) || {};\n        if (datumIndex === undefined || !item) {\n          return null;\n        }\n\n        const value = data[datumIndex]?.valueFormatter?.(item.value) ?? item.value.toLocaleString(undefined, { minimumSignificantDigits: 1 });\n        const units = data[datumIndex]?.units ? ` ${ data[datumIndex]?.units }` : '';\n\n        return value + units;\n      })\n      .nodes();\n\n    const valueWidths = valueNodes.map((node) => node?.getBoundingClientRect?.().width);\n    const maxValueWidth = Math.max(...valueWidths);\n    const maxRowWidth = Math.max(minWidth, 2 * PADDING + LABEL_WIDTH + maxValueWidth);\n\n    return { width: maxRowWidth };\n\n  }, [ data, minWidth, ref, xScale ]);\n}\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport { Resolution } from '@blockscout/stats-types';\n\nimport { STATS_RESOLUTIONS } from 'ui/stats/constants';\n\nimport ChartTooltipRow from './ChartTooltipRow';\n\nconst ChartTooltipTitle = ({ resolution = Resolution.DAY }: { resolution?: Resolution }) => {\n  const titleColor = useToken('colors', 'yellow.300');\n  const resolutionTitle = STATS_RESOLUTIONS.find(r => r.id === resolution)?.title || 'day';\n\n  return (\n    <ChartTooltipRow lineNum={ 0 }>\n      <text\n        className=\"ChartTooltip__title\"\n        transform=\"translate(0,0)\"\n        fill={ titleColor }\n        opacity={ 0 }\n        dominantBaseline=\"hanging\"\n      >\n        { `Incomplete ${ resolutionTitle.toLowerCase() }` }\n      </text>\n    </ChartTooltipRow>\n  );\n};\n\nexport default React.memo(ChartTooltipTitle);\n\nexport function useRenderTitle(ref: React.RefObject<SVGGElement>) {\n  return React.useCallback((isVisible: boolean) => {\n    d3.select(ref.current)\n      .select('.ChartTooltip__title')\n      .attr('opacity', isVisible ? 1 : 0);\n  }, [ ref ]);\n}\n","import * as d3 from 'd3';\n\nexport interface Pointer {\n  id: number;\n  point: [number, number] | null;\n  prev: [number, number] | null;\n  sourceEvent?: PointerEvent;\n}\n\nexport interface PointerOptions {\n  start?: (tracker: Pointer) => void;\n  move?: (tracker: Pointer) => void;\n  out?: (tracker: Pointer) => void;\n  end?: (tracker: Pointer) => void;\n}\n\nexport function trackPointer(event: PointerEvent, { start, move, out, end }: PointerOptions): number {\n  const tracker: Pointer = {\n    id: event.pointerId,\n    point: null,\n    prev: null,\n  };\n\n  const id = event.pointerId;\n  const target = event.target as Element;\n  tracker.point = d3.pointer(event, target);\n  target.setPointerCapture(id);\n\n  const untrack = (sourceEvent: PointerEvent) => {\n    tracker.sourceEvent = sourceEvent;\n    d3.select(target).on(`.${ id }`, null);\n    target.releasePointerCapture(id);\n    end?.(tracker);\n  };\n\n  d3.select(target)\n    .on(`touchstart.${ id }`, (sourceEvent: PointerEvent) => {\n      const target = sourceEvent.target as Element;\n      const touches = d3.pointers(sourceEvent, target);\n\n      // disable current tracker when entering multi touch mode\n      touches.length > 1 && untrack(sourceEvent);\n    })\n    .on(`pointerup.${ id } pointercancel.${ id } lostpointercapture.${ id }`, (sourceEvent: PointerEvent) => {\n      if (sourceEvent.pointerId !== id) {\n        return;\n      }\n\n      untrack(sourceEvent);\n    })\n    .on(`pointermove.${ id }`, (sourceEvent) => {\n      if (sourceEvent.pointerId !== id) {\n        return;\n      }\n      tracker.sourceEvent = sourceEvent;\n      tracker.prev = tracker.point;\n      tracker.point = d3.pointer(sourceEvent, target);\n      move?.(tracker);\n    })\n    .on(`pointerout.${ id }`, (e) => {\n      if (e.pointerId !== id) {\n        return;\n      }\n      tracker.sourceEvent = e;\n      tracker.point = null;\n      out?.(tracker);\n    });\n\n  start?.(tracker);\n\n  return id;\n}\n","import * as d3 from 'd3';\nimport React from 'react';\n\nimport { Resolution } from '@blockscout/stats-types';\nimport type { TimeChartData } from 'ui/shared/chart/types';\n\nimport ChartTooltipBackdrop, { useRenderBackdrop } from './tooltip/ChartTooltipBackdrop';\nimport ChartTooltipContent, { useRenderContent } from './tooltip/ChartTooltipContent';\nimport ChartTooltipLine, { useRenderLine } from './tooltip/ChartTooltipLine';\nimport ChartTooltipPoint, { useRenderPoints } from './tooltip/ChartTooltipPoint';\nimport ChartTooltipRow, { useRenderRows } from './tooltip/ChartTooltipRow';\nimport ChartTooltipTitle, { useRenderTitle } from './tooltip/ChartTooltipTitle';\nimport { trackPointer } from './tooltip/pointerTracker';\nimport type { Pointer } from './tooltip/pointerTracker';\n\ninterface Props {\n  width?: number;\n  tooltipWidth?: number;\n  height?: number;\n  data: TimeChartData;\n  xScale: d3.ScaleTime<number, number>;\n  yScale: d3.ScaleLinear<number, number>;\n  anchorEl: SVGRectElement | null;\n  noAnimation?: boolean;\n  resolution?: Resolution;\n}\n\nconst ChartTooltip = ({\n  xScale,\n  yScale,\n  width,\n  tooltipWidth = 200,\n  height,\n  data,\n  anchorEl,\n  noAnimation,\n  resolution,\n  ...props\n}: Props) => {\n  const ref = React.useRef<SVGGElement>(null);\n  const trackerId = React.useRef<number>();\n  const isVisible = React.useRef(false);\n\n  const transitionDuration = !noAnimation ? 100 : null;\n\n  const renderLine = useRenderLine(ref, height);\n  const renderContent = useRenderContent(ref, { chart: { width, height }, transitionDuration });\n  const renderPoints = useRenderPoints(ref, { data, xScale, yScale });\n  const renderTitle = useRenderTitle(ref);\n  const renderRows = useRenderRows(ref, { data, xScale, minWidth: tooltipWidth });\n  const renderBackdrop = useRenderBackdrop(ref, { seriesNum: data.length, transitionDuration });\n\n  const draw = React.useCallback((pointer: Pointer) => {\n    if (pointer.point) {\n      const { x, y, currentPoints } = renderPoints(pointer.point[0]);\n      const isIncompleteData = currentPoints.some(({ item }) => item.isApproximate);\n      renderLine(x);\n      renderContent(x, y);\n      renderTitle(isIncompleteData);\n      const { width } = renderRows(x, currentPoints);\n      renderBackdrop(width, isIncompleteData);\n    }\n  }, [ renderPoints, renderLine, renderContent, renderTitle, renderRows, renderBackdrop ]);\n\n  const showContent = React.useCallback(() => {\n    if (!isVisible.current) {\n      if (transitionDuration) {\n        d3.select(ref.current)\n          .transition()\n          .delay(transitionDuration)\n          .attr('opacity', 1);\n      } else {\n        d3.select(ref.current)\n          .attr('opacity', 1);\n      }\n      isVisible.current = true;\n    }\n  }, [ transitionDuration ]);\n\n  const hideContent = React.useCallback(() => {\n    if (transitionDuration) {\n      d3.select(ref.current)\n        .transition()\n        .delay(transitionDuration)\n        .attr('opacity', 0);\n    } else {\n      d3.select(ref.current)\n        .attr('opacity', 0);\n    }\n    isVisible.current = false;\n  }, [ transitionDuration ]);\n\n  const createPointerTracker = React.useCallback((event: PointerEvent, isSubsequentCall?: boolean) => {\n    let isPressed = event.pointerType === 'mouse' && event.type === 'pointerdown' && !isSubsequentCall;\n\n    if (isPressed) {\n      hideContent();\n    }\n\n    return trackPointer(event, {\n      move: (pointer) => {\n        if (!pointer.point || isPressed) {\n          return;\n        }\n        draw(pointer);\n        showContent();\n      },\n      out: () => {\n        hideContent();\n        trackerId.current = undefined;\n      },\n      end: () => {\n        hideContent();\n        trackerId.current = undefined;\n        isPressed = false;\n      },\n    });\n  }, [ draw, hideContent, showContent ]);\n\n  React.useEffect(() => {\n    const anchorD3 = d3.select(anchorEl);\n    let isMultiTouch = false; // disabling creation of new tracker in multi touch mode\n\n    anchorD3\n      .on('touchmove.tooltip', (event: TouchEvent) => event.preventDefault()) // prevent scrolling\n      .on(`touchstart.tooltip`, (event: TouchEvent) => {\n        isMultiTouch = event.touches.length > 1;\n      })\n      .on(`touchend.tooltip`, (event: TouchEvent) => {\n        if (isMultiTouch && event.touches.length === 0) {\n          isMultiTouch = false;\n        }\n      })\n      .on('pointerenter.tooltip pointerdown.tooltip', (event: PointerEvent) => {\n        if (!isMultiTouch) {\n          trackerId.current = createPointerTracker(event);\n        }\n      })\n      .on('pointermove.tooltip', (event: PointerEvent) => {\n        if (event.pointerType === 'mouse' && !isMultiTouch && trackerId.current === undefined) {\n          trackerId.current = createPointerTracker(event);\n        }\n      });\n\n    return () => {\n      anchorD3.on('touchmove.tooltip pointerenter.tooltip pointerdown.tooltip', null);\n      trackerId.current && anchorD3.on(\n        [ 'pointerup', 'pointercancel', 'lostpointercapture', 'pointermove', 'pointerout' ].map((event) => `${ event }.${ trackerId.current }`).join(' '),\n        null,\n      );\n    };\n  }, [ anchorEl, createPointerTracker, draw, hideContent, showContent ]);\n\n  return (\n    <g\n      ref={ ref }\n      opacity={ 0 }\n      fontSize=\"12px\"\n      fontWeight=\"500\"\n      { ...props }\n    >\n      <ChartTooltipLine/>\n      { data.map(({ name }) => <ChartTooltipPoint key={ name }/>) }\n      <ChartTooltipContent>\n        <ChartTooltipBackdrop/>\n        <ChartTooltipTitle resolution={ resolution }/>\n        <ChartTooltipRow label={ getDateLabel(resolution) } lineNum={ 1 }/>\n        { data.map(({ name }, index) => <ChartTooltipRow key={ name } label={ name } lineNum={ index + 1 }/>) }\n      </ChartTooltipContent>\n    </g>\n  );\n};\n\nexport default React.memo(ChartTooltip);\n\nfunction getDateLabel(resolution?: Resolution): string {\n  switch (resolution) {\n    case Resolution.WEEK:\n      return 'Dates';\n    case Resolution.MONTH:\n      return 'Month';\n    case Resolution.YEAR:\n      return 'Year';\n    default:\n      return 'Date';\n  }\n}\n","import type { ChartMargin, ChartOffset } from 'ui/shared/chart/types';\n\nexport default function calculateInnerSize(rect: DOMRect | null, margin?: ChartMargin, offsets?: ChartOffset) {\n  if (!rect) {\n    return { innerWidth: 0, innerHeight: 0 };\n  }\n\n  return {\n    innerWidth: Math.max(rect.width - (offsets?.x || 0) - (margin?.left || 0) - (margin?.right || 0), 0),\n    innerHeight: Math.max(rect.height - (offsets?.y || 0) - (margin?.bottom || 0) - (margin?.top || 0), 0),\n  };\n}\n","import * as d3 from 'd3';\nimport { maxBy, uniq } from 'es-toolkit';\n\nimport type { AxesConfig, AxisConfig, TimeChartData } from '../types';\n\nimport { MONTH, YEAR } from 'lib/consts';\n\nexport const DEFAULT_MAXIMUM_SIGNIFICANT_DIGITS = 2;\nexport const DEFAULT_MAXIMUM_FRACTION_DIGITS = 3;\nexport const MAXIMUM_SIGNIFICANT_DIGITS_LIMIT = 8;\nexport const DEFAULT_LABEL_LENGTH = 5;\n\nexport interface LabelFormatParams extends Intl.NumberFormatOptions {\n  maxLabelLength: number;\n}\n\ntype Data = TimeChartData;\n\nexport function getAxesParams(data: Data, axesConfig?: AxesConfig) {\n  const { labelFormatParams: labelFormatParamsY, scale: yScale } = getAxisParamsY(data, axesConfig?.y);\n\n  return {\n    x: {\n      scale: getAxisParamsX(data).scale,\n      tickFormatter: tickFormatterX,\n    },\n    y: {\n      scale: yScale,\n      labelFormatParams: labelFormatParamsY,\n      tickFormatter: getTickFormatterY(labelFormatParamsY),\n    },\n  };\n}\n\nfunction getAxisParamsX(data: Data) {\n  const min = d3.min(data, ({ items }) => d3.min(items, ({ date }) => date)) ?? new Date();\n  const max = d3.max(data, ({ items }) => d3.max(items, ({ date }) => date)) ?? new Date();\n  const scale = d3.scaleTime().domain([ min, max ]);\n\n  return { min, max, scale };\n}\n\nconst tickFormatterX = (axis: d3.Axis<d3.NumberValue>) => (d: d3.AxisDomain) => {\n  let format: (date: Date) => string;\n  const scale = axis.scale();\n  const extent = scale.domain();\n\n  const span = Number(extent[1]) - Number(extent[0]);\n\n  if (span > 2 * YEAR) {\n    format = d3.timeFormat('%Y');\n  } else if (span > 4 * MONTH) {\n    format = d3.timeFormat('%b \\'%y');\n  } else {\n    format = d3.timeFormat('%d %b');\n  }\n\n  return format(d as Date);\n};\n\nfunction getAxisParamsY(data: Data, config?: AxisConfig) {\n  const DEFAULT_TICKS_NUM = 3;\n  const min = d3.min(data, ({ items }) => d3.min(items, ({ value }) => value)) ?? 0;\n  const max = d3.max(data, ({ items }) => d3.max(items, ({ value }) => value)) ?? 0;\n  const scale = config?.nice ?\n    d3.scaleLinear()\n      .domain([ min, max ])\n      .nice(config?.ticks ?? DEFAULT_TICKS_NUM) :\n    d3.scaleLinear()\n      .domain([ min, max ]);\n\n  const ticks = scale.ticks(config?.ticks ?? DEFAULT_TICKS_NUM);\n  const labelFormatParams = getYLabelFormatParams(ticks);\n\n  return { min, max, scale, labelFormatParams };\n}\n\nconst getTickFormatterY = (params: Intl.NumberFormatOptions) => () => (d: d3.AxisDomain) => {\n  const num = Number(d);\n  return num.toLocaleString(undefined, params);\n};\n\nfunction getYLabelFormatParams(ticks: Array<number>, maximumSignificantDigits = DEFAULT_MAXIMUM_SIGNIFICANT_DIGITS): LabelFormatParams {\n  const params = {\n    maximumFractionDigits: DEFAULT_MAXIMUM_FRACTION_DIGITS,\n    maximumSignificantDigits,\n    notation: 'compact' as const,\n  };\n\n  const uniqTicksStr = uniq(ticks.map((tick) => tick.toLocaleString(undefined, params)));\n  const maxLabelLength = maxBy(uniqTicksStr, (items) => items.length)?.length ?? DEFAULT_LABEL_LENGTH;\n\n  if (uniqTicksStr.length === ticks.length || maximumSignificantDigits === MAXIMUM_SIGNIFICANT_DIGITS_LIMIT) {\n    return { ...params, maxLabelLength };\n  }\n\n  return getYLabelFormatParams(ticks, maximumSignificantDigits + 1);\n}\n","import React from 'react';\n\nimport type { AxesConfig, ChartMargin, TimeChartData } from 'ui/shared/chart/types';\n\nimport useClientRect from 'lib/hooks/useClientRect';\n\nimport calculateInnerSize from './utils/calculateInnerSize';\nimport { getAxesParams } from './utils/timeChartAxis';\n\ninterface Props {\n  data: TimeChartData;\n  margin?: ChartMargin;\n  axesConfig?: AxesConfig;\n}\n\nexport default function useTimeChartController({ data, margin, axesConfig }: Props) {\n\n  const [ rect, ref ] = useClientRect<SVGSVGElement>();\n\n  // we need to recalculate the axis scale whenever the rect width changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const axesParams = React.useMemo(() => getAxesParams(data, axesConfig), [ data, axesConfig, rect?.width ]);\n\n  const chartMargin = React.useMemo(() => {\n    const PIXELS_PER_DIGIT = 8;\n    const leftShift = axesConfig?.y?.noLabel ? 0 : PIXELS_PER_DIGIT * axesParams.y.labelFormatParams.maxLabelLength;\n\n    return {\n      ...margin,\n      left: (margin?.left ?? 0) + leftShift,\n    };\n  }, [ axesParams.y.labelFormatParams.maxLabelLength, margin, axesConfig?.y?.noLabel ]);\n\n  const { innerWidth, innerHeight } = calculateInnerSize(rect, chartMargin);\n\n  const xScale = React.useMemo(() => {\n    return axesParams.x.scale.range([ 0, innerWidth ]);\n  }, [ axesParams.x.scale, innerWidth ]);\n\n  const yScale = React.useMemo(() => {\n    return axesParams.y.scale.range([ innerHeight, 0 ]);\n  }, [ axesParams.y.scale, innerHeight ]);\n\n  return React.useMemo(() => {\n    return {\n      rect,\n      ref,\n      chartMargin,\n      innerWidth,\n      innerHeight,\n      axes: {\n        x: {\n          tickFormatter: axesParams.x.tickFormatter,\n          scale: xScale,\n        },\n        y: {\n          tickFormatter: axesParams.y.tickFormatter,\n          scale: yScale,\n        },\n      },\n    };\n  }, [ axesParams.x.tickFormatter, axesParams.y.tickFormatter, chartMargin, innerHeight, innerWidth, rect, ref, xScale, yScale ]);\n}\n","import { Resolution } from '@blockscout/stats-types';\nimport type { StatsIntervalIds } from 'types/client/stats';\n\nexport const STATS_RESOLUTIONS: Array<{ id: Resolution; title: string }> = [\n  {\n    id: Resolution.DAY,\n    title: 'Day',\n  },\n  {\n    id: Resolution.WEEK,\n    title: 'Week',\n  },\n  {\n    id: Resolution.MONTH,\n    title: 'Month',\n  },\n  {\n    id: Resolution.YEAR,\n    title: 'Year',\n  },\n];\n\nexport const STATS_INTERVALS: { [key in StatsIntervalIds]: { title: string; shortTitle: string; start?: Date } } = {\n  all: {\n    title: 'All time',\n    shortTitle: 'All time',\n  },\n  oneMonth: {\n    title: '1 month',\n    shortTitle: '1M',\n    start: getStartDateInPast(1),\n  },\n  threeMonths: {\n    title: '3 months',\n    shortTitle: '3M',\n    start: getStartDateInPast(3),\n  },\n  sixMonths: {\n    title: '6 months',\n    shortTitle: '6M',\n    start: getStartDateInPast(6),\n  },\n  oneYear: {\n    title: '1 year',\n    shortTitle: '1Y',\n    start: getStartDateInPast(12),\n  },\n};\n\nfunction getStartDateInPast(months: number): Date {\n  const date = new Date();\n  date.setMonth(date.getMonth() - months);\n  return date;\n}\n"],"names":["useClientRect","rect","setRect","React","nodeRef","ref","node","getBoundingClientRect","current","content","window","document","querySelector","resizeObserver","ResizeObserver","resizeHandler","debounce","observe","body","cleanup","unobserve","id","ChartArea","xScale","yScale","color","data","noAnimation","props","theme","useTheme","gradientColorId","gradientStopColor","useToken","useColorModeValue","defaultGradient","startColor","stopColor","transparentize","d3","attr","transition","duration","ease","d","area","defined","isApproximate","x","date","y1","value","y0","domain","curve","undefined","path","fill","opacity","data-name","defs","linearGradient","x1","x2","y2","stop","offset","ANIMATIONS","left","animateLeft","totalLength","getTotalLength","animateFadeIn","noneAnimation","result","index","length","prev","next","push","ChartLine","animation","dataPathRef","incompleteDataPathRef","animationFn","timeoutId","setTimeout","clearTimeout","line","y","getIncompleteDataLineSource","strokeWidth","strokeLinecap","strokeDasharray","filter","ChartOverlay","width","height","children","g","className","calculateContainerHeight","seriesNum","isIncomplete","linesNum","PADDING","LINE_SPACE","TEXT_LINE_HEIGHT","top","Math","max","rowNum","ChartTooltipBackdrop","bgColor","rx","ry","ChartTooltipContent","lineColor","ChartTooltipLine","stroke","ChartTooltipPoint","circle","r","POINT_SIZE","borderColor","label","ChartTooltipRow","lineNum","labelColor","textColor","transform","calculateRowTransformValue","text","dominantBaseline","LABEL_WIDTH","STATS_RESOLUTIONS","ChartTooltipTitle","resolution","Resolution","DAY","titleColor","resolutionTitle","find","title","toLowerCase","ChartTooltip","tooltipWidth","anchorEl","trackerId","isVisible","transitionDuration","renderLine","useRenderLine","chartHeight","select","renderContent","useRenderContent","chart","tooltipContent","transformAttributeFn","cur","i","nodes","nodeWidth","nodeHeight","translateX","translateY","calculatePosition","pointX","pointY","canvasWidth","canvasHeight","clamp","renderPoints","useRenderPoints","params","xDate","invert","bisectDate","baseXPos","baseYPos","currentPoints","selectAll","elementIndex","datum","items","d0","d1","getTime","xPos","yPos","item","datumIndex","renderTitle","useRenderTitle","renderRows","useRenderRows","minWidth","isIncompleteData","some","maxRowWidth","maxValueWidth","_","dateValue","dateLabel","dateValueFallback","units","valueFormatter","toLocaleString","minimumSignificantDigits","map","renderBackdrop","useRenderBackdrop","draw","pointer","point","showContent","delay","hideContent","createPointerTracker","event","isSubsequentCall","isPressed","pointerType","type","trackPointer","start","move","out","end","tracker","pointerId","target","setPointerCapture","untrack","sourceEvent","on","releasePointerCapture","e","anchorD3","isMultiTouch","preventDefault","touches","join","fontSize","fontWeight","name","getDateLabel","WEEK","MONTH","YEAR","tickFormatterX","extent","scale","span","Number","format","getTickFormatterY","useTimeChartController","axesConfig","offsets","margin","axesParams","getAxesParams","labelFormatParams","labelFormatParamsY","getAxisParamsY","config","min","nice","ticks","DEFAULT_TICKS_NUM","getYLabelFormatParams","maxBy","maximumSignificantDigits","maximumFractionDigits","DEFAULT_MAXIMUM_FRACTION_DIGITS","notation","uniqTicksStr","uniq","tick","maxLabelLength","DEFAULT_LABEL_LENGTH","MAXIMUM_SIGNIFICANT_DIGITS_LIMIT","getAxisParamsX","Date","tickFormatter","chartMargin","leftShift","noLabel","PIXELS_PER_DIGIT","innerWidth","innerHeight","calculateInnerSize","right","bottom","range","axes","all","shortTitle","oneMonth","getStartDateInPast","threeMonths","sixMonths","oneYear","months","setMonth","getMonth"],"sourceRoot":"","ignoreList":[]}