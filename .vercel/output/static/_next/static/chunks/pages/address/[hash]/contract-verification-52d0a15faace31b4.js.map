{"version":3,"file":"static/chunks/pages/address/[hash]/contract-verification-52d0a15faace31b4.js","mappings":"gFACA,4CACA,wCACA,WACA,OAAe,EAAQ,KAA6D,CACpF,EACA,SAFsB,gOCiGtB,MApFuC,SA0BVA,EAzB3B,IAAMC,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GACxBC,EAASC,CAAAA,EAAAA,EAAAA,IAkFFC,KAlFED,CAASA,GAElBE,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACF,GAgFHD,CAhFO,CAgFN,CA/EtCI,EAASF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,MAAM,EAEhDT,EAAgBU,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,WAAY,CAC5CC,WAAY,CAAEL,MAAK,EACnBM,aAAc,CACZC,SAASC,CAAQR,CACnB,CACF,GAEAS,CAAAA,EAAAA,EAAAA,CAAAA,CAAwBA,CAACf,GAEzB,IAAMgB,EAAcC,CAAAA,EAAAA,EAAAA,CAAAA,CAAkBA,EAACH,CAAQR,GAE/CY,EAAAA,SAAe,CAAC,KACVT,GAAUH,GACZH,EAAOgB,CADW,MACJ,CAAC,CAAEC,SAAU,wCAAyCZ,MAAO,MAAEF,CAAK,CAAE,OAAGe,EAAW,CAAEC,QAAQ,EAAOC,SAAS,CAAK,EAIrI,EAAG,EAAG,EAEN,IAAMC,EAAqBxB,CAAkB,QAAlBA,EAAAA,EAAcyB,IAAAA,GAAdzB,KAAAA,MAAAA,KAAAA,EAAAA,EAAoB0B,WAAAA,GAAe,CAAC1B,EAAcyB,IAAI,CAACE,qBAAqB,CAEvGT,EAAAA,SAAe,CAAC,KACVM,GACFrB,EAAOyB,IAAI,CAAC,CAAER,SADQ,kBACqBZ,MAAO,CAAEF,OAAMuB,IAAK,UAAW,CAAE,OAAGR,EAAW,CAAEC,QAAQ,EAAOC,SAAS,CAAK,EAE7H,EAAG,CAAEjB,EAAMkB,EAAoBrB,EAAQ,EAEvC,IAAM2B,EACJ,EAAgBC,MADF,CAAC,EACY,CAACzB,GAAQN,EAAc+B,OAAO,CAChD,CADkD,EAClD,OAACC,EAAAA,CAAcA,CAAAA,CAAAA,GAGpBhB,EAAYiB,SAAS,EAAIjC,EAAciC,SAAS,EAAIT,EAC/C,UAACU,EAAAA,CAAaA,CAAAA,CAAAA,GAIrB,UAACC,EAAAA,CAAwBA,CAAAA,CACvB1B,OAASA,GAAUO,EAAYS,IAAI,CAACW,oBAAoB,CAACC,QAAQ,CAAC5B,GAAUA,OAA+CY,EAC3HiB,OAAStB,EAAYS,IAAI,CACzBnB,KAAOA,IAKPiC,EAAWrB,EAAAA,OAAa,CAAC,KAG7B,GAFsBjB,CAElB,CAF2BuC,QAAQ,EAAIvC,EAASuC,GAEhC,KAFwC,CAACH,QAAQ,CAAC,YAMtE,MAAO,CACLI,MAAO,mBACPC,IAAKzC,EAASuC,QAAQ,CAE1B,EAAG,CAAEvC,EAASuC,QAAQ,CAAE,EAExB,MACE,iCACE,UAACG,EAAAA,CAASA,CAAAA,CACRC,MAAM,kCACNL,SAAWA,IAEb,UAACM,EAAAA,EAAaA,CAAAA,CACZC,QAAS,MAAExC,EAAMyC,YAAa,EAAK,EACnCC,MAAM,IACNC,WAAW,UACXC,SAAS,KACTC,WAAa,IACbC,GAAK,KAELtB,IAGR,WCnFA,MAR8B,GAE1B,UAACuB,EAAAA,CAAUA,CAAAA,CAACjC,KAMDkC,IANU,EAML,sCAN6C9C,MAAQ+C,EAAM/C,KAAK,UAC9E,UAACH,EAA8BA,CAAAA,iCAAAA","sources":["webpack://_N_E/?e6b4","webpack://_N_E/./ui/pages/ContractVerificationForAddress.tsx","webpack://_N_E/./pages/address/[hash]/contract-verification.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/address/[hash]/contract-verification\",\n      function () {\n        return require(\"private-next-pages/address/[hash]/contract-verification.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/address/[hash]/contract-verification\"])\n      });\n    }\n  ","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { SmartContractVerificationMethodApi } from 'types/api/contract';\nimport type { SmartContractVerificationMethod } from 'types/client/contract';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport ContractVerificationForm from 'ui/contractVerification/ContractVerificationForm';\nimport useFormConfigQuery from 'ui/contractVerification/useFormConfigQuery';\nimport ContentLoader from 'ui/shared/ContentLoader';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport PageTitle from 'ui/shared/Page/PageTitle';\n\nconst ContractVerificationForAddress = () => {\n  const appProps = useAppContext();\n  const router = useRouter();\n\n  const hash = getQueryParamString(router.query.hash);\n  const method = getQueryParamString(router.query.method) as SmartContractVerificationMethod;\n\n  const contractQuery = useApiQuery('contract', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: Boolean(hash),\n    },\n  });\n\n  throwOnResourceLoadError(contractQuery);\n\n  const configQuery = useFormConfigQuery(Boolean(hash));\n\n  React.useEffect(() => {\n    if (method && hash) {\n      router.replace({ pathname: '/address/[hash]/contract-verification', query: { hash } }, undefined, { scroll: false, shallow: true });\n    }\n  // onMount only\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ ]);\n\n  const isVerifiedContract = contractQuery.data?.is_verified && !contractQuery.data.is_partially_verified;\n\n  React.useEffect(() => {\n    if (isVerifiedContract) {\n      router.push({ pathname: '/address/[hash]', query: { hash, tab: 'contract' } }, undefined, { scroll: false, shallow: true });\n    }\n  }, [ hash, isVerifiedContract, router ]);\n\n  const content = (() => {\n    if (configQuery.isError || !hash || contractQuery.isError) {\n      return <DataFetchAlert/>;\n    }\n\n    if (configQuery.isPending || contractQuery.isPending || isVerifiedContract) {\n      return <ContentLoader/>;\n    }\n\n    return (\n      <ContractVerificationForm\n        method={ method && configQuery.data.verification_options.includes(method) ? method as SmartContractVerificationMethodApi : undefined }\n        config={ configQuery.data }\n        hash={ hash }\n      />\n    );\n  })();\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/address');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to contract',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  return (\n    <>\n      <PageTitle\n        title=\"New smart contract verification\"\n        backLink={ backLink }\n      />\n      <AddressEntity\n        address={{ hash, is_contract: true }}\n        noLink\n        fontFamily=\"heading\"\n        fontSize=\"lg\"\n        fontWeight={ 500 }\n        mb={ 12 }\n      />\n      { content }\n    </>\n  );\n};\n\nexport default ContractVerificationForAddress;\n","import type { NextPage } from 'next';\nimport React from 'react';\n\nimport type { Props } from 'nextjs/getServerSideProps';\nimport PageNextJs from 'nextjs/PageNextJs';\n\nimport ContractVerificationForAddress from 'ui/pages/ContractVerificationForAddress';\n\nconst Page: NextPage<Props> = (props: Props) => {\n  return (\n    <PageNextJs pathname=\"/address/[hash]/contract-verification\" query={ props.query }>\n      <ContractVerificationForAddress/>\n    </PageNextJs>\n  );\n};\n\nexport default Page;\n\nexport { base as getServerSideProps } from 'nextjs/getServerSideProps';\n"],"names":["contractQuery","appProps","useAppContext","router","useRouter","ContractVerificationForAddress","hash","getQueryParamString","query","method","useApiQuery","pathParams","queryOptions","enabled","Boolean","throwOnResourceLoadError","configQuery","useFormConfigQuery","React","replace","pathname","undefined","scroll","shallow","isVerifiedContract","data","is_verified","is_partially_verified","push","tab","content","isError","DataFetchAlert","isPending","ContentLoader","ContractVerificationForm","verification_options","includes","config","backLink","referrer","label","url","PageTitle","title","AddressEntity","address","is_contract","noLink","fontFamily","fontSize","fontWeight","mb","PageNextJs","Page","props"],"sourceRoot":"","ignoreList":[]}