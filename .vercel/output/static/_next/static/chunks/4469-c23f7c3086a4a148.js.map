{"version":3,"file":"static/chunks/4469-c23f7c3086a4a148.js","mappings":"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CjC,gBAAyB,QAAQ,IACjC,gBAAyB,QAAQ,IACjC,qBACA,OACA,CACA,CAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EA2BA,OACA,MAXA,CACA,YACA,YACA,YACA,WACA,YACA,aACA,aACA,YACA,EAGA,mBACA,gBACA,gBACA,cA9BA,KAAoC,YACpC,KACA,MACA,YAAiB,QAAe,kBAChC,gBAAqB,QAAQ,IAC7B,eAAoB,QAAQ,IAC5B,eAAoB,QAAQ,GAC5B,EAAG,CAwBH,aAvBA,cACA,KACA,MACA,gBAAqB,QAAQ,IAC7B,eAAoB,QAAQ,IAC5B,eAAoB,QAAQ,GAC5B,EAAG,CAkBH,WACA,CACA,CACA,cACA,mBACA,mBACA,6HC7MA,MAAiD,OAAa,EAC9D,yBACA,SACA,CAAC,EACD,EAAiB,OAAU,SAC3B,IACA,cACA,OACA,UACA,WACA,YACA,aACA,cACA,KACA,CAAI,EACJ,OAAU,gDAAiD,CAAE,MAAa,IAC1E,EAAgB,aAAO,CACvB,MACA,OACA,OACA,WACA,cACA,QACA,UACA,aACA,aACA,EAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,MAAyB,SAAG,IAAuB,iBAAwC,SAAG,CAC1F,GAAM,KACV,CACA,UACA,UAAiB,QAAE,yBACnB,UACA,EACA,CAAK,CACL,CAAC,EACD,kGCrDA,eAAiC,EACjC,IACA,WACA,QACA,eACA,OACA,aACA,cACA,WACA,KACA,CAAI,EACJ,MAAiC,cAAQ,QACzC,aACA,QACA,EAAc,YAAM,OACpB,EAAgB,iBAAW,MAC3B,gBACA,MACA,OACA,qCACA,kBACA,GAEA,MACA,UACA,MACA,CACA,yBACA,wBACA,mBACA,CAAG,KACH,EAAe,WAAK,GACpB,WAAgC,EAAK,EACrC,OACA,EAAmB,iBAAW,CAC9B,IACA,MAtCA,GAAkB,QAAQ,CAsC1B,IAtCqC,QAAQ,WAsC7C,iBACA,GACA,KAEA,qBACA,CAAK,CACL,OA0BA,OACA,aAzBuB,iBAAW,CAClC,KAAgB,YAChB,KACA,IAAW,QAAS,MACpB,iBACA,EAAK,CACL,IAoBA,cAlBwB,iBAAW,CACnC,KAAgB,WAChB,8BACA,OACA,KACA,MACA,OACA,+BACA,YACA,IACA,CAAS,CACT,oBACA,CACA,CAAK,CACL,WAKA,OACA,MACA,QACA,WACA,QACA,WACA,aACA,cACA,WACA,CACA","sources":["webpack://_N_E/./ui/shared/Page/PageTitle.tsx","webpack://_N_E/./ui/shared/chakra/Menu.tsx","webpack://_N_E/./ui/shared/chart/ChartIntervalSelect.tsx","webpack://_N_E/./ui/shared/chart/utils/formatIntervalDate.ts","webpack://_N_E/./ui/shared/chart/useChartQuery.tsx","webpack://_N_E/./ui/shared/select/SelectButton.tsx","webpack://_N_E/./ui/shared/select/SelectOption.tsx","webpack://_N_E/./ui/shared/select/SelectContent.tsx","webpack://_N_E/./ui/shared/select/Select.tsx","webpack://_N_E/./ui/shared/tagGroupSelect/TagGroupSelect.tsx","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-5XCGGO7V.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-QUJ23J4G.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-ROBJ47HJ.mjs"],"sourcesContent":["import { Heading, Flex, Tooltip, Link, chakra, useDisclosure } from '@chakra-ui/react';\nimport { debounce } from 'es-toolkit';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ntype BackLinkProp = { label: string; url: string } | { label: string; onClick: () => void };\n\ntype Props = {\n  title: string;\n  className?: string;\n  backLink?: BackLinkProp;\n  beforeTitle?: React.ReactNode;\n  afterTitle?: React.ReactNode;\n  contentAfter?: React.ReactNode;\n  secondRow?: React.ReactNode;\n  isLoading?: boolean;\n  withTextAd?: boolean;\n};\n\nconst TEXT_MAX_LINES = 1;\n\nconst BackLink = (props: BackLinkProp & { isLoading?: boolean }) => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.isLoading) {\n    return (\n      <Skeleton\n        boxSize={ 6 }\n        display=\"inline-block\"\n        flexShrink={ 0 }\n        borderRadius=\"base\"\n        mr={ 3 }\n        my={ 2 }\n        verticalAlign=\"text-bottom\"\n        isLoaded={ !props.isLoading }\n      />\n    );\n  }\n\n  const icon = <IconSvg name=\"arrows/east\" boxSize={ 6 } transform=\"rotate(180deg)\" margin=\"auto\" color=\"gray.400\" flexShrink={ 0 }/>;\n\n  if ('url' in props) {\n    return (\n      <Tooltip label={ props.label }>\n        <LinkInternal display=\"inline-flex\" href={ props.url } h=\"40px\" mr={ 3 }>\n          { icon }\n        </LinkInternal>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ props.label }>\n      <Link display=\"inline-flex\" onClick={ props.onClick } h=\"40px\" mr={ 3 }>\n        { icon }\n      </Link>\n    </Tooltip>\n  );\n};\n\nconst PageTitle = ({ title, contentAfter, backLink, className, isLoading, afterTitle, beforeTitle, secondRow }: Props) => {\n  const tooltip = useDisclosure();\n  const isMobile = useIsMobile();\n  const [ isTextTruncated, setIsTextTruncated ] = React.useState(false);\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const updatedTruncateState = React.useCallback(() => {\n    if (!headingRef.current || !textRef.current) {\n      return;\n    }\n\n    const headingRect = headingRef.current.getBoundingClientRect();\n    const textRect = textRef.current.getBoundingClientRect();\n    if ((TEXT_MAX_LINES + 1) * headingRect.height <= textRect.height) {\n      setIsTextTruncated(true);\n    } else {\n      setIsTextTruncated(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      updatedTruncateState();\n    }\n  }, [ isLoading, updatedTruncateState ]);\n\n  React.useEffect(() => {\n    const handleResize = debounce(updatedTruncateState, 1000);\n    window.addEventListener('resize', handleResize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ updatedTruncateState ]);\n\n  return (\n    <Flex className={ className } flexDir=\"column\" rowGap={ 3 } mb={ 6 }>\n      <Flex\n        flexDir=\"row\"\n        flexWrap=\"wrap\"\n        rowGap={ 3 }\n        columnGap={ 3 }\n        alignItems=\"center\"\n      >\n        <Flex h={{ base: 'auto', lg: isLoading ? 10 : 'auto' }} maxW=\"100%\" alignItems=\"center\">\n          { backLink && <BackLink { ...backLink } isLoading={ isLoading }/> }\n          { beforeTitle }\n          <Skeleton\n            isLoaded={ !isLoading }\n            overflow=\"hidden\"\n          >\n            <Tooltip\n              label={ title }\n              isOpen={ tooltip.isOpen }\n              onClose={ tooltip.onClose }\n              maxW={{ base: 'calc(100vw - 32px)', lg: '500px' }}\n              closeOnScroll={ isMobile ? true : false }\n              isDisabled={ !isTextTruncated }\n            >\n              <Heading\n                ref={ headingRef }\n                as=\"h1\"\n                size=\"lg\"\n                whiteSpace=\"normal\"\n                wordBreak=\"break-all\"\n                style={{\n                  WebkitLineClamp: TEXT_MAX_LINES,\n                  WebkitBoxOrient: 'vertical',\n                  display: '-webkit-box',\n                }}\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                onMouseEnter={ tooltip.onOpen }\n                onMouseLeave={ tooltip.onClose }\n                onClick={ isMobile ? tooltip.onToggle : undefined }\n              >\n                <span ref={ textRef }>\n                  { title }\n                </span>\n              </Heading>\n            </Tooltip>\n          </Skeleton>\n          { afterTitle }\n        </Flex>\n        { contentAfter }\n      </Flex>\n      { secondRow && (\n        <Skeleton isLoaded={ !isLoading } alignItems=\"center\" minH={ 10 } overflow=\"hidden\" display=\"flex\" _empty={{ display: 'none' }}>\n          { secondRow }\n        </Skeleton>\n      ) }\n    </Flex>\n  );\n};\n\nexport default chakra(PageTitle);\n","import type { MenuProps } from '@chakra-ui/react';\n// eslint-disable-next-line no-restricted-imports\nimport { Menu as MenuBase } from '@chakra-ui/react';\nimport React from 'react';\n\nconst Menu = (props: MenuProps) => {\n  return <MenuBase gutter={ 4 } { ...props }/>;\n};\n\nexport default React.memo(Menu);\n","import type { TagProps } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { StatsInterval, StatsIntervalIds } from 'types/client/stats';\nimport type { SelectOption } from 'ui/shared/select/types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport Select from 'ui/shared/select/Select';\nimport TagGroupSelect from 'ui/shared/tagGroupSelect/TagGroupSelect';\nimport { STATS_INTERVALS } from 'ui/stats/constants';\n\nconst intervalList = Object.keys(STATS_INTERVALS).map((id: string) => ({\n  value: id,\n  label: STATS_INTERVALS[id as StatsIntervalIds].title,\n})) as Array<SelectOption>;\n\nconst intervalListShort = Object.keys(STATS_INTERVALS).map((id: string) => ({\n  id: id,\n  title: STATS_INTERVALS[id as StatsIntervalIds].shortTitle,\n})) as Array<StatsInterval>;\n\ntype Props = {\n  interval: StatsIntervalIds;\n  onIntervalChange: (newInterval: StatsIntervalIds) => void;\n  isLoading?: boolean;\n  selectTagSize?: TagProps['size'];\n};\n\nconst ChartIntervalSelect = ({ interval, onIntervalChange, isLoading, selectTagSize }: Props) => {\n  return (\n    <>\n      <Skeleton display={{ base: 'none', lg: 'flex' }} borderRadius=\"base\" isLoaded={ !isLoading }>\n        <TagGroupSelect<StatsIntervalIds> items={ intervalListShort } onChange={ onIntervalChange } value={ interval } tagSize={ selectTagSize }/>\n      </Skeleton>\n      <Select\n        options={ intervalList }\n        defaultValue={ interval }\n        onChange={ onIntervalChange }\n        isLoading={ isLoading }\n        w={{ base: '100%', lg: '136px' }}\n        display={{ base: 'flex', lg: 'none' }}\n        flexShrink={ 0 }\n        fontWeight={ 600 }\n      />\n    </>\n  );\n};\n\nexport default React.memo(ChartIntervalSelect);\n","export default function formatDate(date: Date) {\n  return date.toISOString().substring(0, 10);\n}\n","import React from 'react';\n\nimport type { LineChart, Resolution } from '@blockscout/stats-types';\nimport type { StatsIntervalIds } from 'types/client/stats';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport { STATS_INTERVALS } from 'ui/stats/constants';\n\nimport formatDate from './utils/formatIntervalDate';\n\nexport default function useChartQuery(id: string, resolution: Resolution, interval: StatsIntervalIds, enabled = true) {\n  const { apiData } = useAppContext<'/stats/[id]'>();\n\n  const selectedInterval = STATS_INTERVALS[interval];\n\n  const endDate = selectedInterval.start ? formatDate(new Date()) : undefined;\n  const startDate = selectedInterval.start ? formatDate(selectedInterval.start) : undefined;\n\n  const [ info, setInfo ] = React.useState<LineChart['info']>(apiData || undefined);\n\n  const lineQuery = useApiQuery('stats_line', {\n    pathParams: { id },\n    queryParams: {\n      from: startDate,\n      to: endDate,\n      resolution,\n    },\n    queryOptions: {\n      enabled: enabled,\n      refetchOnMount: false,\n      placeholderData: {\n        info: {\n          title: 'Chart title placeholder',\n          description: 'Chart placeholder description chart placeholder description',\n          resolutions: [ 'DAY', 'WEEK', 'MONTH', 'YEAR' ],\n          id: 'placeholder',\n          units: undefined,\n        },\n        chart: [],\n      },\n    },\n  });\n\n  React.useEffect(() => {\n    if (!info && lineQuery.data?.info && !lineQuery.isPlaceholderData) {\n      // save info to keep title and description when change query params\n      setInfo(lineQuery.data?.info);\n    }\n  }, [ info, lineQuery.data?.info, lineQuery.isPlaceholderData ]);\n\n  const items = React.useMemo(() => lineQuery.data?.chart?.map((item) => {\n    return { date: new Date(item.date), date_to: new Date(item.date_to), value: Number(item.value), isApproximate: item.is_approximate };\n  }), [ lineQuery ]);\n\n  return {\n    items,\n    info,\n    lineQuery,\n  };\n}\n","import { Box, Button } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: () => void;\n  isOpen: boolean;\n  isLoading?: boolean;\n  label: string;\n}\n\nconst SelectButton = ({ className, onClick, isOpen, isLoading, label }: Props, ref: React.Ref<HTMLButtonElement>) => {\n\n  if (isLoading) {\n    return <Skeleton className={ className } h={ 8 } borderRadius=\"base\" flexShrink={ 0 }/>;\n  }\n\n  return (\n    <Button\n      ref={ ref }\n      className={ className }\n      variant=\"outline\"\n      size=\"sm\"\n      colorScheme=\"gray\"\n      fontWeight=\"500\"\n      lineHeight={ 5 }\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      columnGap={ 1 }\n      onClick={ onClick }\n      isActive={ isOpen }\n      pl={ 2 }\n      pr={ 1 }\n      py={ 1 }\n      flexShrink={ 0 }\n    >\n      <Box maxW=\"calc(100% - 20px)\" overflow=\"hidden\" textOverflow=\"ellipsis\">{ label }</Box>\n      <IconSvg name=\"arrows/east-mini\" boxSize={ 5 } transform={ isOpen ? 'rotate(90deg)' : 'rotate(-90deg)' } flexShrink={ 0 }/>\n    </Button>\n  );\n};\n\nexport default React.forwardRef(SelectButton);\n","import type { UseRadioProps } from '@chakra-ui/react';\nimport { Box, useRadio, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from '../IconSvg';\n\ninterface Props extends UseRadioProps {\n  children: React.ReactNode;\n}\n\nconst SelectOption = (props: Props) => {\n  const { getInputProps, getRadioProps } = useRadio(props);\n\n  const input = getInputProps();\n  const checkbox = getRadioProps();\n  const bgColorHover = useColorModeValue('blue.50', 'whiteAlpha.100');\n\n  return (\n    <Box\n      as=\"label\"\n      px={ 4 }\n      py={ 2 }\n      cursor=\"pointer\"\n      display=\"flex\"\n      columnGap={ 2 }\n      alignItems=\"center\"\n      _hover={{\n        bgColor: bgColorHover,\n      }}\n    >\n      { props.isChecked ? <IconSvg name=\"check\" boxSize={ 5 }/> : <Box boxSize={ 5 }/> }\n      <input { ...input }/>\n      <Box { ...checkbox }>\n        { props.children }\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(SelectOption);\n","import type { useRadioGroup } from '@chakra-ui/react';\nimport { PopoverBody, PopoverContent } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { SelectOption as TSelectOption } from './types';\n\nimport SelectOption from './SelectOption';\n\ninterface Props {\n  options: Array<TSelectOption>;\n  getRootProps: ReturnType<typeof useRadioGroup>['getRootProps'];\n  getRadioProps: ReturnType<typeof useRadioGroup>['getRadioProps'];\n  value: string | number;\n}\n\nconst SelectContent = ({ options, getRootProps, getRadioProps, value }: Props) => {\n\n  const root = getRootProps();\n\n  return (\n    <PopoverContent w=\"fit-content\" minW=\"150px\">\n      <PopoverBody { ...root } py={ 2 } px={ 0 } display=\"flex\" flexDir=\"column\">\n        { options.map((option) => {\n          const radio = getRadioProps({ value: option.value });\n          return (\n            <SelectOption key={ option.value } { ...radio } isChecked={ radio.isChecked || (!option.value && !value) }>\n              { option.label }\n            </SelectOption>\n          );\n        }) }\n      </PopoverBody>\n    </PopoverContent>\n  );\n};\n\nexport default React.memo(SelectContent);\n","import { PopoverTrigger, chakra, useDisclosure, useRadioGroup } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { SelectOption } from './types';\n\nimport Popover from 'ui/shared/chakra/Popover';\n\nimport SelectButton from './SelectButton';\nimport SelectContent from './SelectContent';\n\ninterface InjectedProps<Value extends string> {\n  isOpen: boolean;\n  onToggle: () => void;\n  value: Value;\n}\n\nexport interface Props<Value extends string> {\n  className?: string;\n  isLoading?: boolean;\n  options: Array<SelectOption<Value>>;\n  name: string;\n  defaultValue?: Value;\n  onChange: (value: Value) => void;\n  children?: (props: InjectedProps<Value>) => React.ReactNode;\n}\n\nconst Select = <Value extends string>({ className, isLoading, options, name, defaultValue, onChange, children }: Props<Value>) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const handleChange = React.useCallback((value: Value) => {\n    onChange(value);\n    onClose();\n  }, [ onChange, onClose ]);\n\n  const { value, getRootProps, getRadioProps, setValue } = useRadioGroup({\n    name,\n    defaultValue,\n    onChange: handleChange,\n  });\n\n  React.useEffect(() => {\n    if (defaultValue) {\n      setValue(defaultValue);\n    }\n  }, [ defaultValue, setValue ]);\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        { children?.({ isOpen, onToggle, value: value as Value }) || (\n          <SelectButton\n            className={ className }\n            onClick={ onToggle }\n            isOpen={ isOpen }\n            isLoading={ isLoading }\n            label={ options.find((option) => option.value === value)?.label || String(value) }\n          />\n        ) }\n      </PopoverTrigger>\n      <SelectContent options={ options } getRootProps={ getRootProps } getRadioProps={ getRadioProps } value={ value }/>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(Select));\n","import type { TagProps } from '@chakra-ui/react';\nimport { HStack, Tag } from '@chakra-ui/react';\nimport React from 'react';\n\ntype Props<T extends string> = {\n  items: Array<{ id: T; title: string }>;\n  tagSize?: TagProps['size'];\n} & (\n  {\n    value?: T;\n    onChange: (value: T) => void;\n    isMulti?: false;\n  } | {\n    value: Array<T>;\n    onChange: (value: Array<T>) => void;\n    isMulti: true;\n  }\n);\n\nconst TagGroupSelect = <T extends string>({ items, value, isMulti, onChange, tagSize }: Props<T>) => {\n  const onItemClick = React.useCallback((event: React.SyntheticEvent) => {\n    const itemValue = (event.currentTarget as HTMLDivElement).getAttribute('data-id') as T;\n    if (isMulti) {\n      let newValue;\n      if (value.includes(itemValue)) {\n        newValue = value.filter(i => i !== itemValue);\n      } else {\n        newValue = [ ...value, itemValue ];\n      }\n      onChange(newValue);\n    } else {\n      onChange(itemValue);\n    }\n  }, [ isMulti, onChange, value ]);\n\n  return (\n    <HStack>\n      { items.map(item => {\n        const isSelected = isMulti ? value.includes(item.id) : value === item.id;\n        return (\n          <Tag\n            variant=\"select\"\n            key={ item.id }\n            data-id={ item.id }\n            data-selected={ isSelected }\n            fontWeight={ 500 }\n            onClick={ onItemClick }\n            size={ tagSize }\n            display=\"inline-flex\"\n            justifyContent=\"center\"\n          >\n            { item.title }\n          </Tag>\n        );\n      }) }\n    </HStack>\n  );\n};\n\nexport default TagGroupSelect;\n","import {\n  useRadioGroupContext\n} from \"./chunk-QUJ23J4G.mjs\";\n\n// src/use-radio.ts\nimport { useFormControlContext } from \"@chakra-ui/form-control\";\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../visually-hidden/src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/use-radio.ts\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useState, useId } from \"react\";\nfunction useRadio(props = {}) {\n  const {\n    defaultChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled: isDisabledProp,\n    isReadOnly: isReadOnlyProp,\n    isRequired: isRequiredProp,\n    onChange,\n    isInvalid: isInvalidProp,\n    name,\n    value,\n    id: idProp,\n    \"data-radiogroup\": dataRadioGroup,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props;\n  const uuid = `radio-${useId()}`;\n  const formControl = useFormControlContext();\n  const group = useRadioGroupContext();\n  const isWithinRadioGroup = !!group || !!dataRadioGroup;\n  const isWithinFormControl = !!formControl;\n  let id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;\n  id = idProp != null ? idProp : id;\n  const isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;\n  const isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;\n  const isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;\n  const isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovering] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isCheckedState, setChecked] = useState(Boolean(defaultChecked));\n  const isControlled = typeof isCheckedProp !== \"undefined\";\n  const isChecked = isControlled ? isCheckedProp : isCheckedState;\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        setChecked(event.target.checked);\n      }\n      onChange == null ? void 0 : onChange(event);\n    },\n    [isControlled, isDisabled, isReadOnly, onChange]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, () => setActive(true)),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(\n        props2.onMouseEnter,\n        () => setHovering(true)\n      ),\n      onMouseLeave: callAllHandlers(\n        props2.onMouseLeave,\n        () => setHovering(false)\n      )\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      isFocusVisible\n    ]\n  );\n  const { onFocus, onBlur } = formControl != null ? formControl : {};\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const trulyDisabled = isDisabled && !isFocusable;\n      return {\n        ...props2,\n        id,\n        ref,\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          onBlur,\n          props2.onBlur,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          onFocus,\n          props2.onFocus,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        required: isRequired,\n        \"aria-invalid\": ariaAttr(isInvalid),\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        \"aria-required\": ariaAttr(isRequired),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-describedby\": ariaDescribedBy,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      isDisabled,\n      isFocusable,\n      id,\n      name,\n      value,\n      handleChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n      isReadOnly,\n      isRequired,\n      isInvalid,\n      ariaDescribedBy\n    ]\n  );\n  const getLabelProps = (props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const getRootProps = (props2, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getCheckboxProps: getRadioProps,\n    getRadioProps,\n    getInputProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport {\n  useRadio\n};\n","import {\n  useRadioGroup\n} from \"./chunk-ROBJ47HJ.mjs\";\n\n// src/radio-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nvar RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const { value, onChange, getRootProps, name, htmlProps } = useRadioGroup(rest);\n  const group = useMemo(\n    () => ({\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    }),\n    [\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    ]\n  );\n  return /* @__PURE__ */ jsx(RadioGroupProvider, { value: group, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    }\n  ) });\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nexport {\n  useRadioGroupContext,\n  RadioGroup\n};\n","// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport {\n  useRadioGroup\n};\n"],"names":["BackLink","props","isLoading","Skeleton","boxSize","display","flexShrink","borderRadius","mr","my","verticalAlign","isLoaded","icon","IconSvg","name","transform","margin","color","Tooltip","label","LinkInternal","href","url","h","Link","onClick","chakra","PageTitle","title","contentAfter","backLink","className","afterTitle","beforeTitle","secondRow","tooltip","useDisclosure","isMobile","useIsMobile","isTextTruncated","setIsTextTruncated","React","headingRef","textRef","updatedTruncateState","current","headingRect","getBoundingClientRect","textRect","TEXT_MAX_LINES","height","handleResize","debounce","window","addEventListener","cleanup","removeEventListener","Flex","flexDir","rowGap","mb","flexWrap","columnGap","alignItems","base","lg","maxW","overflow","isOpen","onClose","closeOnScroll","isDisabled","Heading","ref","as","size","whiteSpace","wordBreak","style","WebkitLineClamp","WebkitBoxOrient","textOverflow","onMouseEnter","onOpen","onMouseLeave","onToggle","undefined","span","minH","_empty","Menu","MenuBase","gutter","intervalList","Object","keys","STATS_INTERVALS","map","id","intervalListShort","shortTitle","interval","ChartIntervalSelect","onIntervalChange","selectTagSize","TagGroupSelect","items","onChange","value","tagSize","Select","options","defaultValue","w","fontWeight","formatDate","date","toISOString","substring","useChartQuery","resolution","lineQuery","enabled","apiData","useAppContext","selectedInterval","endDate","start","Date","startDate","info","setInfo","useApiQuery","pathParams","queryParams","from","to","queryOptions","refetchOnMount","placeholderData","description","resolutions","units","chart","data","isPlaceholderData","item","date_to","Number","isApproximate","is_approximate","SelectButton","Button","variant","colorScheme","lineHeight","justifyContent","isActive","pl","pr","py","Box","SelectOption","getInputProps","getRadioProps","useRadio","input","checkbox","bgColorHover","useColorModeValue","px","cursor","_hover","bgColor","isChecked","children","SelectContent","getRootProps","root","PopoverContent","minW","PopoverBody","radio","option","handleChange","setValue","useRadioGroup","Popover","placement","isLazy","PopoverTrigger","find","String","isMulti","onItemClick","itemValue","currentTarget","getAttribute","includes","newValue","filter","i","HStack","isSelected","Tag","data-id","data-selected"],"sourceRoot":"","ignoreList":[10,11,12]}