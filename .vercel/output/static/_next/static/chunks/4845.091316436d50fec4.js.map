{"version":3,"file":"static/chunks/4845.091316436d50fec4.js","mappings":"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","sources":["webpack://_N_E/./types/client/stats.ts","webpack://_N_E/./ui/pages/Chart.tsx","webpack://_N_E/./ui/shared/AppError/isCustomAppError.ts"],"sourcesContent":["export type StatsInterval = { id: StatsIntervalIds; title: string };\nexport type StatsIntervalIds = keyof typeof StatsIntervalId;\nexport enum StatsIntervalId {\n  all,\n  oneMonth,\n  threeMonths,\n  sixMonths,\n  oneYear,\n}\n","import { Button, Flex, Link, Text } from '@chakra-ui/react';\nimport type { NextRouter } from 'next/router';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport { Resolution } from '@blockscout/stats-types';\nimport type { StatsIntervalIds } from 'types/client/stats';\nimport { StatsIntervalId } from 'types/client/stats';\n\nimport config from 'configs/app';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport isBrowser from 'lib/isBrowser';\nimport * as metadata from 'lib/metadata';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport ChartIntervalSelect from 'ui/shared/chart/ChartIntervalSelect';\nimport ChartMenu from 'ui/shared/chart/ChartMenu';\nimport ChartWidgetContent from 'ui/shared/chart/ChartWidgetContent';\nimport useChartQuery from 'ui/shared/chart/useChartQuery';\nimport useZoom from 'ui/shared/chart/useZoom';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport IconSvg from 'ui/shared/IconSvg';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Select from 'ui/shared/select/Select';\nimport { STATS_RESOLUTIONS } from 'ui/stats/constants';\n\nconst DEFAULT_RESOLUTION = Resolution.DAY;\n\nconst getIntervalByResolution = (resolution: Resolution): StatsIntervalIds => {\n  switch (resolution) {\n    case 'DAY':\n      return 'oneMonth';\n    case 'WEEK':\n      return 'oneMonth';\n    case 'MONTH':\n      return 'oneYear';\n    case 'YEAR':\n      return 'all';\n    default:\n      return 'oneMonth';\n  }\n};\n\nconst getIntervalFromQuery = (router: NextRouter): StatsIntervalIds | undefined => {\n  const intervalFromQuery = getQueryParamString(router.query.interval);\n\n  if (!intervalFromQuery || !Object.values(StatsIntervalId).includes(intervalFromQuery as StatsIntervalIds)) {\n    return undefined;\n  }\n\n  return intervalFromQuery as StatsIntervalIds;\n};\n\nconst getResolutionFromQuery = (router: NextRouter) => {\n  const resolutionFromQuery = getQueryParamString(router.query.resolution);\n\n  if (!resolutionFromQuery || !Resolution[resolutionFromQuery as keyof typeof Resolution]) {\n    return DEFAULT_RESOLUTION;\n  }\n\n  return resolutionFromQuery as Resolution;\n};\n\nconst Chart = () => {\n  const router = useRouter();\n  const id = getQueryParamString(router.query.id);\n  const intervalFromQuery = getIntervalFromQuery(router);\n  const resolutionFromQuery = getResolutionFromQuery(router);\n  const defaultResolution = resolutionFromQuery || DEFAULT_RESOLUTION;\n  const [ intervalState, setIntervalState ] = React.useState<StatsIntervalIds | undefined>(intervalFromQuery);\n  const [ resolution, setResolution ] = React.useState<Resolution>(defaultResolution);\n  const { zoomRange, handleZoom, handleZoomReset } = useZoom();\n\n  const interval = intervalState || getIntervalByResolution(resolution);\n\n  const ref = React.useRef(null);\n\n  const isMobile = useIsMobile();\n  const isInBrowser = isBrowser();\n\n  const appProps = useAppContext();\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/stats');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to charts list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  const onIntervalChange = React.useCallback((interval: StatsIntervalIds) => {\n    setIntervalState(interval);\n    router.push(\n      {\n        pathname: router.pathname,\n        query: { ...router.query, interval },\n      },\n      undefined,\n      { shallow: true },\n    );\n  }, [ setIntervalState, router ]);\n\n  const onResolutionChange = React.useCallback((resolution: Resolution) => {\n    setResolution(resolution);\n    router.push({\n      pathname: router.pathname,\n      query: { ...router.query, resolution },\n    },\n    undefined,\n    { shallow: true },\n    );\n  }, [ setResolution, router ]);\n\n  const handleReset = React.useCallback(() => {\n    handleZoomReset();\n    onResolutionChange(DEFAULT_RESOLUTION);\n  }, [ handleZoomReset, onResolutionChange ]);\n\n  const { items, info, lineQuery } = useChartQuery(id, resolution, interval);\n\n  React.useEffect(() => {\n    if (info && !config.meta.seo.enhancedDataEnabled) {\n      metadata.update({ pathname: '/stats/[id]', query: { id } }, info);\n    }\n  }, [ info, id ]);\n\n  const onShare = React.useCallback(async() => {\n    mixpanel.logEvent(mixpanel.EventTypes.PAGE_WIDGET, { Type: 'Share chart', Info: id });\n    try {\n      await window.navigator.share({\n        title: info?.title,\n        text: info?.description,\n        url: window.location.href,\n      });\n    } catch (error) {}\n  }, [ info, id ]);\n\n  if (lineQuery.isError) {\n    if (isCustomAppError(lineQuery.error)) {\n      throwOnResourceLoadError({ resource: 'stats_line', error: lineQuery.error, isError: true });\n    }\n  }\n\n  const hasItems = (items && items.length > 2) || lineQuery.isPending;\n\n  const isInfoLoading = !info && lineQuery.isPlaceholderData;\n\n  const shareButton = (\n    <Button\n      leftIcon={ <IconSvg name=\"share\" w={ 4 } h={ 4 }/> }\n      colorScheme=\"blue\"\n      size=\"sm\"\n      variant=\"outline\"\n      onClick={ onShare }\n      ml={ 6 }\n    >\n      Share\n    </Button>\n  );\n\n  const resolutionOptions = React.useMemo(() => {\n    const resolutions = lineQuery.data?.info?.resolutions || [];\n    return STATS_RESOLUTIONS\n      .filter((resolution) => resolutions.includes(resolution.id))\n      .map((resolution) => ({ value: resolution.id, label: resolution.title }));\n  }, [ lineQuery.data?.info?.resolutions ]);\n\n  return (\n    <>\n      <PageTitle\n        title={ info?.title || lineQuery.data?.info?.title || '' }\n        mb={ 3 }\n        isLoading={ isInfoLoading }\n        backLink={ backLink }\n        secondRow={ info?.description || lineQuery.data?.info?.description }\n        withTextAd\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex alignItems=\"center\" gap={{ base: 3, lg: 6 }} maxW=\"100%\">\n          <Flex alignItems=\"center\" gap={ 3 }>\n            { !isMobile && <Text>Period</Text> }\n            <ChartIntervalSelect interval={ interval } onIntervalChange={ onIntervalChange }/>\n          </Flex>\n          { (\n            (info?.resolutions && info?.resolutions.length > 1) ||\n            (!info && lineQuery.data?.info?.resolutions && lineQuery.data?.info?.resolutions.length > 1)\n          ) && (\n            <Flex alignItems=\"center\" gap={ 3 }>\n              <Skeleton isLoaded={ !isInfoLoading }>\n                { isMobile ? 'Res.' : 'Resolution' }\n              </Skeleton>\n              <Select\n                options={ resolutionOptions }\n                defaultValue={ defaultResolution }\n                onChange={ onResolutionChange }\n                isLoading={ isInfoLoading }\n                w={{ base: 'fit-content', lg: '160px' }}\n                fontWeight={ 600 }\n              />\n            </Flex>\n          ) }\n          { (Boolean(zoomRange)) && (\n            <Link\n              onClick={ handleReset }\n              display=\"flex\"\n              alignItems=\"center\"\n              gap={ 2 }\n            >\n              <IconSvg name=\"repeat\" w={ 5 } h={ 5 }/>\n              { !isMobile && 'Reset' }\n            </Link>\n          ) }\n        </Flex>\n        <Flex alignItems=\"center\" gap={ 3 }>\n          { /* TS thinks window.navigator.share can't be undefined, but it can */ }\n          { /* eslint-disable-next-line @typescript-eslint/no-explicit-any */ }\n          { !isMobile && (isInBrowser && ((window.navigator.share as any) ?\n            shareButton :\n            (\n              <CopyToClipboard\n                text={ config.app.baseUrl + router.asPath }\n                size={ 5 }\n                type=\"link\"\n                variant=\"outline\"\n                colorScheme=\"blue\"\n                display=\"flex\"\n                borderRadius=\"8px\"\n                width={ 8 }\n                height={ 8 }\n              />\n            )\n          )) }\n          { (hasItems || lineQuery.isPlaceholderData) && (\n            <ChartMenu\n              items={ items }\n              title={ info?.title || '' }\n              isLoading={ lineQuery.isPlaceholderData }\n              chartRef={ ref }\n              resolution={ resolution }\n              zoomRange={ zoomRange }\n              handleZoom={ handleZoom }\n              handleZoomReset={ handleZoomReset }\n              chartUrl={ isMobile ? window.location.href : undefined }\n            />\n          ) }\n        </Flex>\n      </Flex>\n      <Flex\n        ref={ ref }\n        flexGrow={ 1 }\n        h=\"50vh\"\n        mt={ 3 }\n        position=\"relative\"\n      >\n        <ChartWidgetContent\n          isError={ lineQuery.isError }\n          items={ items }\n          title={ info?.title || '' }\n          units={ info?.units || undefined }\n          isEnlarged\n          isLoading={ lineQuery.isPlaceholderData }\n          zoomRange={ zoomRange }\n          handleZoom={ handleZoom }\n          emptyText=\"No data for the selected resolution & interval.\"\n          resolution={ resolution }\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default Chart;\n","import type { ResourceError } from 'lib/api/resources';\n\n// status codes when custom error screen should be shown\nconst CUSTOM_STATUS_CODES = [ 403, 404, 422, 429 ];\n\nexport default function isCustomAppError(error: ResourceError<unknown>) {\n  return CUSTOM_STATUS_CODES.includes(error.status);\n}\n"],"names":["StatsIntervalId","DEFAULT_RESOLUTION","Resolution","DAY","getIntervalByResolution","resolution","getIntervalFromQuery","intervalFromQuery","getQueryParamString","router","query","interval","Object","values","includes","getResolutionFromQuery","resolutionFromQuery","lineQuery","Chart","useRouter","id","defaultResolution","intervalState","setIntervalState","React","setResolution","zoomRange","handleZoom","handleZoomReset","useZoom","ref","isMobile","useIsMobile","isInBrowser","isBrowser","appProps","useAppContext","backLink","hasGoBackLink","referrer","label","url","onIntervalChange","push","pathname","undefined","shallow","onResolutionChange","handleReset","items","info","useChartQuery","config","meta","seo","enhancedDataEnabled","metadata","onShare","mixpanel","PAGE_WIDGET","Type","Info","window","navigator","share","title","text","description","location","href","error","isError","isCustomAppError","throwOnResourceLoadError","resource","hasItems","length","isPending","isInfoLoading","isPlaceholderData","shareButton","Button","leftIcon","IconSvg","name","w","h","colorScheme","size","variant","onClick","ml","resolutionOptions","resolutions","data","STATS_RESOLUTIONS","filter","map","value","PageTitle","mb","isLoading","secondRow","withTextAd","Flex","alignItems","justifyContent","gap","base","lg","maxW","Text","ChartIntervalSelect","Skeleton","isLoaded","Select","options","defaultValue","onChange","fontWeight","Boolean","Link","display","CopyToClipboard","app","baseUrl","asPath","type","borderRadius","width","height","ChartMenu","chartRef","chartUrl","flexGrow","mt","position","ChartWidgetContent","units","isEnlarged","emptyText","CUSTOM_STATUS_CODES","status"],"sourceRoot":"","ignoreList":[]}