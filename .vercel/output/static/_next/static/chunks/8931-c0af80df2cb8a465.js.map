{"version":3,"file":"static/chunks/8931-c0af80df2cb8a465.js","mappings":"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","sources":["webpack://_N_E/./lib/address/parseMetaPayload.ts","webpack://_N_E/./lib/address/useAddressMetadataInfoQuery.ts","webpack://_N_E/./lib/token/tokenTypes.ts","webpack://_N_E/./stubs/token.ts","webpack://_N_E/./ui/shared/AccountActionsMenu/parts/ButtonItem.tsx","webpack://_N_E/./ui/shared/AccountActionsMenu/parts/MenuItem.tsx","webpack://_N_E/./ui/shared/AccountActionsMenu/items/MetadataUpdateMenuItem.tsx","webpack://_N_E/./ui/shared/AccountActionsMenu/items/PrivateTagMenuItem.tsx","webpack://_N_E/./ui/shared/AccountActionsMenu/items/PublicTagMenuItem.tsx","webpack://_N_E/./ui/shared/AccountActionsMenu/items/TokenInfoMenuItem.tsx","webpack://_N_E/./ui/shared/AccountActionsMenu/AccountActionsMenu.tsx","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/RawDataSnippet.tsx","webpack://_N_E/./ui/shared/chakra/Menu.tsx","webpack://_N_E/./ui/shared/entities/nft/NftEntity.tsx","webpack://_N_E/./ui/snippets/auth/AuthGuard.tsx","webpack://_N_E/./ui/tokenInstance/contexts/metadataUpdate.tsx"],"sourcesContent":["import type { AddressMetadataTag } from 'types/api/addressMetadata';\nimport type { AddressMetadataTagFormatted } from 'types/client/addressMetadata';\n\ntype MetaParsed = NonNullable<AddressMetadataTagFormatted['meta']>;\n\nexport default function parseMetaPayload(meta: AddressMetadataTag['meta']): AddressMetadataTagFormatted['meta'] {\n  try {\n    const parsedMeta = JSON.parse(meta || '');\n\n    if (typeof parsedMeta !== 'object' || parsedMeta === null || Array.isArray(parsedMeta)) {\n      throw new Error('Invalid JSON');\n    }\n\n    const result: AddressMetadataTagFormatted['meta'] = {};\n\n    const stringFields: Array<keyof MetaParsed> = [\n      'textColor',\n      'bgColor',\n      'tagIcon',\n      'tagUrl',\n      'tooltipIcon',\n      'tooltipTitle',\n      'tooltipDescription',\n      'tooltipUrl',\n      'appID',\n      'appMarketplaceURL',\n      'appLogoURL',\n      'appActionButtonText',\n      'warpcastHandle',\n      'data',\n      'alertBgColor',\n      'alertTextColor',\n      'alertStatus',\n    ];\n\n    for (const stringField of stringFields) {\n      if (stringField in parsedMeta && typeof parsedMeta[stringField as keyof typeof parsedMeta] === 'string') {\n        result[stringField] = parsedMeta[stringField as keyof typeof parsedMeta];\n      }\n    }\n\n    return result;\n  } catch (error) {\n    return null;\n  }\n}\n","import type { AddressMetadataInfoFormatted, AddressMetadataTagFormatted } from 'types/client/addressMetadata';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\n\nimport parseMetaPayload from './parseMetaPayload';\n\nexport default function useAddressMetadataInfoQuery(addresses: Array<string>, isEnabled = true) {\n\n  const resource = 'address_metadata_info';\n\n  return useApiQuery<typeof resource, unknown, AddressMetadataInfoFormatted>(resource, {\n    queryParams: {\n      addresses,\n      chainId: config.chain.id,\n      tagsLimit: '20',\n    },\n    queryOptions: {\n      enabled: isEnabled && addresses.length > 0 && config.features.addressMetadata.isEnabled,\n      select: (data) => {\n        const addresses = Object.entries(data.addresses)\n          .map(([ address, { tags, reputation } ]) => {\n            const formattedTags: Array<AddressMetadataTagFormatted> = tags.map((tag) => ({ ...tag, meta: parseMetaPayload(tag.meta) }));\n            return [ address.toLowerCase(), { tags: formattedTags, reputation } ] as const;\n          })\n          .reduce((result, item) => {\n            result[item[0]] = item[1];\n            return result;\n          }, {} as AddressMetadataInfoFormatted['addresses']);\n\n        return { addresses };\n      },\n    },\n  });\n}\n","import type { NFTTokenType, TokenType } from 'types/api/token';\n\nimport config from 'configs/app';\n\nconst tokenStandardName = config.chain.tokenStandard;\n\nexport const NFT_TOKEN_TYPES: Record<NFTTokenType, string > = {\n  'ERC-721': `${ tokenStandardName }-721`,\n  'ERC-1155': `${ tokenStandardName }-1155`,\n  'ERC-404': `${ tokenStandardName }-404`,\n};\n\nexport const TOKEN_TYPES: Record<TokenType, string > = {\n  'ERC-20': `${ tokenStandardName }-20`,\n  ...NFT_TOKEN_TYPES,\n};\n\nexport const NFT_TOKEN_TYPE_IDS: Array<NFTTokenType> = [ 'ERC-721', 'ERC-1155', 'ERC-404' ];\nexport const TOKEN_TYPE_IDS: Array<TokenType> = [ 'ERC-20', ...NFT_TOKEN_TYPE_IDS ];\n\nexport function getTokenTypeName(typeId: TokenType) {\n  return TOKEN_TYPES[typeId];\n}\n","import type {\n  TokenCounters,\n  TokenHolder,\n  TokenHolders,\n  TokenHoldersPagination,\n  TokenInfo,\n  TokenInstance,\n  TokenType,\n} from 'types/api/token';\nimport type { TokenInstanceTransferPagination, TokenInstanceTransferResponse } from 'types/api/tokens';\nimport type { TokenTransfer, TokenTransferPagination, TokenTransferResponse } from 'types/api/tokenTransfer';\n\nimport { ADDRESS_PARAMS, ADDRESS_HASH } from './addressParams';\nimport { TX_HASH } from './tx';\nimport { generateListStub } from './utils';\n\nexport const BLOCK_HASH = '0x8fa7b9e5e5e79deeb62d608db22ba9a5cb45388c7ebb9223ae77331c6080dc70';\n\nexport const TOKEN_INFO_ERC_20: TokenInfo<'ERC-20'> = {\n  address: ADDRESS_HASH,\n  circulating_market_cap: '117629601.61913824',\n  decimals: '18',\n  exchange_rate: '0.999997',\n  holders: '16026',\n  name: 'Stub Token (goerli)',\n  symbol: 'STUB',\n  total_supply: '60000000000000000000000',\n  type: 'ERC-20',\n  icon_url: null,\n};\n\nexport const TOKEN_INFO_ERC_721: TokenInfo<'ERC-721'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-721',\n};\n\nexport const TOKEN_INFO_ERC_1155: TokenInfo<'ERC-1155'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-1155',\n};\n\nexport const TOKEN_INFO_ERC_404: TokenInfo<'ERC-404'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-404',\n};\n\nexport const TOKEN_COUNTERS: TokenCounters = {\n  token_holders_count: '123456',\n  transfers_count: '123456',\n};\n\nexport const TOKEN_HOLDER_ERC_20: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  value: '1021378038331138520',\n};\n\nexport const TOKEN_HOLDER_ERC_1155: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  token_id: '12345',\n  value: '1021378038331138520',\n};\n\nexport const getTokenHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_TRANSFER_ERC_20: TokenTransfer = {\n  block_hash: BLOCK_HASH,\n  block_number: '123456',\n  from: ADDRESS_PARAMS,\n  log_index: '4',\n  method: 'addLiquidity',\n  timestamp: '2022-06-24T10:22:11.000000Z',\n  to: ADDRESS_PARAMS,\n  token: TOKEN_INFO_ERC_20,\n  total: {\n    decimals: '18',\n    value: '9851351626684503',\n  },\n  transaction_hash: TX_HASH,\n  type: 'token_minting',\n};\n\nexport const TOKEN_TRANSFER_ERC_721: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n  },\n  token: TOKEN_INFO_ERC_721,\n};\n\nexport const TOKEN_TRANSFER_ERC_1155: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_1155,\n};\n\nexport const TOKEN_TRANSFER_ERC_404: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_404,\n};\n\nexport const getTokenTransfersStub = (type?: TokenType, pagination: TokenTransferPagination | null = null): TokenTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_721, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_404, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceTransfersStub = (type?: TokenType, pagination: TokenInstanceTransferPagination | null = null): TokenInstanceTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_721, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_404, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_INSTANCE: TokenInstance = {\n  animation_url: null,\n  external_app_url: 'https://vipsland.com/nft/collections/genesis/188882',\n  id: '188882',\n  image_url: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n  is_unique: true,\n  metadata: {\n    attributes: Array(3).fill({ trait_type: 'skin tone', value: 'very light skin tone' }),\n    description: '**GENESIS #188882**, **8a77ca1bcaa4036f** :: *844th* generation of *#57806 and #57809* :: **eGenetic Hash Code (eDNA)** = *2822355e953a462d*',\n    external_url: 'https://vipsland.com/nft/collections/genesis/188882',\n    image: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n    name: 'GENESIS #188882, 8a77ca1bcaa4036f',\n  },\n  owner: ADDRESS_PARAMS,\n  holder_address_hash: ADDRESS_HASH,\n  thumbnails: null,\n};\n","import { IconButton, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { IconName } from 'ui/shared/IconSvg';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: () => void;\n  label: string;\n  icon: IconName | React.ReactElement;\n  isDisabled?: boolean;\n}\n\nconst ButtonItem = ({ className, label, onClick, icon, isDisabled }: Props) => {\n  return (\n    <Tooltip label={ label } isDisabled={ isDisabled }>\n      <IconButton\n        aria-label={ label }\n        className={ className }\n        icon={ typeof icon === 'string' ? <IconSvg name={ icon } boxSize={ 6 }/> : icon }\n        onClick={ onClick }\n        isDisabled={ isDisabled }\n        size=\"sm\"\n        variant=\"outline\"\n        px=\"4px\"\n      />\n    </Tooltip>\n  );\n};\n\nexport default ButtonItem;\n","import { MenuItem as MenuItemChakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  children: React.ReactNode;\n  onClick: () => void;\n  isDisabled?: boolean;\n}\n\nconst MenuItem = ({ className, children, onClick, isDisabled }: Props) => {\n  return (\n    <MenuItemChakra className={ className } onClick={ onClick } py={ 2 } px={ 4 } isDisabled={ isDisabled }>\n      { children }\n    </MenuItemChakra>\n  );\n};\n\nexport default MenuItem;\n","import React from 'react';\n\nimport type { ItemProps } from '../types';\n\nimport IconSvg from 'ui/shared/IconSvg';\nimport { useMetadataUpdateContext } from 'ui/tokenInstance/contexts/metadataUpdate';\n\nimport ButtonItem from '../parts/ButtonItem';\nimport MenuItem from '../parts/MenuItem';\n\nconst MetadataUpdateMenuItem = ({ type, className }: ItemProps) => {\n\n  const { status, setStatus } = useMetadataUpdateContext() || {};\n\n  const handleClick = React.useCallback(() => {\n    setStatus?.('MODAL_OPENED');\n  }, [ setStatus ]);\n\n  const element = (() => {\n    switch (type) {\n      case 'button': {\n        return (\n          <ButtonItem\n            label=\"Refresh metadata\"\n            icon=\"refresh\"\n            onClick={ handleClick }\n            className={ className }\n            isDisabled={ status === 'WAITING_FOR_RESPONSE' }\n          />\n        );\n      }\n      case 'menu_item': {\n        return (\n          <MenuItem className={ className } onClick={ handleClick } isDisabled={ status === 'WAITING_FOR_RESPONSE' }>\n            <IconSvg name=\"refresh\" boxSize={ 5 } mr={ 2 }/>\n            <span>Refresh metadata</span>\n          </MenuItem>\n        );\n      }\n    }\n  })();\n\n  return element;\n};\n\nexport default React.memo(MetadataUpdateMenuItem);\n","import { useDisclosure } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { ItemProps } from '../types';\nimport type { Address } from 'types/api/address';\nimport type { Transaction } from 'types/api/transaction';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport getPageType from 'lib/mixpanel/getPageType';\nimport AddressModal from 'ui/privateTags/AddressModal/AddressModal';\nimport TransactionModal from 'ui/privateTags/TransactionModal/TransactionModal';\nimport IconSvg from 'ui/shared/IconSvg';\nimport AuthGuard from 'ui/snippets/auth/AuthGuard';\n\nimport ButtonItem from '../parts/ButtonItem';\nimport MenuItem from '../parts/MenuItem';\n\ninterface Props extends ItemProps {\n  entityType?: 'address' | 'tx';\n}\n\nconst PrivateTagMenuItem = ({ className, hash, entityType = 'address', type }: Props) => {\n  const modal = useDisclosure();\n  const queryClient = useQueryClient();\n  const router = useRouter();\n\n  const queryKey = getResourceKey(entityType === 'tx' ? 'tx' : 'address', { pathParams: { hash } });\n  const queryData = queryClient.getQueryData<Address | Transaction>(queryKey);\n\n  const handleAddPrivateTag = React.useCallback(async() => {\n    await queryClient.refetchQueries({ queryKey });\n    modal.onClose();\n  }, [ queryClient, queryKey, modal ]);\n\n  if (\n    queryData &&\n    (\n      ('private_tags' in queryData && queryData.private_tags?.length) ||\n      ('transaction_tag' in queryData && queryData.transaction_tag)\n    )\n  ) {\n    return null;\n  }\n\n  const pageType = getPageType(router.pathname);\n  const modalProps = {\n    isOpen: modal.isOpen,\n    onClose: modal.onClose,\n    onSuccess: handleAddPrivateTag,\n    pageType,\n  };\n\n  const element = (() => {\n    switch (type) {\n      case 'button': {\n        return (\n          <AuthGuard onAuthSuccess={ modal.onOpen }>\n            { ({ onClick }) => (\n              <ButtonItem label=\"Add private tag\" icon=\"privattags\" onClick={ onClick } className={ className }/>\n            ) }\n          </AuthGuard>\n        );\n      }\n      case 'menu_item': {\n        return (\n          <AuthGuard onAuthSuccess={ modal.onOpen }>\n            { ({ onClick }) => (\n              <MenuItem className={ className } onClick={ onClick }>\n                <IconSvg name=\"privattags\" boxSize={ 6 } mr={ 2 }/>\n                <span>Add private tag</span>\n              </MenuItem>\n            ) }\n          </AuthGuard>\n        );\n      }\n    }\n  })();\n\n  return (\n    <>\n      { element }\n      { entityType === 'tx' ?\n        <TransactionModal { ...modalProps } data={{ transaction_hash: hash }}/> :\n        <AddressModal { ...modalProps } data={{ address_hash: hash }}/>\n      }\n    </>\n  );\n};\n\nexport default React.memo(PrivateTagMenuItem);\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { ItemProps } from '../types';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ButtonItem from '../parts/ButtonItem';\nimport MenuItem from '../parts/MenuItem';\n\nconst PublicTagMenuItem = ({ className, hash, type }: ItemProps) => {\n  const router = useRouter();\n\n  const handleClick = React.useCallback(() => {\n    router.push({ pathname: '/public-tags/submit', query: { addresses: [ hash ] } });\n  }, [ hash, router ]);\n\n  switch (type) {\n    case 'button': {\n      return <ButtonItem label=\"Add public tag\" icon=\"publictags\" onClick={ handleClick } className={ className }/>;\n    }\n    case 'menu_item': {\n      return (\n        <MenuItem className={ className } onClick={ handleClick }>\n          <IconSvg name=\"publictags\" boxSize={ 6 } mr={ 2 }/>\n          <span>Add public tag</span>\n        </MenuItem>\n      );\n    }\n  }\n};\n\nexport default React.memo(PublicTagMenuItem);\n","import { chakra, useDisclosure } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { ItemProps } from '../types';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { PAGE_TYPE_DICT } from 'lib/mixpanel/getPageType';\nimport AddressVerificationModal from 'ui/addressVerification/AddressVerificationModal';\nimport IconSvg from 'ui/shared/IconSvg';\nimport AuthGuard from 'ui/snippets/auth/AuthGuard';\nimport useIsAuth from 'ui/snippets/auth/useIsAuth';\n\nimport ButtonItem from '../parts/ButtonItem';\nimport MenuItem from '../parts/MenuItem';\n\nconst TokenInfoMenuItem = ({ className, hash, type }: ItemProps) => {\n  const router = useRouter();\n  const modal = useDisclosure();\n  const isAuth = useIsAuth();\n\n  const verifiedAddressesQuery = useApiQuery('verified_addresses', {\n    pathParams: { chainId: config.chain.id },\n    queryOptions: {\n      enabled: isAuth,\n    },\n  });\n  const applicationsQuery = useApiQuery('token_info_applications', {\n    pathParams: { chainId: config.chain.id, id: undefined },\n    queryOptions: {\n      enabled: isAuth,\n    },\n  });\n  const tokenInfoQuery = useApiQuery('token_verified_info', {\n    pathParams: { hash, chainId: config.chain.id },\n    queryOptions: {\n      refetchOnMount: false,\n    },\n  });\n\n  const handleAddApplicationClick = React.useCallback(async() => {\n    router.push({ pathname: '/account/verified-addresses', query: { address: hash } });\n  }, [ hash, router ]);\n\n  const handleVerifiedAddressSubmit = React.useCallback(async() => {\n    await verifiedAddressesQuery.refetch();\n  }, [ verifiedAddressesQuery ]);\n\n  const handleShowMyAddressesClick = React.useCallback(async() => {\n    router.push({ pathname: '/account/verified-addresses' });\n  }, [ router ]);\n\n  const element = (() => {\n    const icon = <IconSvg name=\"edit\" boxSize={ 6 } p={ 1 }/>;\n    const isVerifiedAddress = verifiedAddressesQuery.data?.verifiedAddresses\n      .find(({ contractAddress }) => contractAddress.toLowerCase() === hash.toLowerCase());\n    const hasApplication = applicationsQuery.data?.submissions.some(({ tokenAddress }) => tokenAddress.toLowerCase() === hash.toLowerCase());\n\n    const label = (() => {\n      if (!isVerifiedAddress) {\n        return tokenInfoQuery.data?.tokenAddress ? 'Update token info' : 'Add token info';\n      }\n\n      return hasApplication || tokenInfoQuery.data?.tokenAddress ? 'Update token info' : 'Add token info';\n    })();\n\n    const onAuthSuccess = isVerifiedAddress ? handleAddApplicationClick : modal.onOpen;\n\n    switch (type) {\n      case 'button': {\n        return (\n          <AuthGuard onAuthSuccess={ onAuthSuccess }>\n            { ({ onClick }) => (\n              <ButtonItem label={ label } icon={ icon } onClick={ onClick } className={ className }/>\n            ) }\n          </AuthGuard>\n        );\n      }\n      case 'menu_item': {\n        return (\n          <AuthGuard onAuthSuccess={ onAuthSuccess }>\n            { ({ onClick }) => (\n              <MenuItem className={ className } onClick={ onClick }>\n                { icon }\n                <chakra.span ml={ 2 }>{ label }</chakra.span>\n              </MenuItem>\n            ) }\n          </AuthGuard>\n        );\n      }\n    }\n  })();\n\n  return (\n    <>\n      { element }\n      <AddressVerificationModal\n        defaultAddress={ hash }\n        pageType={ PAGE_TYPE_DICT['/token/[hash]'] }\n        isOpen={ modal.isOpen }\n        onClose={ modal.onClose }\n        onSubmit={ handleVerifiedAddressSubmit }\n        onAddTokenInfoClick={ handleAddApplicationClick }\n        onShowListClick={ handleShowMyAddressesClick }\n      />\n    </>\n  );\n};\n\nexport default React.memo(TokenInfoMenuItem);\n","import { Box, IconButton, MenuButton, MenuList, chakra } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { ItemProps } from './types';\n\nimport config from 'configs/app';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport Menu from 'ui/shared/chakra/Menu';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport useProfileQuery from 'ui/snippets/auth/useProfileQuery';\n\nimport MetadataUpdateMenuItem from './items/MetadataUpdateMenuItem';\nimport PrivateTagMenuItem from './items/PrivateTagMenuItem';\nimport PublicTagMenuItem from './items/PublicTagMenuItem';\nimport TokenInfoMenuItem from './items/TokenInfoMenuItem';\n\ninterface Props {\n  isLoading?: boolean;\n  className?: string;\n  showUpdateMetadataItem?: boolean;\n}\n\nconst AccountActionsMenu = ({ isLoading, className, showUpdateMetadataItem }: Props) => {\n  const router = useRouter();\n\n  const hash = getQueryParamString(router.query.hash);\n  const isTokenPage = router.pathname === '/token/[hash]';\n  const isTokenInstancePage = router.pathname === '/token/[hash]/instance/[id]';\n  const isTxPage = router.pathname === '/tx/[hash]';\n\n  const profileQuery = useProfileQuery();\n\n  const handleButtonClick = React.useCallback(() => {\n    mixpanel.logEvent(mixpanel.EventTypes.PAGE_WIDGET, { Type: 'Address actions (more button)' });\n  }, []);\n\n  const userWithoutEmail = profileQuery.data && !profileQuery.data.email;\n\n  const items = [\n    {\n      render: (props: ItemProps) => <MetadataUpdateMenuItem { ...props }/>,\n      enabled: isTokenInstancePage && showUpdateMetadataItem,\n    },\n    {\n      render: (props: ItemProps) => <TokenInfoMenuItem { ...props }/>,\n      enabled: config.features.account.isEnabled && isTokenPage && config.features.addressVerification.isEnabled && !userWithoutEmail,\n    },\n    {\n      render: (props: ItemProps) => <PrivateTagMenuItem { ...props } entityType={ isTxPage ? 'tx' : 'address' }/>,\n      enabled: config.features.account.isEnabled,\n    },\n    {\n      render: (props: ItemProps) => <PublicTagMenuItem { ...props }/>,\n      enabled: config.features.account.isEnabled && !isTxPage && config.features.publicTagsSubmission.isEnabled,\n    },\n  ].filter(({ enabled }) => enabled);\n\n  if (items.length === 0) {\n    return null;\n  }\n\n  if (isLoading) {\n    return <Skeleton w=\"36px\" h=\"32px\" borderRadius=\"base\" className={ className }/>;\n  }\n\n  if (items.length === 1) {\n    return (\n      <Box className={ className }>\n        { items[0].render({ type: 'button', hash }) }\n      </Box>\n    );\n  }\n\n  return (\n    <Menu>\n      <MenuButton\n        as={ IconButton }\n        className={ className }\n        size=\"sm\"\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        px=\"7px\"\n        onClick={ handleButtonClick }\n        icon={ <IconSvg name=\"dots\" boxSize=\"18px\"/> }\n        aria-label=\"Show address menu\"\n      />\n      <MenuList minWidth=\"180px\" zIndex=\"popover\">\n        { items.map(({ render }, index) => (\n          <React.Fragment key={ index }>\n            { render({ type: 'menu_item', hash }) }\n          </React.Fragment>\n        )) }\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default React.memo(chakra(AccountActionsMenu));\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import type { ChakraProps } from '@chakra-ui/react';\nimport { Box, Flex, chakra, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport CopyToClipboard from './CopyToClipboard';\n\ninterface Props {\n  data: React.ReactNode;\n  title?: string;\n  className?: string;\n  rightSlot?: React.ReactNode;\n  beforeSlot?: React.ReactNode;\n  textareaMaxHeight?: string;\n  textareaMinHeight?: string;\n  showCopy?: boolean;\n  isLoading?: boolean;\n  contentProps?: ChakraProps;\n}\n\nconst RawDataSnippet = ({\n  data,\n  className,\n  title,\n  rightSlot,\n  beforeSlot,\n  textareaMaxHeight,\n  textareaMinHeight,\n  showCopy = true,\n  isLoading,\n  contentProps,\n}: Props) => {\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1362573\n  // there is a problem with scrollbar color in chromium\n  // so blackAlpha.50 here is replaced with #f5f5f6\n  // and whiteAlpha.50 is replaced with #1a1b1b\n  // const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const bgColor = useColorModeValue('#f5f5f6', '#1a1b1b');\n  return (\n    <Box className={ className } as=\"section\" title={ title }>\n      { (title || rightSlot || showCopy) && (\n        <Flex justifyContent={ title ? 'space-between' : 'flex-end' } alignItems=\"center\" mb={ 3 }>\n          { title && <Skeleton fontWeight={ 500 } isLoaded={ !isLoading }>{ title }</Skeleton> }\n          { rightSlot }\n          { typeof data === 'string' && showCopy && <CopyToClipboard text={ data } isLoading={ isLoading }/> }\n        </Flex>\n      ) }\n      { beforeSlot }\n      <Skeleton\n        p={ 4 }\n        bgColor={ isLoading ? 'inherit' : bgColor }\n        maxH={ textareaMaxHeight || '400px' }\n        minH={ textareaMinHeight || (isLoading ? '200px' : undefined) }\n        fontSize=\"sm\"\n        borderRadius=\"md\"\n        wordBreak=\"break-all\"\n        whiteSpace=\"pre-wrap\"\n        overflowX=\"hidden\"\n        overflowY=\"auto\"\n        isLoaded={ !isLoading }\n        { ...contentProps }\n      >\n        { data }\n      </Skeleton>\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(RawDataSnippet));\n","import type { MenuProps } from '@chakra-ui/react';\n// eslint-disable-next-line no-restricted-imports\nimport { Menu as MenuBase } from '@chakra-ui/react';\nimport React from 'react';\n\nconst Menu = (props: MenuProps) => {\n  return <MenuBase gutter={ 4 } { ...props }/>;\n};\n\nexport default React.memo(Menu);\n","import type { As } from '@chakra-ui/react';\nimport { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport * as EntityBase from 'ui/shared/entities/base/components';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\n\nimport { distributeEntityProps } from '../base/utils';\n\nconst Container = EntityBase.Container;\n\nconst Icon = (props: EntityBase.IconBaseProps) => {\n  if (props.noIcon) {\n    return null;\n  }\n\n  return (\n    <EntityBase.Icon\n      { ...props }\n      size={ props.size ?? 'lg' }\n      name={ props.name ?? 'nft_shield' }\n    />\n  );\n};\n\ntype LinkProps = EntityBase.LinkBaseProps & Pick<EntityProps, 'hash' | 'id'>;\n\nconst Link = chakra((props: LinkProps) => {\n  const defaultHref = route({ pathname: '/token/[hash]/instance/[id]', query: { hash: props.hash, id: props.id } });\n\n  return (\n    <EntityBase.Link\n      { ...props }\n      href={ props.href ?? defaultHref }\n    >\n      { props.children }\n    </EntityBase.Link>\n  );\n});\n\ntype ContentProps = Omit<EntityBase.ContentBaseProps, 'text'> & Pick<EntityProps, 'id'>;\n\nconst Content = chakra((props: ContentProps) => {\n  return (\n    <TruncatedValue\n      isLoading={ props.isLoading }\n      value={ props.id }\n    />\n  );\n});\n\nexport interface EntityProps extends EntityBase.EntityBaseProps {\n  hash: string;\n  id: string;\n}\n\nconst NftEntity = (props: EntityProps) => {\n  const partsProps = distributeEntityProps(props);\n\n  return (\n    <Container w=\"100%\" { ...partsProps.container }>\n      <Icon { ...partsProps.icon }/>\n      <Link { ...partsProps.link }>\n        <Content { ...partsProps.content }/>\n      </Link>\n    </Container>\n  );\n};\n\nexport default React.memo(chakra<As, EntityProps>(NftEntity));\n\nexport {\n  Container,\n  Link,\n  Icon,\n  Content,\n};\n","import { useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\n\nimport AuthModal from './AuthModal';\nimport useIsAuth from './useIsAuth';\n\ninterface InjectedProps {\n  onClick: () => void;\n}\n\ninterface Props {\n  children: (props: InjectedProps) => React.ReactNode;\n  onAuthSuccess: () => void;\n}\n\nconst AuthGuard = ({ children, onAuthSuccess }: Props) => {\n  const authModal = useDisclosure();\n  const isAuth = useIsAuth();\n\n  const handleClick = React.useCallback(() => {\n    isAuth ? onAuthSuccess() : authModal.onOpen();\n  }, [ authModal, isAuth, onAuthSuccess ]);\n\n  const handleModalClose = React.useCallback((isSuccess?: boolean) => {\n    if (isSuccess) {\n      onAuthSuccess();\n    }\n    authModal.onClose();\n  }, [ authModal, onAuthSuccess ]);\n\n  return (\n    <>\n      { children({ onClick: handleClick }) }\n      { authModal.isOpen && <AuthModal onClose={ handleModalClose } initialScreen={{ type: 'select_method' }}/> }\n    </>\n  );\n};\n\nexport default React.memo(AuthGuard);\n","import React from 'react';\n\ninterface MetadataUpdateProviderProps {\n  children: React.ReactNode;\n}\n\ninterface TMetadataUpdateContext {\n  status: Status;\n  setStatus: (status: Status) => void;\n}\n\nexport const MetadataUpdateContext = React.createContext<TMetadataUpdateContext | null>(null);\n\ntype Status = 'INITIAL' | 'MODAL_OPENED' | 'WAITING_FOR_RESPONSE' | 'SUCCESS' | 'ERROR';\n\nexport function MetadataUpdateProvider({ children }: MetadataUpdateProviderProps) {\n\n  const [ status, setStatus ] = React.useState<Status>('INITIAL');\n\n  const value = React.useMemo(() => {\n    return {\n      status,\n      setStatus,\n    };\n  }, [ status ]);\n\n  return (\n    <MetadataUpdateContext.Provider value={ value }>\n      { children }\n    </MetadataUpdateContext.Provider>\n  );\n}\n\nexport function useMetadataUpdateContext() {\n  const context = React.useContext(MetadataUpdateContext);\n  if (context === undefined) {\n    return null;\n  }\n  return context;\n}\n"],"names":["useAddressMetadataInfoQuery","addresses","isEnabled","useApiQuery","queryParams","chainId","config","chain","id","tagsLimit","queryOptions","enabled","length","features","addressMetadata","select","Object","entries","data","map","address","tags","reputation","formattedTags","tag","meta","parseMetaPayload","parsedMeta","JSON","parse","Array","isArray","result","stringField","stringFields","error","toLowerCase","reduce","item","tokenStandardName","tokenStandard","TOKEN_TYPES","NFT_TOKEN_TYPE_IDS","getTokenTypeName","typeId","TOKEN_INFO_ERC_20","ADDRESS_HASH","circulating_market_cap","decimals","exchange_rate","holders","name","symbol","total_supply","type","icon_url","TOKEN_INFO_ERC_721","TOKEN_COUNTERS","token_holders_count","transfers_count","ADDRESS_PARAMS","value","token_id","pagination","generateListStub","TOKEN_HOLDER_ERC_20","next_page_params","TOKEN_HOLDER_ERC_1155","getTokenInstanceHoldersStub","block_hash","BLOCK_HASH","block_number","from","log_index","method","timestamp","to","token","total","transaction_hash","TX_HASH","TOKEN_TRANSFER_ERC_20","TOKEN_TRANSFER_ERC_1155","TOKEN_INFO_ERC_1155","TOKEN_INFO_ERC_404","TOKEN_TRANSFER_ERC_721","TOKEN_TRANSFER_ERC_404","getTokenInstanceTransfersStub","animation_url","external_app_url","image_url","is_unique","metadata","attributes","trait_type","description","external_url","image","owner","holder_address_hash","thumbnails","className","label","ButtonItem","onClick","icon","isDisabled","Tooltip","IconButton","aria-label","IconSvg","boxSize","size","variant","px","MenuItem","children","MenuItemChakra","py","React","MetadataUpdateMenuItem","status","setStatus","useMetadataUpdateContext","handleClick","element","mr","span","queryData","PrivateTagMenuItem","hash","entityType","modal","useDisclosure","queryClient","useQueryClient","router","useRouter","queryKey","getResourceKey","pathParams","getQueryData","handleAddPrivateTag","refetchQueries","onClose","private_tags","transaction_tag","pageType","getPageType","pathname","modalProps","isOpen","onSuccess","AuthGuard","onAuthSuccess","onOpen","TransactionModal","AddressModal","address_hash","push","query","isAuth","useIsAuth","verifiedAddressesQuery","applicationsQuery","undefined","tokenInfoQuery","refetchOnMount","handleAddApplicationClick","handleVerifiedAddressSubmit","refetch","handleShowMyAddressesClick","p","isVerifiedAddress","verifiedAddresses","find","contractAddress","hasApplication","submissions","some","tokenAddress","chakra","ml","AddressVerificationModal","defaultAddress","PAGE_TYPE_DICT","onSubmit","onAddTokenInfoClick","onShowListClick","isLoading","AccountActionsMenu","showUpdateMetadataItem","getQueryParamString","isTokenPage","isTokenInstancePage","isTxPage","profileQuery","useProfileQuery","handleButtonClick","mixpanel","PAGE_WIDGET","Type","userWithoutEmail","email","items","render","props","TokenInfoMenuItem","account","addressVerification","PublicTagMenuItem","publicTagsSubmission","filter","Skeleton","w","h","borderRadius","Box","Menu","MenuButton","as","colorScheme","MenuList","minWidth","zIndex","index","ContainerWithScrollY","gradientHeight","onScrollVisibilityChange","ref","hasScroll","setHasScroll","current","scrollHeight","clientHeight","gradientEndColor","useColorModeValue","Flex","flexDirection","overflowY","_after","position","content","bottom","left","right","height","bgGradient","pr","pb","LabelScrollText","Text","fontWeight","fontSize","align","Label","hint","GridItem","lineHeight","base","lg","_notFirst","mt","columnGap","alignItems","HintPopover","my","Hint","isLoaded","Value","display","flexWrap","rowGap","pl","whiteSpace","ValueWithScroll","popoverProps","popoverContentProps","popoverBodyProps","bgColor","Popover","trigger","isLazy","placement","PopoverTrigger","color","_hover","cursor","Portal","PopoverContent","maxW","PopoverArrow","PopoverBody","DarkMode","RawDataSnippet","title","rightSlot","beforeSlot","textareaMaxHeight","textareaMinHeight","showCopy","contentProps","justifyContent","mb","CopyToClipboard","text","maxH","minH","wordBreak","overflowX","MenuBase","gutter","Container","EntityBase","Icon","noIcon","Link","defaultHref","route","href","Content","TruncatedValue","partsProps","distributeEntityProps","NftEntity","container","link","authModal","handleModalClose","isSuccess","AuthModal","initialScreen","MetadataUpdateContext","MetadataUpdateProvider","Provider","context"],"sourceRoot":"","ignoreList":[]}