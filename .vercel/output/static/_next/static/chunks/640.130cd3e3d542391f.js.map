{"version":3,"file":"static/chunks/640.130cd3e3d542391f.js","mappings":"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","sources":["webpack://_N_E/./ui/outputRoots/optimisticL2/OptimisticL2OutputRootsListItem.tsx","webpack://_N_E/./ui/outputRoots/optimisticL2/OptimisticL2OutputRootsTableItem.tsx","webpack://_N_E/./ui/outputRoots/optimisticL2/OptimisticL2OutputRootsTable.tsx","webpack://_N_E/./ui/pages/OptimisticL2OutputRoots.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx"],"sourcesContent":["import { Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { OptimisticL2OutputRootsItem } from 'types/api/optimisticL2';\n\nimport config from 'configs/app';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport BlockEntityL2 from 'ui/shared/entities/block/BlockEntityL2';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShorten from 'ui/shared/HashStringShorten';\nimport ListItemMobileGrid from 'ui/shared/ListItemMobile/ListItemMobileGrid';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\nconst rollupFeature = config.features.rollup;\n\ntype Props = { item: OptimisticL2OutputRootsItem; isLoading?: boolean };\n\nconst OptimisticL2OutputRootsListItem = ({ item, isLoading }: Props) => {\n  if (!rollupFeature.isEnabled || rollupFeature.type !== 'optimistic') {\n    return null;\n  }\n\n  return (\n    <ListItemMobileGrid.Container>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>L2 output index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value fontWeight={ 600 } color=\"text\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.l2_output_index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Age</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <TimeAgoWithTooltip\n          timestamp={ item.l1_timestamp }\n          isLoading={ isLoading }\n          display=\"inline-block\"\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>L2 block #</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <BlockEntityL2\n          isLoading={ isLoading }\n          number={ item.l2_block_number }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          noIcon\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>L1 txn hash</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value py=\"3px\">\n        <TxEntityL1\n          isLoading={ isLoading }\n          hash={ item.l1_transaction_hash }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          truncation=\"constant_long\"\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Output root</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Flex overflow=\"hidden\" whiteSpace=\"nowrap\" alignItems=\"center\" w=\"100%\" justifyContent=\"start\">\n          <Skeleton isLoaded={ !isLoading } color=\"text_secondary\">\n            <HashStringShorten hash={ item.output_root } type=\"long\"/>\n          </Skeleton>\n          <CopyToClipboard text={ item.output_root } isLoading={ isLoading }/>\n        </Flex>\n      </ListItemMobileGrid.Value>\n\n    </ListItemMobileGrid.Container>\n  );\n};\n\nexport default OptimisticL2OutputRootsListItem;\n","import { Flex, Td, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { OptimisticL2OutputRootsItem } from 'types/api/optimisticL2';\n\nimport config from 'configs/app';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport BlockEntityL2 from 'ui/shared/entities/block/BlockEntityL2';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShorten from 'ui/shared/HashStringShorten';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\nconst rollupFeature = config.features.rollup;\n\ntype Props = { item: OptimisticL2OutputRootsItem; isLoading?: boolean };\n\nconst OptimisticL2OutputRootsTableItem = ({ item, isLoading }: Props) => {\n  if (!rollupFeature.isEnabled || rollupFeature.type !== 'optimistic') {\n    return null;\n  }\n\n  return (\n    <Tr>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.l2_output_index }</Skeleton>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <TimeAgoWithTooltip\n          timestamp={ item.l1_timestamp }\n          isLoading={ isLoading }\n          display=\"inline-block\"\n          color=\"text_secondary\"\n        />\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <BlockEntityL2\n          isLoading={ isLoading }\n          number={ item.l2_block_number }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          fontWeight={ 600 }\n          noIcon\n        />\n      </Td>\n      <Td verticalAlign=\"middle\" pr={ 12 }>\n        <TxEntityL1\n          isLoading={ isLoading }\n          hash={ item.l1_transaction_hash }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          noIcon\n          truncation=\"constant_long\"\n        />\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Flex overflow=\"hidden\" w=\"100%\" alignItems=\"center\">\n          <Skeleton isLoaded={ !isLoading }>\n            <HashStringShorten hash={ item.output_root } type=\"long\"/>\n          </Skeleton>\n          <CopyToClipboard text={ item.output_root } ml={ 2 } isLoading={ isLoading }/>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default OptimisticL2OutputRootsTableItem;\n","import { Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { OptimisticL2OutputRootsItem } from 'types/api/optimisticL2';\n\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport OptimisticL2OutputRootsTableItem from './OptimisticL2OutputRootsTableItem';\n\ntype Props = {\n  items: Array<OptimisticL2OutputRootsItem>;\n  top: number;\n  isLoading?: boolean;\n};\n\nconst OptimisticL2OutputRootsTable = ({ items, top, isLoading }: Props) => {\n  return (\n    <Table minW=\"900px\">\n      <Thead top={ top }>\n        <Tr>\n          <Th width=\"160px\">L2 output index</Th>\n          <Th width=\"20%\">Age</Th>\n          <Th width=\"20%\">L2 block #</Th>\n          <Th width=\"30%\">L1 txn hash</Th>\n          <Th width=\"30%\">Output root</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { items.map((item, index) => (\n          <OptimisticL2OutputRootsTableItem\n            key={ item.l2_output_index + (Number(isLoading ? index : '') ? String(index) : '') }\n            item={ item }\n            isLoading={ isLoading }\n          />\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default OptimisticL2OutputRootsTable;\n","import { Hide, Show, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { L2_OUTPUT_ROOTS_ITEM } from 'stubs/L2';\nimport { generateListStub } from 'stubs/utils';\nimport OptimisticL2OutputRootsListItem from 'ui/outputRoots/optimisticL2/OptimisticL2OutputRootsListItem';\nimport OptimisticL2OutputRootsTable from 'ui/outputRoots/optimisticL2/OptimisticL2OutputRootsTable';\nimport { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport StickyPaginationWithText from 'ui/shared/StickyPaginationWithText';\n\nconst OptimisticL2OutputRoots = () => {\n  const { data, isError, isPlaceholderData, pagination } = useQueryWithPages({\n    resourceName: 'optimistic_l2_output_roots',\n    options: {\n      placeholderData: generateListStub<'optimistic_l2_output_roots'>(\n        L2_OUTPUT_ROOTS_ITEM,\n        50,\n        {\n          next_page_params: {\n            items_count: 50,\n            index: 9045200,\n          },\n        },\n      ),\n    },\n  });\n\n  const countersQuery = useApiQuery('optimistic_l2_output_roots_count', {\n    queryOptions: {\n      placeholderData: 50617,\n    },\n  });\n\n  const content = data?.items ? (\n    <>\n      <Show below=\"lg\" ssr={ false }>\n        { data.items.map(((item, index) => (\n          <OptimisticL2OutputRootsListItem\n            key={ item.l2_output_index + (isPlaceholderData ? String(index) : '') }\n            item={ item }\n            isLoading={ isPlaceholderData }\n          />\n        ))) }\n      </Show>\n      <Hide below=\"lg\" ssr={ false }>\n        <OptimisticL2OutputRootsTable items={ data.items } top={ pagination.isVisible ? ACTION_BAR_HEIGHT_DESKTOP : 0 } isLoading={ isPlaceholderData }/>\n      </Hide>\n    </>\n  ) : null;\n\n  const text = (() => {\n    if (countersQuery.isError || isError || !data?.items.length) {\n      return null;\n    }\n\n    return (\n      <Skeleton isLoaded={ !countersQuery.isPlaceholderData && !isPlaceholderData } display=\"flex\" flexWrap=\"wrap\">\n        L2 output index\n        <Text fontWeight={ 600 } whiteSpace=\"pre\"> #{ data.items[0].l2_output_index } </Text>to\n        <Text fontWeight={ 600 } whiteSpace=\"pre\"> #{ data.items[data.items.length - 1].l2_output_index } </Text>\n        (total of { countersQuery.data?.toLocaleString() } roots)\n      </Skeleton>\n    );\n  })();\n\n  const actionBar = <StickyPaginationWithText text={ text } pagination={ pagination }/>;\n\n  return (\n    <>\n      <PageTitle title=\"Output roots\" withTextAd/>\n      <DataListDisplay\n        isError={ isError }\n        items={ data?.items }\n        emptyText=\"There are no output roots.\"\n        content={ content }\n        actionBar={ actionBar }\n      />\n    </>\n  );\n};\n\nexport default OptimisticL2OutputRoots;\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/tx/[hash]',\n    query: { hash: props.hash },\n  });\n\n  return <TxEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(TxEntityL1);\n"],"names":["rollupFeature","config","features","rollup","item","isLoading","isEnabled","OptimisticL2OutputRootsListItem","type","ListItemMobileGrid","Container","Label","Value","fontWeight","color","Skeleton","isLoaded","display","l2_output_index","TimeAgoWithTooltip","timestamp","l1_timestamp","BlockEntityL2","number","l2_block_number","fontSize","lineHeight","noIcon","py","TxEntityL1","hash","l1_transaction_hash","truncation","Flex","overflow","whiteSpace","alignItems","w","justifyContent","HashStringShorten","output_root","CopyToClipboard","text","OptimisticL2OutputRootsTableItem","Tr","Td","verticalAlign","pr","ml","items","top","Table","minW","OptimisticL2OutputRootsTable","Thead","Th","width","Tbody","map","index","Number","String","data","isError","OptimisticL2OutputRoots","isPlaceholderData","pagination","useQueryWithPages","resourceName","options","placeholderData","generateListStub","L2_OUTPUT_ROOTS_ITEM","next_page_params","items_count","countersQuery","useApiQuery","queryOptions","content","Show","below","ssr","Hide","isVisible","ACTION_BAR_HEIGHT_DESKTOP","length","flexWrap","Text","toLocaleString","actionBar","StickyPaginationWithText","PageTitle","title","withTextAd","DataListDisplay","chakra","props","defaultHref","L1BaseUrl","route","pathname","query","TxEntity","href","isExternal"],"sourceRoot":"","ignoreList":[]}