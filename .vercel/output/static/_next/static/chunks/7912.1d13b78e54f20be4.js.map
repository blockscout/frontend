{"version":3,"file":"static/chunks/7912.1d13b78e54f20be4.js","mappings":"yJAAA,4BACA,2BAA4D,kBAA2B,EA2BvF,gBACA,QACA,eAEA,OADA,kHACA,gEACA,CAzBA,GAAU,oCACV,MAAiB,OAAY,EAC7B,8BACA,WACA,aACA,cAAoB,kBACpB,CAAG,EACH,OACA,SACA,wBACA,cACA,SACA,qBAA0B,KAC1B,aACA,eACA,WAAkB,IAClB,aAAoB,CACpB,CACA,CACA,CAAC,EAOD,cACA,OACA,qBAAwB,GAAG,MAC3B,mEACA,wDAA2D,EAAE,OAC7D,0BACA,EACA,GACA,UAAa,OAAC,GAAG,GAAI,OAAI,YAAa,OAAG,CAAC,OAAC,QAAS,OAAC,GAAG,IACxD,wBAAmC,OAAC,eACpC,SACA,eACA,aACA,mBACA,cACA,mBACA,mBACA,gBACA,QACA,iBACA,OAAiB,EACjB,mBACA,CACA,WACA,eACA,gBACA,WACA,YACA,oBACA,YACA,iBACA,CACA,WACA,CACA,CAAG,CACH,aAAgB,OAAC,qBACjB,aAAgB,OAAC,qBACjB,cAAiB,OAAC,uBAClB,WAAc,OAAC,uBACf,WAAc,OAAC,MAAO,OAAI,SAAU,OAAG,CAAC,OAAC,QAAS,OAAC,OACnD,aAAgB,OAAC,GAAG,GAAI,OAAI,eAAgB,OAAG,CAAC,OAAC,QAAS,OAAC,GAAG,IAC9D,4BAAuC,OAAC,gBAExC,cACA,OACA,QACA,2BACA,YACA,0BACA,CACA,CACA,CACA","sources":["webpack://_N_E/./node_modules/@graphiql/react/dist/mode.es3.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport \"graphql\";\nimport { o as onlineParser, p, l as list, t, a as opt } from \"./types.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nCodeMirror.defineMode(\"graphql-variables\", (config) => {\n  const parser = onlineParser({\n    eatWhitespace: (stream) => stream.eatSpace(),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize }\n  });\n  return {\n    config,\n    startState: parser.startState,\n    token: parser.token,\n    indent,\n    electricInput: /^\\s*[}\\]]/,\n    fold: \"brace\",\n    closeBrackets: {\n      pairs: '[]{}\"\"',\n      explode: \"[]{}\"\n    }\n  };\n});\nfunction indent(state, textAfter) {\n  var _a, _b;\n  const levels = state.levels;\n  const level = !levels || levels.length === 0 ? state.indentLevel : levels[levels.length - 1] - (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n  return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\n__name(indent, \"indent\");\nconst LexRules = {\n  Punctuation: /^\\[|]|\\{|\\}|:|,/,\n  Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n  String: /^\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?/,\n  Keyword: /^true|false|null/\n};\nconst ParseRules = {\n  Document: [p(\"{\"), list(\"Variable\", opt(p(\",\"))), p(\"}\")],\n  Variable: [namedKey(\"variable\"), p(\":\"), \"Value\"],\n  Value(token) {\n    switch (token.kind) {\n      case \"Number\":\n        return \"NumberValue\";\n      case \"String\":\n        return \"StringValue\";\n      case \"Punctuation\":\n        switch (token.value) {\n          case \"[\":\n            return \"ListValue\";\n          case \"{\":\n            return \"ObjectValue\";\n        }\n        return null;\n      case \"Keyword\":\n        switch (token.value) {\n          case \"true\":\n          case \"false\":\n            return \"BooleanValue\";\n          case \"null\":\n            return \"NullValue\";\n        }\n        return null;\n    }\n  },\n  NumberValue: [t(\"Number\", \"number\")],\n  StringValue: [t(\"String\", \"string\")],\n  BooleanValue: [t(\"Keyword\", \"builtin\")],\n  NullValue: [t(\"Keyword\", \"keyword\")],\n  ListValue: [p(\"[\"), list(\"Value\", opt(p(\",\"))), p(\"]\")],\n  ObjectValue: [p(\"{\"), list(\"ObjectField\", opt(p(\",\"))), p(\"}\")],\n  ObjectField: [namedKey(\"attribute\"), p(\":\"), \"Value\"]\n};\nfunction namedKey(style) {\n  return {\n    style,\n    match: (token) => token.kind === \"String\",\n    update(state, token) {\n      state.name = token.value.slice(1, -1);\n    }\n  };\n}\n__name(namedKey, \"namedKey\");\n"],"names":[],"sourceRoot":"","ignoreList":[0]}