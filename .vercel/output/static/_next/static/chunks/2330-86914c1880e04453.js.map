{"version":3,"file":"static/chunks/2330-86914c1880e04453.js","mappings":"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","sources":["webpack://_N_E/./stubs/addressParams.ts","webpack://_N_E/./stubs/tx.ts","webpack://_N_E/./ui/shared/Tabs/TabCounter.tsx","webpack://_N_E/./ui/shared/Tabs/utils.ts","webpack://_N_E/./ui/shared/Tabs/TabsMenu.tsx","webpack://_N_E/./ui/shared/Tabs/useAdaptiveTabs.tsx","webpack://_N_E/./ui/shared/Tabs/useScrollToActiveTab.tsx","webpack://_N_E/./ui/shared/Tabs/AdaptiveTabsList.tsx","webpack://_N_E/./ui/shared/Tabs/TabsWithScroll.tsx"],"sourcesContent":["import type { AddressParam } from 'types/api/addressParams';\n\nexport const ADDRESS_HASH = '0x2B51Ae4412F79c3c1cB12AA40Ea4ECEb4e80511a';\n\nexport const ADDRESS_PARAMS: AddressParam = {\n  hash: ADDRESS_HASH,\n  implementations: null,\n  is_contract: false,\n  is_verified: null,\n  name: null,\n  private_tags: [],\n  public_tags: [],\n  watchlist_names: [],\n  ens_domain_name: null,\n};\n","import type { RawTracesResponse } from 'types/api/rawTrace';\nimport type { Transaction, TransactionsStats } from 'types/api/transaction';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const TX_HASH = '0x3ed9d81e7c1001bdda1caa1dc62c0acbbe3d2c671cdc20dc1e65efdaa4186967';\n\nexport const TX: Transaction = {\n  timestamp: '2022-11-11T11:11:11.000000Z',\n  fee: {\n    type: 'actual',\n    value: '2100000000000000',\n  },\n  gas_limit: '21000',\n  block_number: 9004925,\n  status: 'ok',\n  method: 'placeholder',\n  confirmations: 71,\n  type: 0,\n  exchange_rate: '1828.71',\n  to: ADDRESS_PARAMS,\n  transaction_burnt_fee: null,\n  max_fee_per_gas: null,\n  result: 'success',\n  hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  gas_price: '100000000000',\n  priority_fee: null,\n  base_fee_per_gas: '24',\n  from: ADDRESS_PARAMS,\n  token_transfers: null,\n  transaction_types: [\n    'coin_transfer',\n  ],\n  gas_used: '21000',\n  created_contract: null,\n  position: 0,\n  nonce: 295929,\n  has_error_in_internal_transactions: false,\n  actions: [],\n  decoded_input: null,\n  token_transfers_overflow: false,\n  raw_input: '0x',\n  value: '42000420000000000000',\n  max_priority_fee_per_gas: null,\n  revert_reason: null,\n  confirmation_duration: [\n    0,\n    14545,\n  ],\n  transaction_tag: null,\n};\n\nexport const TX_ZKEVM_L2: Transaction = {\n  ...TX,\n  zkevm_batch_number: 12345,\n  zkevm_sequence_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  zkevm_status: 'Confirmed by Sequencer',\n  zkevm_verify_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n};\n\nexport const TX_RAW_TRACE: RawTracesResponse = [];\n\nexport const TXS_STATS: TransactionsStats = {\n  pending_transactions_count: '4200',\n  transaction_fees_avg_24h: '22342870314428',\n  transaction_fees_sum_24h: '22184012506492688277',\n  transactions_count_24h: '992890',\n};\n","import { chakra, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport getDefaultTransitionProps from 'theme/utils/getDefaultTransitionProps';\n\nconst COUNTER_OVERLOAD = 50;\n\ntype Props = {\n  count?: number | null;\n  isActive?: boolean;\n}\n\nconst TabCounter = ({ count, isActive }: Props) => {\n\n  const zeroCountColor = useColorModeValue('blackAlpha.400', 'whiteAlpha.400');\n  const nonZeroCountColor = useColorModeValue('text_secondary', 'text_secondary');\n\n  const activeZeroColor = isActive ? 'gray.50' : zeroCountColor;\n  const activeNonZeroColor = isActive ? 'white' : nonZeroCountColor;\n\n  if (count === undefined || count === null) {\n    return null;\n  }\n\n  return (\n    <chakra.span\n      color={ count > 0 ? activeNonZeroColor : activeZeroColor }\n      ml={ 1 }\n      fontSize=\"sm\"\n      { ...getDefaultTransitionProps() }\n    >\n      { count > COUNTER_OVERLOAD ? `${ COUNTER_OVERLOAD }+` : count }\n    </chakra.span>\n  );\n};\n\nexport default TabCounter;\n","import type { MenuButton } from './types';\n\nimport { middot } from 'lib/html-entities';\n\nexport const menuButton: MenuButton = {\n  id: null,\n  title: `${ middot }${ middot }${ middot }`,\n  component: null,\n};\n","import type {\n  ButtonProps } from '@chakra-ui/react';\nimport {\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  Button,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport type { StyleProps } from '@chakra-ui/styled-system';\nimport React from 'react';\n\nimport type { MenuButton, TabItem } from './types';\n\nimport Popover from 'ui/shared/chakra/Popover';\n\nimport TabCounter from './TabCounter';\nimport { menuButton } from './utils';\n\ninterface Props {\n  tabs: Array<TabItem | MenuButton>;\n  activeTab?: TabItem;\n  tabsCut: number;\n  isActive: boolean;\n  styles?: StyleProps;\n  onItemClick: (index: number) => void;\n  buttonRef: React.RefObject<HTMLButtonElement>;\n  size: ButtonProps['size'];\n}\n\nconst TabsMenu = ({ tabs, tabsCut, isActive, styles, onItemClick, buttonRef, activeTab, size }: Props) => {\n  const { isOpen, onClose, onOpen } = useDisclosure();\n\n  const handleItemClick = React.useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n    onClose();\n    const tabIndex = event.currentTarget.getAttribute('data-index');\n    if (tabIndex) {\n      onItemClick(tabsCut + Number(tabIndex));\n    }\n  }, [ onClose, onItemClick, tabsCut ]);\n\n  return (\n    <Popover isLazy placement=\"bottom-end\" key=\"more\" isOpen={ isOpen } onClose={ onClose } onOpen={ onOpen } closeDelay={ 0 }>\n      <PopoverTrigger>\n        <Button\n          as=\"div\"\n          role=\"button\"\n          variant=\"ghost\"\n          isActive={ isOpen || isActive }\n          ref={ buttonRef }\n          size={ size }\n          { ...styles }\n        >\n          { menuButton.title }\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent w=\"auto\">\n        <PopoverBody display=\"flex\" flexDir=\"column\">\n          { tabs.slice(tabsCut).map((tab, index) => (\n            <Button\n              key={ tab.id?.toString() }\n              variant=\"ghost\"\n              onClick={ handleItemClick }\n              isActive={ activeTab ? activeTab.id === tab.id : false }\n              justifyContent=\"left\"\n              data-index={ index }\n              sx={{\n                '&:hover span': {\n                  color: 'inherit',\n                },\n              }}\n            >\n              { typeof tab.title === 'function' ? tab.title() : tab.title }\n              <TabCounter count={ tab.count }/>\n            </Button>\n          )) }\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(TabsMenu);\n","import React from 'react';\n\nimport type { MenuButton, RoutedTab } from './types';\n\nexport default function useAdaptiveTabs(tabs: Array<RoutedTab | MenuButton>, disabled?: boolean) {\n  // to avoid flickering we set initial value to 0\n  // so there will be no displayed tabs initially\n  const [ tabsCut, setTabsCut ] = React.useState(disabled ? tabs.length : 0);\n  const [ tabsRefs, setTabsRefs ] = React.useState<Array<React.RefObject<HTMLButtonElement>>>([]);\n  const listRef = React.useRef<HTMLDivElement>(null);\n  const rightSlotRef = React.useRef<HTMLDivElement>(null);\n  const leftSlotRef = React.useRef<HTMLDivElement>(null);\n\n  const calculateCut = React.useCallback(() => {\n    const listWidth = listRef.current?.getBoundingClientRect().width;\n    const rightSlotWidth = rightSlotRef.current?.getBoundingClientRect().width || 0;\n    const leftSlotWidth = leftSlotRef.current?.getBoundingClientRect().width || 0;\n    const tabWidths = tabsRefs.map((tab) => tab.current?.getBoundingClientRect().width);\n    const menuWidth = tabWidths[tabWidths.length - 1];\n\n    if (!listWidth || !menuWidth) {\n      return tabs.length;\n    }\n\n    const { visibleNum } = tabWidths.slice(0, -1).reduce((result, item, index, array) => {\n      if (!item) {\n        return result;\n      }\n\n      if (result.visibleNum < index) {\n        // means that we haven't increased visibleNum on the previous iteration, so there is no space left\n        // we skip now till the end of the loop\n        return result;\n      }\n\n      if (index === array.length - 1) {\n        // last element\n        if (result.accWidth + item < listWidth - rightSlotWidth - leftSlotWidth) {\n          return { visibleNum: result.visibleNum + 1, accWidth: result.accWidth + item };\n        }\n      } else {\n        if (result.accWidth + item + menuWidth < listWidth - rightSlotWidth - leftSlotWidth) {\n          return { visibleNum: result.visibleNum + 1, accWidth: result.accWidth + item };\n        }\n      }\n\n      return result;\n    }, { visibleNum: 0, accWidth: 0 });\n\n    return visibleNum;\n  }, [ tabs.length, tabsRefs ]);\n\n  React.useEffect(() => {\n    setTabsRefs(tabs.map((_, index) => tabsRefs[index] || React.createRef()));\n    setTabsCut(disabled ? tabs.length : 0);\n  // update refs only when disabled prop changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ disabled ]);\n\n  React.useEffect(() => {\n    if (tabsRefs.length > 0 && !disabled) {\n      setTabsCut(calculateCut());\n    }\n  }, [ calculateCut, disabled, tabsRefs ]);\n\n  return React.useMemo(() => {\n    return {\n      tabsCut,\n      tabsRefs,\n      listRef,\n      rightSlotRef,\n      leftSlotRef,\n    };\n  }, [ tabsCut, tabsRefs ]);\n}\n","import React from 'react';\n\ninterface Props {\n  activeTabIndex: number;\n  tabsRefs: Array<React.RefObject<HTMLButtonElement>>;\n  listRef: React.RefObject<HTMLDivElement>;\n  isMobile?: boolean;\n  isLoading?: boolean;\n}\n\nexport default function useScrollToActiveTab({ activeTabIndex, tabsRefs, listRef, isMobile, isLoading }: Props) {\n  React.useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n\n    if (activeTabIndex < tabsRefs.length && isMobile) {\n      window.setTimeout(() => {\n        const activeTabRef = tabsRefs[activeTabIndex];\n\n        if (activeTabRef.current && listRef.current) {\n          const containerWidth = listRef.current.getBoundingClientRect().width;\n          const activeTabWidth = activeTabRef.current.getBoundingClientRect().width;\n          const left = tabsRefs.slice(0, activeTabIndex)\n            .map((tab) => tab.current?.getBoundingClientRect())\n            .filter(Boolean)\n            .map((rect) => rect.width)\n            .reduce((result, item) => result + item, 0);\n\n          const isWithinFirstPage = containerWidth > left + activeTabWidth;\n\n          if (isWithinFirstPage) {\n            return;\n          }\n\n          listRef.current.scrollTo({\n            left,\n            behavior: 'smooth',\n          });\n        }\n\n      // have to wait until DOM is updated and all styles to tabs is applied\n      }, 300);\n    }\n  // run only when tab index or device type is changed\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ activeTabIndex, isMobile, isLoading ]);\n}\n","import type { StyleProps, ThemingProps } from '@chakra-ui/react';\nimport { Box, Tab, TabList, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { useScrollDirection } from 'lib/contexts/scrollDirection';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport useIsSticky from 'lib/hooks/useIsSticky';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport TabCounter from './TabCounter';\nimport TabsMenu from './TabsMenu';\nimport type { Props as TabsProps } from './TabsWithScroll';\nimport useAdaptiveTabs from './useAdaptiveTabs';\nimport useScrollToActiveTab from './useScrollToActiveTab';\nimport { menuButton } from './utils';\n\nconst hiddenItemStyles: StyleProps = {\n  position: 'absolute',\n  top: '-9999px',\n  left: '-9999px',\n  visibility: 'hidden',\n};\n\ninterface Props extends TabsProps {\n  activeTabIndex: number;\n  onItemClick: (index: number) => void;\n  themeProps: ThemingProps<'Tabs'>;\n  isLoading?: boolean;\n}\n\nconst AdaptiveTabsList = (props: Props) => {\n\n  const scrollDirection = useScrollDirection();\n  const listBgColor = useColorModeValue('white', 'black');\n  const isMobile = useIsMobile();\n\n  const tabsList = React.useMemo(() => {\n    return [ ...props.tabs, menuButton ];\n  }, [ props.tabs ]);\n\n  const { tabsCut, tabsRefs, listRef, rightSlotRef, leftSlotRef } = useAdaptiveTabs(tabsList, isMobile);\n  const isSticky = useIsSticky(listRef, 5, props.stickyEnabled);\n  useScrollToActiveTab({ activeTabIndex: props.activeTabIndex, listRef, tabsRefs, isMobile, isLoading: props.isLoading });\n\n  return (\n    <TabList\n      marginBottom={ 6 }\n      mx={{ base: '-12px', lg: 'unset' }}\n      px={{ base: '12px', lg: 'unset' }}\n      flexWrap=\"nowrap\"\n      alignItems=\"center\"\n      whiteSpace=\"nowrap\"\n      ref={ listRef }\n      overflowX={{ base: 'auto', lg: 'initial' }}\n      overscrollBehaviorX=\"contain\"\n      css={{\n        'scroll-snap-type': 'x mandatory',\n        'scroll-padding-inline': '12px', // mobile page padding\n        // hide scrollbar\n        '&::-webkit-scrollbar': { /* Chromiums */\n          display: 'none',\n        },\n        '-ms-overflow-style': 'none', /* IE and Edge */\n        'scrollbar-width': 'none', /* Firefox */\n      }}\n      bgColor={ listBgColor }\n      transitionProperty=\"top,box-shadow,background-color,color\"\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"ease\"\n      {\n        ...(props.stickyEnabled ? {\n          position: 'sticky',\n          boxShadow: { base: isSticky ? 'md' : 'none', lg: 'none' },\n          top: { base: scrollDirection === 'down' ? `0px` : `106px`, lg: 0 },\n          zIndex: { base: 'sticky2', lg: 'docked' },\n        } : { })\n      }\n      {\n        ...(typeof props.tabListProps === 'function' ?\n          props.tabListProps({ isSticky, activeTabIndex: props.activeTabIndex }) :\n          props.tabListProps)\n      }\n    >\n      { props.leftSlot && <Box ref={ leftSlotRef } { ...props.leftSlotProps }> { props.leftSlot } </Box> }\n      { tabsList.slice(0, props.isLoading ? 5 : Infinity).map((tab, index) => {\n        if (!tab.id) {\n          if (props.isLoading) {\n            return null;\n          }\n\n          return (\n            <TabsMenu\n              key=\"menu\"\n              tabs={ props.tabs }\n              activeTab={ props.tabs[props.activeTabIndex] }\n              tabsCut={ tabsCut }\n              isActive={ props.activeTabIndex >= tabsCut }\n              styles={ tabsCut < props.tabs.length ?\n              // initially our cut is 0 and we don't want to show the menu button too\n              // but we want to keep it in the tabs row so it won't collapse\n              // that's why we only change opacity but not the position itself\n                { opacity: tabsCut === 0 ? 0 : 1 } :\n                hiddenItemStyles\n              }\n              onItemClick={ props.onItemClick }\n              buttonRef={ tabsRefs[index] }\n              size={ props.themeProps.size || 'md' }\n            />\n          );\n        }\n\n        const isActive = index === props.activeTabIndex;\n\n        return (\n          <Tab\n            key={ tab.id.toString() }\n            ref={ tabsRefs[index] }\n            { ...(index < tabsCut ? {} : hiddenItemStyles) }\n            scrollSnapAlign=\"start\"\n            flexShrink={ 0 }\n            sx={{\n              '&:hover span': {\n                color: 'inherit',\n              },\n            }}\n            { ...(isActive ? { 'data-selected': true } : {}) }\n          >\n            <Skeleton isLoaded={ !props.isLoading }>\n              { typeof tab.title === 'function' ? tab.title() : tab.title }\n              <TabCounter count={ tab.count } isActive={ isActive }/>\n            </Skeleton>\n          </Tab>\n        );\n      }) }\n      {\n        props.rightSlot && tabsCut > 0 ?\n          <Box ref={ rightSlotRef } ml=\"auto\" { ...props.rightSlotProps }> { props.rightSlot } </Box> :\n          null\n      }\n    </TabList>\n  );\n};\n\nexport default React.memo(AdaptiveTabsList);\n","import type { LazyMode } from '@chakra-ui/lazy-utils';\nimport type { ChakraProps, ThemingProps } from '@chakra-ui/react';\nimport {\n  Tabs,\n  TabPanel,\n  TabPanels,\n  chakra,\n} from '@chakra-ui/react';\nimport { debounce } from 'es-toolkit';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport type { TabItem } from './types';\n\nimport isBrowser from 'lib/isBrowser';\n\nimport AdaptiveTabsList from './AdaptiveTabsList';\nimport { menuButton } from './utils';\n\nexport interface Props extends ThemingProps<'Tabs'> {\n  tabs: Array<TabItem>;\n  lazyBehavior?: LazyMode;\n  tabListProps?: ChakraProps | (({ isSticky, activeTabIndex }: { isSticky: boolean; activeTabIndex: number }) => ChakraProps);\n  rightSlot?: React.ReactNode;\n  rightSlotProps?: ChakraProps;\n  leftSlot?: React.ReactNode;\n  leftSlotProps?: ChakraProps;\n  stickyEnabled?: boolean;\n  onTabChange?: (index: number) => void;\n  defaultTabIndex?: number;\n  isLoading?: boolean;\n  className?: string;\n}\n\nconst TabsWithScroll = ({\n  tabs,\n  lazyBehavior,\n  tabListProps,\n  rightSlot,\n  rightSlotProps,\n  leftSlot,\n  leftSlotProps,\n  stickyEnabled,\n  onTabChange,\n  defaultTabIndex,\n  isLoading,\n  className,\n  ...themeProps\n}: Props) => {\n  const [ activeTabIndex, setActiveTabIndex ] = useState<number>(defaultTabIndex || 0);\n  const [ screenWidth, setScreenWidth ] = React.useState(isBrowser() ? window.innerWidth : 0);\n\n  const tabsRef = useRef<HTMLDivElement>(null);\n\n  const tabsList = React.useMemo(() => {\n    return [ ...tabs, menuButton ];\n  }, [ tabs ]);\n\n  const handleTabChange = React.useCallback((index: number) => {\n    if (isLoading) {\n      return;\n    }\n    onTabChange ? onTabChange(index) : setActiveTabIndex(index);\n  }, [ isLoading, onTabChange ]);\n\n  useEffect(() => {\n    if (defaultTabIndex !== undefined) {\n      setActiveTabIndex(defaultTabIndex);\n    }\n  }, [ defaultTabIndex ]);\n\n  React.useEffect(() => {\n    const resizeHandler = debounce(() => {\n      setScreenWidth(window.innerWidth);\n    }, 100);\n    const resizeObserver = new ResizeObserver(resizeHandler);\n\n    resizeObserver.observe(document.body);\n    return function cleanup() {\n      resizeObserver.unobserve(document.body);\n    };\n  }, []);\n\n  if (tabs.length === 1) {\n    return <div>{ tabs[0].component }</div>;\n  }\n\n  return (\n    <Tabs\n      className={ className }\n      variant={ themeProps.variant || 'soft-rounded' }\n      colorScheme={ themeProps.colorScheme || 'blue' }\n      isLazy\n      onChange={ handleTabChange }\n      index={ activeTabIndex }\n      position=\"relative\"\n      size={ themeProps.size || 'md' }\n      ref={ tabsRef }\n      lazyBehavior={ lazyBehavior }\n    >\n      <AdaptiveTabsList\n        // the easiest and most readable way to achieve correct tab's cut recalculation when\n        //    - screen is resized or\n        //    - tabs list is changed when API data is loaded\n        // is to do full re-render of the tabs list\n        // so we use screenWidth + tabIds as a key for the TabsList component\n        key={ isLoading + '_' + screenWidth + '_' + tabsList.map((tab) => tab.id).join(':') }\n        tabs={ tabs }\n        tabListProps={ tabListProps }\n        leftSlot={ leftSlot }\n        leftSlotProps={ leftSlotProps }\n        rightSlot={ rightSlot }\n        rightSlotProps={ rightSlotProps }\n        stickyEnabled={ stickyEnabled }\n        activeTabIndex={ activeTabIndex }\n        onItemClick={ handleTabChange }\n        themeProps={ themeProps }\n        isLoading={ isLoading }\n      />\n      <TabPanels>\n        { tabsList.map((tab) => (\n          <TabPanel padding={ 0 } key={ tab.id?.toString() || (typeof tab.title === 'string' ? tab.title : undefined) }>\n            { tab.component }\n          </TabPanel>\n        )) }\n      </TabPanels>\n    </Tabs>\n  );\n};\n\nexport default React.memo(chakra(TabsWithScroll));\n"],"names":["ADDRESS_HASH","ADDRESS_PARAMS","hash","implementations","is_contract","is_verified","name","private_tags","public_tags","watchlist_names","ens_domain_name","TX_HASH","timestamp","fee","type","value","gas_limit","block_number","status","method","confirmations","exchange_rate","to","transaction_burnt_fee","max_fee_per_gas","result","gas_price","priority_fee","base_fee_per_gas","from","token_transfers","transaction_types","gas_used","created_contract","position","nonce","has_error_in_internal_transactions","actions","decoded_input","token_transfers_overflow","raw_input","max_priority_fee_per_gas","revert_reason","confirmation_duration","transaction_tag","TX_ZKEVM_L2","TX","zkevm_batch_number","zkevm_sequence_hash","zkevm_status","zkevm_verify_hash","pending_transactions_count","transaction_fees_avg_24h","transaction_fees_sum_24h","transactions_count_24h","count","isActive","TabCounter","zeroCountColor","useColorModeValue","nonZeroCountColor","chakra","span","color","activeZeroColor","ml","fontSize","getDefaultTransitionProps","COUNTER_OVERLOAD","menuButton","id","title","middot","component","React","TabsMenu","tabs","tabsCut","styles","onItemClick","buttonRef","activeTab","size","isOpen","onClose","onOpen","useDisclosure","handleItemClick","tabIndex","event","currentTarget","getAttribute","Number","Popover","isLazy","placement","closeDelay","PopoverTrigger","Button","as","role","variant","ref","PopoverContent","w","PopoverBody","display","flexDir","slice","map","tab","index","onClick","justifyContent","data-index","sx","toString","hiddenItemStyles","top","left","visibility","scrollDirection","useScrollDirection","listBgColor","isMobile","useIsMobile","tabsList","props","tabsRefs","listRef","rightSlotRef","leftSlotRef","useAdaptiveTabs","disabled","setTabsCut","length","setTabsRefs","calculateCut","listWidth","current","getBoundingClientRect","width","rightSlotWidth","leftSlotWidth","tabWidths","menuWidth","visibleNum","reduce","item","array","accWidth","_","isSticky","useIsSticky","stickyEnabled","useScrollToActiveTab","activeTabIndex","isLoading","window","setTimeout","activeTabRef","containerWidth","activeTabWidth","filter","Boolean","rect","isWithinFirstPage","scrollTo","behavior","TabList","marginBottom","mx","base","lg","px","flexWrap","alignItems","whiteSpace","overflowX","overscrollBehaviorX","css","bgColor","transitionProperty","transitionDuration","transitionTimingFunction","boxShadow","zIndex","tabListProps","leftSlot","Box","leftSlotProps","Infinity","opacity","themeProps","Tab","scrollSnapAlign","flexShrink","Skeleton","isLoaded","rightSlot","rightSlotProps","TabsWithScroll","lazyBehavior","onTabChange","defaultTabIndex","className","setActiveTabIndex","useState","screenWidth","setScreenWidth","isBrowser","innerWidth","tabsRef","useRef","handleTabChange","useEffect","undefined","resizeObserver","ResizeObserver","resizeHandler","debounce","observe","document","body","cleanup","unobserve","div","Tabs","colorScheme","onChange","AdaptiveTabsList","join","TabPanels","TabPanel","padding"],"sourceRoot":"","ignoreList":[]}