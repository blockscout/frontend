{"version":3,"file":"static/chunks/6224-fa2ed110ef2c0f05.js","mappings":"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","sources":["webpack://_N_E/./lib/downloadBlob.ts","webpack://_N_E/./lib/saveAsCSV.ts","webpack://_N_E/./ui/shared/chart/FullscreenChartModal.tsx","webpack://_N_E/./ui/shared/chart/ChartMenu.tsx","webpack://_N_E/./icons/networks/logo-placeholder.svg","webpack://_N_E/./ui/shared/chart/ChartWatermarkIcon.tsx","webpack://_N_E/./ui/shared/chart/ChartAxis.tsx","webpack://_N_E/./ui/shared/chart/ChartGridLine.tsx","webpack://_N_E/./ui/shared/chart/ChartSelectionX.tsx","webpack://_N_E/./ui/shared/chart/ChartWidgetGraph.tsx","webpack://_N_E/./ui/shared/chart/ChartWidgetContent.tsx","webpack://_N_E/./ui/shared/chart/useZoom.tsx"],"sourcesContent":["export default function downloadBlob(blob: Blob, filename: string) {\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  link.click();\n\n  link.remove();\n  URL.revokeObjectURL(url);\n}\n","import { unparse } from 'papaparse';\n\nimport downloadBlob from 'lib/downloadBlob';\n\nexport default function saveAsCSV(headerRows: Array<string>, dataRows: Array<Array<string>>, filename: string) {\n  const csv = unparse([\n    headerRows,\n    ...dataRows,\n  ]);\n\n  const blob = new Blob([ csv ], { type: 'text/csv;charset=utf-8;' });\n\n  downloadBlob(blob, filename);\n}\n","import { Box, Button, Grid, Heading, Modal, ModalBody, ModalCloseButton, ModalContent, ModalOverlay, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TimeChartItem } from './types';\nimport type { Resolution } from '@blockscout/stats-types';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ChartWidgetContent from './ChartWidgetContent';\n\ntype Props = {\n  isOpen: boolean;\n  title: string;\n  description?: string;\n  items: Array<TimeChartItem>;\n  onClose: () => void;\n  units?: string;\n  resolution?: Resolution;\n  zoomRange?: [ Date, Date ];\n  handleZoom: (range: [ Date, Date ]) => void;\n  handleZoomReset: () => void;\n};\n\nconst FullscreenChartModal = ({\n  isOpen,\n  title,\n  description,\n  items,\n  units,\n  onClose,\n  resolution,\n  zoomRange,\n  handleZoom,\n  handleZoomReset,\n}: Props) => {\n  return (\n    <Modal\n      isOpen={ isOpen }\n      onClose={ onClose }\n      size=\"full\"\n      isCentered\n    >\n      <ModalOverlay/>\n\n      <ModalContent>\n\n        <Box\n          mb={ 1 }\n        >\n          <Grid\n            gridColumnGap={ 2 }\n          >\n            <Heading\n              mb={ 1 }\n              size={{ base: 'xs', sm: 'md' }}\n            >\n              { title }\n            </Heading>\n\n            { description && (\n              <Text\n                gridColumn={ 1 }\n                as=\"p\"\n                variant=\"secondary\"\n                fontSize=\"xs\"\n              >\n                { description }\n              </Text>\n            ) }\n\n            { Boolean(zoomRange) && (\n              <Button\n                leftIcon={ <IconSvg name=\"repeat\" w={ 4 } h={ 4 }/> }\n                colorScheme=\"blue\"\n                gridColumn={ 2 }\n                justifySelf=\"end\"\n                alignSelf=\"top\"\n                gridRow=\"1/3\"\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={ handleZoomReset }\n              >\n                Reset zoom\n              </Button>\n            ) }\n          </Grid>\n        </Box>\n\n        <ModalCloseButton/>\n\n        <ModalBody\n          h=\"100%\"\n          margin={{ bottom: 60 }}\n        >\n          <ChartWidgetContent\n            isEnlarged\n            items={ items }\n            units={ units }\n            handleZoom={ handleZoom }\n            zoomRange={ zoomRange }\n            title={ title }\n            resolution={ resolution }\n          />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default FullscreenChartModal;\n","import {\n  IconButton,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useClipboard,\n  useColorModeValue,\n  VisuallyHidden,\n} from '@chakra-ui/react';\nimport domToImage from 'dom-to-image';\nimport React from 'react';\n\nimport type { TimeChartItem } from './types';\nimport type { Resolution } from '@blockscout/stats-types';\n\nimport dayjs from 'lib/date/dayjs';\nimport isBrowser from 'lib/isBrowser';\nimport saveAsCSV from 'lib/saveAsCSV';\nimport Menu from 'ui/shared/chakra/Menu';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport FullscreenChartModal from './FullscreenChartModal';\n\nexport type Props = {\n  items?: Array<TimeChartItem>;\n  title: string;\n  description?: string;\n  units?: string;\n  isLoading: boolean;\n  chartRef: React.RefObject<HTMLDivElement>;\n  chartUrl?: string;\n  resolution?: Resolution;\n  zoomRange?: [ Date, Date ];\n  handleZoom: (range: [ Date, Date ]) => void;\n  handleZoomReset: () => void;\n};\n\nconst DOWNLOAD_IMAGE_SCALE = 5;\n\nconst ChartMenu = ({\n  items,\n  title,\n  description,\n  units,\n  isLoading,\n  chartRef,\n  chartUrl,\n  resolution,\n  zoomRange,\n  handleZoom,\n  handleZoomReset,\n}: Props) => {\n  const pngBackgroundColor = useColorModeValue('white', 'black');\n  const [ isFullscreen, setIsFullscreen ] = React.useState(false);\n\n  const { onCopy } = useClipboard(chartUrl ?? '');\n\n  const isInBrowser = isBrowser();\n\n  const showChartFullscreen = React.useCallback(() => {\n    setIsFullscreen(true);\n  }, []);\n\n  const clearFullscreenChart = React.useCallback(() => {\n    setIsFullscreen(false);\n  }, []);\n\n  const handleFileSaveClick = React.useCallback(() => {\n    // wait for context menu to close\n    setTimeout(() => {\n      if (chartRef.current) {\n        domToImage.toPng(chartRef.current,\n          {\n            quality: 100,\n            bgcolor: pngBackgroundColor,\n            width: chartRef.current.offsetWidth * DOWNLOAD_IMAGE_SCALE,\n            height: chartRef.current.offsetHeight * DOWNLOAD_IMAGE_SCALE,\n            filter: (node) => node.nodeName !== 'BUTTON',\n            style: {\n              borderColor: 'transparent',\n              transform: `scale(${ DOWNLOAD_IMAGE_SCALE })`,\n              'transform-origin': 'top left',\n            },\n          })\n          .then((dataUrl) => {\n            const link = document.createElement('a');\n            link.download = `${ title } (Blockscout chart).png`;\n            link.href = dataUrl;\n            link.click();\n            link.remove();\n          });\n      }\n    }, 100);\n  }, [ pngBackgroundColor, title, chartRef ]);\n\n  const handleSVGSavingClick = React.useCallback(() => {\n    if (items) {\n      const headerRows = [\n        'Date', 'Value',\n      ];\n      const dataRows = items.map((item) => [\n        dayjs(item.date).format('YYYY-MM-DD'), String(item.value),\n      ]);\n\n      saveAsCSV(headerRows, dataRows, `${ title } (Blockscout stats)`);\n    }\n  }, [ items, title ]);\n\n  // TS thinks window.navigator.share can't be undefined, but it can\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const hasShare = isInBrowser && (window.navigator.share as any);\n\n  const handleShare = React.useCallback(async() => {\n    try {\n      await window.navigator.share({\n        title: title,\n        text: description,\n        url: chartUrl,\n      });\n    } catch (error) {}\n  }, [ title, description, chartUrl ]);\n\n  return (\n    <>\n      <Menu>\n        <Skeleton isLoaded={ !isLoading } borderRadius=\"base\">\n          <MenuButton\n            w=\"36px\"\n            h=\"32px\"\n            icon={ <IconSvg name=\"dots\" boxSize={ 4 } transform=\"rotate(-90deg)\"/> }\n            colorScheme=\"gray\"\n            variant=\"simple\"\n            as={ IconButton }\n          >\n            <VisuallyHidden>\n              Open chart options menu\n            </VisuallyHidden>\n          </MenuButton>\n        </Skeleton>\n        <MenuList>\n          { chartUrl && (\n            <MenuItem\n              display=\"flex\"\n              alignItems=\"center\"\n              onClick={ hasShare ? handleShare : onCopy }\n              closeOnSelect={ hasShare ? false : true }\n            >\n              <IconSvg name={ hasShare ? 'share' : 'copy' } boxSize={ 5 } mr={ 3 }/>\n              { hasShare ? 'Share' : 'Copy link' }\n            </MenuItem>\n          ) }\n          <MenuItem\n            display=\"flex\"\n            alignItems=\"center\"\n            onClick={ showChartFullscreen }\n          >\n            <IconSvg name=\"scope\" boxSize={ 5 } mr={ 3 }/>\n            View fullscreen\n          </MenuItem>\n          <MenuItem\n            display=\"flex\"\n            alignItems=\"center\"\n            onClick={ handleFileSaveClick }\n          >\n            <IconSvg name=\"files/image\" boxSize={ 5 } mr={ 3 }/>\n            Save as PNG\n          </MenuItem>\n          <MenuItem\n            display=\"flex\"\n            alignItems=\"center\"\n            onClick={ handleSVGSavingClick }\n          >\n            <IconSvg name=\"files/csv\" boxSize={ 5 } mr={ 3 }/>\n            Save as CSV\n          </MenuItem>\n        </MenuList>\n      </Menu>\n      { items && isFullscreen && (\n        <FullscreenChartModal\n          isOpen\n          items={ items }\n          title={ title }\n          description={ description }\n          onClose={ clearFullscreenChart }\n          units={ units }\n          resolution={ resolution }\n          zoomRange={ zoomRange }\n          handleZoom={ handleZoom }\n          handleZoomReset={ handleZoomReset }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default ChartMenu;\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgLogoPlaceholder = function SvgLogoPlaceholder(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 120 24\"\n  }, props), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 3a1 1 0 0 0-1-1H4.52a1 1 0 0 0-1 1v2.167a1 1 0 0 1-1 1H1a1 1 0 0 0-1 1V21a1 1 0 0 0 1 1h2.188a1 1 0 0 0 1-1V7.167a1 1 0 0 1 1-1H6.71a1 1 0 0 0 1-1zm8.404 0a1 1 0 0 0-1-1h-2.188a1 1 0 0 0-1 1v2.167a1 1 0 0 0 1 1h1.376a1 1 0 0 1 1 1V21a1 1 0 0 0 1 1h2.188a1 1 0 0 0 1-1V7.167a1 1 0 0 0-1-1h-1.376a1 1 0 0 1-1-1zm-4.246 7.976a1 1 0 0 0-1-1H8.68a1 1 0 0 0-1 1v6.095a1 1 0 0 0 1 1h2.188a1 1 0 0 0 1-1z\",\n    clipRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.702 6.533h4.948c2.095 0 3.23 1.103 3.23 2.69a2.466 2.466 0 0 1-1.495 2.344v.052a2.81 2.81 0 0 1 1.463 1.049 2.83 2.83 0 0 1 .53 1.725c0 1.774-1.228 3.17-3.453 3.17h-5.223zm4.982 4.482c.79 0 1.357-.585 1.357-1.477 0-.89-.567-1.476-1.357-1.476h-3.139v2.953zm.223 5.032c.945 0 1.632-.724 1.632-1.775s-.687-1.758-1.632-1.758h-3.362v3.533zm5.773-8.202h-1.036V6.181h2.851v11.375h-1.82zm3.501 5.635c0-2.5 1.84-4.343 4.383-4.343s4.398 1.827 4.398 4.342c0 2.516-1.838 4.325-4.398 4.325s-4.383-1.826-4.383-4.325zm3.902 2.687h.982c1.117 0 2.096-1.189 2.096-2.688s-.982-2.707-2.096-2.707h-.982c-1.116 0-2.095 1.23-2.095 2.707s.979 2.688 2.095 2.688zm6.062-2.705c0-2.55 1.755-4.325 4.28-4.325 2.027 0 3.625 1.051 3.882 3.2h-1.769c-.172-1.085-.945-1.568-1.735-1.568h-.859c-1.1 0-1.993 1.206-1.993 2.708s.893 2.722 1.993 2.722h.859a1.75 1.75 0 0 0 1.187-.459 1.76 1.76 0 0 0 .565-1.143h1.77c-.246 2.12-1.856 3.222-3.927 3.222-2.518-.015-4.253-1.807-4.253-4.357zm9.809-7.281h1.804v6.274h1.308l2.44-3.084h2.06L66.56 13.18l3.144 4.377H67.54l-2.629-3.619h-1.153v3.619h-1.804zm8.575 8.918h1.735c.086.724.532 1.189 1.472 1.189h1.136c.808 0 1.186-.414 1.186-.965s-.31-.879-1.048-.985l-1.91-.246c-1.614-.19-2.336-1.154-2.336-2.412 0-1.654 1.227-2.55 3.419-2.55 2.098 0 3.37.844 3.436 2.722h-1.735c-.086-.706-.378-1.206-1.272-1.206H73.58c-.773 0-1.134.414-1.134.948s.344.896 1.083 1l1.926.245c1.563.19 2.285 1.034 2.285 2.344 0 1.688-1.117 2.619-3.59 2.619-2.393.002-3.554-.911-3.62-2.703zm8.344-1.637c0-2.55 1.752-4.325 4.28-4.325 2.027 0 3.624 1.051 3.882 3.2h-1.77c-.171-1.085-.944-1.568-1.735-1.568h-.858c-1.102 0-1.996 1.206-1.996 2.708s.894 2.722 1.996 2.722h.858a1.75 1.75 0 0 0 1.188-.459 1.76 1.76 0 0 0 .565-1.143h1.77c-.246 2.12-1.856 3.222-3.927 3.222-2.516-.015-4.253-1.807-4.253-4.357zm9.325.018c0-2.5 1.838-4.343 4.38-4.343 2.543 0 4.401 1.827 4.401 4.342 0 2.516-1.838 4.325-4.4 4.325s-4.38-1.826-4.38-4.325zm3.9 2.687h.982c1.116 0 2.098-1.189 2.098-2.688s-.982-2.707-2.098-2.707h-.982c-1.117 0-2.096 1.23-2.096 2.707s.984 2.688 2.1 2.688zm6.378-1.637V9.381h1.804v4.842c0 1.189.601 1.895 1.391 1.895h.982c.842 0 1.598-.775 1.598-1.895V9.38h1.806v8.184h-1.755v-1.12c-.491.845-1.357 1.362-2.68 1.362-1.978-.003-3.146-1.157-3.146-3.277zm10.582 1.12v-4.677h-1.58V9.381h1.58V7.087h1.821V9.38h2.13v1.585h-2.13v4.17c0 .534.172.793.756.793h1.443v1.636h-1.963c-1.321-.002-2.057-.691-2.057-1.915z\"\n  }))));\n};\nexport default SvgLogoPlaceholder;","import type { IconProps } from '@chakra-ui/react';\nimport { Icon, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\n// eslint-disable-next-line no-restricted-imports\nimport logoIcon from 'icons/networks/logo-placeholder.svg';\n\nconst ChartWatermarkIcon = (props: IconProps) => {\n  const watermarkColor = useColorModeValue('link', 'white');\n  return (\n    <Icon\n      { ...props }\n      as={ logoIcon }\n      position=\"absolute\"\n      opacity={ 0.1 }\n      top=\"50%\"\n      left=\"50%\"\n      transform=\"translate(-50%, -50%)\"\n      pointerEvents=\"none\"\n      viewBox=\"0 0 114 20\"\n      color={ watermarkColor }\n    />\n  );\n};\n\nexport default ChartWatermarkIcon;\n","import { useColorModeValue, useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\ninterface Props extends Omit<React.SVGProps<SVGGElement>, 'scale'> {\n  type: 'left' | 'bottom';\n  scale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  noAnimation?: boolean;\n  ticks: number;\n  tickFormatGenerator?: (axis: d3.Axis<d3.NumberValue>) => (domainValue: d3.AxisDomain, index: number) => string;\n  anchorEl?: SVGRectElement | null;\n}\n\nconst ChartAxis = ({ type, scale, ticks, tickFormatGenerator, noAnimation, anchorEl, ...props }: Props) => {\n  const ref = React.useRef<SVGGElement>(null);\n\n  const textColorToken = useColorModeValue('blackAlpha.600', 'whiteAlpha.500');\n  const textColor = useToken('colors', textColorToken);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const axisGenerator = type === 'left' ? d3.axisLeft : d3.axisBottom;\n    const axis = axisGenerator(scale).ticks(ticks);\n\n    if (tickFormatGenerator) {\n      axis.tickFormat(tickFormatGenerator(axis));\n    }\n\n    const axisGroup = d3.select(ref.current);\n\n    if (noAnimation) {\n      axisGroup.call(axis);\n    } else {\n      axisGroup.transition().duration(750).ease(d3.easeLinear).call(axis);\n    }\n    axisGroup.select('.domain').remove();\n    axisGroup.selectAll('line').remove();\n    axisGroup.selectAll('text')\n      .attr('opacity', 1)\n      .attr('color', textColor)\n      .attr('font-size', '0.75rem');\n  }, [ scale, ticks, tickFormatGenerator, noAnimation, type, textColor ]);\n\n  React.useEffect(() => {\n    if (!anchorEl) {\n      return;\n    }\n\n    const anchorD3 = d3.select(anchorEl);\n\n    anchorD3\n      .on('mouseout.axisX', () => {\n        d3.select(ref.current)\n          .selectAll('text')\n          .style('font-weight', 'normal');\n      })\n      .on('mousemove.axisX', (event) => {\n        const [ x ] = d3.pointer(event, anchorEl);\n        const xDate = scale.invert(x);\n        const textElements = d3.select(ref.current).selectAll('text');\n        const data = textElements.data();\n        const index = d3.bisector((d) => d).left(data, xDate);\n        textElements\n          .style('font-weight', (d, i) => i === index - 1 ? 'bold' : 'normal');\n      });\n\n    return () => {\n      anchorD3.on('mouseout.axisX mousemove.axisX', null);\n    };\n  }, [ anchorEl, scale ]);\n\n  return <g ref={ ref } { ...props }/>;\n};\n\nexport default React.memo(ChartAxis);\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\ninterface Props extends Omit<React.SVGProps<SVGGElement>, 'scale'> {\n  type: 'vertical' | 'horizontal';\n  scale: d3.ScaleTime<number, number> | d3.ScaleLinear<number, number>;\n  noAnimation?: boolean;\n  size: number;\n  ticks: number;\n}\n\nconst ChartGridLine = ({ type, scale, ticks, size, noAnimation, ...props }: Props) => {\n  const ref = React.useRef<SVGGElement>(null);\n\n  const strokeColor = useToken('colors', 'divider');\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const axisGenerator = type === 'vertical' ? d3.axisBottom : d3.axisLeft;\n    const axis = axisGenerator(scale).ticks(ticks).tickSize(-size);\n\n    const gridGroup = d3.select(ref.current);\n    if (noAnimation) {\n      gridGroup.call(axis);\n    } else {\n      gridGroup.transition().duration(750).ease(d3.easeLinear).call(axis);\n    }\n    gridGroup.select('.domain').remove();\n    gridGroup.selectAll('text').remove();\n    gridGroup.selectAll('line').attr('stroke', strokeColor);\n  }, [ scale, ticks, size, noAnimation, type, strokeColor ]);\n\n  return <g ref={ ref } { ...props }/>;\n};\n\nexport default React.memo(ChartGridLine);\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport type { TimeChartData, TimeChartItem } from 'ui/shared/chart/types';\n\nimport dayjs from 'lib/date/dayjs';\n\nconst SELECTION_THRESHOLD = 2;\n\ninterface Props {\n  height: number;\n  anchorEl?: SVGRectElement | null;\n  scale: d3.ScaleTime<number, number>;\n  data: TimeChartData;\n  onSelect: (range: [Date, Date]) => void;\n}\n\nconst ChartSelectionX = ({ anchorEl, height, scale, data, onSelect }: Props) => {\n  const borderColor = useToken('colors', 'blue.200');\n\n  const ref = React.useRef(null);\n  const isActive = React.useRef(false);\n  const startX = React.useRef<number>();\n  const endX = React.useRef<number>();\n\n  const getIndexByX = React.useCallback((x: number) => {\n    const xDate = scale.invert(x);\n    const bisectDate = d3.bisector<TimeChartItem, unknown>((d) => d.date).left;\n    return bisectDate(data[0].items, xDate, 1);\n  }, [ data, scale ]);\n\n  const drawSelection = React.useCallback((x0: number, x1: number) => {\n    const diffX = x1 - x0;\n\n    d3.select(ref.current)\n      .attr('opacity', 1);\n\n    d3.select(ref.current)\n      .select('.ChartSelectionX__line_left')\n      .attr('x1', x0)\n      .attr('x2', x0);\n\n    d3.select(ref.current)\n      .select('.ChartSelectionX__line_right')\n      .attr('x1', x1)\n      .attr('x2', x1);\n\n    d3.select(ref.current)\n      .select('.ChartSelectionX__rect')\n      .attr('x', diffX > 0 ? x0 : diffX + x0)\n      .attr('width', Math.abs(diffX));\n  }, []);\n\n  const handleSelect = React.useCallback((x0: number, x1: number) => {\n    const startDate = scale.invert(x0);\n    const endDate = scale.invert(x1);\n\n    if (Math.abs(dayjs(startDate).diff(endDate, 'day')) > SELECTION_THRESHOLD) {\n      onSelect([ dayjs.min(dayjs(startDate), dayjs(endDate)).toDate(), dayjs.max(dayjs(startDate), dayjs(endDate)).toDate() ]);\n    }\n  }, [ onSelect, scale ]);\n\n  const cleanUp = React.useCallback(() => {\n    isActive.current = false;\n    startX.current = undefined;\n    endX.current = undefined;\n    d3.select(ref.current).attr('opacity', 0);\n  }, [ ]);\n\n  const handelMouseUp = React.useCallback(() => {\n    if (!isActive.current) {\n      return;\n    }\n\n    if (startX.current && endX.current) {\n      handleSelect(startX.current, endX.current);\n    }\n\n    cleanUp();\n  }, [ cleanUp, handleSelect ]);\n\n  React.useEffect(() => {\n    if (!anchorEl) {\n      return;\n    }\n\n    const anchorD3 = d3.select(anchorEl);\n\n    anchorD3\n      .on('mousedown.selectionX', (event: MouseEvent) => {\n        const [ x ] = d3.pointer(event, anchorEl);\n        isActive.current = true;\n        startX.current = x;\n      })\n      .on('mousemove.selectionX', (event: MouseEvent) => {\n        if (isActive.current) {\n          const [ x ] = d3.pointer(event, anchorEl);\n          startX.current && drawSelection(startX.current, x);\n          endX.current = x;\n        }\n      })\n      .on('mouseup.selectionX', handelMouseUp)\n      .on('touchstart.selectionX', (event: TouchEvent) => {\n        const pointers = d3.pointers(event, anchorEl);\n        isActive.current = pointers.length === 2;\n      })\n      .on('touchmove.selectionX', (event: TouchEvent) => {\n        if (isActive.current) {\n          const pointers = d3.pointers(event, anchorEl);\n\n          if (pointers.length === 2 && Math.abs(pointers[0][0] - pointers[1][0]) > 5) {\n            drawSelection(pointers[0][0], pointers[1][0]);\n\n            startX.current = pointers[0][0];\n            endX.current = pointers[1][0];\n          }\n        }\n      })\n      .on('touchend.selectionX', handelMouseUp);\n\n    d3.select('body').on('mouseup.selectionX', function(event) {\n      const isOutside = startX.current !== undefined && event.target !== anchorD3.node();\n      if (isOutside) {\n        handelMouseUp();\n      }\n    });\n\n    return () => {\n      anchorD3.on('.selectionX', null);\n      d3.select('body').on('.selectionX', null);\n    };\n  }, [ anchorEl, cleanUp, drawSelection, getIndexByX, handelMouseUp, handleSelect ]);\n\n  return (\n    <g className=\"ChartSelectionX\" ref={ ref } opacity={ 0 }>\n      <rect className=\"ChartSelectionX__rect\" width={ 0 } height={ height } fill=\"rgba(66, 153, 225, 0.1)\"/>\n      <line className=\"ChartSelectionX__line ChartSelectionX__line_left\" x1={ 0 } x2={ 0 } y1={ 0 } y2={ height } stroke={ borderColor }/>\n      <line className=\"ChartSelectionX__line ChartSelectionX__line_right\" x1={ 0 } x2={ 0 } y1={ 0 } y2={ height } stroke={ borderColor }/>\n    </g>\n  );\n};\n\nexport default React.memo(ChartSelectionX);\n","import { useToken } from '@chakra-ui/react';\nimport * as d3 from 'd3';\nimport React from 'react';\n\nimport { Resolution } from '@blockscout/stats-types';\nimport type { ChartMargin, TimeChartData, TimeChartItem } from 'ui/shared/chart/types';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport ChartArea from 'ui/shared/chart/ChartArea';\nimport ChartAxis from 'ui/shared/chart/ChartAxis';\nimport ChartGridLine from 'ui/shared/chart/ChartGridLine';\nimport ChartLine from 'ui/shared/chart/ChartLine';\nimport ChartOverlay from 'ui/shared/chart/ChartOverlay';\nimport ChartSelectionX from 'ui/shared/chart/ChartSelectionX';\nimport ChartTooltip from 'ui/shared/chart/ChartTooltip';\nimport useTimeChartController from 'ui/shared/chart/useTimeChartController';\n\ninterface Props {\n  isEnlarged?: boolean;\n  title: string;\n  units?: string;\n  items: Array<TimeChartItem>;\n  zoomRange?: [ Date, Date ];\n  onZoom: (range: [ Date, Date ]) => void;\n  margin?: ChartMargin;\n  noAnimation?: boolean;\n  resolution?: Resolution;\n}\n\nconst DEFAULT_CHART_MARGIN = { bottom: 20, left: 10, right: 20, top: 10 };\n\nconst ChartWidgetGraph = ({\n  isEnlarged,\n  items,\n  onZoom,\n  title,\n  margin: marginProps,\n  units,\n  noAnimation,\n  resolution,\n  zoomRange,\n}: Props) => {\n  const isMobile = useIsMobile();\n  const color = useToken('colors', 'blue.200');\n  const chartId = `chart-${ title.split(' ').join('') }-${ isEnlarged ? 'fullscreen' : 'small' }`;\n\n  const overlayRef = React.useRef<SVGRectElement>(null);\n\n  const range = React.useMemo(() => zoomRange || [ items[0].date, items[items.length - 1].date ], [ zoomRange, items ]);\n\n  const displayedData = React.useMemo(() =>\n    items\n      .filter((item) => item.date >= range[0] && item.date <= range[1])\n      .map((item) => ({\n        ...item,\n        dateLabel: getDateLabel(item.date, item.date_to, resolution),\n      })),\n  [ items, range, resolution ]);\n\n  const chartData: TimeChartData = React.useMemo(() => ([ { items: displayedData, name: 'Value', color, units } ]), [ color, displayedData, units ]);\n\n  const margin: ChartMargin = React.useMemo(() => ({ ...DEFAULT_CHART_MARGIN, ...marginProps }), [ marginProps ]);\n  const axesConfig = React.useMemo(() => {\n    return {\n      x: {\n        ticks: isEnlarged && !isMobile ? 8 : 4,\n      },\n      y: {\n        ticks: isEnlarged ? 6 : 3,\n        nice: true,\n      },\n    };\n  }, [ isEnlarged, isMobile ]);\n\n  const {\n    ref,\n    rect,\n    innerWidth,\n    innerHeight,\n    chartMargin,\n    axes,\n  } = useTimeChartController({\n    data: chartData,\n    margin,\n    axesConfig,\n  });\n\n  return (\n    <svg width=\"100%\" height=\"100%\" ref={ ref } cursor=\"pointer\" id={ chartId } opacity={ rect ? 1 : 0 }>\n\n      <g transform={ `translate(${ chartMargin?.left || 0 },${ chartMargin?.top || 0 })` }>\n        <ChartGridLine\n          type=\"horizontal\"\n          scale={ axes.y.scale }\n          ticks={ axesConfig.y.ticks }\n          size={ innerWidth }\n          noAnimation\n        />\n\n        <ChartArea\n          id={ chartId }\n          data={ displayedData }\n          color={ color }\n          xScale={ axes.x.scale }\n          yScale={ axes.y.scale }\n          noAnimation={ noAnimation }\n        />\n\n        <ChartLine\n          data={ displayedData }\n          xScale={ axes.x.scale }\n          yScale={ axes.y.scale }\n          stroke={ color }\n          animation=\"none\"\n          strokeWidth={ isMobile ? 1 : 2 }\n        />\n\n        <ChartAxis\n          type=\"left\"\n          scale={ axes.y.scale }\n          ticks={ axesConfig.y.ticks }\n          tickFormatGenerator={ axes.y.tickFormatter }\n          noAnimation\n        />\n\n        <ChartAxis\n          type=\"bottom\"\n          scale={ axes.x.scale }\n          transform={ `translate(0, ${ innerHeight })` }\n          ticks={ axesConfig.x.ticks }\n          anchorEl={ overlayRef.current }\n          tickFormatGenerator={ axes.x.tickFormatter }\n          noAnimation\n        />\n\n        <ChartOverlay ref={ overlayRef } width={ innerWidth } height={ innerHeight }>\n          <ChartTooltip\n            anchorEl={ overlayRef.current }\n            width={ innerWidth }\n            tooltipWidth={ (resolution === Resolution.WEEK) ? 280 : 200 }\n            height={ innerHeight }\n            xScale={ axes.x.scale }\n            yScale={ axes.y.scale }\n            data={ chartData }\n            noAnimation={ noAnimation }\n            resolution={ resolution }\n          />\n\n          <ChartSelectionX\n            anchorEl={ overlayRef.current }\n            height={ innerHeight }\n            scale={ axes.x.scale }\n            data={ chartData }\n            onSelect={ onZoom }\n          />\n        </ChartOverlay>\n      </g>\n    </svg>\n  );\n};\n\nexport default React.memo(ChartWidgetGraph);\n\nfunction getDateLabel(date: Date, dateTo?: Date, resolution?: Resolution): string {\n  switch (resolution) {\n    case Resolution.WEEK:\n      return d3.timeFormat('%e %b %Y')(date) + (dateTo ? ` – ${ d3.timeFormat('%e %b %Y')(dateTo) }` : '');\n    case Resolution.MONTH:\n      return d3.timeFormat('%b %Y')(date);\n    case Resolution.YEAR:\n      return d3.timeFormat('%Y')(date);\n    default:\n      return d3.timeFormat('%e %b %Y')(date);\n  }\n}\n","import { Box, Center, Flex, Link, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TimeChartItem } from './types';\nimport type { Resolution } from '@blockscout/stats-types';\n\nimport { apos } from 'lib/html-entities';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport ChartWatermarkIcon from './ChartWatermarkIcon';\nimport ChartWidgetGraph from './ChartWidgetGraph';\n\nexport type Props = {\n  items?: Array<TimeChartItem>;\n  title: string;\n  units?: string;\n  isLoading?: boolean;\n  isError?: boolean;\n  emptyText?: string;\n  zoomRange?: [ Date, Date ];\n  handleZoom: (range: [ Date, Date ]) => void;\n  isEnlarged?: boolean;\n  noAnimation?: boolean;\n  resolution?: Resolution;\n};\n\nconst ChartWidgetContent = ({\n  items,\n  title,\n  isLoading,\n  isError,\n  units,\n  emptyText,\n  zoomRange,\n  handleZoom,\n  isEnlarged,\n  noAnimation,\n  resolution,\n}: Props) => {\n  const hasItems = items && items.length > 2;\n\n  if (isError) {\n    return (\n      <Flex\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexGrow={ 1 }\n        py={ 4 }\n      >\n        <Text\n          variant=\"secondary\"\n          fontSize=\"sm\"\n          textAlign=\"center\"\n        >\n          { `The data didn${ apos }t load. Please, ` }\n          <Link href={ window.document.location.href }>try to reload the page.</Link>\n        </Text>\n      </Flex>\n    );\n  }\n\n  if (isLoading) {\n    return <Skeleton flexGrow={ 1 } w=\"100%\"/>;\n  }\n\n  if (!hasItems) {\n    return (\n      <Center flexGrow={ 1 }>\n        <Text variant=\"secondary\" fontSize=\"sm\">{ emptyText || 'No data' }</Text>\n      </Center>\n    );\n  }\n\n  return (\n    <Box flexGrow={ 1 } maxW=\"100%\" position=\"relative\" h=\"100%\">\n      <ChartWidgetGraph\n        items={ items }\n        zoomRange={ zoomRange }\n        onZoom={ handleZoom }\n        title={ title }\n        units={ units }\n        isEnlarged={ isEnlarged }\n        noAnimation={ noAnimation }\n        resolution={ resolution }\n      />\n      <ChartWatermarkIcon w=\"162px\" h=\"15%\"/>\n    </Box>\n  );\n};\n\nexport default React.memo(ChartWidgetContent);\n","import React from 'react';\n\nexport default function useZoom() {\n  const [ isZoomResetInitial, setIsZoomResetInitial ] = React.useState(true);\n  const [ zoomRange, setZoomRange ] = React.useState<[ Date, Date ] | undefined>();\n\n  const handleZoom = React.useCallback((range: [ Date, Date ]) => {\n    setZoomRange(range);\n    setIsZoomResetInitial(false);\n  }, []);\n\n  const handleZoomReset = React.useCallback(() => {\n    setZoomRange(undefined);\n    setIsZoomResetInitial(true);\n  }, []);\n\n  return {\n    isZoomResetInitial,\n    zoomRange,\n    handleZoom,\n    handleZoomReset,\n  };\n}\n"],"names":["downloadBlob","blob","filename","url","URL","createObjectURL","link","document","createElement","setAttribute","click","remove","revokeObjectURL","isOpen","title","FullscreenChartModal","description","items","units","onClose","resolution","zoomRange","handleZoom","handleZoomReset","Modal","size","isCentered","ModalOverlay","ModalContent","Box","mb","Grid","gridColumnGap","Heading","base","sm","Text","gridColumn","as","variant","fontSize","Boolean","Button","leftIcon","IconSvg","name","w","h","colorScheme","justifySelf","alignSelf","gridRow","onClick","ModalCloseButton","ModalBody","margin","bottom","ChartWidgetContent","isEnlarged","ChartMenu","isLoading","chartRef","chartUrl","pngBackgroundColor","useColorModeValue","isFullscreen","setIsFullscreen","React","onCopy","useClipboard","isInBrowser","isBrowser","showChartFullscreen","clearFullscreenChart","handleFileSaveClick","setTimeout","current","domToImage","quality","bgcolor","width","offsetWidth","height","DOWNLOAD_IMAGE_SCALE","offsetHeight","filter","node","nodeName","style","borderColor","transform","then","download","href","dataUrl","handleSVGSavingClick","saveAsCSV","dataRows","Blob","unparse","headerRows","type","map","dayjs","item","date","format","String","value","hasShare","window","navigator","share","handleShare","text","error","Menu","Skeleton","isLoaded","borderRadius","MenuButton","icon","boxSize","IconButton","VisuallyHidden","MenuList","MenuItem","display","alignItems","closeOnSelect","mr","watermarkColor","ChartWatermarkIcon","Icon","props","logoIcon","position","opacity","top","left","pointerEvents","viewBox","color","ChartAxis","scale","ticks","tickFormatGenerator","noAnimation","anchorEl","ref","textColorToken","textColor","useToken","axis","axisGenerator","d3","tickFormat","axisGroup","call","transition","duration","ease","select","selectAll","attr","anchorD3","on","event","x","xDate","invert","textElements","data","index","d","i","g","strokeColor","tickSize","gridGroup","ChartSelectionX","onSelect","isActive","startX","endX","getIndexByX","bisectDate","drawSelection","x0","x1","diffX","Math","abs","handleSelect","startDate","endDate","diff","SELECTION_THRESHOLD","min","toDate","max","cleanUp","undefined","handelMouseUp","pointers","length","target","className","rect","fill","line","x2","y1","y2","stroke","DEFAULT_CHART_MARGIN","right","ChartWidgetGraph","onZoom","marginProps","isMobile","useIsMobile","chartId","split","join","overlayRef","range","displayedData","dateLabel","getDateLabel","dateTo","Resolution","WEEK","MONTH","YEAR","date_to","chartData","axesConfig","y","nice","innerWidth","innerHeight","chartMargin","axes","useTimeChartController","svg","cursor","id","ChartGridLine","ChartArea","xScale","yScale","ChartLine","animation","strokeWidth","tickFormatter","ChartOverlay","ChartTooltip","tooltipWidth","isError","emptyText","hasItems","Flex","justifyContent","flexGrow","py","textAlign","apos","Link","location","maxW","Center","useZoom","isZoomResetInitial","setIsZoomResetInitial","setZoomRange"],"sourceRoot":"","ignoreList":[]}