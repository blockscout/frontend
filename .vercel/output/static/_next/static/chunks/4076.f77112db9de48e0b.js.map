{"version":3,"file":"static/chunks/4076.f77112db9de48e0b.js","mappings":"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AqB,QAAQ,IAC7B,eAAoB,QAAQ,IAC5B,eAAoB,QAAQ,GAC5B,EAAG,CAwBH,aAvBA,cACA,KACA,MACA,gBAAqB,QAAQ,IAC7B,eAAoB,QAAQ,IAC5B,eAAoB,QAAQ,GAC5B,EAAG,CAkBH,WACA,CACA,CACA,cACA,mBACA,mBACA,6HC7MA,MAAiD,OAAa,EAC9D,yBACA,SACA,CAAC,EACD,EAAiB,OAAU,SAC3B,IACA,cACA,OACA,UACA,WACA,YACA,aACA,cACA,KACA,CAAI,EACJ,OAAU,gDAAiD,CAAE,MAAa,IAC1E,EAAgB,aAAO,CACvB,MACA,OACA,OACA,WACA,cACA,QACA,UACA,aACA,aACA,EAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,MAAyB,SAAG,IAAuB,iBAAwC,SAAG,CAC1F,GAAM,KACV,CACA,UACA,UAAiB,QAAE,yBACnB,UACA,EACA,CAAK,CACL,CAAC,CACD,mGCrDA,eAAiC,EACjC,IACA,WACA,QACA,eACA,OACA,aACA,cACA,WACA,KACA,CAAI,EACJ,MAAiC,cAAQ,QACzC,aACA,QACA,EAAc,YAAM,OACpB,EAAgB,iBAAW,MAC3B,gBACA,MACA,OACA,qCACA,kBACA,GAEA,MACA,UACA,MACA,CACA,yBACA,wBACA,mBACA,CAAG,KACH,EAAe,WAAK,GACpB,WAAgC,EAAK,EACrC,OACA,EAAmB,iBAAW,CAC9B,IACA,MAtCA,GAAkB,QAAQ,CAsC1B,IAtCqC,QAAQ,CAsC7C,EAtC6C,QAsC7C,iBACA,GACA,KAEA,qBACA,CAAK,CACL,OA0BA,OACA,aAzBuB,iBAAW,CAClC,KAAgB,YAChB,KACA,IAAW,QAAS,MACpB,iBACA,EAAK,CACL,IAoBA,cAlBwB,iBAAW,CACnC,KAAgB,WAChB,8BACA,OACA,KACA,MACA,OACA,+BACA,YACA,IACA,CAAS,CACT,oBACA,CACA,CAAK,CACL,WAKA,OACA,MACA,QACA,WACA,QACA,WACA,aACA,cACA,WACA,CACA,oCCxFA,gBACA,8BACA,0DAEA,4BACA,WACA,YAAwB,IAAqB,KAC7C,UACA,KACA,kBACA,CACA,QACA","sources":["webpack://_N_E/./stubs/arbitrumL2.ts","webpack://_N_E/./ui/txnBatches/arbitrumL2/ArbitrumL2TxnBatchDetailsDA.tsx","webpack://_N_E/./ui/txnBatches/arbitrumL2/ArbitrumL2TxnBatchDetails.tsx","webpack://_N_E/./ui/pages/ArbitrumL2TxnBatch.tsx","webpack://_N_E/./ui/shared/AppError/isCustomAppError.ts","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/DetailsTimestamp.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/PrevNext.tsx","webpack://_N_E/./ui/shared/Tabs/TabsSkeleton.tsx","webpack://_N_E/./ui/shared/batch/ArbitrumL2TxnBatchDA.tsx","webpack://_N_E/./ui/shared/entities/block/BlockEntityL1.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx","webpack://_N_E/./ui/txs/TxsWithFrontendSorting.tsx","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-DZU5YH7Z.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-OLSEFBIG.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-R3K6W4OF.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-VVU6AIWW.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-5XCGGO7V.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-QUJ23J4G.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-ROBJ47HJ.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/array/chunk.mjs"],"sourcesContent":["import type { ArbitrumL2TxnBatchesItem, ArbitrumL2TxnBatch, ArbitrumL2MessagesItem } from 'types/api/arbitrumL2';\n\nimport { ADDRESS_HASH } from './addressParams';\nimport { TX_HASH } from './tx';\n\nexport const ARBITRUM_MESSAGES_ITEM: ArbitrumL2MessagesItem = {\n  completion_transaction_hash: TX_HASH,\n  id: 181920,\n  origination_address: ADDRESS_HASH,\n  origination_transaction_block_number: 123456,\n  origination_transaction_hash: TX_HASH,\n  origination_timestamp: '2023-06-01T14:46:48.000000Z',\n  status: 'relayed',\n};\n\nexport const ARBITRUM_L2_TXN_BATCHES_ITEM: ArbitrumL2TxnBatchesItem = {\n  number: 12345,\n  blocks_count: 12345,\n  transactions_count: 10000,\n  commitment_transaction: {\n    block_number: 12345,\n    timestamp: '2024-04-17T08:51:58.000000Z',\n    hash: TX_HASH,\n    status: 'finalized',\n  },\n  batch_data_container: 'in_blob4844',\n};\n\nexport const ARBITRUM_L2_TXN_BATCH: ArbitrumL2TxnBatch = {\n  ...ARBITRUM_L2_TXN_BATCHES_ITEM,\n  after_acc: '0xcd064f3409015e8e6407e492e5275a185e492c6b43ccf127f22092d8057a9ffb',\n  before_acc: '0x2ed7c4985eb778d76ec400a43805e7feecc8c2afcdb492dbe5caf227de6d37bc',\n  start_block: 1245209,\n  end_block: 1245490,\n  data_availability: {\n    batch_data_container: 'in_blob4844',\n  },\n};\n","import { Grid, Text, Flex, Box, useColorModeValue, Show, Hide, VStack } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { ArbitrumL2TxnBatchDAAnytrust } from 'types/api/arbitrumL2';\n\nimport dayjs from 'lib/date/dayjs';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport HashStringShorten from 'ui/shared/HashStringShorten';\nimport IconSvg from 'ui/shared/IconSvg';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\ntype Props = {\n  dataAvailability: ArbitrumL2TxnBatchDAAnytrust;\n};\n\nconst ArbitrumL2TxnBatchDetailsDA = ({ dataAvailability }: Props) => {\n  const signersBg = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint=\"Aggregated BLS signature of AnyTrust committee members\"\n      >\n        Signature\n      </DetailsInfoItem.Label><DetailsInfoItem.Value wordBreak=\"break-all\" whiteSpace=\"break-spaces\">\n        { dataAvailability.bls_signature }\n      </DetailsInfoItem.Value><DetailsInfoItem.Label\n        hint=\"The hash of the data blob stored by the AnyTrust committee\"\n      >\n        Data hash\n      </DetailsInfoItem.Label><DetailsInfoItem.Value>\n        { dataAvailability.data_hash }\n        <CopyToClipboard text={ dataAvailability.data_hash } ml={ 2 }/>\n      </DetailsInfoItem.Value><DetailsInfoItem.Label\n        hint=\"Expiration timeout for the data blob\"\n      >\n        Timeout\n      </DetailsInfoItem.Label><DetailsInfoItem.Value>\n        { dayjs(dataAvailability.timeout) < dayjs() ?\n          <DetailsTimestamp timestamp={ dataAvailability.timeout }/> :\n          (\n            <>\n              <Text>{ dayjs(dataAvailability.timeout).format('llll') }</Text>\n              <TextSeparator color=\"gray.500\"/>\n              <Text color=\"red.500\">{ dayjs(dataAvailability.timeout).diff(dayjs(), 'day') } days left</Text>\n            </>\n          ) }\n      </DetailsInfoItem.Value>\n      <DetailsInfoItem.Label\n        hint=\"Members of AnyTrust committee\"\n      >\n        Signers\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value overflowX=\"scroll\" fontSize=\"sm\">\n        <Show above=\"lg\" ssr={ false }>\n          <Grid\n            templateColumns=\"1fr auto auto\"\n            gap={ 5 }\n            backgroundColor={ signersBg }\n            padding={ 4 }\n            borderRadius=\"md\"\n            minW=\"600px\"\n          >\n            <Text fontWeight={ 600 }>Key</Text>\n            <Text fontWeight={ 600 }>Trusted</Text>\n            <Text fontWeight={ 600 }>Proof</Text>\n            { dataAvailability.signers.map(signer => (\n              <>\n                <Flex justifyContent=\"space-between\">\n                  <Text wordBreak=\"break-all\" whiteSpace=\"break-spaces\">{ signer.key }</Text>\n                  <CopyToClipboard text={ signer.key } ml={ 2 }/>\n                </Flex>\n                <Box justifySelf=\"center\">\n                  { signer.trusted ? <IconSvg name=\"check\" boxSize={ 6 }/> : <IconSvg name=\"cross\" boxSize={ 6 }/> }\n                </Box>\n                { signer.proof ? (\n                  <Flex>\n                    <HashStringShorten hash={ signer.proof }/>\n                    <CopyToClipboard text={ signer.proof } ml={ 2 }/>\n                  </Flex>\n                ) : '-' }\n              </>\n            )) }\n          </Grid>\n        </Show>\n\n        <Hide above=\"lg\" ssr={ false }>\n          <Box backgroundColor={ signersBg } borderRadius=\"md\">\n            { dataAvailability.signers.map(signer => (\n              <VStack padding={ 4 } key={ signer.key } gap={ 2 }>\n                <Flex w=\"100%\" justifyContent=\"space-between\">\n                  <Text fontWeight={ 600 }>Key</Text>\n                  <CopyToClipboard text={ signer.key }/>\n                </Flex>\n                <Text wordBreak=\"break-all\" whiteSpace=\"break-spaces\">{ signer.key }</Text>\n                <Flex w=\"100%\" alignItems=\"center\">\n                  <Flex alignItems=\"center\" w=\"50%\">\n                    <Text fontWeight={ 600 } mr={ 2 }>Trusted</Text>\n                    { signer.trusted ? <IconSvg name=\"check\" boxSize={ 6 }/> : <IconSvg name=\"cross\" boxSize={ 6 }/> }\n                  </Flex>\n                  <Flex alignItems=\"center\" w=\"50%\">\n                    <Text fontWeight={ 600 } mr={ 2 }>Proof</Text>\n                    { signer.proof ? (\n                      <Flex>\n                        <HashStringShorten hash={ signer.proof }/>\n                        <CopyToClipboard text={ signer.proof } ml={ 2 }/>\n                      </Flex>\n                    ) : '-' }\n                  </Flex>\n                </Flex>\n              </VStack>\n            )) }\n          </Box>\n        </Hide>\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default ArbitrumL2TxnBatchDetailsDA;\n","import { Grid, GridItem, Link } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { scroller, Element } from 'react-scroll';\n\nimport type { ArbitrumL2TxnBatch } from 'types/api/arbitrumL2';\n\nimport { route } from 'nextjs-routes';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport ArbitrumL2TxnBatchDA from 'ui/shared/batch/ArbitrumL2TxnBatchDA';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport BlockEntityL1 from 'ui/shared/entities/block/BlockEntityL1';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport PrevNext from 'ui/shared/PrevNext';\n\nimport ArbitrumL2TxnBatchDetailsDA from './ArbitrumL2TxnBatchDetailsDA';\ninterface Props {\n  query: UseQueryResult<ArbitrumL2TxnBatch, ResourceError>;\n}\n\nconst ArbitrumL2TxnBatchDetails = ({ query }: Props) => {\n  const router = useRouter();\n  const [ isExpanded, setIsExpanded ] = React.useState(false);\n\n  const handleCutClick = React.useCallback(() => {\n    setIsExpanded((flag) => !flag);\n    scroller.scrollTo('BatchDetails__cutLink', {\n      duration: 500,\n      smooth: true,\n    });\n  }, []);\n\n  const { data, isPlaceholderData, isError, error } = query;\n\n  const handlePrevNextClick = React.useCallback((direction: 'prev' | 'next') => {\n    if (!data) {\n      return;\n    }\n\n    const increment = direction === 'next' ? +1 : -1;\n    const nextId = String(data.number + increment);\n\n    router.push({ pathname: '/batches/[number]', query: { number: nextId } }, undefined);\n  }, [ data, router ]);\n\n  if (isError) {\n    if (isCustomAppError(error)) {\n      throwOnResourceLoadError({ isError, error });\n    }\n\n    return <DataFetchAlert/>;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const blocksCount = data.end_block - data.start_block + 1;\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Batch number indicates the length of batches produced by grouping L2 blocks to be proven on L1\"\n      >\n        Txn batch number\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.number }\n        </Skeleton>\n        <PrevNext\n          ml={ 6 }\n          onClick={ handlePrevNextClick }\n          prevLabel=\"View previous txn batch\"\n          nextLabel=\"View next txn batch\"\n          isPrevDisabled={ data.number === 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Date and time at which batch is submitted to L1\"\n      >\n        Timestamp\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.commitment_transaction.timestamp ?\n          <DetailsTimestamp timestamp={ data.commitment_transaction.timestamp }isLoading={ isPlaceholderData }/> :\n          'Undefined'\n        }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Number of transactions in this batch\"\n      >\n        Transactions\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/batches/[number]', query: { number: data.number.toString(), tab: 'txs' } }) }>\n            { data.transactions_count.toLocaleString() } transaction{ data.transactions_count === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Number of L2 blocks in this batch\"\n      >\n        Blocks\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/batches/[number]', query: { number: data.number.toString(), tab: 'blocks' } }) }>\n            { blocksCount.toLocaleString() } block{ blocksCount === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Hash of L1 transaction in which transactions was committed\"\n      >\n        L1 transaction hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <TxEntityL1\n          isLoading={ isPlaceholderData }\n          hash={ data.commitment_transaction.hash }\n          maxW=\"100%\"\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Heigh of L1 block which includes L1 transactions\"\n      >\n        L1 block\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <BlockEntityL1\n          isLoading={ isPlaceholderData }\n          number={ data.commitment_transaction.block_number }\n        />\n      </DetailsInfoItem.Value>\n\n      { data.data_availability.batch_data_container && (\n        <>\n          <DetailsInfoItem.Label\n            isLoading={ isPlaceholderData }\n            hint=\"Where the batch data is stored\"\n          >\n            Batch data container\n          </DetailsInfoItem.Label><DetailsInfoItem.Value>\n            <ArbitrumL2TxnBatchDA dataContainer={ data.data_availability.batch_data_container } isLoading={ isPlaceholderData }/>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"The hash of the state before the batch\"\n      >\n        Before acc\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.before_acc }/>\n          <CopyToClipboard text={ data.before_acc }/>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"The hash of the state after the batch\"\n      >\n        After acc\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.after_acc }/>\n          <CopyToClipboard text={ data.after_acc }/>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      { data.data_availability.batch_data_container === 'in_anytrust' && (\n        <>\n          { /* CUT */ }\n          <GridItem colSpan={{ base: undefined, lg: 2 }}>\n            <Element name=\"BatchDetails__cutLink\">\n              <Skeleton isLoaded={ !isPlaceholderData } mt={ 6 } display=\"inline-block\">\n                <Link\n                  fontSize=\"sm\"\n                  textDecorationLine=\"underline\"\n                  textDecorationStyle=\"dashed\"\n                  onClick={ handleCutClick }\n                >\n                  { isExpanded ? 'Hide data availability info' : 'Show data availability info' }\n                </Link>\n              </Skeleton>\n            </Element>\n          </GridItem>\n\n          { /* ADDITIONAL INFO */ }\n          { isExpanded && !isPlaceholderData && (\n            <>\n              <GridItem colSpan={{ base: undefined, lg: 2 }} mt={{ base: 1, lg: 4 }}/>\n\n              <ArbitrumL2TxnBatchDetailsDA dataAvailability={ data.data_availability }/>\n            </>\n          ) }\n        </>\n      ) }\n    </Grid>\n  );\n};\n\nexport default ArbitrumL2TxnBatchDetails;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnAbsentParamError from 'lib/errors/throwOnAbsentParamError';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { ARBITRUM_L2_TXN_BATCH } from 'stubs/arbitrumL2';\nimport { BLOCK } from 'stubs/block';\nimport { TX } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport BlocksContent from 'ui/blocks/BlocksContent';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport ArbitrumL2TxnBatchDetails from 'ui/txnBatches/arbitrumL2/ArbitrumL2TxnBatchDetails';\nimport TxsWithFrontendSorting from 'ui/txs/TxsWithFrontendSorting';\n\nconst TAB_LIST_PROPS = {\n  marginBottom: 0,\n  py: 5,\n  marginTop: -5,\n};\n\nconst TABS_HEIGHT = 80;\n\nconst ArbitrumL2TxnBatch = () => {\n  const router = useRouter();\n  const appProps = useAppContext();\n  const number = getQueryParamString(router.query.number);\n  const tab = getQueryParamString(router.query.tab);\n  const isMobile = useIsMobile();\n\n  const batchQuery = useApiQuery('arbitrum_l2_txn_batch', {\n    pathParams: { number },\n    queryOptions: {\n      enabled: Boolean(number),\n      placeholderData: ARBITRUM_L2_TXN_BATCH,\n    },\n  });\n\n  const batchTxsQuery = useQueryWithPages({\n    resourceName: 'arbitrum_l2_txn_batch_txs',\n    pathParams: { number },\n    options: {\n      enabled: Boolean(!batchQuery.isPlaceholderData && batchQuery.data?.number && tab === 'txs'),\n      placeholderData: generateListStub<'arbitrum_l2_txn_batch_txs'>(TX, 50, { next_page_params: {\n        batch_number: '8122',\n        block_number: 1338932,\n        index: 0,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  const batchBlocksQuery = useQueryWithPages({\n    resourceName: 'arbitrum_l2_txn_batch_blocks',\n    pathParams: { number },\n    options: {\n      enabled: Boolean(!batchQuery.isPlaceholderData && batchQuery.data?.number && tab === 'blocks'),\n      placeholderData: generateListStub<'arbitrum_l2_txn_batch_blocks'>(BLOCK, 50, { next_page_params: {\n        batch_number: '8122',\n        block_number: 1338932,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  throwOnAbsentParamError(number);\n  throwOnResourceLoadError(batchQuery);\n\n  let pagination;\n  if (tab === 'txs') {\n    pagination = batchTxsQuery.pagination;\n  }\n  if (tab === 'blocks') {\n    pagination = batchBlocksQuery.pagination;\n  }\n\n  const hasPagination = !isMobile && pagination?.isVisible;\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => ([\n    { id: 'index', title: 'Details', component: <ArbitrumL2TxnBatchDetails query={ batchQuery }/> },\n    {\n      id: 'txs',\n      title: 'Transactions',\n      component: <TxsWithFrontendSorting query={ batchTxsQuery } showSocketInfo={ false } top={ hasPagination ? TABS_HEIGHT : 0 }/>,\n    },\n    {\n      id: 'blocks',\n      title: 'Blocks',\n      component: <BlocksContent type=\"block\" query={ batchBlocksQuery } enableSocket={ false } top={ hasPagination ? TABS_HEIGHT : 0 }/>,\n    },\n  ].filter(Boolean)), [ batchQuery, batchTxsQuery, batchBlocksQuery, hasPagination ]);\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.endsWith('/batches');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to txn batches list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  return (\n    <>\n      <PageTitle\n        title={ `Txn batch #${ number }` }\n        backLink={ backLink }\n      />\n      { batchQuery.isPlaceholderData ?\n        <TabsSkeleton tabs={ tabs }/> : (\n          <RoutedTabs\n            tabs={ tabs }\n            tabListProps={ isMobile ? undefined : TAB_LIST_PROPS }\n            rightSlot={ hasPagination && pagination ? <Pagination { ...(pagination) }/> : null }\n            stickyEnabled={ hasPagination }\n          />\n        ) }\n    </>\n  );\n};\n\nexport default ArbitrumL2TxnBatch;\n","import type { ResourceError } from 'lib/api/resources';\n\n// status codes when custom error screen should be shown\nconst CUSTOM_STATUS_CODES = [ 403, 404, 422, 429 ];\n\nexport default function isCustomAppError(error: ResourceError<unknown>) {\n  return CUSTOM_STATUS_CODES.includes(error.status);\n}\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import React from 'react';\n\nimport dayjs from 'lib/date/dayjs';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\ntype Props = {\n  // should be string, will be fixed on the back-end\n  timestamp: string | number;\n  isLoading?: boolean;\n};\n\nconst DetailsTimestamp = ({ timestamp, isLoading }: Props) => {\n  return (\n    <>\n      <IconSvg name=\"clock\" boxSize={ 5 } color=\"gray.500\" isLoading={ isLoading }/>\n      <Skeleton isLoaded={ !isLoading } ml={ 2 }>\n        { dayjs(timestamp).fromNow() }\n      </Skeleton>\n      <TextSeparator color=\"gray.500\"/>\n      <Skeleton isLoaded={ !isLoading } whiteSpace=\"normal\">\n        { dayjs(timestamp).format('llll') }\n      </Skeleton>\n    </>\n  );\n};\n\nexport default DetailsTimestamp;\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import { Box, IconButton, chakra, Tooltip, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: (direction: 'prev' | 'next') => void;\n  prevLabel?: string;\n  nextLabel?: string;\n  isPrevDisabled?: boolean;\n  isNextDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst PrevNext = ({ className, onClick, prevLabel, nextLabel, isPrevDisabled, isNextDisabled, isLoading }: Props) => {\n  const handelPrevClick = React.useCallback(() => {\n    onClick('prev');\n  }, [ onClick ]);\n\n  const handelNextClick = React.useCallback(() => {\n    onClick('next');\n  }, [ onClick ]);\n\n  if (isLoading) {\n    return (\n      <Flex columnGap=\"10px\" className={ className }>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n      </Flex>\n    );\n  }\n\n  return (\n    <Box className={ className } display=\"flex\">\n      <Tooltip label={ prevLabel }>\n        <IconButton\n          aria-label=\"prev\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 }/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          onClick={ handelPrevClick }\n          isDisabled={ isPrevDisabled }\n        />\n      </Tooltip>\n      <Tooltip label={ nextLabel }>\n        <IconButton\n          aria-label=\"next\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 } transform=\"rotate(180deg)\"/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          ml=\"10px\"\n          onClick={ handelNextClick }\n          isDisabled={ isNextDisabled }\n        />\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default chakra(PrevNext);\n","import { Flex, chakra, Box, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { RoutedTab } from '../Tabs/types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport useTabIndexFromQuery from 'ui/shared/Tabs/useTabIndexFromQuery';\n\ntype TabSize = 'sm' | 'md';\n\nconst SkeletonTabText = ({ size, title }: { size: TabSize; title: RoutedTab['title'] }) => (\n  <Skeleton\n    borderRadius=\"base\"\n    borderWidth={ size === 'sm' ? '2px' : 0 }\n    fontWeight={ 600 }\n    mx={ size === 'sm' ? 3 : 4 }\n    flexShrink={ 0 }\n  >\n    { typeof title === 'string' ? title : title() }\n  </Skeleton>\n);\n\ninterface Props {\n  className?: string;\n  tabs: Array<RoutedTab>;\n  size?: 'sm' | 'md';\n}\n\nconst TabsSkeleton = ({ className, tabs, size = 'md' }: Props) => {\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const tabIndex = useTabIndexFromQuery(tabs || []);\n\n  if (tabs.length === 1) {\n    return null;\n  }\n\n  return (\n    <Flex className={ className } my={ 8 } alignItems=\"center\" overflow=\"hidden\">\n      { tabs.slice(0, tabIndex).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n      { tabs.slice(tabIndex, tabIndex + 1).map(({ title, id }) => (\n        <Box key={ id.toString() } bgColor={ bgColor } py={ size === 'sm' ? 1 : 2 } borderRadius=\"base\" flexShrink={ 0 }>\n          <SkeletonTabText\n            key={ id.toString() }\n            title={ title }\n            size={ size }\n          />\n        </Box>\n      )) }\n      { tabs.slice(tabIndex + 1).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n    </Flex>\n  );\n};\n\nexport default chakra(TabsSkeleton);\n","import { Tag } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { ArbitrumL2TxnBatchesItem } from 'types/api/arbitrumL2';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nexport interface Props {\n  dataContainer: ArbitrumL2TxnBatchesItem['batch_data_container'];\n  isLoading?: boolean;\n}\n\nconst ArbitrumL2TxnBatchDA = ({ dataContainer, isLoading }: Props) => {\n  let text: string;\n\n  if (dataContainer === null) {\n    return null;\n  }\n\n  switch (dataContainer) {\n    case 'in_blob4844':\n      text = 'blob';\n      break;\n    case 'in_anytrust':\n      text = 'anytrust';\n      break;\n    case 'in_calldata':\n      text = 'calldata';\n      break;\n    case 'in_celestia':\n      text = 'celestia';\n      break;\n    default:\n      text = '';\n  }\n\n  if (!text) {\n    return null;\n  }\n\n  return (\n    <Skeleton isLoaded={ !isLoading }>\n      <Tag colorScheme={ dataContainer === 'in_blob4844' ? 'yellow' : 'gray' }>\n        { text }\n      </Tag>\n    </Skeleton>\n  );\n};\n\nexport default ArbitrumL2TxnBatchDA;\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as BlockEntity from './BlockEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst BlockEntityL1 = (props: BlockEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/block/[height_or_hash]',\n    query: { height_or_hash: props.hash ?? String(props.number) },\n  });\n\n  return <BlockEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(BlockEntityL1);\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/tx/[hash]',\n    query: { hash: props.hash },\n  });\n\n  return <TxEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(TxEntityL1);\n","import React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\n\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport TxsContent from './TxsContent';\nimport useTxsSort from './useTxsSort';\n\ntype Props = {\n  // eslint-disable-next-line max-len\n  query: QueryWithPagesResult<'txs_validated' | 'txs_pending'> | QueryWithPagesResult<'txs_watchlist'> | QueryWithPagesResult<'block_txs'> | QueryWithPagesResult<'zkevm_l2_txn_batch_txs'>;\n  showBlockInfo?: boolean;\n  showSocketInfo?: boolean;\n  socketInfoAlert?: string;\n  socketInfoNum?: number;\n  currentAddress?: string;\n  filter?: React.ReactNode;\n  filterValue?: AddressFromToFilter;\n  enableTimeIncrement?: boolean;\n  top?: number;\n};\n\nconst TxsWithFrontendSorting = ({\n  filter,\n  filterValue,\n  query,\n  showBlockInfo = true,\n  showSocketInfo = true,\n  socketInfoAlert,\n  socketInfoNum,\n  currentAddress,\n  enableTimeIncrement,\n  top,\n}: Props) => {\n  const { data, isPlaceholderData, isError, setSortByValue, sorting } = useTxsSort(query);\n\n  return (\n    <TxsContent\n      filter={ filter }\n      filterValue={ filterValue }\n      showBlockInfo={ showBlockInfo }\n      showSocketInfo={ showSocketInfo }\n      socketInfoAlert={ socketInfoAlert }\n      socketInfoNum={ socketInfoNum }\n      currentAddress={ currentAddress }\n      enableTimeIncrement={ enableTimeIncrement }\n      top={ top }\n      items={ data?.items }\n      isPlaceholderData={ isPlaceholderData }\n      isError={ isError }\n      setSorting={ setSortByValue }\n      sort={ sorting }\n      query={ query }\n    />\n  );\n};\n\nexport default TxsWithFrontendSorting;\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\nexport {\n  Visibility\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/show.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, ssr, children });\n}\nShow.displayName = \"Show\";\n\nexport {\n  Show\n};\n","// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a, _b;\n  return (_b = (_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) != null ? _b : value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\nexport {\n  useQuery\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/hide.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, hide: true, ssr, children });\n}\nHide.displayName = \"Hide\";\n\nexport {\n  Hide\n};\n","import {\n  useRadioGroupContext\n} from \"./chunk-QUJ23J4G.mjs\";\n\n// src/use-radio.ts\nimport { useFormControlContext } from \"@chakra-ui/form-control\";\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../visually-hidden/src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/use-radio.ts\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useState, useId } from \"react\";\nfunction useRadio(props = {}) {\n  const {\n    defaultChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled: isDisabledProp,\n    isReadOnly: isReadOnlyProp,\n    isRequired: isRequiredProp,\n    onChange,\n    isInvalid: isInvalidProp,\n    name,\n    value,\n    id: idProp,\n    \"data-radiogroup\": dataRadioGroup,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props;\n  const uuid = `radio-${useId()}`;\n  const formControl = useFormControlContext();\n  const group = useRadioGroupContext();\n  const isWithinRadioGroup = !!group || !!dataRadioGroup;\n  const isWithinFormControl = !!formControl;\n  let id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;\n  id = idProp != null ? idProp : id;\n  const isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;\n  const isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;\n  const isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;\n  const isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovering] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isCheckedState, setChecked] = useState(Boolean(defaultChecked));\n  const isControlled = typeof isCheckedProp !== \"undefined\";\n  const isChecked = isControlled ? isCheckedProp : isCheckedState;\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        setChecked(event.target.checked);\n      }\n      onChange == null ? void 0 : onChange(event);\n    },\n    [isControlled, isDisabled, isReadOnly, onChange]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, () => setActive(true)),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(\n        props2.onMouseEnter,\n        () => setHovering(true)\n      ),\n      onMouseLeave: callAllHandlers(\n        props2.onMouseLeave,\n        () => setHovering(false)\n      )\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      isFocusVisible\n    ]\n  );\n  const { onFocus, onBlur } = formControl != null ? formControl : {};\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const trulyDisabled = isDisabled && !isFocusable;\n      return {\n        ...props2,\n        id,\n        ref,\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          onBlur,\n          props2.onBlur,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          onFocus,\n          props2.onFocus,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        required: isRequired,\n        \"aria-invalid\": ariaAttr(isInvalid),\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        \"aria-required\": ariaAttr(isRequired),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-describedby\": ariaDescribedBy,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      isDisabled,\n      isFocusable,\n      id,\n      name,\n      value,\n      handleChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n      isReadOnly,\n      isRequired,\n      isInvalid,\n      ariaDescribedBy\n    ]\n  );\n  const getLabelProps = (props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const getRootProps = (props2, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getCheckboxProps: getRadioProps,\n    getRadioProps,\n    getInputProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport {\n  useRadio\n};\n","import {\n  useRadioGroup\n} from \"./chunk-ROBJ47HJ.mjs\";\n\n// src/radio-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nvar RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const { value, onChange, getRootProps, name, htmlProps } = useRadioGroup(rest);\n  const group = useMemo(\n    () => ({\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    }),\n    [\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    ]\n  );\n  return /* @__PURE__ */ jsx(RadioGroupProvider, { value: group, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    }\n  ) });\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nexport {\n  useRadioGroupContext,\n  RadioGroup\n};\n","// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport {\n  useRadioGroup\n};\n","function chunk(arr, size) {\n    if (!Number.isInteger(size) || size <= 0) {\n        throw new Error('Size must be an integer greater than zero.');\n    }\n    const chunkLength = Math.ceil(arr.length / size);\n    const result = Array(chunkLength);\n    for (let index = 0; index < chunkLength; index++) {\n        const start = index * size;\n        const end = start + size;\n        result[index] = arr.slice(start, end);\n    }\n    return result;\n}\n\nexport { chunk };\n"],"names":["ARBITRUM_MESSAGES_ITEM","completion_transaction_hash","TX_HASH","id","origination_address","ADDRESS_HASH","origination_transaction_block_number","origination_transaction_hash","origination_timestamp","status","ARBITRUM_L2_TXN_BATCHES_ITEM","number","blocks_count","transactions_count","commitment_transaction","block_number","timestamp","hash","batch_data_container","after_acc","before_acc","start_block","end_block","data_availability","dataAvailability","signersBg","useColorModeValue","ArbitrumL2TxnBatchDetailsDA","DetailsInfoItem","hint","wordBreak","whiteSpace","bls_signature","data_hash","CopyToClipboard","text","ml","dayjs","timeout","DetailsTimestamp","Text","format","TextSeparator","color","diff","overflowX","fontSize","Show","above","ssr","Grid","templateColumns","gap","backgroundColor","padding","borderRadius","minW","fontWeight","signers","map","signer","Flex","justifyContent","key","Box","justifySelf","trusted","IconSvg","name","boxSize","proof","HashStringShorten","Hide","VStack","w","alignItems","mr","query","router","useRouter","ArbitrumL2TxnBatchDetails","isExpanded","setIsExpanded","React","handleCutClick","flag","scroller","scrollTo","duration","smooth","data","isPlaceholderData","isError","error","handlePrevNextClick","nextId","String","increment","direction","push","pathname","undefined","isCustomAppError","throwOnResourceLoadError","DataFetchAlert","blocksCount","columnGap","rowGap","base","lg","overflow","isLoading","Skeleton","isLoaded","PrevNext","onClick","prevLabel","nextLabel","isPrevDisabled","LinkInternal","href","route","toString","tab","toLocaleString","TxEntityL1","maxW","BlockEntityL1","ArbitrumL2TxnBatchDA","dataContainer","HashStringShortenDynamic","GridItem","colSpan","Element","mt","display","Link","textDecorationLine","textDecorationStyle","TAB_LIST_PROPS","marginBottom","py","marginTop","batchQuery","pagination","appProps","useAppContext","getQueryParamString","isMobile","useIsMobile","useApiQuery","pathParams","queryOptions","enabled","Boolean","placeholderData","ARBITRUM_L2_TXN_BATCH","batchTxsQuery","useQueryWithPages","resourceName","options","generateListStub","TX","next_page_params","batch_number","index","items_count","batchBlocksQuery","BLOCK","throwOnAbsentParamError","hasPagination","isVisible","tabs","title","component","TxsWithFrontendSorting","showSocketInfo","top","TABS_HEIGHT","BlocksContent","type","enableSocket","filter","backLink","referrer","endsWith","label","url","PageTitle","TabsSkeleton","RoutedTabs","tabListProps","rightSlot","Pagination","stickyEnabled","CUSTOM_STATUS_CODES","includes","chakra","className","ContainerWithScrollY","gradientHeight","children","onScrollVisibilityChange","ref","hasScroll","setHasScroll","current","scrollHeight","clientHeight","gradientEndColor","flexDirection","overflowY","_after","position","content","bottom","left","right","height","bgGradient","pr","pb","LabelScrollText","variant","align","Label","lineHeight","_notFirst","HintPopover","my","Hint","Value","flexWrap","pl","ValueWithScroll","fromNow","popoverProps","popoverContentProps","popoverBodyProps","bgColor","Popover","trigger","isLazy","placement","PopoverTrigger","_hover","cursor","Portal","PopoverContent","PopoverArrow","PopoverBody","px","DarkMode","isNextDisabled","handelPrevClick","handelNextClick","Tooltip","IconButton","aria-label","icon","h","colorScheme","isDisabled","transform","SkeletonTabText","size","borderWidth","mx","flexShrink","tabIndex","useTabIndexFromQuery","length","slice","Tag","rollupFeature","config","features","rollup","props","isEnabled","defaultHref","L1BaseUrl","height_or_hash","BlockEntity","isExternal","TxEntity","filterValue","showBlockInfo","socketInfoAlert","socketInfoNum","currentAddress","enableTimeIncrement","setSortByValue","sorting","useTxsSort","TxsContent","items","setSorting","sort"],"sourceRoot":"","ignoreList":[15,16,17,18,19,20,21,22,23]}