{"version":3,"file":"static/chunks/pages/token/[hash]-96c3e0302600a0fe.js","mappings":"gFACA,4CACA,gBACA,WACA,OAAe,EAAQ,KAA2C,CAClE,EACA,SAFsB,kECAP,SAASA,IACtB,GAAM,CAAEC,EAAMC,EAAS,CAAGC,EAAAA,QAAc,CAAiB,MACnDC,EAAUD,EAAAA,MAAY,GAEtBE,EAAMF,EAAAA,WAAiB,CAAC,IACf,MAAM,CAAfG,GACFJ,EAAQI,EAAKC,qBAAqB,IAEpCH,EAAQI,OAAO,CAAGF,CACpB,EAAG,EAAE,EAsBL,OApBAH,EAAAA,SAAe,CAAC,KACd,IAAMM,EAAUC,OAAOC,QAAQ,CAACC,aAAa,CAAC,QAC9C,GAAI,CAACH,EACH,OADY,IAQRI,EAAiB,IAAIC,eAJLC,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,SACrBX,EAAAA,EAARF,EAAQE,QAAAA,EAAAA,QAAAA,EAAAA,EAAQI,OAAAA,GAARJ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBG,qBAAqB,KAAtCH,KAAAA,IAAAA,EAAAA,EAA4C,KACtD,EAAG,MAMH,OAHAS,EAAeG,OAAO,CAACP,GACvBI,EAAeG,OAAO,CAACN,OAAOC,QAAQ,CAACM,IAAI,EAEpC,SAASC,EACdL,EAAeM,SAAS,CAACV,GACzBI,EAAeM,SAAS,CAACT,OAAOC,QAAQ,CAACM,IAAI,CAC/C,CACF,EAAG,EAAG,EAEC,CAAEhB,EAAMI,EAAK,ifC0LtB,MAAeF,EAAAA,IAAU,CAhMJ,QAINiB,KA4LwBC,CApIjCC,CAoIkC,CAhMlB,CAAEC,YAAU,CAAS,GACnCH,EAASI,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExBC,EAAwB,QAAjBP,EAAAA,EAAOQ,KAAK,CAACD,IAAI,GAAjBP,KAAAA,MAAAA,KAAAA,EAAAA,EAAmBS,QAAQ,GAElCC,EAAqBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,iBAAkB,CACvDC,WAAY,MAAEL,CAAK,EACnBM,aAAc,CAAEC,SAASC,CAAQf,EAAOQ,KAAK,CAACD,IAAI,CAAGS,gBAAiBC,EAAAA,EAAcA,CACtF,GAEMC,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAACZ,GAEjCa,EAAqBC,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,GAAoB,KACzDrB,EAAOsB,IAAI,CACT,CAAEC,SAAU,gBAAiBf,MAAO,CAAED,KAAMA,GAAQ,OAAIiB,CAAI,CAAE,OAC9DC,EACA,CAAEC,SAAS,CAAK,GAElBC,EAAAA,EAAQA,CAACC,QAAQ,CAAC,aAAc,CAC9BC,SAAU,IACVC,QAAQ,CACV,EACF,EAAG,CAAEvB,EAAMP,EAAQ,EAEb+B,EAAeV,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,QACbX,EAAlB,IAAMsB,EAAAA,QAAYtB,EAAAA,EAAmBuB,IAAAA,GAAnBvB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAyB,CAACwB,EAAK,QACjD,EAGkB,EAHd,GAGmB,CAAnBF,EACKA,CAJO,CAUd,UAACG,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAAC1B,EAAmB2B,iBAAiB,UACxD,UAACC,EAAAA,CAAIA,CAAAA,CAACC,QAAUnB,EAJY,iBAIOI,OAJhBU,EAAiC,UAAY,4BAK5DM,OAAOR,GAAWS,cAAc,OAX/B,KAeX,EAAG,CAAE/B,EAAmBuB,IAAI,CAAEvB,EAAmB2B,iBAAiB,CAAEjB,EAAoB,EAIxF,GAFAsB,CAAAA,EAAAA,EAAAA,CAAAA,CAAwBA,CAACvC,GAErB,CAACE,EACH,OAAO,EADO,GAIhB,GAAM,CACJsC,cAAeC,CAAY,CAC3BC,aAAcC,CAAW,CACzBC,uBAAwBC,CAAS,UACjCC,CAAQ,CACRC,QAAM,CACNC,MAAI,CACL,CAAGhD,EAAW8B,IAAI,EAAI,CAAC,EAIxB,GAAIgB,EAAU,CACZ,IAAMG,EAAaN,EAAcO,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAAEC,MAAOR,EAAaS,SAAU,EAAGC,YAAa,eAAGZ,EAAcK,UAAS,QAAKxB,EACjIvB,QAAmBkD,EAAAA,KAAAA,EAAAA,EAAYK,QACjC,IADqBL,EAEnBlD,CADK,CACcsC,OAAOM,GAAaL,cAAc,GAGvD,MACE,WAACiB,EAAAA,CAAIA,CAAAA,CACHC,UAAY,EACZC,OAAQ,CAAEC,KAAM,EAAGC,GAAI,CAAE,EACzBC,gBAAiB,CAAEF,KAAM,iBAAkBC,GAAI,qBAAsB,EAAGE,SAAS,mBAE/EpB,GACA,iCACE,UAACqB,EAAAA,EAAqB,EACpBC,KAAK,mCACLC,UAAYhE,EAAWkC,iBAAiB,UACzC,UAGD,UAAC4B,EAAAA,EAAqB,WACpB,UAAC9B,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACjC,EAAWkC,iBAAiB,CAAG+B,QAAQ,wBAC3D,UAACC,OAAAA,UAAO,IAAsF,OAAjF7B,OAAOI,GAAcH,cAAc,MAAChB,EAAW,CAAE6C,yBAA0B,CAAE,aAMhGtB,GACA,iCACE,UAACiB,EAAAA,EAAqB,EACpBC,KAAK,uBACLC,UAAYhE,EAAWkC,iBAAiB,UACzC,6BAGD,UAAC4B,EAAAA,EAAqB,WACpB,UAAC9B,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACjC,EAAWkC,iBAAiB,CAAG+B,QAAQ,wBAC3D,UAACC,OAAAA,UAAO,IAAsC,OAAjCE,CAAAA,EAAAA,EAAAA,CAAAA,CAASA,CAACvB,GAAWwB,QAAQ,aAMlD,UAACP,EAAAA,EAAqB,EACpBC,KAAK,oCACLC,UAAYhE,EAAWkC,iBAAiB,UACzC,qBAGD,UAAC4B,EAAAA,EAAqB,EACpBQ,UAAU,SACVC,UAAU,aACVC,WAAW,oBAEX,WAACxC,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACjC,EAAWkC,iBAAiB,CAAGuC,EAAE,OAAOR,QAAQ,iBACpE,UAACS,EAAAA,CAAcA,CAAAA,CAACvB,MAAQpD,GAAoB,IAAM4E,KAAK,MAAMC,WAAa,IAC1E,UAACC,EAAAA,EAAGA,CAAAA,CAACD,WAAa,WAAI,MACtB,UAACF,EAAAA,CAAcA,CAAAA,CAACvB,MAAQJ,GAAU,UAItC,UAACe,EAAAA,EAAqB,EACpBC,KAAK,uCACLC,UAAYhE,EAAWkC,iBAAiB,UACzC,YAGD,UAAC4B,EAAAA,EAAqB,WACpB,UAAC9B,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAAC1B,EAAmB2B,iBAAiB,UACtDN,EAAa,2BAInB,UAACkC,EAAAA,EAAqB,EACpBC,KAAK,mCACLC,UAAYhE,EAAWkC,iBAAiB,UACzC,cAGD,UAAC4B,EAAAA,EAAqB,WACpB,UAAC9B,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAAC1B,EAAmB2B,iBAAiB,UACtDN,EAAa,uBAIjBkB,GACA,iCACE,UAACgB,EAAAA,EAAqB,EACpBC,KAAK,iFACLC,UAAYhE,EAAWkC,iBAAiB,UACzC,aAGD,UAAC4B,EAAAA,EAAqB,WACpB,UAAC9B,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACjC,EAAWkC,iBAAiB,CAAG4C,KAAO,WACxDhC,SAMC,WAATE,GACA,UAAC+B,EAAAA,CAAoBA,CAAAA,CACnB3E,KAAOA,EACP4D,UAAYhE,EAAWkC,iBAAiB,CACxCnB,cAAgBA,EAChBiE,OAAO,mBAIC,WAAThC,GAAiE,IAA5CiC,EAAAA,CAAMA,CAACC,EAAE,CAACC,KAAK,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,EAAUvE,GACvE,iCACE,UAAC+C,EAAAA,EAAqB,EACpBC,KAAK,4BACN,SAGD,UAACD,EAAAA,EAAqB,EACpByB,GAAG,eAEH,UAACC,EAAAA,CAAeA,CAAAA,CAAC1D,KAAOf,EAAgB0E,OAAO,OAAOT,OAAO,0BAMzE,sJC3IA,OAhE2B,OAAC,MAAEjD,CAAI,OAAE2D,CAAK,GAgE1BC,QAhE4B3B,CAAS,CAAS,GAErD4B,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAEtBC,EACJ,UAACC,EAAAA,CAAQA,CAAAA,CACPC,GAAG,OACHlE,KAAOC,EACPiC,UAAYA,EACZiC,eAAgB,IAIdC,EAAMC,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAAC,CAAE/E,SAAU,8BAA+Bf,MAAO,CAAED,KAAMsF,EAAMU,OAAO,CAAEC,GAAItE,EAAKsE,EAAE,CAAG,GAEzG,MACE,WAACxB,EAAAA,EAAGA,CAAAA,CACFJ,EAAG,CAAEf,KAAM,OAAQC,GAAI,OAAQ,EAC/B2C,OAAO,YACPC,YAAcC,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,iBAAkB,kBAClDC,aAAa,OACbC,EAAE,OACFC,SAAS,KACTC,WAAa,IACbC,WAAW,iBAEX,UAAC1E,EAAAA,CAAIA,CAAAA,CAAC2E,KAAO9C,OAAY1C,EAAY4E,WACjCJ,IAEF/D,EAAKsE,EAAE,EACP,WAACU,EAAAA,CAAIA,CAAAA,CAACf,GAAK,EAAIgB,GAAK,YAClB,UAACC,EAAAA,CAAIA,CAAAA,CAACzC,WAAW,MAAM0C,QAAQ,qBAAY,SAC3C,UAACC,GAAAA,CAAoBA,CAAAA,CAACC,MAAQrF,EAAKsE,EAAE,UACnC,UAACrE,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAAC+B,EAAYH,SAAS,kBACzC,UAACwD,EAAAA,CAAYA,CAAAA,CACXxD,SAAS,SACTyD,aAAa,WACb9C,WAAW,SACXP,QAAQ,QACRD,UAAYA,EACZ8C,KAAOZ,WAELnE,EAAKsE,EAAE,UAMjBtE,EAAKwF,KAAK,EACV,WAACR,EAAAA,CAAIA,CAAAA,CAACf,GAAK,EAAIgB,GAAK,YAClB,UAACC,EAAAA,CAAIA,CAAAA,CAACzC,WAAW,MAAM0C,QAAQ,YAAYM,GAAK,EAAIX,WAAW,gBAAO,UACtE,UAACY,EAAAA,EAAaA,CAAAA,CACZrB,QAAUrE,EAAKwF,KAAK,CACpBvD,UAAYA,EACZ0D,WAAW,WACXC,MAAM,IACNC,OAAShC,SAMrB,ECwBA,GA5EuB,QAYsBiC,EA0B7BA,KAtCQ,MA4ETC,UA5EWD,CAAc,CAAE7H,EA4Eb8H,EAAC,QA5EsB,aAAEC,CAAW,cAAEC,GAAe,CAAI,CAAS,GACvFpC,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB3F,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExB8H,EAAmBrJ,EAAAA,WAAiB,CAAC,KACzCiJ,EAAeK,cAAc,CAAC,CAAC,EACjC,EAAG,CAAEL,EAAgB,EAErB,GAAI,CAAC3H,GAAa,CAAC8H,EACjB,OAAO,KADwB,IAI3BG,EAAoB,CAACJ,GAAe,UAACF,EAAAA,EAAe/F,IAAAA,GAAf+F,KAAAA,MAAAA,KAAAA,EAAAA,EAAqBO,KAAK,CAAC9C,MAAAA,EAEhE+C,EAAuBN,GAC3B,WAAChB,EAAAA,CAAIA,CAAAA,CACHuB,WAAW,SACXC,SAAS,OACTvC,GAAI,CAAEtC,KAAMyE,EAAoB,EAAI,EAAGxE,GAAI,CAAE,EAC7C6D,GAAK,YAEL,UAACP,EAAAA,CAAIA,CAAAA,CAACzC,WAAW,SAASgD,GAAK,EAAIjC,GAAK,WAAI,sBAC5C,WAACwB,EAAAA,CAAIA,CAAAA,CAACuB,WAAW,SAAS/C,GAAK,YAC7B,UAACkC,EAAAA,EAAaA,CAAAA,CAACrB,QAAS,CAAEhG,KAAM2H,CAAY,EAAGL,WAAa9B,EAAW,WAAa,SACpF,UAAC4C,EAAAA,CAAeA,CAAAA,CAACpG,QAAU6F,UAK3BQ,EAAY,CAACN,GACjB,iCACIE,EACF,UAACK,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,WACb/C,GAAY,UAACgD,EAAAA,CAAUA,CAAAA,CAAC5B,GAAG,OAAS,GAAGa,EAAegB,UAAU,QAKlET,EAAAA,OAAQP,GAAAA,EAAe/F,IAAAA,GAAf+F,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBO,KAAK,CAClC1C,EAAQ1F,EAAW8B,IAAI,CAEvB5C,EAAUkJ,GAAS1C,EACvB,UAACoD,EAAAA,EAAwBA,CAAAA,UACvB,UAACvF,EAAAA,CAAIA,CAAAA,CACHkB,EAAE,OACFjB,UAAW,CAAEE,KAAM,EAAGC,GAAI,CAAE,EAC5BF,OAAQ,CAAEC,KAAM,EAAGC,GAAI,CAAE,EACzBoF,oBAAqB,CAAErF,KAAM,mCAAoCC,GAAI,uCAAwC,WAE3GyE,EAAMY,GAAG,CAAC,CAACjH,EAAMkH,IACjB,UAACtD,GAAkBA,CAEjB5D,KAAOA,EACPiC,UAAY6D,EAAe3F,CAHVyD,gBAG2B,EAAI3F,EAAWkC,iBAAiB,CAC5EwD,MAAQA,GAHF3D,EAAKsE,EAAE,CAAG,IAAM4C,EAASpB,GAAe3F,GAAf2F,cAAgC,CAAG,MAAM,SAAgB,GAAC,OAQ/F,KAEJ,MACE,UAACqB,EAAAA,CAAeA,CAAAA,CACdC,QAAUtB,EAAesB,OAAO,CAChCf,MAAQA,EACRgB,UAAU,uBACVC,YAAa,CACXC,kBAAkB1I,CAAQmH,EAC1BwB,kBAAmB,yCACrB,EACArK,QAAUA,EACVuJ,UAAYA,GAGlB,qMC5EA,OAfiB,OAAC,MAAE3B,CAAI,CAAS,GAC/B,MACE,EAaW0C,CAbX,OAamBA,CAblBrH,CAamB,CAbnBA,CAAIA,CAAAA,CACH2E,KAAOA,EACP2C,OAAO,SACPxF,QAAQ,cACRqE,WAAW,SACX9E,UAAY,YAEZ,UAACkG,EAAAA,CAAOA,CAAAA,CAACC,KAAK,OAAOC,QAAU,EAAIC,MAAM,mBACzC,UAAC3F,OAAAA,UAAK,oBAGZ,ECSA,GAhBoB,OAAC,MAAE4C,CAAI,OAAEgD,CAAK,MAAEC,CAgBrBC,CAhBkC,GAC/C,MACE,CAcsBA,EAdtB,QAAC7H,EAAAA,CAAIA,CAAAA,CACH2E,KAAOA,EACPmD,aAAaH,EACbA,MAAQA,EACRL,OAAO,SACPxF,QAAQ,cACRqE,WAAW,mBAEX,UAACoB,EAAAA,CAAOA,CAAAA,CAACC,KAAOI,EAAOH,QAAU,EAAIpC,GAAK,EAAIqC,MAAM,mBACpD,UAAC3F,OAAAA,UAAO4F,MAGd,ECFA,GAlBoB,OAAC,KAAE5D,CAAG,CAAS,GAC3BgE,EAAUhE,EAAIiE,QAiBPC,CAjBgB,KACvBtD,EAAOoD,EAAU,CAgBCE,EAAC,OAhBc,OAALlE,GAASA,EAE3C,MACE,WAAC/D,EAAAA,CAAIA,CAAAA,CACH2E,KAAOA,EACP2C,OAAO,SACPxF,QAAQ,cACRqE,WAAW,SACX9E,UAAY,YAEZ,UAACkG,EAAAA,CAAOA,CAAAA,CAACC,KAAOO,EAAU,QAAU,OAASN,QAAU,EAAIC,MAAM,mBACjE,UAAC3F,OAAAA,UAAOgC,MAGd,ECXMmE,GAAsD,CAC1D,CAAEC,MAAO,SAAUP,KAAM,uBAAwBD,MAAO,QAAS,EACjE,CAAEQ,MAAO,UAAWP,KAAM,wBAAyBD,MAAO,gBAAiB,EAC3E,CAAEQ,MAAO,WAAYP,KAAM,yBAA0BD,MAAO,UAAW,EACvE,CAAEQ,MAAO,UAAWP,KAAM,wBAAyBD,MAAO,SAAU,EACpE,CAAEQ,MAAO,WAAYP,KAAM,yBAA0BD,MAAO,UAAW,EACvE,CAAEQ,MAAO,WAAYP,KAAM,yBAA0BD,MAAO,UAAW,EACvE,CAAEQ,MAAO,UAAWP,KAAM,wBAAyBD,MAAO,SAAU,EACpE,CAAEQ,MAAO,SAAUP,KAAM,uBAAwBD,MAAO,QAAS,EACjE,CAAEQ,MAAO,QAASP,KAAM,sBAAuBD,MAAO,OAAQ,EAC9D,CAAEQ,MAAO,SAAUP,KAAM,uBAAwBD,MAAO,QAAS,EAClE,CAEKS,GAAuD,CAC3D,CAAED,MAAO,kBAAmBP,KAAM,mBAAoBD,MAAO,WAAY,EACzE,CAAEQ,MAAO,sBAAuBP,KAAM,uBAAwBD,MAAO,eAAgB,EACrF,CAAEQ,MAAO,kBAAmBP,KAAM,oBAAqBD,MAAO,WAAY,EAC3E,CA4DD,GA/CgB,OAAC,MAAEhI,CAAI,CAAS,GACxB0I,EAAO1I,EAAK0I,GA8CLC,CA9CS,CAAG,OA8CJ,CA9CI,EAACjB,GAAQA,CAAC1C,KAAOhF,EAAK0I,IAAI,GAAO,KACpDE,EAD4BlB,EACbkB,OAAO,CAAG,UAACN,GAAWA,CAAClE,IAAMpE,EAAK4I,OAAO,GAAO,KAC/DC,EAAc7I,CADuBsI,CAClBQ,kBAAkB,CAAG,UAAC3D,EAAAA,CAAIA,CAAAA,CAACN,SAAS,KAAKgC,GAAK,WAAM7G,EAAK8I,kBAAkB,GAAY,KAE1GC,EAAcR,GACjBrB,GAAG,CAAE8B,GAAU,EAAE,EAAF,CAAKA,CAAI,CAAEhE,KAAMhF,CAAI,CAACgJ,EAAKR,KAAK,CAAC,IAChDS,MAAM,CAAC,OAAC,CAAEjE,MAAI,CAAE,UAAKA,IAElBkE,EAAoBT,GACvBvB,GAAG,CAAC,GAAW,EAAE,EAAF,CAAK8B,CAAI,CAAEhE,KAAMhF,CAAI,CAACgJ,EAAKR,KAAK,CAAC,CAAC,GACjDS,MAAM,CAAC,OAAC,MAAEjE,CAAI,CAAE,UAAKA,IAExB,MACE,WAACC,EAAAA,CAAIA,CAAAA,CAACJ,SAAS,KAAKsE,QAAQ,SAASxH,OAAS,YACzCkH,CAAAA,GAAeH,GAAQE,CAAAA,CAAM,EAC9B,WAACQ,MAAAA,WACC,UAACjE,EAAAA,CAAIA,CAAAA,CAACC,QAAQ,YAAYP,SAAS,cAAK,iCACtCgE,EACCH,CAAAA,GAAQE,CAAAA,CAAM,EACf,WAAC3D,EAAAA,CAAIA,CAAAA,CAACuB,WAAW,SAASC,SAAS,OAAO/E,UAAY,EAAImF,GAAK,YAC3D+B,EACAF,QAKRK,EAAYvF,MAAM,CAAG,GACrB,WAAC4F,MAAAA,WACC,UAACjE,EAAAA,CAAIA,CAAAA,CAACC,QAAQ,YAAYP,SAAS,cAAK,UACxC,UAACpD,EAAAA,CAAIA,CAAAA,CAACK,gBAAiB,CAAEF,KAAM,iBAAkBC,GAAI,gBAAiB,EAAGH,UAAY,EAAIC,OAAS,EAAIkF,GAAK,WACvGkC,EAAY7B,GAAG,CAAC,GAAU,UAACgB,GAAWA,CAAsB,GAAGc,CAAI,EAAtBA,EAAKR,KAAK,QAI7DU,EAAkB1F,CAJ0B0E,KAIpB,CAAG,GAC3B,WAACkB,MAAAA,WACC,UAACjE,EAAAA,CAAIA,CAAAA,CAACC,QAAQ,YAAYP,SAAS,cAAK,mBACxC,UAACpD,EAAAA,CAAIA,CAAAA,CAACK,gBAAiB,CAAEF,KAAM,iBAAkBC,GAAI,gBAAiB,EAAGH,UAAY,EAAIC,OAAS,EAAIkF,GAAK,WACvGqC,EAAkBhC,GAAG,CAAC,GAAU,UAACgB,GAAWA,CAAsB,GAAGc,CAAI,EAAtBA,EAAKR,KAAK,UAM3E,CAN0DN,CC3D1D,GAAepL,EAAAA,IAAU,CAZA,OAAC,MAAEkD,CAAI,CAAS,EAYEqJ,EAAC,KDUK,CAC7C,GCtBE,CAACC,UAAUA,ODuBb,OACA,aACGf,GAAarB,GAAG,CAAC,OAAC,OAAEsB,CAAK,CAAE,UAAKA,OAChCC,GAAcvB,GAAG,CAAC,OAAC,OAAEsB,CAAK,CAAE,UAAKA,IACrC,CACae,IAAI,CAAC,GC5BHvJ,CD4BkB,CAACwI,EAAM,ECvBvC,CALqB,EAKrB,OAACgB,GAAAA,CAAUA,CAAAA,UACT,UAACb,GAAOA,CAAC3I,KAAOA,MALX,IAQX,GCyCA,ED5Cc2I,CC4CC7L,EAAAA,IAAU,CA/CC,OAAC,CAAE2M,UA+CeC,EAAC,OA/CC,CAAS,GAE/C,MAAE1J,CAAI,WAAE2J,CAAS,SAAEtC,CAAO,CAAE,CAAGoC,EA0CrC,MAxCgB,CAwCTrM,KAvCL,GAAI,CAAC+F,EAAAA,CAAMA,CAACyG,QAAQ,CAACC,cAAc,CAACC,SAAS,CAC3C,CAD6C,MACtC,KAGT,GAAIH,EACF,MACE,iCACE,UAACzJ,EAAAA,CAAQA,CAAAA,CAACyC,EAAE,QAAQoH,EAAE,OAAOpF,aAAa,SAC1C,UAACzE,EAAAA,CAAQA,CAAAA,CAACyC,EAAE,QAAQoH,EAAE,OAAOpF,aAAa,SAC1C,UAACzE,EAAAA,CAAQA,CAAAA,CAACyC,EAAE,OAAOoH,EAAE,OAAOpF,aAAa,YAK/C,GAAI0C,EACF,OAAO,KAGT,IAAM2C,EAAc,CAAC,KACnB,GAAI,CACF,IAAM5F,EAAM,IAAI6F,IAAIjK,EAAKkK,cAAc,EACvC,MACE,UAACC,GAAAA,CAAYA,CAAAA,CAACnF,KAAOhF,EAAKkK,cAAc,CAAG9E,QAAQ,SAAStC,WAAa,EAAI+B,SAAS,KAAKE,WAAa,WACpGX,EAAIgG,IAAI,EAGhB,CAAE,MAAOC,EAAO,CACd,OAAO,IACT,CACF,KAEA,MACE,iCACIL,EACF,UAACX,GAAgBA,CAACrJ,KAAOA,OAG/B,GAGF,GANyBqJ,GClBF,QAEgCnL,EAc7BA,EA0CtBoM,EAKAb,EAMIA,EAuCYvL,EAciBoM,CAKtBC,CALsBD,EAAAA,KA1Hb,MA+HKC,EAAC,IA/HJrM,CAAU,cAAEsM,CAAY,MAAElM,CAAI,CAAS,GACzDmM,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GACxBC,EAAc,EAAYvK,iBAAiB,CAAsC,GAAlClC,CAAe,QAAfA,EAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBoG,OAAAA,GAAW,GAE3EmF,EAAoB/K,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,sBAAuB,CAC3DC,WAAY,CAAEL,KAAMqM,EAAaC,QAASzH,EAAAA,CAAMA,CAAC0H,KAAK,CAACtG,EAAE,EACzD3F,aAAc,CAAEC,SAASC,CAAQZ,EAAW8B,IAAI,EAAK,CAAC9B,EAAWkC,iBAAiB,EAAI+C,EAAAA,CAAMA,CAACyG,QAAQ,CAACC,cAAc,CAACC,SAAU,CACjI,GAEMgB,EAA4BhO,EAAAA,OAAa,CAAC,IAAO,CAAEwB,EAAM,CAAC2K,MAAM,CAACnK,SAAW,CAAER,EAAM,EACpFgM,EAAuBS,CAAAA,EAAAA,GAAAA,CAAAA,CAA2BA,CAACD,GAEnD5I,EAAYhE,EAAWkC,iBAAiB,EAC5CoK,EAAapK,iBAAiB,EAC7B+C,EAAAA,CAAMA,CAACyG,QAAQ,CAACC,cAAc,CAACC,SAAS,EAAIL,EAAkBE,SAAS,CAEpEqB,EAAkB9M,CAAe,QAAfA,EAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiB+C,MAAAA,EAAS,KAA8B,OAAxB/C,EAAW8B,IAAI,CAACiB,MAAM,CAAE,KAAK,GAE/EgK,EAAWnO,EAAAA,OAAa,CAAC,KAG7B,GAFsB2N,CAElB,CAF2BS,QAAQ,EAAIT,EAASS,GAEhC,KAFwC,CAAC7C,QAAQ,CAAC,WAMtE,MAAO,CACL/C,MAAO,sBACPlB,IAAKqG,EAASS,QAChB,CACF,EAAG,CAAET,EAASS,QAAQ,CAAE,EAElBC,EAAyBC,CAAAA,EAAAA,GAAAA,EAAAA,CAAQA,CAAC,SAAU,YAC5CC,EAA2BD,CAAAA,EAAAA,GAAAA,EAAAA,CAAQA,CAAC,SAAU,SAE9CE,EAAyBxO,EAAAA,OAAa,CAAC,SAGjCoB,EAKmCA,EAU3CuL,EAGIa,EAAAA,EAAAA,EApBN,MAAO,CACLpM,EAAW8B,IAAI,CAAG,CAChBuL,IAAI,SAAErN,EAAAA,EAAW8B,IAAI,GAAf9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBgD,IAAI,CAC3B2G,KAAM2D,CAAAA,EAAAA,EAAAA,EAAAA,CAAgBA,CAACtN,EAAW8B,IAAI,CAACkB,IAAI,EAC3CuK,QAAS,SACTC,SAASC,EACX,OAAInM,EACJ2D,EAAAA,CAAMA,CAACyG,QAAQ,CAACgC,aAAa,CAAC9B,SAAS,GAAmB,OAAf5L,GAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiB2N,UAAAA,EAC1D,CACEN,KAAM,UACN1D,KAAM,UACN4D,QAAS,SACTC,QAvDsB,CAuDbC,GACTG,KAAM,CAAEC,QAASZ,EAAwBa,UAAWX,CAAyB,CAC/E,OACA7L,KACCyM,CAAAA,EAAAA,GAAAA,CAAAA,CAAcA,CAACzB,EAAaxK,IAAI,EACnCyJ,CAAAA,QAAAA,EAAAA,EAAkBzJ,IAAAA,GAAlByJ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwByC,aAAAA,EACtB,CAAEX,KAAM9B,EAAkBzJ,IAAI,CAACkM,aAAa,CAAErE,KAAM4B,EAAkBzJ,IAAI,CAACkM,aAAa,CAAET,QAAS,SAAmBC,QAAS,CAAC,EAAG,OACnIlM,KACE8K,CAAyB,QAAzBA,EAAAA,EAAqBtK,IAAAA,GAArBsK,KAAAA,MAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAA2B6B,SAAAA,GAA3B7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,CAAsC,CAAChM,EAAK8N,WAAW,MAAvD9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA4DgB,IAAI,CAACrC,MAAM,CAACoD,GAAuB,SAAhBA,EAAIZ,OAAO,CAAK,GAAW,EAAE,CACjH,CAACxC,MAAM,CAACnK,SAASwN,IAAI,CAACC,GAAAA,CAAcA,CACvC,EAAG,CACwB,QAAzBjC,EAAAA,EAAqBtK,IAAAA,GAArBsK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA2B6B,SAAS,CACpC3B,EAAaxK,IAAI,CACjBmL,EACAE,EACAnN,EAAW8B,IAAI,CACO,QAAtByJ,EAAAA,EAAkBzJ,IAAAA,GAAlByJ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwByC,aAAa,CACrC5N,EACD,EAEKkO,EACJ,iCACI/C,CAAAA,QAAAA,EAAAA,EAAkBzJ,IAAAA,GAAlByJ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBgD,YAAAA,GACxB,UAACC,GAAAA,CAAOA,CAAAA,CAACpH,MAAQ,kDAAsE,OAAnBnC,EAAAA,CAAMA,CAAC0H,KAAK,CAAChD,IAAI,WACnF,UAAC9E,EAAAA,EAAGA,CAAAA,CAAC+E,QAAU,WACb,UAACF,EAAAA,CAAOA,CAAAA,CAACC,KAAK,YAAYE,MAAM,YAAYD,QAAU,EAAI6E,OAAO,gBAIvE,UAACC,GAAAA,CAAUA,CAAAA,CACT1K,UAAYA,GAAciB,EAAAA,CAAMA,CAACyG,QAAQ,CAACiD,eAAe,CAAC/C,SAAS,EAAIQ,EAAqBX,SAAS,CACrG2B,KAAOA,EACPwB,SAAW,OAKXC,EACJ,WAAC9H,EAAAA,CAAIA,CAAAA,CAACuB,WAAW,SAAS7D,EAAE,OAAOK,KAAO,EAAItB,UAAY,EAAIC,OAAS,EAAI8E,SAAU,CAAE7E,KAAM,OAAQC,GAAI,QAAS,YAC9G2I,EAAaxK,IAAI,EACjB,UAAC2F,EAAAA,EAAaA,CAAAA,CACZrB,QAAS,CAAE,GAAGkG,EAAaxK,IAAI,CAAE6H,KAAM,EAAG,EAC1C3F,UAAYA,EACZ8K,WAAW,UACXnI,SAAS,KACTC,WAAa,MAGf,CAAC5C,GAAahE,EAAW8B,IAAI,EAAI,UAACiN,GAAAA,CAAkBA,CAAAA,CAACrJ,MAAQ1F,EAAW8B,IAAI,CAAGoF,QAAQ,WACzF,UAAC8H,GAAAA,CAAaA,CAAAA,CAAC5I,QAAUkG,EAAaxK,IAAI,CAAGkC,UAAYA,IACzD,UAACiL,GAAAA,CAAkBA,CAAAA,CAACjL,UAAYA,IAChC,WAAC+C,EAAAA,CAAIA,CAAAA,CAACC,GAAI,CAAEtD,KAAM,EAAGC,GAAI,MAAO,EAAGH,UAAY,EAAIoL,SAAU,CAAElL,KAAM,EAAGC,GAAI,CAAE,YAC5E,UAAC6H,GAAiBA,CAACD,kBAAoBA,CAArBC,GAClB,UAAC0D,GAAAA,CAAgBA,CAAAA,CAAClM,KAAK,QAAQmM,UAAY1C,EAAYyB,WAAW,GAAKlH,GAAI,CAAEtD,KAAM,OAAQC,GAAI,CAAE,UAKvG,MACE,iCACE,UAACyL,GAAAA,CAASA,CAAAA,CACRtF,MAAQ,GAAiDgD,MAAAA,CAA7C9M,CAAe,QAAfA,EAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiB2J,IAAAA,GAAQ,iBAAqC,OAAjBmD,GACzD9I,UAAYhE,EAAWkC,iBAAiB,CACxC6K,SAAWA,EACXsC,YAAcrP,EAAW8B,IAAI,CAC3B,UAACwN,GAAAA,EAAgB,EACf5J,MAAQ1F,EAAW8B,IAAI,CACvBkC,UAAYhE,EAAWkC,iBAAiB,CACxCqN,KAAK,OAEL,KACJjB,aAAeA,EACfO,UAAYA,IAEZ,CAACzC,EAAqBX,SAAS,EAC/B,UAAC+D,GAAAA,CAAoBA,CAAAA,CAACpC,IAAI,SAAGhB,EAAAA,EAAqBtK,IAAAA,GAArBsK,KAAAA,MAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAA2B6B,SAAS,GAApC7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,CAAsC,CAAChM,EAAK8N,WAAW,MAAvD9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA4DgB,IAAI,CAAGzE,GAAG,OAAO3C,GAAK,MAGvH,kBE3HA,IAAMyJ,GAAwB,CAC5BxL,QAAS,OACTqE,WAAY,SACZ9E,UAAW,CACb,EA+NA,GA7NyB,MA6NVkM,GA1JW1P,EAe8BA,EA4BbA,EAuBvCsM,EAsBGtM,KAkEwB0P,CArEzB7G,CAqE0B,CA5N9B,GAAM,CAAE8G,EAAgBC,EAAmB,CAAGhR,EAAAA,QAAc,EAAC,GACvD,CAAEiR,EAAmBC,EAAsB,CAAGlR,EAAAA,QAAc,GAC5DiB,EAASI,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClB2F,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAEtBkK,EAAYnR,EAAAA,MAAY,CAAiB,MAEzCoR,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACpQ,EAAOQ,KAAK,CAACD,IAAI,EAClDiB,EAAM4O,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACpQ,EAAOQ,KAAK,CAACgB,GAAG,EAC1C0G,EAAckI,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACpQ,EAAOQ,KAAK,CAAC6P,mBAAmB,QAAK5O,EAEvE6O,EAAcC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,GAE5BpQ,EAAaqQ,SDvDGA,CAA0B,EAChD,CCsDgCA,EDtD1B,SAAEC,CAAO,CAAE,CAAG9D,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAEjC,MAAOhM,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,QAAS,CAC1BC,WAAY,CAAEL,MAAK,EACnBM,aAAc,CACZC,SAASC,CAAQR,EACjBS,gBAAiB0P,EAAAA,EAA4B,CAC7CC,YAAaF,QAAWhP,CAC1B,CACF,EACF,EC4CmC0O,GAE3B1D,EAAe9L,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,UAAW,CAC1CC,WAAY,CAAEL,KAAM4P,CAAW,EAC/BtP,aAAc,CACZC,QAASgP,IAAkB/O,CAAQf,EAAOQ,KAAK,CAACD,IAAI,CACpDS,gBAAiB4P,EAAAA,EAAyB,CAE9C,GAEA7R,EAAAA,SAAe,CAAC,KACVoB,EAAW8B,IAAI,EAAI+N,GACrBM,EAAYO,YAAY,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,QAAS,CAAElQ,WAAY,CAAEL,KAAM4P,CAAW,CAAE,GAAI,IACtF,GAAIY,EACF,MAAO,CAAE,CADG,EACAA,CAAQ,CAAElO,aAAcmN,EAAkBvP,QAAQ,EAAG,CAErE,EAEJ,EAAG,CAAEN,EAAW8B,IAAI,CAAE+N,EAAmBG,EAAYG,EAAa,EAElE,IAAMU,EAAsEjS,EAAAA,WAAiB,CAAC,IAC3EuR,EAAYW,YAAY,CAACH,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,QAAS,CAAElQ,WAAY,CAAEL,KAAM4P,CAAW,CAAE,KAEnGF,EAAqBiB,EAAQrO,YAAY,EAE3CyN,EAAYO,YAAY,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,QAAS,CAAElQ,WAAY,CAAEL,KAAM4P,CAAW,CAAE,GAAI,IACtF,GAAIY,EACF,MAAO,CAAE,CADG,EACAA,CAAQ,CAAElO,aAAcqO,EAAQrO,YAAY,CAACpC,QAAQ,EAAG,CAExE,EACF,EAAG,CAAE6P,EAAaH,EAAY,EAExBgB,EAAcpS,EAAAA,WAAiB,CAAC,IAAMgR,GAAkB,GAAO,EAAE,EAEjEqB,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,UAAsC,aAA3BnB,EAAAA,KAAAA,EAAAA,EAAY9B,WAAW,CAAvB8B,GAClBoB,WAAY,CAACpB,EACbqB,OAAQL,EACRM,cAAeN,CACjB,GACAO,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,eACPC,QAASZ,CACX,GAEAa,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,MACJ1R,EAAW8B,IAAI,EAAK9B,EAAD,iBAA6B,EAAKiF,EAAD,CAAOA,CAAC2I,IAAI,CAAC+D,GAAG,CAACC,mBAAmB,EAAE,EAC5FC,CAAe,CAAC,CAAEzQ,SAAU,gBAAiBf,MAAO,CAAED,KAAMJ,EAAW8B,IAAI,CAACsE,OAAO,CAAG,EAAGpG,EAAW8B,IAAI,CAE5G,EAAG,CAAE9B,EAAW8B,IAAI,CAAE9B,EAAWkC,iBAAiB,CAAE,EAEpD,IAAM4P,EAAU,EAAYhQ,IAAI,EAAI,CAAC9B,EAAWkC,iBAAiB,EAAMoK,EAAaxK,IAAI,EAAI,CAACwK,EAAapK,iBAAiB,CACrH6P,EAAkB/R,CAAe,QAAfA,EAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBgD,IAAAA,GAAQgP,EAAAA,EAAkBA,CAAC7H,QAAQ,CAACnK,EAAW8B,IAAI,CAACkB,IAAI,EAE3FiP,EAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACvCC,aAAc,kBACd1R,WAAY,CAAEL,KAAM4P,CAAW,YAC/BD,EACAqC,QAAS,CACPzR,SAASC,EACPkR,GACA9B,GAEE,EAAE+B,GAAmB,CAAC1Q,GACd,EADR,kBACAA,CAAQ,CAAgB,EAG5BR,gBAAiB0P,EAAAA,EAAgC,QAACvQ,GAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBgD,IAAI,CACzE,CACF,GAEM6E,EAAiBqK,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACvCC,aAAc,kBACd1R,WAAY,CAAEL,KAAM4P,CAAW,EAC/BqC,QAAStK,EAAc,CAAEmI,oBAAqBnI,CAAY,EAAI,CAAC,YAC/DgI,EACAqC,QAAS,CACPzR,SAASC,EACPkR,GACA9B,GAEE,IAAoB,CAAC3O,GACrBA,GADA,YACQ,CAAU,EAGtBR,gBAAiByR,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAoB/B,EAAAA,EAAyB,CAAE,GAAI,CAAEgC,iBAAkB,CAAEC,aAAc,CAAE,CAAE,EAC9H,CACF,GAEMC,EAAeP,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACrCC,aAAc,gBACd1R,WAAY,CAAEL,KAAM4P,CAAW,YAC/BD,EACAqC,QAAS,CACPzR,QAASC,GAAQoP,GAAsB,YAAR3O,GAAqByQ,CAAAA,EACpDjR,gBAAiB6R,CAAAA,EAAAA,EAAAA,EAAAA,CAAmBA,CAAgB,QAAf1S,EAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBgD,IAAI,CAAE,KAC9D,CACF,GAEMgB,EAAYhE,EAAWkC,iBAAiB,EAAIoK,EAAapK,iBAAiB,CAC1EyQ,GAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,CAACtG,EAAaxK,IAAI,CAAEwK,EAAapK,iBAAiB,EAEhF2Q,GAAyB,CAC7Bd,EAAkB,CAChB1L,GAAI,YACJyD,MAAO,YACPgJ,UAAW,UAAChL,GAAcA,CAACD,eAAiBA,CAAlBC,CAAmC9H,WAAaA,EAAa+H,YAAcA,EAAcC,aAAe,CAAChE,GACrI,OAAI1C,EACJ,CACE+E,GAAI,kBACJyD,MAAO,kBACPgJ,UAAW,UAACC,GAAAA,CAAaA,CAAAA,CAACd,eAAiBA,EAAiBjS,WAAaA,EAAagI,aAAe,CAAChE,GACxG,EACA,CACEqC,GAAI,UACJyD,MAAO,UACPgJ,UAAW,UAACE,EAAAA,CAAYA,CAAAA,CAACtN,MAAQ1F,EAAW8B,IAAI,CAAG2Q,aAAeA,EAAezK,aAAe,CAAChE,GACnG,EACAsI,CAAAA,QAAAA,EAAAA,EAAaxK,IAAI,GAAjBwK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmB2G,WAAAA,EAAc,CAC/B5M,GAAI,WACJyD,MAAO,SACDwC,QAAJ,SAAIA,EAAAA,EAAaxK,IAAAA,GAAbwK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmB4G,WAAAA,EAEnB,iCACE,UAAChP,OAAAA,UAAK,aACN,UAACwF,EAAAA,CAAOA,CAAAA,CAACC,KAAK,iBAAiBC,QAAQ,OAAOC,MAAM,YAAY7C,GAAK,OAKpE,UACT,EACA8L,UAAW,UAACK,EAAAA,CAAeA,CAAAA,CAACN,KAAOF,GAAaE,IAAI,CAAG7O,UAAY2O,GAAa3O,SAAS,CAAGgE,aAAe,CAAChE,IAC5GoP,QAASC,EAAAA,EAAgBA,OACvB/R,EACL,CAACyJ,MAAM,CAACnK,UAKL,SAACZ,EAAAA,EAAW8B,IAAAA,GAAX9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBgD,IAAAA,IAAS,UAAa3B,CAAAA,CAAD,EAAiB,mBAAmB,CAA3BA,IAClDwH,EAAaoJ,EAAepJ,UAAAA,EAGL,WAAW,CAAhChJ,EAAOQ,KAAK,CAACgB,GAAG,GAClBwH,EAAa4J,EAAa5J,UAAAA,GAIxB,GAAoB,CAACxH,GAAgB,cAARA,CAAQ,GAAa,CACpDwH,EAAahB,EAAegB,UAAAA,EAG9B,IAAMyK,GAAe1U,EAAAA,WAAiB,CAAC,OAAC,UAAE2U,CAAQ,gBAAEC,CAAc,CAAiD,UACjH,EACS,CAAE7K,GAAI,CAAE,EAGV,CACL8K,GAAI,EACJC,GAAI,EACJC,aAAc,EACdC,UAA8B,IAAnBJ,GAAwBD,EAAW,aAAe,MAC/D,CACF,EAAG,CAAE3N,EAAU,EAETiO,GAAgBjV,EAAAA,OAAa,CAAC,IAClC,EACS,KAIP,GALY,EAKZ,4BACY,YAARyC,GACA,UAACyS,EAAAA,CAAoBA,CAAAA,CACnB1N,QAAU4J,EACV+D,OAAQ,CAAE/Q,KAAM,SAAU,EAC1BgB,SAAS,OAAG6E,EAAAA,KAAAA,EAAAA,EAAY7E,SAAS,GAArB6E,OAGdA,EAAAA,KAAAA,EAAAA,EAAYmL,SAAS,GAAI,UAACpL,EAAAA,CAAUA,CAAAA,CAAG,GAAGC,CAAU,MAGzD,CAAEmH,EAAYpK,EAAUiD,EAAYxH,EAAK,EAE5C,MACE,iCACE,UAACgL,GAAcA,CAACrM,WAAaA,EAAasM,GAA3BD,UAA0CC,EAAelM,KAAO4P,IAE/E,UAAClQ,EAAYA,CAACE,WAAaA,IAAdF,CAGb,SAAC+E,EAAAA,EAAGA,CAAAA,CAAC/F,IAAMiR,IAEX,UAACkE,EAAAA,CAAUA,CAAAA,CACTpB,KAAOA,GACPS,aAAeA,GACfY,UAAYL,GACZM,eAAiB1E,GACjB2E,cAAgB,CAACxO,EACjB5B,UAAYA,MAIpB,YChPA,OAR+C,GAE3C,IAMWqQ,CANX,KAACC,EAAAA,CAAUA,CAAAA,CAAClT,SAJoB,CAITA,eAAWf,MAAQkU,EAAMlU,KAAK,CAAGiQ,QAAUiE,EAAMjE,OAAO,UAC7E,UAACkE,GAAKA,CAAAA,CAAAA,sMCiDZ,MAAe5V,EAAAA,IAAU,CAnDN,OAAC,IAmDiB0M,EAAC,IAnDhBmJ,CAAQ,CAAS,GAC/B7O,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB,QAAE6O,CAAM,UAAEC,CAAQ,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAE7CC,EACJ,WAACC,EAAAA,CAAMA,CAAAA,CACLxF,KAAK,KACLrI,QAAQ,UACR8N,YAAY,OACZ5S,QAAUuS,EACVM,SAAWP,EACXzK,aAAW,YACXrD,WAAa,IACbC,WAAa,EACbqO,GAAK,EACLC,GAAKvP,EAAW,EAAI,EACpBiG,EAAE,iBAEF,UAACnC,EAAAA,CAAOA,CAAAA,CAACC,KAAK,OAAOC,QAAU,EAAIpC,GAAK5B,EAAW,EAAI,IACrD,CAACA,GAAY,UAAC1B,OAAAA,UAAK,mBAIzB,EAEI,QAFU,CAEV,wBACI4Q,EACF,UAACM,EAAAA,EAAKA,CAAAA,CAACV,OAASA,EAASE,QAAUA,EAAUrF,KAAK,gBAChD,WAAC8F,EAAAA,CAAYA,CAAAA,WACX,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,GACfb,UAQV,WAACc,EAAAA,CAAOA,CAAAA,CAACb,OAASA,EAASE,QAAUA,EAAUY,UAAU,eAAeC,MAAM,cAC5E,UAACC,EAAAA,CAAcA,CAAAA,UACXZ,IAEJ,UAACa,EAAAA,CAAcA,CAAAA,CAAClR,EAAE,iBAChB,UAACmR,EAAAA,CAAWA,CAAAA,CAACC,GAAK,EAAItQ,GAAK,WACvBkP,QAKZ","sources":["webpack://_N_E/?52ac","webpack://_N_E/./lib/hooks/useClientRect.tsx","webpack://_N_E/./ui/token/TokenDetails.tsx","webpack://_N_E/./ui/token/TokenInventoryItem.tsx","webpack://_N_E/./ui/token/TokenInventory.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/DocsLink.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/ServiceLink.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/SupportLink.tsx","webpack://_N_E/./ui/token/TokenProjectInfo/Content.tsx","webpack://_N_E/./ui/token/TokenProjectInfo.tsx","webpack://_N_E/./ui/token/TokenVerifiedInfo.tsx","webpack://_N_E/./ui/token/TokenPageTitle.tsx","webpack://_N_E/./ui/token/useTokenQuery.tsx","webpack://_N_E/./ui/pages/Token.tsx","webpack://_N_E/./pages/token/[hash]/index.tsx","webpack://_N_E/./ui/shared/InfoButton.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/token/[hash]\",\n      function () {\n        return require(\"private-next-pages/token/[hash]/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/token/[hash]\"])\n      });\n    }\n  ","import { debounce } from 'es-toolkit';\nimport type { LegacyRef } from 'react';\nimport React from 'react';\n\nexport default function useClientRect<E extends Element>(): [ DOMRect | null, LegacyRef<E> | undefined ] {\n  const [ rect, setRect ] = React.useState<DOMRect | null>(null);\n  const nodeRef = React.useRef<E>();\n\n  const ref = React.useCallback((node: E) => {\n    if (node !== null) {\n      setRect(node.getBoundingClientRect());\n    }\n    nodeRef.current = node;\n  }, []);\n\n  React.useEffect(() => {\n    const content = window.document.querySelector('main');\n    if (!content) {\n      return;\n    }\n\n    const resizeHandler = debounce(() => {\n      setRect(nodeRef.current?.getBoundingClientRect() ?? null);\n    }, 100);\n\n    const resizeObserver = new ResizeObserver(resizeHandler);\n    resizeObserver.observe(content);\n    resizeObserver.observe(window.document.body);\n\n    return function cleanup() {\n      resizeObserver.unobserve(content);\n      resizeObserver.unobserve(window.document.body);\n    };\n  }, [ ]);\n\n  return [ rect, ref ];\n}\n","import { Box, Grid, Link } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport BigNumber from 'bignumber.js';\nimport { useRouter } from 'next/router';\nimport React, { useCallback } from 'react';\nimport { scroller } from 'react-scroll';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport config from 'configs/app';\nimport type { ResourceError } from 'lib/api/resources';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport { TOKEN_COUNTERS } from 'stubs/token';\nimport type { TokenTabs } from 'ui/pages/Token';\nimport AppActionButton from 'ui/shared/AppActionButton/AppActionButton';\nimport useAppActionData from 'ui/shared/AppActionButton/useAppActionData';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\n\nimport TokenNftMarketplaces from './TokenNftMarketplaces';\n\ninterface Props {\n  tokenQuery: UseQueryResult<TokenInfo, ResourceError<unknown>>;\n}\n\nconst TokenDetails = ({ tokenQuery }: Props) => {\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const hash = router.query.hash?.toString();\n\n  const tokenCountersQuery = useApiQuery('token_counters', {\n    pathParams: { hash },\n    queryOptions: { enabled: Boolean(router.query.hash), placeholderData: TOKEN_COUNTERS },\n  });\n\n  const appActionData = useAppActionData(hash);\n\n  const changeUrlAndScroll = useCallback((tab: TokenTabs) => () => {\n    router.push(\n      { pathname: '/token/[hash]', query: { hash: hash || '', tab } },\n      undefined,\n      { shallow: true },\n    );\n    scroller.scrollTo('token-tabs', {\n      duration: 500,\n      smooth: true,\n    });\n  }, [ hash, router ]);\n\n  const countersItem = useCallback((item: 'token_holders_count' | 'transfers_count') => {\n    const itemValue = tokenCountersQuery.data?.[item];\n    if (!itemValue) {\n      return 'N/A';\n    }\n    if (itemValue === '0') {\n      return itemValue;\n    }\n\n    const tab: TokenTabs = item === 'token_holders_count' ? 'holders' : 'token_transfers';\n\n    return (\n      <Skeleton isLoaded={ !tokenCountersQuery.isPlaceholderData }>\n        <Link onClick={ changeUrlAndScroll(tab) }>\n          { Number(itemValue).toLocaleString() }\n        </Link>\n      </Skeleton>\n    );\n  }, [ tokenCountersQuery.data, tokenCountersQuery.isPlaceholderData, changeUrlAndScroll ]);\n\n  throwOnResourceLoadError(tokenQuery);\n\n  if (!isMounted) {\n    return null;\n  }\n\n  const {\n    exchange_rate: exchangeRate,\n    total_supply: totalSupply,\n    circulating_market_cap: marketCap,\n    decimals,\n    symbol,\n    type,\n  } = tokenQuery.data || {};\n\n  let totalSupplyValue;\n\n  if (decimals) {\n    const totalValue = totalSupply ? getCurrencyValue({ value: totalSupply, accuracy: 3, accuracyUsd: 2, exchangeRate, decimals }) : undefined;\n    totalSupplyValue = totalValue?.valueStr;\n  } else {\n    totalSupplyValue = Number(totalSupply).toLocaleString();\n  }\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 1, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'auto minmax(0, 1fr)' }} overflow=\"hidden\"\n    >\n      { exchangeRate && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Price per token on the exchanges\"\n            isLoading={ tokenQuery.isPlaceholderData }\n          >\n            Price\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } display=\"inline-block\">\n              <span>{ `$${ Number(exchangeRate).toLocaleString(undefined, { minimumSignificantDigits: 4 }) }` }</span>\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { marketCap && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Total supply * Price\"\n            isLoading={ tokenQuery.isPlaceholderData }\n          >\n            Fully diluted market cap\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } display=\"inline-block\">\n              <span>{ `$${ BigNumber(marketCap).toFormat() }` }</span>\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      <DetailsInfoItem.Label\n        hint=\"The total amount of tokens issued\"\n        isLoading={ tokenQuery.isPlaceholderData }\n      >\n        Max total supply\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        alignSelf=\"center\"\n        wordBreak=\"break-word\"\n        whiteSpace=\"pre-wrap\"\n      >\n        <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } w=\"100%\" display=\"flex\">\n          <TruncatedValue value={ totalSupplyValue || '0' } maxW=\"80%\" flexShrink={ 0 }/>\n          <Box flexShrink={ 0 }> </Box>\n          <TruncatedValue value={ symbol || '' }/>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Number of accounts holding the token\"\n        isLoading={ tokenQuery.isPlaceholderData }\n      >\n        Holders\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !tokenCountersQuery.isPlaceholderData }>\n          { countersItem('token_holders_count') }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Number of transfer for the token\"\n        isLoading={ tokenQuery.isPlaceholderData }\n      >\n        Transfers\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !tokenCountersQuery.isPlaceholderData }>\n          { countersItem('transfers_count') }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      { decimals && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Number of digits that come after the decimal place when displaying token value\"\n            isLoading={ tokenQuery.isPlaceholderData }\n          >\n            Decimals\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !tokenQuery.isPlaceholderData } minW={ 6 }>\n              { decimals }\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { type !== 'ERC-20' && (\n        <TokenNftMarketplaces\n          hash={ hash }\n          isLoading={ tokenQuery.isPlaceholderData }\n          appActionData={ appActionData }\n          source=\"NFT collection\"\n        />\n      ) }\n\n      { (type !== 'ERC-20' && config.UI.views.nft.marketplaces.length === 0 && appActionData) && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Link to the dapp\"\n          >\n            Dapp\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value\n            py=\"1px\"\n          >\n            <AppActionButton data={ appActionData } height=\"30px\" source=\"NFT collection\"/>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n    </Grid>\n  );\n};\n\nexport default React.memo(TokenDetails);\n","import { Box, Flex, Text, Link, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo, TokenInstance } from 'types/api/token';\n\nimport { route } from 'nextjs-routes';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport NftMedia from 'ui/shared/nft/NftMedia';\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\ntype Props = { item: TokenInstance; token: TokenInfo; isLoading: boolean };\n\nconst TokenInventoryItem = ({ item, token, isLoading }: Props) => {\n\n  const isMobile = useIsMobile();\n\n  const mediaElement = (\n    <NftMedia\n      mb=\"18px\"\n      data={ item }\n      isLoading={ isLoading }\n      autoplayVideo={ false }\n    />\n  );\n\n  const url = route({ pathname: '/token/[hash]/instance/[id]', query: { hash: token.address, id: item.id } });\n\n  return (\n    <Box\n      w={{ base: '100%', lg: '210px' }}\n      border=\"1px solid\"\n      borderColor={ useColorModeValue('blackAlpha.100', 'whiteAlpha.200') }\n      borderRadius=\"12px\"\n      p=\"10px\"\n      fontSize=\"sm\"\n      fontWeight={ 500 }\n      lineHeight=\"20px\"\n    >\n      <Link href={ isLoading ? undefined : url }>\n        { mediaElement }\n      </Link>\n      { item.id && (\n        <Flex mb={ 2 } ml={ 1 }>\n          <Text whiteSpace=\"pre\" variant=\"secondary\">ID# </Text>\n          <TruncatedTextTooltip label={ item.id }>\n            <Skeleton isLoaded={ !isLoading } overflow=\"hidden\">\n              <LinkInternal\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                whiteSpace=\"nowrap\"\n                display=\"block\"\n                isLoading={ isLoading }\n                href={ url }\n              >\n                { item.id }\n              </LinkInternal>\n            </Skeleton>\n          </TruncatedTextTooltip>\n        </Flex>\n      ) }\n      { item.owner && (\n        <Flex mb={ 2 } ml={ 1 }>\n          <Text whiteSpace=\"pre\" variant=\"secondary\" mr={ 2 } lineHeight=\"24px\">Owner</Text>\n          <AddressEntity\n            address={ item.owner }\n            isLoading={ isLoading }\n            truncation=\"constant\"\n            noCopy\n            noIcon={ isMobile }\n          />\n        </Flex>\n      ) }\n    </Box>\n  );\n};\n\nexport default TokenInventoryItem;\n","import { Flex, Grid, Text } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport { AddressHighlightProvider } from 'lib/contexts/addressHighlight';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport ResetIconButton from 'ui/shared/ResetIconButton';\n\nimport TokenInventoryItem from './TokenInventoryItem';\n\ntype Props = {\n  inventoryQuery: QueryWithPagesResult<'token_inventory'>;\n  tokenQuery: UseQueryResult<TokenInfo, ResourceError<unknown>>;\n  ownerFilter?: string;\n  shouldRender?: boolean;\n};\n\nconst TokenInventory = ({ inventoryQuery, tokenQuery, ownerFilter, shouldRender = true }: Props) => {\n  const isMobile = useIsMobile();\n  const isMounted = useIsMounted();\n\n  const resetOwnerFilter = React.useCallback(() => {\n    inventoryQuery.onFilterChange({});\n  }, [ inventoryQuery ]);\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const isActionBarHidden = !ownerFilter && !inventoryQuery.data?.items.length;\n\n  const ownerFilterComponent = ownerFilter && (\n    <Flex\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      mb={{ base: isActionBarHidden ? 3 : 6, lg: 3 }}\n      mr={ 4 }\n    >\n      <Text whiteSpace=\"nowrap\" mr={ 2 } py={ 1 }>Filtered by owner</Text>\n      <Flex alignItems=\"center\" py={ 1 }>\n        <AddressEntity address={{ hash: ownerFilter }} truncation={ isMobile ? 'constant' : 'none' }/>\n        <ResetIconButton onClick={ resetOwnerFilter }/>\n      </Flex>\n    </Flex>\n  );\n\n  const actionBar = !isActionBarHidden && (\n    <>\n      { ownerFilterComponent }\n      <ActionBar mt={ -6 }>\n        { isMobile && <Pagination ml=\"auto\" { ...inventoryQuery.pagination }/> }\n      </ActionBar>\n    </>\n  );\n\n  const items = inventoryQuery.data?.items;\n  const token = tokenQuery.data;\n\n  const content = items && token ? (\n    <AddressHighlightProvider>\n      <Grid\n        w=\"100%\"\n        columnGap={{ base: 3, lg: 6 }}\n        rowGap={{ base: 3, lg: 6 }}\n        gridTemplateColumns={{ base: 'repeat(2, calc((100% - 12px)/2))', lg: 'repeat(auto-fill, minmax(210px, 1fr))' }}\n      >\n        { items.map((item, index) => (\n          <TokenInventoryItem\n            key={ item.id + '_' + index + (inventoryQuery.isPlaceholderData ? '_' + 'placeholder' : '') }\n            item={ item }\n            isLoading={ inventoryQuery.isPlaceholderData || tokenQuery.isPlaceholderData }\n            token={ token }\n          />\n        )) }\n      </Grid>\n    </AddressHighlightProvider>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ inventoryQuery.isError }\n      items={ items }\n      emptyText=\"There are no tokens.\"\n      filterProps={{\n        hasActiveFilters: Boolean(ownerFilter),\n        emptyFilteredText: 'No tokens found for the selected owner.',\n      }}\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default TokenInventory;\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  href: string;\n}\n\nconst DocsLink = ({ href }: Props) => {\n  return (\n    <Link\n      href={ href }\n      target=\"_blank\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n      columnGap={ 1 }\n    >\n      <IconSvg name=\"docs\" boxSize={ 6 } color=\"text_secondary\"/>\n      <span>Documentation</span>\n    </Link>\n  );\n};\n\nexport default DocsLink;\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenVerifiedInfo } from 'types/api/token';\n\nimport type { IconName } from 'ui/shared/IconSvg';\nimport IconSvg from 'ui/shared/IconSvg';\n\nexport interface Props {\n  field: keyof TokenVerifiedInfo;\n  icon: IconName;\n  title: string;\n  href?: string;\n}\n\nconst ServiceLink = ({ href, title, icon }: Props) => {\n  return (\n    <Link\n      href={ href }\n      aria-label={ title }\n      title={ title }\n      target=\"_blank\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n    >\n      <IconSvg name={ icon } boxSize={ 5 } mr={ 2 } color=\"text_secondary\"/>\n      <span>{ title }</span>\n    </Link>\n  );\n};\n\nexport default ServiceLink;\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  url: string;\n}\n\nconst SupportLink = ({ url }: Props) => {\n  const isEmail = url.includes('@');\n  const href = isEmail ? `mailto:${ url }` : url;\n\n  return (\n    <Link\n      href={ href }\n      target=\"_blank\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n      columnGap={ 1 }\n    >\n      <IconSvg name={ isEmail ? 'email' : 'link' } boxSize={ 6 } color=\"text_secondary\"/>\n      <span>{ url }</span>\n    </Link>\n  );\n};\n\nexport default SupportLink;\n","import { Flex, Text, Grid } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenVerifiedInfo } from 'types/api/token';\n\nimport DocsLink from './DocsLink';\nimport type { Props as ServiceLinkProps } from './ServiceLink';\nimport ServiceLink from './ServiceLink';\nimport SupportLink from './SupportLink';\n\ninterface Props {\n  data: TokenVerifiedInfo;\n}\n\nconst SOCIAL_LINKS: Array<Omit<ServiceLinkProps, 'href'>> = [\n  { field: 'github', icon: 'social/github_filled', title: 'Github' },\n  { field: 'twitter', icon: 'social/twitter_filled', title: 'X (ex-Twitter)' },\n  { field: 'telegram', icon: 'social/telegram_filled', title: 'Telegram' },\n  { field: 'openSea', icon: 'social/opensea_filled', title: 'OpenSea' },\n  { field: 'linkedin', icon: 'social/linkedin_filled', title: 'LinkedIn' },\n  { field: 'facebook', icon: 'social/facebook_filled', title: 'Facebook' },\n  { field: 'discord', icon: 'social/discord_filled', title: 'Discord' },\n  { field: 'medium', icon: 'social/medium_filled', title: 'Medium' },\n  { field: 'slack', icon: 'social/slack_filled', title: 'Slack' },\n  { field: 'reddit', icon: 'social/reddit_filled', title: 'Reddit' },\n];\n\nconst PRICE_TICKERS: Array<Omit<ServiceLinkProps, 'href'>> = [\n  { field: 'coinGeckoTicker', icon: 'social/coingecko', title: 'CoinGecko' },\n  { field: 'coinMarketCapTicker', icon: 'social/coinmarketcap', title: 'CoinMarketCap' },\n  { field: 'defiLlamaTicker', icon: 'social/defi_llama', title: 'DefiLlama' },\n];\n\nexport function hasContent(data: TokenVerifiedInfo): boolean {\n  const fields: Array<keyof TokenVerifiedInfo> = [\n    'projectDescription',\n    'docs',\n    'support',\n    ...SOCIAL_LINKS.map(({ field }) => field),\n    ...PRICE_TICKERS.map(({ field }) => field),\n  ];\n  return fields.some((field) => data[field]);\n}\n\nconst Content = ({ data }: Props) => {\n  const docs = data.docs ? <DocsLink href={ data.docs }/> : null;\n  const support = data.support ? <SupportLink url={ data.support }/> : null;\n  const description = data.projectDescription ? <Text fontSize=\"sm\" mt={ 3 }>{ data.projectDescription }</Text> : null;\n\n  const socialLinks = SOCIAL_LINKS\n    .map((link) => ({ ...link, href: data[link.field] }))\n    .filter(({ href }) => href);\n\n  const priceTickersLinks = PRICE_TICKERS\n    .map((link) => ({ ...link, href: data[link.field] }))\n    .filter(({ href }) => href);\n\n  return (\n    <Flex fontSize=\"sm\" flexDir=\"column\" rowGap={ 5 }>\n      { (description || docs || support) && (\n        <div>\n          <Text variant=\"secondary\" fontSize=\"xs\">Description and support info</Text>\n          { description }\n          { (docs || support) && (\n            <Flex alignItems=\"center\" flexWrap=\"wrap\" columnGap={ 6 } mt={ 3 }>\n              { support }\n              { docs }\n            </Flex>\n          ) }\n        </div>\n      ) }\n      { socialLinks.length > 0 && (\n        <div>\n          <Text variant=\"secondary\" fontSize=\"xs\">Links</Text>\n          <Grid templateColumns={{ base: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }} columnGap={ 4 } rowGap={ 3 } mt={ 3 }>\n            { socialLinks.map((link) => <ServiceLink key={ link.field } { ...link }/>) }\n          </Grid>\n        </div>\n      ) }\n      { priceTickersLinks.length > 0 && (\n        <div>\n          <Text variant=\"secondary\" fontSize=\"xs\">Crypto markets</Text>\n          <Grid templateColumns={{ base: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }} columnGap={ 4 } rowGap={ 3 } mt={ 3 }>\n            { priceTickersLinks.map((link) => <ServiceLink key={ link.field } { ...link }/>) }\n          </Grid>\n        </div>\n      ) }\n    </Flex>\n  );\n};\n\nexport default Content;\n","import React from 'react';\n\nimport type { TokenVerifiedInfo } from 'types/api/token';\n\nimport InfoButton from 'ui/shared/InfoButton';\n\nimport Content, { hasContent } from './TokenProjectInfo/Content';\n\ninterface Props {\n  data: TokenVerifiedInfo;\n}\n\nconst TokenProjectInfo = ({ data }: Props) => {\n  if (!hasContent(data)) {\n    return null;\n  }\n\n  return (\n    <InfoButton>\n      <Content data={ data }/>\n    </InfoButton>\n  );\n};\n\nexport default React.memo(TokenProjectInfo);\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { TokenVerifiedInfo as TTokenVerifiedInfo } from 'types/api/token';\n\nimport config from 'configs/app';\nimport type { ResourceError } from 'lib/api/resources';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\n\nimport TokenProjectInfo from './TokenProjectInfo';\n\ninterface Props {\n  verifiedInfoQuery: UseQueryResult<TTokenVerifiedInfo, ResourceError<unknown>>;\n}\n\nconst TokenVerifiedInfo = ({ verifiedInfoQuery }: Props) => {\n\n  const { data, isPending, isError } = verifiedInfoQuery;\n\n  const content = (() => {\n    if (!config.features.verifiedTokens.isEnabled) {\n      return null;\n    }\n\n    if (isPending) {\n      return (\n        <>\n          <Skeleton w=\"100px\" h=\"30px\" borderRadius=\"base\"/>\n          <Skeleton w=\"100px\" h=\"30px\" borderRadius=\"base\"/>\n          <Skeleton w=\"70px\" h=\"30px\" borderRadius=\"base\"/>\n        </>\n      );\n    }\n\n    if (isError) {\n      return null;\n    }\n\n    const websiteLink = (() => {\n      try {\n        const url = new URL(data.projectWebsite);\n        return (\n          <LinkExternal href={ data.projectWebsite } variant=\"subtle\" flexShrink={ 0 } fontSize=\"sm\" lineHeight={ 5 }>\n            { url.host }\n          </LinkExternal>\n        );\n      } catch (error) {\n        return null;\n      }\n    })();\n\n    return (\n      <>\n        { websiteLink }\n        <TokenProjectInfo data={ data }/>\n      </>\n    );\n  })();\n\n  return content;\n};\n\nexport default React.memo(TokenVerifiedInfo);\n","import { Box, Flex, Tooltip, useToken } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { Address } from 'types/api/address';\nimport type { TokenInfo } from 'types/api/token';\nimport type { EntityTag } from 'ui/shared/EntityTags/types';\n\nimport config from 'configs/app';\nimport useAddressMetadataInfoQuery from 'lib/address/useAddressMetadataInfoQuery';\nimport type { ResourceError } from 'lib/api/resources';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport { getTokenTypeName } from 'lib/token/tokenTypes';\nimport AddressMetadataAlert from 'ui/address/details/AddressMetadataAlert';\nimport AddressQrCode from 'ui/address/details/AddressQrCode';\nimport AccountActionsMenu from 'ui/shared/AccountActionsMenu/AccountActionsMenu';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport * as TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport EntityTags from 'ui/shared/EntityTags/EntityTags';\nimport formatUserTags from 'ui/shared/EntityTags/formatUserTags';\nimport sortEntityTags from 'ui/shared/EntityTags/sortEntityTags';\nimport IconSvg from 'ui/shared/IconSvg';\nimport NetworkExplorers from 'ui/shared/NetworkExplorers';\nimport PageTitle from 'ui/shared/Page/PageTitle';\n\nimport TokenVerifiedInfo from './TokenVerifiedInfo';\n\nconst PREDEFINED_TAG_PRIORITY = 100;\n\ninterface Props {\n  tokenQuery: UseQueryResult<TokenInfo, ResourceError<unknown>>;\n  addressQuery: UseQueryResult<Address, ResourceError<unknown>>;\n  hash: string;\n}\n\nconst TokenPageTitle = ({ tokenQuery, addressQuery, hash }: Props) => {\n  const appProps = useAppContext();\n  const addressHash = !tokenQuery.isPlaceholderData ? (tokenQuery.data?.address || '') : '';\n\n  const verifiedInfoQuery = useApiQuery('token_verified_info', {\n    pathParams: { hash: addressHash, chainId: config.chain.id },\n    queryOptions: { enabled: Boolean(tokenQuery.data) && !tokenQuery.isPlaceholderData && config.features.verifiedTokens.isEnabled },\n  });\n\n  const addressesForMetadataQuery = React.useMemo(() => ([ hash ].filter(Boolean)), [ hash ]);\n  const addressMetadataQuery = useAddressMetadataInfoQuery(addressesForMetadataQuery);\n\n  const isLoading = tokenQuery.isPlaceholderData ||\n    addressQuery.isPlaceholderData ||\n    (config.features.verifiedTokens.isEnabled && verifiedInfoQuery.isPending);\n\n  const tokenSymbolText = tokenQuery.data?.symbol ? ` (${ tokenQuery.data.symbol })` : '';\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/tokens');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to tokens list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  const bridgedTokenTagBgColor = useToken('colors', 'blue.500');\n  const bridgedTokenTagTextColor = useToken('colors', 'white');\n\n  const tags: Array<EntityTag> = React.useMemo(() => {\n    return [\n      tokenQuery.data ? {\n        slug: tokenQuery.data?.type,\n        name: getTokenTypeName(tokenQuery.data.type),\n        tagType: 'custom' as const,\n        ordinal: PREDEFINED_TAG_PRIORITY,\n      } : undefined,\n      config.features.bridgedTokens.isEnabled && tokenQuery.data?.is_bridged ?\n        {\n          slug: 'bridged',\n          name: 'Bridged',\n          tagType: 'custom' as const,\n          ordinal: PREDEFINED_TAG_PRIORITY,\n          meta: { bgColor: bridgedTokenTagBgColor, textColor: bridgedTokenTagTextColor },\n        } :\n        undefined,\n      ...formatUserTags(addressQuery.data),\n      verifiedInfoQuery.data?.projectSector ?\n        { slug: verifiedInfoQuery.data.projectSector, name: verifiedInfoQuery.data.projectSector, tagType: 'custom' as const, ordinal: -30 } :\n        undefined,\n      ...(addressMetadataQuery.data?.addresses?.[hash.toLowerCase()]?.tags.filter(tag => tag.tagType !== 'note') || []),\n    ].filter(Boolean).sort(sortEntityTags);\n  }, [\n    addressMetadataQuery.data?.addresses,\n    addressQuery.data,\n    bridgedTokenTagBgColor,\n    bridgedTokenTagTextColor,\n    tokenQuery.data,\n    verifiedInfoQuery.data?.projectSector,\n    hash,\n  ]);\n\n  const contentAfter = (\n    <>\n      { verifiedInfoQuery.data?.tokenAddress && (\n        <Tooltip label={ `Information on this token has been verified by ${ config.chain.name }` }>\n          <Box boxSize={ 6 }>\n            <IconSvg name=\"certified\" color=\"green.500\" boxSize={ 6 } cursor=\"pointer\"/>\n          </Box>\n        </Tooltip>\n      ) }\n      <EntityTags\n        isLoading={ isLoading || (config.features.addressMetadata.isEnabled && addressMetadataQuery.isPending) }\n        tags={ tags }\n        flexGrow={ 1 }\n      />\n    </>\n  );\n\n  const secondRow = (\n    <Flex alignItems=\"center\" w=\"100%\" minW={ 0 } columnGap={ 2 } rowGap={ 2 } flexWrap={{ base: 'wrap', lg: 'nowrap' }}>\n      { addressQuery.data && (\n        <AddressEntity\n          address={{ ...addressQuery.data, name: '' }}\n          isLoading={ isLoading }\n          fontFamily=\"heading\"\n          fontSize=\"lg\"\n          fontWeight={ 500 }\n        />\n      ) }\n      { !isLoading && tokenQuery.data && <AddressAddToWallet token={ tokenQuery.data } variant=\"button\"/> }\n      <AddressQrCode address={ addressQuery.data } isLoading={ isLoading }/>\n      <AccountActionsMenu isLoading={ isLoading }/>\n      <Flex ml={{ base: 0, lg: 'auto' }} columnGap={ 2 } flexGrow={{ base: 1, lg: 0 }}>\n        <TokenVerifiedInfo verifiedInfoQuery={ verifiedInfoQuery }/>\n        <NetworkExplorers type=\"token\" pathParam={ addressHash.toLowerCase() } ml={{ base: 'auto', lg: 0 }}/>\n      </Flex>\n    </Flex>\n  );\n\n  return (\n    <>\n      <PageTitle\n        title={ `${ tokenQuery.data?.name || 'Unnamed token' }${ tokenSymbolText }` }\n        isLoading={ tokenQuery.isPlaceholderData }\n        backLink={ backLink }\n        beforeTitle={ tokenQuery.data ? (\n          <TokenEntity.Icon\n            token={ tokenQuery.data }\n            isLoading={ tokenQuery.isPlaceholderData }\n            size=\"lg\"\n          />\n        ) : null }\n        contentAfter={ contentAfter }\n        secondRow={ secondRow }\n      />\n      { !addressMetadataQuery.isPending &&\n        <AddressMetadataAlert tags={ addressMetadataQuery.data?.addresses?.[hash.toLowerCase()]?.tags } mt=\"-4px\" mb={ 6 }/> }\n    </>\n  );\n};\n\nexport default TokenPageTitle;\n","import useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport * as tokenStubs from 'stubs/token';\n\nexport default function useTokenQuery(hash: string) {\n  const { apiData } = useAppContext<'/token/[hash]'>();\n\n  return useApiQuery('token', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: Boolean(hash),\n      placeholderData: tokenStubs.TOKEN_INFO_ERC_20,\n      initialData: apiData || undefined,\n    },\n  });\n}\n","import { Box } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { TokenInfo } from 'types/api/token';\nimport type { PaginationParams } from 'ui/shared/pagination/types';\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport config from 'configs/app';\nimport useApiQuery, { getResourceKey } from 'lib/api/useApiQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport * as metadata from 'lib/metadata';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport { NFT_TOKEN_TYPE_IDS } from 'lib/token/tokenTypes';\nimport * as addressStubs from 'stubs/address';\nimport * as tokenStubs from 'stubs/token';\nimport { getTokenHoldersStub } from 'stubs/token';\nimport { generateListStub } from 'stubs/utils';\nimport AddressContract from 'ui/address/AddressContract';\nimport AddressCsvExportLink from 'ui/address/AddressCsvExportLink';\nimport useContractTabs from 'ui/address/contract/useContractTabs';\nimport { CONTRACT_TAB_IDS } from 'ui/address/contract/utils';\nimport IconSvg from 'ui/shared/IconSvg';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TokenDetails from 'ui/token/TokenDetails';\nimport TokenHolders from 'ui/token/TokenHolders/TokenHolders';\nimport TokenInventory from 'ui/token/TokenInventory';\nimport TokenPageTitle from 'ui/token/TokenPageTitle';\nimport TokenTransfer from 'ui/token/TokenTransfer/TokenTransfer';\nimport useTokenQuery from 'ui/token/useTokenQuery';\n\nexport type TokenTabs = 'token_transfers' | 'holders' | 'inventory';\n\nconst TABS_RIGHT_SLOT_PROPS = {\n  display: 'flex',\n  alignItems: 'center',\n  columnGap: 4,\n};\n\nconst TokenPageContent = () => {\n  const [ isQueryEnabled, setIsQueryEnabled ] = React.useState(false);\n  const [ totalSupplySocket, setTotalSupplySocket ] = React.useState<number>();\n  const router = useRouter();\n  const isMobile = useIsMobile();\n\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  const hashString = getQueryParamString(router.query.hash);\n  const tab = getQueryParamString(router.query.tab);\n  const ownerFilter = getQueryParamString(router.query.holder_address_hash) || undefined;\n\n  const queryClient = useQueryClient();\n\n  const tokenQuery = useTokenQuery(hashString);\n\n  const addressQuery = useApiQuery('address', {\n    pathParams: { hash: hashString },\n    queryOptions: {\n      enabled: isQueryEnabled && Boolean(router.query.hash),\n      placeholderData: addressStubs.ADDRESS_INFO,\n    },\n  });\n\n  React.useEffect(() => {\n    if (tokenQuery.data && totalSupplySocket) {\n      queryClient.setQueryData(getResourceKey('token', { pathParams: { hash: hashString } }), (prevData: TokenInfo | undefined) => {\n        if (prevData) {\n          return { ...prevData, total_supply: totalSupplySocket.toString() };\n        }\n      });\n    }\n  }, [ tokenQuery.data, totalSupplySocket, hashString, queryClient ]);\n\n  const handleTotalSupplyMessage: SocketMessage.TokenTotalSupply['handler'] = React.useCallback((payload) => {\n    const prevData = queryClient.getQueryData(getResourceKey('token', { pathParams: { hash: hashString } }));\n    if (!prevData) {\n      setTotalSupplySocket(payload.total_supply);\n    }\n    queryClient.setQueryData(getResourceKey('token', { pathParams: { hash: hashString } }), (prevData: TokenInfo | undefined) => {\n      if (prevData) {\n        return { ...prevData, total_supply: payload.total_supply.toString() };\n      }\n    });\n  }, [ queryClient, hashString ]);\n\n  const enableQuery = React.useCallback(() => setIsQueryEnabled(true), []);\n\n  const channel = useSocketChannel({\n    topic: `tokens:${ hashString?.toLowerCase() }`,\n    isDisabled: !hashString,\n    onJoin: enableQuery,\n    onSocketError: enableQuery,\n  });\n  useSocketMessage({\n    channel,\n    event: 'total_supply',\n    handler: handleTotalSupplyMessage,\n  });\n\n  useEffect(() => {\n    if (tokenQuery.data && !tokenQuery.isPlaceholderData && !config.meta.seo.enhancedDataEnabled) {\n      metadata.update({ pathname: '/token/[hash]', query: { hash: tokenQuery.data.address } }, tokenQuery.data);\n    }\n  }, [ tokenQuery.data, tokenQuery.isPlaceholderData ]);\n\n  const hasData = (tokenQuery.data && !tokenQuery.isPlaceholderData) && (addressQuery.data && !addressQuery.isPlaceholderData);\n  const hasInventoryTab = tokenQuery.data?.type && NFT_TOKEN_TYPE_IDS.includes(tokenQuery.data.type);\n\n  const transfersQuery = useQueryWithPages({\n    resourceName: 'token_transfers',\n    pathParams: { hash: hashString },\n    scrollRef,\n    options: {\n      enabled: Boolean(\n        hasData &&\n        hashString &&\n        (\n          (!hasInventoryTab && !tab) ||\n          tab === 'token_transfers'\n        ),\n      ),\n      placeholderData: tokenStubs.getTokenTransfersStub(tokenQuery.data?.type),\n    },\n  });\n\n  const inventoryQuery = useQueryWithPages({\n    resourceName: 'token_inventory',\n    pathParams: { hash: hashString },\n    filters: ownerFilter ? { holder_address_hash: ownerFilter } : {},\n    scrollRef,\n    options: {\n      enabled: Boolean(\n        hasData &&\n        hashString &&\n        (\n          (hasInventoryTab && !tab) ||\n          tab === 'inventory'\n        ),\n      ),\n      placeholderData: generateListStub<'token_inventory'>(tokenStubs.TOKEN_INSTANCE, 50, { next_page_params: { unique_token: 1 } }),\n    },\n  });\n\n  const holdersQuery = useQueryWithPages({\n    resourceName: 'token_holders',\n    pathParams: { hash: hashString },\n    scrollRef,\n    options: {\n      enabled: Boolean(hashString && tab === 'holders' && hasData),\n      placeholderData: getTokenHoldersStub(tokenQuery.data?.type, null),\n    },\n  });\n\n  const isLoading = tokenQuery.isPlaceholderData || addressQuery.isPlaceholderData;\n  const contractTabs = useContractTabs(addressQuery.data, addressQuery.isPlaceholderData);\n\n  const tabs: Array<RoutedTab> = [\n    hasInventoryTab ? {\n      id: 'inventory',\n      title: 'Inventory',\n      component: <TokenInventory inventoryQuery={ inventoryQuery } tokenQuery={ tokenQuery } ownerFilter={ ownerFilter } shouldRender={ !isLoading }/>,\n    } : undefined,\n    {\n      id: 'token_transfers',\n      title: 'Token transfers',\n      component: <TokenTransfer transfersQuery={ transfersQuery } tokenQuery={ tokenQuery } shouldRender={ !isLoading }/>,\n    },\n    {\n      id: 'holders',\n      title: 'Holders',\n      component: <TokenHolders token={ tokenQuery.data } holdersQuery={ holdersQuery } shouldRender={ !isLoading }/>,\n    },\n    addressQuery.data?.is_contract ? {\n      id: 'contract',\n      title: () => {\n        if (addressQuery.data?.is_verified) {\n          return (\n            <>\n              <span>Contract</span>\n              <IconSvg name=\"status/success\" boxSize=\"14px\" color=\"green.500\" ml={ 1 }/>\n            </>\n          );\n        }\n\n        return 'Contract';\n      },\n      component: <AddressContract tabs={ contractTabs.tabs } isLoading={ contractTabs.isLoading } shouldRender={ !isLoading }/>,\n      subTabs: CONTRACT_TAB_IDS,\n    } : undefined,\n  ].filter(Boolean);\n\n  let pagination: PaginationParams | undefined;\n\n  // default tab for erc-20 is token transfers\n  if ((tokenQuery.data?.type === 'ERC-20' && !tab) || tab === 'token_transfers') {\n    pagination = transfersQuery.pagination;\n  }\n\n  if (router.query.tab === 'holders') {\n    pagination = holdersQuery.pagination;\n  }\n\n  // default tab for nfts is token inventory\n  if ((hasInventoryTab && !tab) || tab === 'inventory') {\n    pagination = inventoryQuery.pagination;\n  }\n\n  const tabListProps = React.useCallback(({ isSticky, activeTabIndex }: { isSticky: boolean; activeTabIndex: number }) => {\n    if (isMobile) {\n      return { mt: 8 };\n    }\n\n    return {\n      pt: 6,\n      pb: 6,\n      marginBottom: 0,\n      boxShadow: activeTabIndex === 2 && isSticky ? 'action_bar' : 'none',\n    };\n  }, [ isMobile ]);\n\n  const tabsRightSlot = React.useMemo(() => {\n    if (isMobile) {\n      return null;\n    }\n\n    return (\n      <>\n        { tab === 'holders' && (\n          <AddressCsvExportLink\n            address={ hashString }\n            params={{ type: 'holders' }}\n            isLoading={ pagination?.isLoading }\n          />\n        ) }\n        { pagination?.isVisible && <Pagination { ...pagination }/> }\n      </>\n    );\n  }, [ hashString, isMobile, pagination, tab ]);\n\n  return (\n    <>\n      <TokenPageTitle tokenQuery={ tokenQuery } addressQuery={ addressQuery } hash={ hashString }/>\n\n      <TokenDetails tokenQuery={ tokenQuery }/>\n\n      { /* should stay before tabs to scroll up with pagination */ }\n      <Box ref={ scrollRef }></Box>\n\n      <RoutedTabs\n        tabs={ tabs }\n        tabListProps={ tabListProps }\n        rightSlot={ tabsRightSlot }\n        rightSlotProps={ TABS_RIGHT_SLOT_PROPS }\n        stickyEnabled={ !isMobile }\n        isLoading={ isLoading }\n      />\n    </>\n  );\n};\n\nexport default TokenPageContent;\n","import type { GetServerSideProps, NextPage } from 'next';\nimport React from 'react';\n\nimport type { Route } from 'nextjs-routes';\nimport type { Props } from 'nextjs/getServerSideProps';\nimport * as gSSP from 'nextjs/getServerSideProps';\nimport PageNextJs from 'nextjs/PageNextJs';\nimport detectBotRequest from 'nextjs/utils/detectBotRequest';\nimport fetchApi from 'nextjs/utils/fetchApi';\n\nimport config from 'configs/app';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport Token from 'ui/pages/Token';\n\nconst pathname: Route['pathname'] = '/token/[hash]';\n\nconst Page: NextPage<Props<typeof pathname>> = (props: Props<typeof pathname>) => {\n  return (\n    <PageNextJs pathname={ pathname } query={ props.query } apiData={ props.apiData }>\n      <Token/>\n    </PageNextJs>\n  );\n};\n\nexport default Page;\n\nexport const getServerSideProps: GetServerSideProps<Props<typeof pathname>> = async(ctx) => {\n  const baseResponse = await gSSP.base<typeof pathname>(ctx);\n\n  if ('props' in baseResponse) {\n    if (\n      config.meta.seo.enhancedDataEnabled ||\n      (config.meta.og.enhancedDataEnabled && detectBotRequest(ctx.req)?.type === 'social_preview')\n    ) {\n      const tokenData = await fetchApi({\n        resource: 'token',\n        pathParams: { hash: getQueryParamString(ctx.query.hash) },\n        timeout: 500,\n      });\n\n      (await baseResponse.props).apiData = tokenData ?? null;\n    }\n  }\n\n  return baseResponse;\n};\n","import {\n  PopoverTrigger, PopoverContent, PopoverBody,\n  Modal, ModalContent, ModalCloseButton,\n  useDisclosure,\n  Button,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Popover from 'ui/shared/chakra/Popover';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst InfoButton = ({ children }: Props) => {\n  const isMobile = useIsMobile();\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const triggerButton = (\n    <Button\n      size=\"sm\"\n      variant=\"outline\"\n      colorScheme=\"gray\"\n      onClick={ onToggle }\n      isActive={ isOpen }\n      aria-label=\"Show info\"\n      fontWeight={ 500 }\n      lineHeight={ 6 }\n      pl={ 1 }\n      pr={ isMobile ? 1 : 2 }\n      h=\"32px\"\n    >\n      <IconSvg name=\"info\" boxSize={ 6 } mr={ isMobile ? 0 : 1 }/>\n      { !isMobile && <span>Info</span> }\n    </Button>\n  );\n\n  if (isMobile) {\n    return (\n      <>\n        { triggerButton }\n        <Modal isOpen={ isOpen } onClose={ onClose } size=\"full\">\n          <ModalContent>\n            <ModalCloseButton/>\n            { children }\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        { triggerButton }\n      </PopoverTrigger>\n      <PopoverContent w=\"500px\">\n        <PopoverBody px={ 6 } py={ 5 }>\n          { children }\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(InfoButton);\n"],"names":["useClientRect","rect","setRect","React","nodeRef","ref","node","getBoundingClientRect","current","content","window","document","querySelector","resizeObserver","ResizeObserver","debounce","observe","body","cleanup","unobserve","router","TokenDetails","totalSupplyValue","tokenQuery","useRouter","isMounted","useIsMounted","hash","query","toString","tokenCountersQuery","useApiQuery","pathParams","queryOptions","enabled","Boolean","placeholderData","TOKEN_COUNTERS","appActionData","useAppActionData","changeUrlAndScroll","useCallback","push","pathname","tab","undefined","shallow","scroller","scrollTo","duration","smooth","countersItem","itemValue","data","item","Skeleton","isLoaded","isPlaceholderData","Link","onClick","Number","toLocaleString","throwOnResourceLoadError","exchange_rate","exchangeRate","total_supply","totalSupply","circulating_market_cap","marketCap","decimals","symbol","type","totalValue","getCurrencyValue","value","accuracy","accuracyUsd","valueStr","Grid","columnGap","rowGap","base","lg","templateColumns","overflow","DetailsInfoItem","hint","isLoading","display","span","minimumSignificantDigits","BigNumber","toFormat","alignSelf","wordBreak","whiteSpace","w","TruncatedValue","maxW","flexShrink","Box","minW","TokenNftMarketplaces","source","config","UI","views","nft","marketplaces","length","py","AppActionButton","height","token","TokenInventoryItem","isMobile","useIsMobile","mediaElement","NftMedia","mb","autoplayVideo","url","route","address","id","border","borderColor","useColorModeValue","borderRadius","p","fontSize","fontWeight","lineHeight","href","Flex","ml","Text","variant","TruncatedTextTooltip","label","LinkInternal","textOverflow","owner","mr","AddressEntity","truncation","noCopy","noIcon","inventoryQuery","TokenInventory","ownerFilter","shouldRender","resetOwnerFilter","onFilterChange","isActionBarHidden","items","ownerFilterComponent","alignItems","flexWrap","ResetIconButton","actionBar","ActionBar","mt","Pagination","pagination","AddressHighlightProvider","gridTemplateColumns","map","index","DataListDisplay","isError","emptyText","filterProps","hasActiveFilters","emptyFilteredText","DocsLink","target","IconSvg","name","boxSize","color","title","icon","ServiceLink","aria-label","isEmail","includes","SupportLink","SOCIAL_LINKS","field","PRICE_TICKERS","docs","Content","support","description","projectDescription","socialLinks","link","filter","priceTickersLinks","flexDir","div","TokenProjectInfo","hasContent","some","InfoButton","verifiedInfoQuery","TokenVerifiedInfo","isPending","features","verifiedTokens","isEnabled","h","websiteLink","URL","projectWebsite","LinkExternal","host","error","addressMetadataQuery","TokenPageTitle","addressQuery","appProps","useAppContext","addressHash","chainId","chain","addressesForMetadataQuery","useAddressMetadataInfoQuery","tokenSymbolText","backLink","referrer","bridgedTokenTagBgColor","useToken","bridgedTokenTagTextColor","tags","slug","getTokenTypeName","tagType","ordinal","PREDEFINED_TAG_PRIORITY","bridgedTokens","is_bridged","meta","bgColor","textColor","formatUserTags","projectSector","addresses","toLowerCase","tag","sort","sortEntityTags","contentAfter","tokenAddress","Tooltip","cursor","EntityTags","addressMetadata","flexGrow","secondRow","fontFamily","AddressAddToWallet","AddressQrCode","AccountActionsMenu","NetworkExplorers","pathParam","PageTitle","beforeTitle","TokenEntity","size","AddressMetadataAlert","TABS_RIGHT_SLOT_PROPS","TokenPageContent","isQueryEnabled","setIsQueryEnabled","totalSupplySocket","setTotalSupplySocket","scrollRef","hashString","getQueryParamString","holder_address_hash","queryClient","useQueryClient","useTokenQuery","apiData","tokenStubs","initialData","addressStubs","setQueryData","getResourceKey","prevData","handleTotalSupplyMessage","getQueryData","payload","enableQuery","channel","useSocketChannel","topic","isDisabled","onJoin","onSocketError","useSocketMessage","event","handler","useEffect","seo","enhancedDataEnabled","metadata","hasData","hasInventoryTab","NFT_TOKEN_TYPE_IDS","transfersQuery","useQueryWithPages","resourceName","options","filters","generateListStub","next_page_params","unique_token","holdersQuery","getTokenHoldersStub","contractTabs","useContractTabs","tabs","component","TokenTransfer","TokenHolders","is_contract","is_verified","AddressContract","subTabs","CONTRACT_TAB_IDS","tabListProps","isSticky","activeTabIndex","pt","pb","marginBottom","boxShadow","tabsRightSlot","AddressCsvExportLink","params","isVisible","RoutedTabs","rightSlot","rightSlotProps","stickyEnabled","Page","PageNextJs","props","Token","children","isOpen","onToggle","onClose","useDisclosure","triggerButton","Button","colorScheme","isActive","pl","pr","Modal","ModalContent","ModalCloseButton","Popover","placement","isLazy","PopoverTrigger","PopoverContent","PopoverBody","px"],"sourceRoot":"","ignoreList":[]}