{"version":3,"file":"static/chunks/8845.d0824853d86257ca.js","mappings":"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A,KACA,MACA,gBAAqB,QAAQ,IAC7B,eAAoB,QAAQ,IAC5B,eAAoB,QAAQ,GAC5B,GAkBA,WACA,CACA,CACA,cACA,mBACA,mBACA,6HC7MA,MAAiD,OAAa,EAC9D,yBACA,SACA,CAAC,EACD,EAAiB,OAAU,SAC3B,IACA,cACA,OACA,UACA,WACA,YACA,aACA,cACA,KACA,CAAI,EACJ,CAAU,sDAAiD,CAAE,MAAa,IAC1E,EAAgB,aAAO,CACvB,MACA,OACA,OACA,WACA,cACA,QACA,UACA,aACA,aACA,EAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,MAAyB,SAAG,IAAuB,iBAAwC,SAAG,CAC1F,GAAM,KACV,CACA,UACA,UAAiB,QAAE,yBACnB,UACA,EACA,CAAK,CACL,CAAC,EACD,kGCrDA,eAAiC,EACjC,IACA,WACA,QACA,eACA,OACA,aACA,cACA,WACA,KACA,CAAI,EACJ,MAAiC,cAAQ,QACzC,aACA,QACA,EAAc,YAAM,OACpB,EAAgB,iBAAW,MAC3B,gBACA,MACA,OACA,qCACA,kBACA,GAEA,MACA,UACA,MACA,CACA,yBACA,wBACA,mBACA,CAAG,KACH,EAAe,WAAK,GACpB,WAAgC,EAAK,EACrC,OACA,EAAmB,iBAAW,CAC9B,IACA,MAtCA,GAAkB,QAAQ,CAsC1B,IAtCqC,QAAQ,WAsC7C,iBACA,GACA,KAEA,qBACA,CAAK,CACL,OA0BA,OACA,aAzBuB,iBAAW,CAClC,KAAgB,YAChB,KACA,IAAW,QAAS,MACpB,iBACA,CAAK,EACL,IAoBA,cAlBwB,iBAAW,CACnC,KAAgB,WAChB,8BACA,OACA,KACA,MACA,OACA,+BACA,YACA,IACA,CAAS,CACT,oBACA,CACA,CAAK,CACL,WAKA,OACA,MACA,QACA,WACA,QACA,WACA,aACA,cACA,WACA,CACA,6HC9EA,MAA4C,OAAa,EACzD,0BACA,gHACA,CAAC,EACD,EAAY,OAAU,SACtB,MAAiB,QAAmB,YACpC,WAAU,iBAAmC,CAAE,OAAgB,IAC/D,MAAyB,SAAG,IAAwB,iBAAyC,SAAG,CAC5F,GAAM,OACV,CACA,MACA,OAAe,yBAAsC,CACrD,UAAiB,QAAE,mBACnB,MAEA,CAAK,CACL,CAAC,EACD,yGCpBA,EAAS,OAAU,CACnB,YAAK,OAAoB,MACzB,MAAmB,OAAc,GACjC,MAA2B,SAAG,CACxB,GAAM,IACZ,CACA,KACA,MACA,WACA,mBACA,EAEA,qFCZA,EAAY,OAAU,SACtB,MAAiB,OAAc,GAC/B,MAAyB,SAAG,CAAC,GAAM,QAAU,yBAAoC,CACjF,CAAC,oFCHD,EAAY,OAAU,SACtB,MAAiB,OAAc,GAC/B,MAAyB,SAAG,CAAC,GAAM,QAAU,yBAAoC,CACjF,CAAC,qFCHD,EAAS,OAAU,SACnB,MAAiB,OAAc,GAC/B,MAAyB,SAAG,CAAC,GAAM,KAAO,sBAAiC,CAC3E,CAAC,qFCHD,EAAS,OAAU,CACnB,YAAK,OAAoB,MACzB,MAAmB,OAAc,GACjC,MAA2B,SAAG,CACxB,GAAM,IACZ,CACA,KACA,MACA,WACA,mBACA,EAEA,qCCnBA,gBACA,8BACA,0DAEA,4BACA,WACA,YAAwB,IAAqB,KAC7C,UACA,KACA,kBACA,CACA,QACA","sources":["webpack://_N_E/./stubs/zkEvmL2.ts","webpack://_N_E/./types/api/zkEvmL2.ts","webpack://_N_E/./ui/txnBatches/zkEvmL2/ZkEvmL2TxnBatchDetails.tsx","webpack://_N_E/./ui/pages/ZkEvmL2TxnBatch.tsx","webpack://_N_E/./ui/shared/AppError/isCustomAppError.ts","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/DetailsInfoItemDivider.tsx","webpack://_N_E/./ui/shared/DetailsTimestamp.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/PrevNext.tsx","webpack://_N_E/./ui/shared/Tabs/RoutedTabs.tsx","webpack://_N_E/./ui/shared/Tabs/TabsSkeleton.tsx","webpack://_N_E/./ui/shared/Tabs/useTabIndexFromQuery.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationStep.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationSteps.tsx","webpack://_N_E/./ui/txs/TxsWithFrontendSorting.tsx","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-DZU5YH7Z.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-OLSEFBIG.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-R3K6W4OF.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-VVU6AIWW.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-5XCGGO7V.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-QUJ23J4G.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-ROBJ47HJ.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/array/chunk.mjs"],"sourcesContent":["import type { ZkEvmL2DepositsItem, ZkEvmL2TxnBatch, ZkEvmL2TxnBatchesItem, ZkEvmL2WithdrawalsItem } from 'types/api/zkEvmL2';\n\nimport { TX_HASH } from './tx';\n\nexport const ZKEVM_DEPOSITS_ITEM: ZkEvmL2DepositsItem = {\n  block_number: 19674901,\n  index: 181920,\n  l1_transaction_hash: '0xa74edfa5824a07a5f95ca1145140ed589df7f05bb17796bf18090b14c4566b5d',\n  l2_transaction_hash: '0x436d1c7ada270466ca0facdb96ecc22934d68d13b8a08f541b8df11b222967b5',\n  symbol: 'ETH',\n  timestamp: '2023-06-01T14:46:48.000000Z',\n  value: '0.13040262',\n};\n\nexport const ZKEVM_WITHDRAWALS_ITEM: ZkEvmL2WithdrawalsItem = {\n  block_number: 11692968,\n  index: 47003,\n  l1_transaction_hash: '0x230cf46dabea287ac7d0ba83b8ea120bb83c1de58a81d34f44788f0459096c52',\n  l2_transaction_hash: '0x519d9f025ec47f08a48d708964d177189d2246ddf988686c481f5debcf097e34',\n  symbol: 'ETH',\n  timestamp: '2024-04-17T08:51:58.000000Z',\n  value: '110.35',\n};\n\nexport const ZKEVM_L2_TXN_BATCHES_ITEM: ZkEvmL2TxnBatchesItem = {\n  timestamp: '2023-06-01T14:46:48.000000Z',\n  status: 'Finalized',\n  verify_transaction_hash: TX_HASH,\n  sequence_transaction_hash: TX_HASH,\n  number: 5218590,\n  transaction_count: 9,\n};\n\nexport const ZKEVM_L2_TXN_BATCH: ZkEvmL2TxnBatch = {\n  acc_input_hash: '0xb815fe2832977f1324ad0124a019b938f189f7b470292f40a21284f15774b3b3',\n  global_exit_root: '0x0000000000000000000000000000000000000000000000000000000000000000',\n  number: 1,\n  sequence_transaction_hash: '0x57b9b95db5f94f125710bdc8fbb3fabaac10125b44b0cb61dbc69daddf06d0cd',\n  state_root: '0xb9a589d6b3ae44d3b250a9993caa5e3721568197f56e4743989ecb2285d80ec4',\n  status: 'Finalized',\n  timestamp: '2023-09-15T06:22:48.000000Z',\n  transactions: [ '0xff99dd67646b8f3d657cc6f19eb33abc346de2dbaccd03e45e7726cc28e3e186' ],\n  verify_transaction_hash: '0x093276fa65c67d7b12dd96f4fefafba9d9ad2f1c23c6e53f96583971ce75352d',\n};\n","import type { Transaction } from './transaction';\n\nexport type ZkEvmL2DepositsItem = {\n  block_number: number;\n  index: number;\n  l1_transaction_hash: string;\n  l2_transaction_hash: string | null;\n  timestamp: string;\n  value: string;\n  symbol: string;\n};\n\nexport type ZkEvmL2DepositsResponse = {\n  items: Array<ZkEvmL2DepositsItem>;\n  next_page_params: {\n    items_count: number;\n    index: number;\n  };\n};\n\nexport type ZkEvmL2WithdrawalsItem = {\n  block_number: number;\n  index: number;\n  l1_transaction_hash: string | null;\n  l2_transaction_hash: string;\n  timestamp: string;\n  value: string;\n  symbol: string;\n};\n\nexport type ZkEvmL2WithdrawalsResponse = {\n  items: Array<ZkEvmL2WithdrawalsItem>;\n  next_page_params: {\n    items_count: number;\n    index: number;\n  };\n};\n\nexport type ZkEvmL2TxnBatchesItem = {\n  number: number;\n  verify_transaction_hash: string | null;\n  sequence_transaction_hash: string | null;\n  status: string;\n  timestamp: string | null;\n  transaction_count: number;\n};\n\nexport type ZkEvmL2TxnBatchesResponse = {\n  items: Array<ZkEvmL2TxnBatchesItem>;\n  next_page_params: {\n    number: number;\n    items_count: number;\n  } | null;\n};\n\nexport const ZKEVM_L2_TX_BATCH_STATUSES = [ 'Unfinalized', 'L1 Sequence Confirmed', 'Finalized' ];\n\nexport type ZkEvmL2TxnBatch = {\n  acc_input_hash: string;\n  global_exit_root: string;\n  number: number;\n  sequence_transaction_hash: string;\n  state_root: string;\n  status: typeof ZKEVM_L2_TX_BATCH_STATUSES[number];\n  timestamp: string | null;\n  transactions: Array<string>;\n  verify_transaction_hash: string;\n};\n\nexport type ZkEvmL2TxnBatchTxs = {\n  items: Array<Transaction>;\n  // API response doesn't have next_page_params option, but we need to add it to the type for consistency\n  next_page_params: null;\n};\n\nexport type NewZkEvmBatchSocketResponse = { batch: ZkEvmL2TxnBatchesItem };\n","import { Grid, Text } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport { ZKEVM_L2_TX_BATCH_STATUSES } from 'types/api/zkEvmL2';\nimport type { ZkEvmL2TxnBatch } from 'types/api/zkEvmL2';\n\nimport { route } from 'nextjs-routes';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport PrevNext from 'ui/shared/PrevNext';\nimport VerificationSteps from 'ui/shared/verificationSteps/VerificationSteps';\n\ninterface Props {\n  query: UseQueryResult<ZkEvmL2TxnBatch, ResourceError>;\n}\n\nconst ZkEvmL2TxnBatchDetails = ({ query }: Props) => {\n  const router = useRouter();\n\n  const { data, isPlaceholderData, isError, error } = query;\n\n  const handlePrevNextClick = React.useCallback((direction: 'prev' | 'next') => {\n    if (!data) {\n      return;\n    }\n\n    const increment = direction === 'next' ? +1 : -1;\n    const nextId = String(data.number + increment);\n\n    router.push({ pathname: '/batches/[number]', query: { number: nextId } }, undefined);\n  }, [ data, router ]);\n\n  if (isError) {\n    if (isCustomAppError(error)) {\n      throwOnResourceLoadError({ isError, error });\n    }\n\n    return <DataFetchAlert/>;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Txn batch number\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.number }\n        </Skeleton>\n        <PrevNext\n          ml={ 6 }\n          onClick={ handlePrevNextClick }\n          prevLabel=\"View previous txn batch\"\n          nextLabel=\"View next txn batch\"\n          isPrevDisabled={ data.number === 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Status\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <VerificationSteps steps={ ZKEVM_L2_TX_BATCH_STATUSES } currentStep={ data.status } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Timestamp\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.timestamp ? <DetailsTimestamp timestamp={ data.timestamp } isLoading={ isPlaceholderData }/> : 'Undefined' }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Verify tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.verify_transaction_hash ? (\n          <TxEntityL1\n            isLoading={ isPlaceholderData }\n            hash={ data.verify_transaction_hash }\n            maxW=\"100%\"\n          />\n        ) : <Text>Pending</Text> }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Transactions\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/batches/[number]', query: { number: data.number.toString(), tab: 'txs' } }) }>\n            { data.transactions.length } transaction{ data.transactions.length === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItemDivider/>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Global exit root\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexWrap=\"nowrap\"\n      >\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.global_exit_root }/>\n        </Skeleton>\n        <CopyToClipboard text={ data.global_exit_root } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Acc input hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexWrap=\"nowrap\"\n      >\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.acc_input_hash }/>\n        </Skeleton>\n        <CopyToClipboard text={ data.acc_input_hash } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        Sequence tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.sequence_transaction_hash ? (\n          <TxEntityL1\n            isLoading={ isPlaceholderData }\n            hash={ data.sequence_transaction_hash }\n            maxW=\"100%\"\n          />\n        ) : <Text>Pending</Text> }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n      >\n        State root\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexWrap=\"nowrap\"\n      >\n        <Skeleton isLoaded={ !isPlaceholderData } overflow=\"hidden\">\n          <HashStringShortenDynamic hash={ data.state_root }/>\n        </Skeleton>\n        <CopyToClipboard text={ data.state_root } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n    </Grid>\n  );\n};\n\nexport default ZkEvmL2TxnBatchDetails;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnAbsentParamError from 'lib/errors/throwOnAbsentParamError';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { TX_ZKEVM_L2 } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport { ZKEVM_L2_TXN_BATCH } from 'stubs/zkEvmL2';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport ZkEvmL2TxnBatchDetails from 'ui/txnBatches/zkEvmL2/ZkEvmL2TxnBatchDetails';\nimport TxsWithFrontendSorting from 'ui/txs/TxsWithFrontendSorting';\n\nconst ZkEvmL2TxnBatch = () => {\n  const router = useRouter();\n  const appProps = useAppContext();\n  const number = getQueryParamString(router.query.number);\n  const tab = getQueryParamString(router.query.tab);\n\n  const batchQuery = useApiQuery('zkevm_l2_txn_batch', {\n    pathParams: { number },\n    queryOptions: {\n      enabled: Boolean(number),\n      placeholderData: ZKEVM_L2_TXN_BATCH,\n    },\n  });\n\n  const batchTxsQuery = useQueryWithPages({\n    resourceName: 'zkevm_l2_txn_batch_txs',\n    pathParams: { number },\n    options: {\n      enabled: Boolean(!batchQuery.isPlaceholderData && batchQuery.data?.number && tab === 'txs'),\n      // there is no pagination in zkevm_l2_txn_batch_txs\n      placeholderData: generateListStub<'zkevm_l2_txn_batch_txs'>(TX_ZKEVM_L2, 50, { next_page_params: null }),\n    },\n  });\n\n  throwOnAbsentParamError(number);\n  throwOnResourceLoadError(batchQuery);\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => ([\n    { id: 'index', title: 'Details', component: <ZkEvmL2TxnBatchDetails query={ batchQuery }/> },\n    { id: 'txs', title: 'Transactions', component: <TxsWithFrontendSorting query={ batchTxsQuery } showSocketInfo={ false }/> },\n  ].filter(Boolean)), [ batchQuery, batchTxsQuery ]);\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/zkevm_l2_txn_batches');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to txn batches list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  return (\n    <>\n      <PageTitle\n        title={ `Txn batch #${ number }` }\n        backLink={ backLink }\n      />\n      { batchQuery.isPlaceholderData ? <TabsSkeleton tabs={ tabs }/> : (\n        <RoutedTabs\n          tabs={ tabs }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default ZkEvmL2TxnBatch;\n","import type { ResourceError } from 'lib/api/resources';\n\n// status codes when custom error screen should be shown\nconst CUSTOM_STATUS_CODES = [ 403, 404, 422, 429 ];\n\nexport default function isCustomAppError(error: ResourceError<unknown>) {\n  return CUSTOM_STATUS_CODES.includes(error.status);\n}\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import type { ResponsiveValue } from '@chakra-ui/react';\nimport { GridItem, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  id?: string;\n  colSpan?: ResponsiveValue<number | 'auto'>;\n}\n\nconst DetailsInfoItemDivider = ({ className, id, colSpan }: Props) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      colSpan={ colSpan || { base: undefined, lg: 2 } }\n      mt={{ base: 2, lg: 3 }}\n      mb={{ base: 0, lg: 3 }}\n      borderBottom=\"1px solid\"\n      borderColor=\"divider\"\n    />\n  );\n};\n\nexport default chakra(DetailsInfoItemDivider);\n","import React from 'react';\n\nimport dayjs from 'lib/date/dayjs';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\ntype Props = {\n  // should be string, will be fixed on the back-end\n  timestamp: string | number;\n  isLoading?: boolean;\n};\n\nconst DetailsTimestamp = ({ timestamp, isLoading }: Props) => {\n  return (\n    <>\n      <IconSvg name=\"clock\" boxSize={ 5 } color=\"gray.500\" isLoading={ isLoading }/>\n      <Skeleton isLoaded={ !isLoading } ml={ 2 }>\n        { dayjs(timestamp).fromNow() }\n      </Skeleton>\n      <TextSeparator color=\"gray.500\"/>\n      <Skeleton isLoaded={ !isLoading } whiteSpace=\"normal\">\n        { dayjs(timestamp).format('llll') }\n      </Skeleton>\n    </>\n  );\n};\n\nexport default DetailsTimestamp;\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import { Box, IconButton, chakra, Tooltip, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: (direction: 'prev' | 'next') => void;\n  prevLabel?: string;\n  nextLabel?: string;\n  isPrevDisabled?: boolean;\n  isNextDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst PrevNext = ({ className, onClick, prevLabel, nextLabel, isPrevDisabled, isNextDisabled, isLoading }: Props) => {\n  const handelPrevClick = React.useCallback(() => {\n    onClick('prev');\n  }, [ onClick ]);\n\n  const handelNextClick = React.useCallback(() => {\n    onClick('next');\n  }, [ onClick ]);\n\n  if (isLoading) {\n    return (\n      <Flex columnGap=\"10px\" className={ className }>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n      </Flex>\n    );\n  }\n\n  return (\n    <Box className={ className } display=\"flex\">\n      <Tooltip label={ prevLabel }>\n        <IconButton\n          aria-label=\"prev\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 }/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          onClick={ handelPrevClick }\n          isDisabled={ isPrevDisabled }\n        />\n      </Tooltip>\n      <Tooltip label={ nextLabel }>\n        <IconButton\n          aria-label=\"next\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 } transform=\"rotate(180deg)\"/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          ml=\"10px\"\n          onClick={ handelNextClick }\n          isDisabled={ isNextDisabled }\n        />\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default chakra(PrevNext);\n","import type { ChakraProps, ThemingProps } from '@chakra-ui/react';\nimport { chakra } from '@chakra-ui/react';\nimport { pickBy } from 'es-toolkit';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef } from 'react';\n\nimport type { RoutedTab } from './types';\n\nimport TabsWithScroll from './TabsWithScroll';\nimport useTabIndexFromQuery from './useTabIndexFromQuery';\n\ninterface Props extends ThemingProps<'Tabs'> {\n  tabs: Array<RoutedTab>;\n  tabListProps?: ChakraProps | (({ isSticky, activeTabIndex }: { isSticky: boolean; activeTabIndex: number }) => ChakraProps);\n  rightSlot?: React.ReactNode;\n  rightSlotProps?: ChakraProps;\n  leftSlot?: React.ReactNode;\n  leftSlotProps?: ChakraProps;\n  stickyEnabled?: boolean;\n  className?: string;\n  onTabChange?: (index: number) => void;\n  isLoading?: boolean;\n}\n\nconst RoutedTabs = ({\n  tabs,\n  tabListProps,\n  rightSlot,\n  rightSlotProps,\n  leftSlot,\n  leftSlotProps,\n  stickyEnabled,\n  className,\n  onTabChange,\n  isLoading,\n  ...themeProps\n}: Props) => {\n  const router = useRouter();\n  const tabIndex = useTabIndexFromQuery(tabs);\n  const tabsRef = useRef<HTMLDivElement>(null);\n\n  const handleTabChange = React.useCallback((index: number) => {\n    const nextTab = tabs[index];\n\n    const queryForPathname = pickBy(router.query, (value, key) => router.pathname.includes(`[${ key }]`));\n    const tabId = Array.isArray(nextTab.id) ? nextTab.id[0] : nextTab.id;\n    router.push(\n      { pathname: router.pathname, query: { ...queryForPathname, tab: tabId } },\n      undefined,\n      { shallow: true },\n    );\n\n    onTabChange?.(index);\n  }, [ tabs, router, onTabChange ]);\n\n  useEffect(() => {\n    if (router.query.scroll_to_tabs) {\n      tabsRef?.current?.scrollIntoView(true);\n      delete router.query.scroll_to_tabs;\n      router.push(\n        {\n          pathname: router.pathname,\n          query: router.query,\n        },\n        undefined,\n        { shallow: true },\n      );\n    }\n  // replicate componentDidMount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TabsWithScroll\n      tabs={ tabs }\n      tabListProps={ tabListProps }\n      leftSlot={ leftSlot }\n      leftSlotProps={ leftSlotProps }\n      rightSlot={ rightSlot }\n      rightSlotProps={ rightSlotProps }\n      stickyEnabled={ stickyEnabled }\n      onTabChange={ handleTabChange }\n      defaultTabIndex={ tabIndex }\n      isLoading={ isLoading }\n      { ...themeProps }\n    />\n  );\n};\n\nexport default React.memo(chakra(RoutedTabs));\n","import { Flex, chakra, Box, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { RoutedTab } from '../Tabs/types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport useTabIndexFromQuery from 'ui/shared/Tabs/useTabIndexFromQuery';\n\ntype TabSize = 'sm' | 'md';\n\nconst SkeletonTabText = ({ size, title }: { size: TabSize; title: RoutedTab['title'] }) => (\n  <Skeleton\n    borderRadius=\"base\"\n    borderWidth={ size === 'sm' ? '2px' : 0 }\n    fontWeight={ 600 }\n    mx={ size === 'sm' ? 3 : 4 }\n    flexShrink={ 0 }\n  >\n    { typeof title === 'string' ? title : title() }\n  </Skeleton>\n);\n\ninterface Props {\n  className?: string;\n  tabs: Array<RoutedTab>;\n  size?: 'sm' | 'md';\n}\n\nconst TabsSkeleton = ({ className, tabs, size = 'md' }: Props) => {\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const tabIndex = useTabIndexFromQuery(tabs || []);\n\n  if (tabs.length === 1) {\n    return null;\n  }\n\n  return (\n    <Flex className={ className } my={ 8 } alignItems=\"center\" overflow=\"hidden\">\n      { tabs.slice(0, tabIndex).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n      { tabs.slice(tabIndex, tabIndex + 1).map(({ title, id }) => (\n        <Box key={ id.toString() } bgColor={ bgColor } py={ size === 'sm' ? 1 : 2 } borderRadius=\"base\" flexShrink={ 0 }>\n          <SkeletonTabText\n            key={ id.toString() }\n            title={ title }\n            size={ size }\n          />\n        </Box>\n      )) }\n      { tabs.slice(tabIndex + 1).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n    </Flex>\n  );\n};\n\nexport default chakra(TabsSkeleton);\n","import { useRouter } from 'next/router';\n\nimport type { RoutedTab } from './types';\n\nimport getQueryParamString from 'lib/router/getQueryParamString';\n\nexport default function useTabIndexFromQuery(tabs: Array<RoutedTab>) {\n  const router = useRouter();\n  const tabFromQuery = getQueryParamString(router.query.tab);\n\n  if (!tabFromQuery) {\n    return 0;\n  }\n\n  const tabIndex = tabs.findIndex(({ id, subTabs }) => {\n    if (Array.isArray(id)) {\n      return id.includes(tabFromQuery);\n    }\n\n    return id === tabFromQuery || subTabs?.some((id) => id === tabFromQuery);\n  });\n\n  if (tabIndex < 0) {\n    return 0;\n  }\n\n  return tabIndex;\n}\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/tx/[hash]',\n    query: { hash: props.hash },\n  });\n\n  return <TxEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(TxEntityL1);\n","import { HStack, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype Props = {\n  step: Step;\n  isLast: boolean;\n  isPassed: boolean;\n  isPending?: boolean;\n};\n\nconst VerificationStep = ({ step, isLast, isPassed, isPending }: Props) => {\n  let stepColor = 'text_secondary';\n  if (isPending) {\n    stepColor = 'yellow.500';\n  } else if (isPassed) {\n    stepColor = 'green.500';\n  }\n\n  return (\n    <HStack gap={ 2 } color={ stepColor }>\n      <IconSvg name={ isPassed ? 'verification-steps/finalized' : 'verification-steps/unfinalized' } boxSize={ 5 }/>\n      <Box color={ stepColor }>{ typeof step === 'string' ? step : step.content }</Box>\n      { !isLast && <IconSvg name=\"arrows/east\" boxSize={ 5 }/> }\n    </HStack>\n  );\n};\n\nexport default VerificationStep;\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport VerificationStep from './VerificationStep';\n\nexport interface Props {\n  currentStep: string;\n  currentStepPending?: boolean;\n  steps: Array<Step>;\n  isLoading?: boolean;\n  rightSlot?: React.ReactNode;\n  className?: string;\n}\n\nconst VerificationSteps = ({ currentStep, currentStepPending, steps, isLoading, rightSlot, className }: Props) => {\n  const currentStepIndex = steps.findIndex((step) => {\n    const label = typeof step === 'string' ? step : step.label;\n    return label === currentStep;\n  });\n\n  return (\n    <Skeleton\n      className={ className }\n      isLoaded={ !isLoading }\n      display=\"flex\"\n      gap={ 2 }\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n    >\n      { steps.map((step, index) => (\n        <VerificationStep\n          key={ index }\n          step={ step }\n          isLast={ index === steps.length - 1 && !rightSlot }\n          isPassed={ index <= currentStepIndex }\n          isPending={ index === currentStepIndex && currentStepPending }\n        />\n      )) }\n      { rightSlot }\n    </Skeleton>\n  );\n};\n\nexport default chakra(VerificationSteps);\n","import React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\n\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport TxsContent from './TxsContent';\nimport useTxsSort from './useTxsSort';\n\ntype Props = {\n  // eslint-disable-next-line max-len\n  query: QueryWithPagesResult<'txs_validated' | 'txs_pending'> | QueryWithPagesResult<'txs_watchlist'> | QueryWithPagesResult<'block_txs'> | QueryWithPagesResult<'zkevm_l2_txn_batch_txs'>;\n  showBlockInfo?: boolean;\n  showSocketInfo?: boolean;\n  socketInfoAlert?: string;\n  socketInfoNum?: number;\n  currentAddress?: string;\n  filter?: React.ReactNode;\n  filterValue?: AddressFromToFilter;\n  enableTimeIncrement?: boolean;\n  top?: number;\n};\n\nconst TxsWithFrontendSorting = ({\n  filter,\n  filterValue,\n  query,\n  showBlockInfo = true,\n  showSocketInfo = true,\n  socketInfoAlert,\n  socketInfoNum,\n  currentAddress,\n  enableTimeIncrement,\n  top,\n}: Props) => {\n  const { data, isPlaceholderData, isError, setSortByValue, sorting } = useTxsSort(query);\n\n  return (\n    <TxsContent\n      filter={ filter }\n      filterValue={ filterValue }\n      showBlockInfo={ showBlockInfo }\n      showSocketInfo={ showSocketInfo }\n      socketInfoAlert={ socketInfoAlert }\n      socketInfoNum={ socketInfoNum }\n      currentAddress={ currentAddress }\n      enableTimeIncrement={ enableTimeIncrement }\n      top={ top }\n      items={ data?.items }\n      isPlaceholderData={ isPlaceholderData }\n      isError={ isError }\n      setSorting={ setSortByValue }\n      sort={ sorting }\n      query={ query }\n    />\n  );\n};\n\nexport default TxsWithFrontendSorting;\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\nexport {\n  Visibility\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/show.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, ssr, children });\n}\nShow.displayName = \"Show\";\n\nexport {\n  Show\n};\n","// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a, _b;\n  return (_b = (_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) != null ? _b : value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\nexport {\n  useQuery\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/hide.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, hide: true, ssr, children });\n}\nHide.displayName = \"Hide\";\n\nexport {\n  Hide\n};\n","import {\n  useRadioGroupContext\n} from \"./chunk-QUJ23J4G.mjs\";\n\n// src/use-radio.ts\nimport { useFormControlContext } from \"@chakra-ui/form-control\";\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../visually-hidden/src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/use-radio.ts\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useState, useId } from \"react\";\nfunction useRadio(props = {}) {\n  const {\n    defaultChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled: isDisabledProp,\n    isReadOnly: isReadOnlyProp,\n    isRequired: isRequiredProp,\n    onChange,\n    isInvalid: isInvalidProp,\n    name,\n    value,\n    id: idProp,\n    \"data-radiogroup\": dataRadioGroup,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props;\n  const uuid = `radio-${useId()}`;\n  const formControl = useFormControlContext();\n  const group = useRadioGroupContext();\n  const isWithinRadioGroup = !!group || !!dataRadioGroup;\n  const isWithinFormControl = !!formControl;\n  let id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;\n  id = idProp != null ? idProp : id;\n  const isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;\n  const isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;\n  const isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;\n  const isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovering] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isCheckedState, setChecked] = useState(Boolean(defaultChecked));\n  const isControlled = typeof isCheckedProp !== \"undefined\";\n  const isChecked = isControlled ? isCheckedProp : isCheckedState;\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        setChecked(event.target.checked);\n      }\n      onChange == null ? void 0 : onChange(event);\n    },\n    [isControlled, isDisabled, isReadOnly, onChange]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, () => setActive(true)),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(\n        props2.onMouseEnter,\n        () => setHovering(true)\n      ),\n      onMouseLeave: callAllHandlers(\n        props2.onMouseLeave,\n        () => setHovering(false)\n      )\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      isFocusVisible\n    ]\n  );\n  const { onFocus, onBlur } = formControl != null ? formControl : {};\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const trulyDisabled = isDisabled && !isFocusable;\n      return {\n        ...props2,\n        id,\n        ref,\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          onBlur,\n          props2.onBlur,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          onFocus,\n          props2.onFocus,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        required: isRequired,\n        \"aria-invalid\": ariaAttr(isInvalid),\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        \"aria-required\": ariaAttr(isRequired),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-describedby\": ariaDescribedBy,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      isDisabled,\n      isFocusable,\n      id,\n      name,\n      value,\n      handleChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n      isReadOnly,\n      isRequired,\n      isInvalid,\n      ariaDescribedBy\n    ]\n  );\n  const getLabelProps = (props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const getRootProps = (props2, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getCheckboxProps: getRadioProps,\n    getRadioProps,\n    getInputProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport {\n  useRadio\n};\n","import {\n  useRadioGroup\n} from \"./chunk-ROBJ47HJ.mjs\";\n\n// src/radio-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nvar RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const { value, onChange, getRootProps, name, htmlProps } = useRadioGroup(rest);\n  const group = useMemo(\n    () => ({\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    }),\n    [\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    ]\n  );\n  return /* @__PURE__ */ jsx(RadioGroupProvider, { value: group, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    }\n  ) });\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nexport {\n  useRadioGroupContext,\n  RadioGroup\n};\n","// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport {\n  useRadioGroup\n};\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n","function chunk(arr, size) {\n    if (!Number.isInteger(size) || size <= 0) {\n        throw new Error('Size must be an integer greater than zero.');\n    }\n    const chunkLength = Math.ceil(arr.length / size);\n    const result = Array(chunkLength);\n    for (let index = 0; index < chunkLength; index++) {\n        const start = index * size;\n        const end = start + size;\n        result[index] = arr.slice(start, end);\n    }\n    return result;\n}\n\nexport { chunk };\n"],"names":["ZKEVM_DEPOSITS_ITEM","block_number","index","l1_transaction_hash","l2_transaction_hash","symbol","timestamp","value","status","verify_transaction_hash","TX_HASH","sequence_transaction_hash","number","transaction_count","acc_input_hash","global_exit_root","state_root","transactions","ZKEVM_L2_TX_BATCH_STATUSES","query","router","useRouter","ZkEvmL2TxnBatchDetails","data","isPlaceholderData","isError","error","handlePrevNextClick","React","nextId","String","increment","direction","push","pathname","undefined","isCustomAppError","throwOnResourceLoadError","DataFetchAlert","Grid","columnGap","rowGap","base","lg","templateColumns","overflow","DetailsInfoItem","isLoading","Skeleton","isLoaded","PrevNext","ml","onClick","prevLabel","nextLabel","isPrevDisabled","VerificationSteps","steps","currentStep","DetailsTimestamp","TxEntityL1","hash","maxW","Text","LinkInternal","href","route","toString","tab","length","DetailsInfoItemDivider","flexWrap","HashStringShortenDynamic","CopyToClipboard","text","batchQuery","ZkEvmL2TxnBatch","appProps","useAppContext","getQueryParamString","useApiQuery","pathParams","queryOptions","enabled","Boolean","placeholderData","ZKEVM_L2_TXN_BATCH","batchTxsQuery","useQueryWithPages","resourceName","options","generateListStub","TX_ZKEVM_L2","next_page_params","throwOnAbsentParamError","tabs","id","title","component","TxsWithFrontendSorting","showSocketInfo","filter","backLink","hasGoBackLink","referrer","includes","label","url","PageTitle","TabsSkeleton","RoutedTabs","CUSTOM_STATUS_CODES","chakra","className","ContainerWithScrollY","gradientHeight","children","onScrollVisibilityChange","ref","hasScroll","setHasScroll","current","scrollHeight","clientHeight","gradientEndColor","useColorModeValue","Flex","flexDirection","overflowY","_after","position","content","bottom","left","right","height","bgGradient","pr","pb","LabelScrollText","fontWeight","variant","fontSize","align","Label","hint","type","GridItem","py","lineHeight","_notFirst","mt","alignItems","HintPopover","my","Hint","Value","display","pl","whiteSpace","ValueWithScroll","colSpan","mb","borderBottom","borderColor","IconSvg","name","boxSize","color","dayjs","fromNow","TextSeparator","format","popoverProps","popoverContentProps","popoverBodyProps","bgColor","borderRadius","Popover","trigger","isLazy","placement","PopoverTrigger","_hover","cursor","Portal","PopoverContent","PopoverArrow","PopoverBody","px","DarkMode","isNextDisabled","handelPrevClick","handelNextClick","Box","Tooltip","IconButton","aria-label","icon","h","colorScheme","isDisabled","transform","tabListProps","rightSlot","rightSlotProps","leftSlot","leftSlotProps","stickyEnabled","onTabChange","themeProps","tabIndex","useTabIndexFromQuery","tabsRef","useRef","handleTabChange","nextTab","queryForPathname","pickBy","key","tabId","Array","isArray","shallow","useEffect","scroll_to_tabs","scrollIntoView","TabsWithScroll","defaultTabIndex","SkeletonTabText","size","borderWidth","mx","flexShrink","slice","map","tabFromQuery","findIndex","subTabs","some","rollupFeature","config","features","rollup","props","isEnabled","defaultHref","L1BaseUrl","TxEntity","isExternal","step","isLast","isPassed","VerificationStep","isPending","stepColor","HStack","gap","currentStepPending","currentStepIndex","filterValue","showBlockInfo","socketInfoAlert","socketInfoNum","currentAddress","enableTimeIncrement","top","setSortByValue","sorting","useTxsSort","TxsContent","items","setSorting","sort"],"sourceRoot":"","ignoreList":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]}