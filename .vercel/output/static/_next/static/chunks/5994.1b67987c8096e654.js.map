{"version":3,"file":"static/chunks/5994.1b67987c8096e654.js","mappings":"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","sources":["webpack://_N_E/./lib/getFilterValuesFromQuery.ts","webpack://_N_E/./lib/getItemIndex.ts","webpack://_N_E/./lib/getValuesArrayFromQuery.ts","webpack://_N_E/./lib/token/tokenTypes.ts","webpack://_N_E/./stubs/token.ts","webpack://_N_E/./ui/tokens/TokensListItem.tsx","webpack://_N_E/./ui/tokens/TokensTableItem.tsx","webpack://_N_E/./ui/tokens/TokensTable.tsx","webpack://_N_E/./ui/tokens/Tokens.tsx","webpack://_N_E/./ui/tokens/TokensActionBar.tsx","webpack://_N_E/./ui/tokens/TokensBridgedChainsFilter.tsx","webpack://_N_E/./ui/pages/Tokens.tsx","webpack://_N_E/./ui/shared/DataListDisplay.tsx","webpack://_N_E/./ui/shared/ListItemMobile/ListItemMobile.tsx","webpack://_N_E/./ui/shared/Tabs/RoutedTabs.tsx","webpack://_N_E/./ui/shared/Tabs/useTabIndexFromQuery.tsx","webpack://_N_E/./ui/shared/TheadSticky.tsx","webpack://_N_E/./lib/web3/useProvider.tsx","webpack://_N_E/./lib/web3/useAddOrSwitchChain.tsx","webpack://_N_E/./lib/web3/wallets.ts","webpack://_N_E/./ui/shared/address/AddressAddToWallet.tsx","webpack://_N_E/./ui/shared/chakra/Tag.tsx","webpack://_N_E/./ui/shared/filters/FilterButton.tsx","webpack://_N_E/./ui/shared/filters/FilterInput.tsx","webpack://_N_E/./ui/shared/filters/PopoverFilter.tsx","webpack://_N_E/./ui/shared/filters/TokenTypeFilter.tsx","webpack://_N_E/./ui/shared/sort/getNextSortValue.ts","webpack://_N_E/./ui/shared/sort/getSortParamsFromValue.ts","webpack://_N_E/./ui/shared/sort/getSortValueFromQuery.ts","webpack://_N_E/./ui/tokens/utils.ts"],"sourcesContent":["import getValuesArrayFromQuery from './getValuesArrayFromQuery';\n\nexport default function getFilterValue<FilterType>(filterValues: ReadonlyArray<FilterType>, val: string | Array<string> | undefined) {\n  const valArray = getValuesArrayFromQuery(val);\n\n  if (!valArray) {\n    return;\n  }\n\n  return valArray.filter(el => filterValues.includes(el as unknown as FilterType)) as unknown as Array<FilterType>;\n}\n","const DEFAULT_PAGE_SIZE = 50;\n\nexport default function getItemIndex(index: number, page: number, pageSize: number = DEFAULT_PAGE_SIZE) {\n  return (page - 1) * pageSize + index + 1;\n};\n","export default function getValuesArrayFromQuery(val: string | Array<string> | undefined) {\n  if (val === undefined) {\n    return;\n  }\n\n  const valArray = [];\n  if (typeof val === 'string') {\n    valArray.push(...val.split(','));\n  }\n  if (Array.isArray(val)) {\n    if (!val.length) {\n      return;\n    }\n    val.forEach(el => valArray.push(...el.split(',')));\n  }\n\n  return valArray;\n}\n","import type { NFTTokenType, TokenType } from 'types/api/token';\n\nimport config from 'configs/app';\n\nconst tokenStandardName = config.chain.tokenStandard;\n\nexport const NFT_TOKEN_TYPES: Record<NFTTokenType, string > = {\n  'ERC-721': `${ tokenStandardName }-721`,\n  'ERC-1155': `${ tokenStandardName }-1155`,\n  'ERC-404': `${ tokenStandardName }-404`,\n};\n\nexport const TOKEN_TYPES: Record<TokenType, string > = {\n  'ERC-20': `${ tokenStandardName }-20`,\n  ...NFT_TOKEN_TYPES,\n};\n\nexport const NFT_TOKEN_TYPE_IDS: Array<NFTTokenType> = [ 'ERC-721', 'ERC-1155', 'ERC-404' ];\nexport const TOKEN_TYPE_IDS: Array<TokenType> = [ 'ERC-20', ...NFT_TOKEN_TYPE_IDS ];\n\nexport function getTokenTypeName(typeId: TokenType) {\n  return TOKEN_TYPES[typeId];\n}\n","import type {\n  TokenCounters,\n  TokenHolder,\n  TokenHolders,\n  TokenHoldersPagination,\n  TokenInfo,\n  TokenInstance,\n  TokenType,\n} from 'types/api/token';\nimport type { TokenInstanceTransferPagination, TokenInstanceTransferResponse } from 'types/api/tokens';\nimport type { TokenTransfer, TokenTransferPagination, TokenTransferResponse } from 'types/api/tokenTransfer';\n\nimport { ADDRESS_PARAMS, ADDRESS_HASH } from './addressParams';\nimport { TX_HASH } from './tx';\nimport { generateListStub } from './utils';\n\nexport const BLOCK_HASH = '0x8fa7b9e5e5e79deeb62d608db22ba9a5cb45388c7ebb9223ae77331c6080dc70';\n\nexport const TOKEN_INFO_ERC_20: TokenInfo<'ERC-20'> = {\n  address: ADDRESS_HASH,\n  circulating_market_cap: '117629601.61913824',\n  decimals: '18',\n  exchange_rate: '0.999997',\n  holders: '16026',\n  name: 'Stub Token (goerli)',\n  symbol: 'STUB',\n  total_supply: '60000000000000000000000',\n  type: 'ERC-20',\n  icon_url: null,\n};\n\nexport const TOKEN_INFO_ERC_721: TokenInfo<'ERC-721'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-721',\n};\n\nexport const TOKEN_INFO_ERC_1155: TokenInfo<'ERC-1155'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-1155',\n};\n\nexport const TOKEN_INFO_ERC_404: TokenInfo<'ERC-404'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-404',\n};\n\nexport const TOKEN_COUNTERS: TokenCounters = {\n  token_holders_count: '123456',\n  transfers_count: '123456',\n};\n\nexport const TOKEN_HOLDER_ERC_20: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  value: '1021378038331138520',\n};\n\nexport const TOKEN_HOLDER_ERC_1155: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  token_id: '12345',\n  value: '1021378038331138520',\n};\n\nexport const getTokenHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_TRANSFER_ERC_20: TokenTransfer = {\n  block_hash: BLOCK_HASH,\n  block_number: '123456',\n  from: ADDRESS_PARAMS,\n  log_index: '4',\n  method: 'addLiquidity',\n  timestamp: '2022-06-24T10:22:11.000000Z',\n  to: ADDRESS_PARAMS,\n  token: TOKEN_INFO_ERC_20,\n  total: {\n    decimals: '18',\n    value: '9851351626684503',\n  },\n  transaction_hash: TX_HASH,\n  type: 'token_minting',\n};\n\nexport const TOKEN_TRANSFER_ERC_721: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n  },\n  token: TOKEN_INFO_ERC_721,\n};\n\nexport const TOKEN_TRANSFER_ERC_1155: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_1155,\n};\n\nexport const TOKEN_TRANSFER_ERC_404: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_404,\n};\n\nexport const getTokenTransfersStub = (type?: TokenType, pagination: TokenTransferPagination | null = null): TokenTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_721, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_404, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceTransfersStub = (type?: TokenType, pagination: TokenInstanceTransferPagination | null = null): TokenInstanceTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_721, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_404, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_INSTANCE: TokenInstance = {\n  animation_url: null,\n  external_app_url: 'https://vipsland.com/nft/collections/genesis/188882',\n  id: '188882',\n  image_url: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n  is_unique: true,\n  metadata: {\n    attributes: Array(3).fill({ trait_type: 'skin tone', value: 'very light skin tone' }),\n    description: '**GENESIS #188882**, **8a77ca1bcaa4036f** :: *844th* generation of *#57806 and #57809* :: **eGenetic Hash Code (eDNA)** = *2822355e953a462d*',\n    external_url: 'https://vipsland.com/nft/collections/genesis/188882',\n    image: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n    name: 'GENESIS #188882, 8a77ca1bcaa4036f',\n  },\n  owner: ADDRESS_PARAMS,\n  holder_address_hash: ADDRESS_HASH,\n  thumbnails: null,\n};\n","import { Flex, HStack, Grid, GridItem } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport config from 'configs/app';\nimport getItemIndex from 'lib/getItemIndex';\nimport { getTokenTypeName } from 'lib/token/tokenTypes';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport Tag from 'ui/shared/chakra/Tag';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\n\ntype Props = {\n  token: TokenInfo;\n  index: number;\n  page: number;\n  isLoading?: boolean;\n};\n\nconst bridgedTokensFeature = config.features.bridgedTokens;\n\nconst TokensTableItem = ({\n  token,\n  page,\n  index,\n  isLoading,\n}: Props) => {\n\n  const {\n    address,\n    filecoin_robust_address: filecoinRobustAddress,\n    exchange_rate: exchangeRate,\n    type,\n    holders,\n    circulating_market_cap: marketCap,\n    origin_chain_id: originalChainId,\n  } = token;\n\n  const bridgedChainTag = bridgedTokensFeature.isEnabled ?\n    bridgedTokensFeature.chains.find(({ id }) => id === originalChainId)?.short_title :\n    undefined;\n\n  return (\n    <ListItemMobile rowGap={ 3 }>\n      <Grid\n        width=\"100%\"\n        gridTemplateColumns=\"minmax(0, 1fr)\"\n      >\n        <GridItem display=\"flex\">\n          <TokenEntity\n            token={ token }\n            isLoading={ isLoading }\n            jointSymbol\n            noCopy\n            w=\"auto\"\n            fontSize=\"sm\"\n            fontWeight=\"700\"\n          />\n          <Flex ml={ 3 } flexShrink={ 0 } columnGap={ 1 }>\n            <Tag isLoading={ isLoading }>{ getTokenTypeName(type) }</Tag>\n            { bridgedChainTag && <Tag isLoading={ isLoading }>{ bridgedChainTag }</Tag> }\n          </Flex>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" ml=\"auto\" color=\"text_secondary\" minW=\"24px\" textAlign=\"right\" lineHeight={ 6 }>\n            <span>{ getItemIndex(index, page) }</span>\n          </Skeleton>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"150px\" ml={ 7 } mt={ -2 }>\n        <AddressEntity\n          address={{ hash: address, filecoin: { robust: filecoinRobustAddress } }}\n          isLoading={ isLoading }\n          truncation=\"constant\"\n          noIcon\n        />\n        <AddressAddToWallet token={ token } isLoading={ isLoading }/>\n      </Flex>\n      { exchangeRate && (\n        <HStack spacing={ 3 }>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>Price</Skeleton>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" color=\"text_secondary\">\n            <span>${ Number(exchangeRate).toLocaleString(undefined, { minimumSignificantDigits: 4 }) }</span>\n          </Skeleton>\n        </HStack>\n      ) }\n      { marketCap && (\n        <HStack spacing={ 3 }>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>On-chain market cap</Skeleton>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" color=\"text_secondary\"><span>{ BigNumber(marketCap).toFormat() }</span></Skeleton>\n        </HStack>\n      ) }\n      <HStack spacing={ 3 }>\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>Holders</Skeleton>\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" color=\"text_secondary\"><span>{ Number(holders).toLocaleString() }</span></Skeleton>\n      </HStack>\n    </ListItemMobile>\n  );\n};\n\nexport default TokensTableItem;\n","import { Flex, Td, Tr } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport config from 'configs/app';\nimport getItemIndex from 'lib/getItemIndex';\nimport { getTokenTypeName } from 'lib/token/tokenTypes';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport Tag from 'ui/shared/chakra/Tag';\nimport type { EntityProps as AddressEntityProps } from 'ui/shared/entities/address/AddressEntity';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ntype Props = {\n  token: TokenInfo;\n  index: number;\n  page: number;\n  isLoading?: boolean;\n};\n\nconst bridgedTokensFeature = config.features.bridgedTokens;\n\nconst TokensTableItem = ({\n  token,\n  page,\n  index,\n  isLoading,\n}: Props) => {\n\n  const {\n    address,\n    filecoin_robust_address: filecoinRobustAddress,\n    exchange_rate: exchangeRate,\n    type,\n    holders,\n    circulating_market_cap: marketCap,\n    origin_chain_id: originalChainId,\n  } = token;\n\n  const bridgedChainTag = bridgedTokensFeature.isEnabled ?\n    bridgedTokensFeature.chains.find(({ id }) => id === originalChainId)?.short_title :\n    undefined;\n\n  const tokenAddress: AddressEntityProps['address'] = {\n    hash: address,\n    filecoin: {\n      robust: filecoinRobustAddress,\n    },\n    name: '',\n    is_contract: true,\n    is_verified: false,\n    ens_domain_name: null,\n    implementations: null,\n  };\n\n  return (\n    <Tr\n      role=\"group\"\n    >\n      <Td>\n        <Flex alignItems=\"flex-start\">\n          <Skeleton\n            isLoaded={ !isLoading }\n            fontSize=\"sm\"\n            lineHeight=\"20px\"\n            fontWeight={ 600 }\n            mr={ 3 }\n            minW=\"28px\"\n          >\n            { getItemIndex(index, page) }\n          </Skeleton>\n          <Flex overflow=\"hidden\" flexDir=\"column\" rowGap={ 2 }>\n            <TokenEntity\n              token={ token }\n              isLoading={ isLoading }\n              jointSymbol\n              noCopy\n              fontSize=\"sm\"\n              fontWeight=\"700\"\n            />\n            <Flex columnGap={ 2 } py=\"5px\" alignItems=\"center\">\n              <AddressEntity\n                address={ tokenAddress }\n                isLoading={ isLoading }\n                noIcon\n                fontSize=\"sm\"\n                fontWeight={ 500 }\n              />\n              <AddressAddToWallet\n                token={ token }\n                isLoading={ isLoading }\n                iconSize={ 5 }\n                opacity={ 0 }\n                _groupHover={{ opacity: 1 }}\n              />\n            </Flex>\n            <Flex columnGap={ 1 }>\n              <Tag isLoading={ isLoading }>{ getTokenTypeName(type) }</Tag>\n              { bridgedChainTag && <Tag isLoading={ isLoading }>{ bridgedChainTag }</Tag> }\n            </Flex>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td isNumeric>\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" lineHeight=\"24px\" fontWeight={ 500 } display=\"inline-block\">\n          { exchangeRate && `$${ Number(exchangeRate).toLocaleString(undefined, { minimumSignificantDigits: 4 }) }` }\n        </Skeleton>\n      </Td>\n      <Td isNumeric maxWidth=\"300px\" width=\"300px\">\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" lineHeight=\"24px\" fontWeight={ 500 } display=\"inline-block\">\n          { marketCap && `$${ BigNumber(marketCap).toFormat() }` }\n        </Skeleton>\n      </Td>\n      <Td isNumeric>\n        <Skeleton\n          isLoaded={ !isLoading }\n          fontSize=\"sm\"\n          lineHeight=\"24px\"\n          fontWeight={ 500 }\n          display=\"inline-block\"\n        >\n          { Number(holders).toLocaleString() }\n        </Skeleton>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default TokensTableItem;\n","import { Link, Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\nimport type { TokensSortingField, TokensSortingValue } from 'types/api/tokens';\n\nimport { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport IconSvg from 'ui/shared/IconSvg';\nimport { default as getNextSortValueShared } from 'ui/shared/sort/getNextSortValue';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport TokensTableItem from './TokensTableItem';\n\nconst SORT_SEQUENCE: Record<TokensSortingField, Array<TokensSortingValue | undefined>> = {\n  fiat_value: [ 'fiat_value-desc', 'fiat_value-asc', undefined ],\n  holder_count: [ 'holder_count-desc', 'holder_count-asc', undefined ],\n  circulating_market_cap: [ 'circulating_market_cap-desc', 'circulating_market_cap-asc', undefined ],\n};\n\nconst getNextSortValue = (getNextSortValueShared<TokensSortingField, TokensSortingValue>).bind(undefined, SORT_SEQUENCE);\n\ntype Props = {\n  items: Array<TokenInfo>;\n  page: number;\n  sorting?: TokensSortingValue;\n  setSorting: (val?: TokensSortingValue) => void;\n  isLoading?: boolean;\n  top?: number;\n};\n\nconst TokensTable = ({ items, page, isLoading, sorting, setSorting, top }: Props) => {\n  const sortIconTransform = sorting?.includes('asc') ? 'rotate(-90deg)' : 'rotate(90deg)';\n\n  const sort = React.useCallback((field: TokensSortingField) => () => {\n    const value = getNextSortValue(field)(sorting);\n    setSorting(value);\n  }, [ sorting, setSorting ]);\n\n  return (\n    <Table>\n      <Thead top={ top ?? ACTION_BAR_HEIGHT_DESKTOP }>\n        <Tr>\n          <Th w=\"50%\">Token</Th>\n          <Th isNumeric w=\"15%\">\n            <Link onClick={ sort('fiat_value') } display=\"flex\" justifyContent=\"end\">\n              { sorting?.includes('fiat_value') && <IconSvg name=\"arrows/east-mini\" boxSize={ 4 } transform={ sortIconTransform }/> }\n              Price\n            </Link>\n          </Th>\n          <Th isNumeric w=\"20%\">\n            <Link onClick={ sort('circulating_market_cap') } display=\"flex\" justifyContent=\"end\">\n              { sorting?.includes('circulating_market_cap') && <IconSvg name=\"arrows/east-mini\" boxSize={ 4 } transform={ sortIconTransform }/> }\n              On-chain market cap\n            </Link>\n          </Th>\n          <Th isNumeric w=\"15%\">\n            <Link onClick={ sort('holder_count') } display=\"flex\" justifyContent=\"end\">\n              { sorting?.includes('holder_count') && <IconSvg name=\"arrows/east-mini\" boxSize={ 4 } transform={ sortIconTransform }/> }\n              Holders\n            </Link>\n          </Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { items.map((item, index) => (\n          <TokensTableItem key={ item.address + (isLoading ? index : '') } token={ item } index={ index } page={ page } isLoading={ isLoading }/>\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default TokensTable;\n","import { Hide, Show } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokensSortingValue } from 'types/api/tokens';\n\nimport { apos } from 'lib/html-entities';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport TokensListItem from './TokensListItem';\nimport TokensTable from './TokensTable';\n\ninterface Props {\n  query: QueryWithPagesResult<'tokens'> | QueryWithPagesResult<'tokens_bridged'>;\n  onSortChange: () => void;\n  sort: TokensSortingValue | undefined;\n  actionBar?: React.ReactNode;\n  hasActiveFilters: boolean;\n  description?: React.ReactNode;\n  tableTop?: number;\n}\n\nconst Tokens = ({ query, onSortChange, sort, actionBar, description, hasActiveFilters, tableTop }: Props) => {\n\n  const { isError, isPlaceholderData, data, pagination } = query;\n\n  if (isError) {\n    return <DataFetchAlert/>;\n  }\n\n  const content = data?.items ? (\n    <>\n      <Show below=\"lg\" ssr={ false }>\n        { description }\n        { data.items.map((item, index) => (\n          <TokensListItem\n            key={ item.address + (isPlaceholderData ? index : '') }\n            token={ item }\n            index={ index }\n            page={ pagination.page }\n            isLoading={ isPlaceholderData }\n          />\n        )) }\n      </Show>\n      <Hide below=\"lg\" ssr={ false }>\n        { description }\n        <TokensTable\n          items={ data.items }\n          page={ pagination.page }\n          isLoading={ isPlaceholderData }\n          setSorting={ onSortChange }\n          sorting={ sort }\n          top={ tableTop }\n        />\n      </Hide>\n    </>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no tokens.\"\n      filterProps={{\n        emptyFilteredText: `Couldn${ apos }t find token that matches your filter query.`,\n        hasActiveFilters,\n      }}\n      content={ content }\n      actionBar={ query.pagination.isVisible || hasActiveFilters ? actionBar : null }\n    />\n  );\n};\n\nexport default Tokens;\n","import { HStack } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokensSortingValue } from 'types/api/tokens';\nimport type { PaginationParams } from 'ui/shared/pagination/types';\n\nimport ActionBar from 'ui/shared/ActionBar';\nimport FilterInput from 'ui/shared/filters/FilterInput';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport Sort from 'ui/shared/sort/Sort';\nimport { SORT_OPTIONS } from 'ui/tokens/utils';\n\ninterface Props {\n  pagination: PaginationParams;\n  searchTerm: string | undefined;\n  onSearchChange: (value: string) => void;\n  sort: TokensSortingValue | undefined;\n  onSortChange: () => void;\n  filter: React.ReactNode;\n  inTabsSlot?: boolean;\n}\n\nconst TokensActionBar = ({\n  sort,\n  onSortChange,\n  searchTerm,\n  onSearchChange,\n  pagination,\n  filter,\n  inTabsSlot,\n}: Props) => {\n\n  const searchInput = (\n    <FilterInput\n      w={{ base: '100%', lg: '360px' }}\n      size=\"xs\"\n      onChange={ onSearchChange }\n      placeholder=\"Token name or symbol\"\n      initialValue={ searchTerm }\n    />\n  );\n\n  return (\n    <>\n      <HStack spacing={ 3 } mb={ 6 } display={{ base: 'flex', lg: 'none' }}>\n        { filter }\n        <Sort\n          name=\"tokens_sorting\"\n          defaultValue={ sort }\n          options={ SORT_OPTIONS }\n          onChange={ onSortChange }\n        />\n        { searchInput }\n      </HStack>\n      <ActionBar\n        mt={ inTabsSlot ? 0 : -6 }\n        py={{ lg: inTabsSlot ? 0 : undefined }}\n        justifyContent={ inTabsSlot ? 'space-between' : undefined }\n        display={{ base: pagination.isVisible ? 'flex' : 'none', lg: 'flex' }}\n      >\n        <HStack spacing={ 3 } display={{ base: 'none', lg: 'flex' }}>\n          { filter }\n          { searchInput }\n        </HStack>\n        <Pagination { ...pagination } ml={ inTabsSlot ? 8 : 'auto' }/>\n      </ActionBar>\n    </>\n  );\n};\n\nexport default React.memo(TokensActionBar);\n","import { CheckboxGroup, Checkbox, Text, Flex, Link, useCheckboxGroup, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport config from 'configs/app';\n\nconst feature = config.features.bridgedTokens;\n\ninterface Props {\n  onChange: (nextValue: Array<string>) => void;\n  defaultValue?: Array<string>;\n}\n\nconst TokensBridgedChainsFilter = ({ onChange, defaultValue }: Props) => {\n  const { value, setValue } = useCheckboxGroup({ defaultValue });\n\n  const handleReset = React.useCallback(() => {\n    if (value.length === 0) {\n      return;\n    }\n    setValue([]);\n    onChange([]);\n  }, [ onChange, setValue, value ]);\n\n  const handleChange = React.useCallback((nextValue: Array<string>) => {\n    setValue(nextValue);\n    onChange(nextValue);\n  }, [ onChange, setValue ]);\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" fontSize=\"sm\">\n        <Text fontWeight={ 600 } variant=\"secondary\">Show bridged tokens from</Text>\n        <Link\n          onClick={ handleReset }\n          color={ value.length > 0 ? 'link' : 'text_secondary' }\n          _hover={{\n            color: value.length > 0 ? 'link_hovered' : 'text_secondary',\n          }}\n        >\n          Reset\n        </Link>\n      </Flex>\n      <CheckboxGroup size=\"lg\" onChange={ handleChange } value={ value }>\n        { feature.chains.map(({ title, id, short_title: shortTitle }) => (\n          <Checkbox key={ id } value={ id } fontSize=\"md\" whiteSpace=\"pre-wrap\">\n            <span>{ title }</span>\n            <chakra.span color=\"text_secondary\"> ({ shortTitle })</chakra.span>\n          </Checkbox>\n        )) }\n      </CheckboxGroup>\n    </>\n  );\n};\n\nexport default React.memo(TokensBridgedChainsFilter);\n","import { Box } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { TokenType } from 'types/api/token';\nimport type { TokensSortingValue, TokensSortingField, TokensSorting } from 'types/api/tokens';\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport config from 'configs/app';\nimport useDebounce from 'lib/hooks/useDebounce';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { TOKEN_INFO_ERC_20 } from 'stubs/token';\nimport { generateListStub } from 'stubs/utils';\nimport PopoverFilter from 'ui/shared/filters/PopoverFilter';\nimport TokenTypeFilter from 'ui/shared/filters/TokenTypeFilter';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport getSortParamsFromValue from 'ui/shared/sort/getSortParamsFromValue';\nimport getSortValueFromQuery from 'ui/shared/sort/getSortValueFromQuery';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TokensList from 'ui/tokens/Tokens';\nimport TokensActionBar from 'ui/tokens/TokensActionBar';\nimport TokensBridgedChainsFilter from 'ui/tokens/TokensBridgedChainsFilter';\nimport { SORT_OPTIONS, getTokenFilterValue, getBridgedChainsFilterValue } from 'ui/tokens/utils';\n\nconst TAB_LIST_PROPS = {\n  marginBottom: 0,\n  pt: 6,\n  pb: 6,\n  marginTop: -5,\n  alignItems: 'center',\n};\nconst TABS_HEIGHT = 88;\n\nconst TABS_RIGHT_SLOT_PROPS = {\n  ml: 8,\n  flexGrow: 1,\n};\n\nconst bridgedTokensFeature = config.features.bridgedTokens;\n\nconst Tokens = () => {\n  const router = useRouter();\n  const isMobile = useIsMobile();\n\n  const tab = getQueryParamString(router.query.tab);\n  const q = getQueryParamString(router.query.q);\n\n  const [ searchTerm, setSearchTerm ] = React.useState<string>(q ?? '');\n  const [ sort, setSort ] = React.useState<TokensSortingValue | undefined>(getSortValueFromQuery<TokensSortingValue>(router.query, SORT_OPTIONS));\n  const [ tokenTypes, setTokenTypes ] = React.useState<Array<TokenType> | undefined>(getTokenFilterValue(router.query.type));\n  const [ bridgeChains, setBridgeChains ] = React.useState<Array<string> | undefined>(getBridgedChainsFilterValue(router.query.chain_ids));\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\n\n  const tokensQuery = useQueryWithPages({\n    resourceName: tab === 'bridged' ? 'tokens_bridged' : 'tokens',\n    filters: tab === 'bridged' ? { q: debouncedSearchTerm, chain_ids: bridgeChains } : { q: debouncedSearchTerm, type: tokenTypes },\n    sorting: getSortParamsFromValue<TokensSortingValue, TokensSortingField, TokensSorting['order']>(sort),\n    options: {\n      placeholderData: generateListStub<'tokens'>(\n        TOKEN_INFO_ERC_20,\n        50,\n        {\n          next_page_params: {\n            holder_count: 81528,\n            items_count: 50,\n            name: '',\n            market_cap: null,\n          },\n        },\n      ),\n    },\n  });\n\n  const handleSearchTermChange = React.useCallback((value: string) => {\n    tab === 'bridged' ?\n      tokensQuery.onFilterChange({ q: value, chain_ids: bridgeChains }) :\n      tokensQuery.onFilterChange({ q: value, type: tokenTypes });\n    setSearchTerm(value);\n  }, [ bridgeChains, tab, tokenTypes, tokensQuery ]);\n\n  const handleTokenTypesChange = React.useCallback((value: Array<TokenType>) => {\n    tokensQuery.onFilterChange({ q: debouncedSearchTerm, type: value });\n    setTokenTypes(value);\n  }, [ debouncedSearchTerm, tokensQuery ]);\n\n  const handleBridgeChainsChange = React.useCallback((value: Array<string>) => {\n    tokensQuery.onFilterChange({ q: debouncedSearchTerm, chain_ids: value });\n    setBridgeChains(value);\n  }, [ debouncedSearchTerm, tokensQuery ]);\n\n  const handleSortChange = React.useCallback((value?: TokensSortingValue) => {\n    setSort(value);\n    tokensQuery.onSortingChange(getSortParamsFromValue(value));\n  }, [ tokensQuery ]);\n\n  const handleTabChange = React.useCallback(() => {\n    setSearchTerm('');\n    setSort(undefined);\n    setTokenTypes(undefined);\n    setBridgeChains(undefined);\n  }, []);\n\n  const hasMultipleTabs = bridgedTokensFeature.isEnabled;\n\n  const filter = tab === 'bridged' ? (\n    <PopoverFilter contentProps={{ maxW: '350px' }} appliedFiltersNum={ bridgeChains?.length }>\n      <TokensBridgedChainsFilter onChange={ handleBridgeChainsChange } defaultValue={ bridgeChains }/>\n    </PopoverFilter>\n  ) : (\n    <PopoverFilter contentProps={{ w: '200px' }} appliedFiltersNum={ tokenTypes?.length }>\n      <TokenTypeFilter<TokenType> onChange={ handleTokenTypesChange } defaultValue={ tokenTypes } nftOnly={ false }/>\n    </PopoverFilter>\n  );\n\n  const actionBar = (\n    <TokensActionBar\n      key={ tab }\n      pagination={ tokensQuery.pagination }\n      filter={ filter }\n      searchTerm={ searchTerm }\n      onSearchChange={ handleSearchTermChange }\n      sort={ sort }\n      onSortChange={ handleSortChange }\n      inTabsSlot={ !isMobile && hasMultipleTabs }\n    />\n  );\n\n  const description = (() => {\n    if (!bridgedTokensFeature.isEnabled) {\n      return null;\n    }\n\n    const bridgesListText = bridgedTokensFeature.bridges.map((item, index, array) => {\n      return item.title + (index < array.length - 2 ? ', ' : '') + (index === array.length - 2 ? ' and ' : '');\n    });\n\n    return (\n      <Box fontSize=\"sm\" mb={ 4 } mt={ 1 } whiteSpace=\"pre-wrap\" flexWrap=\"wrap\">\n        List of the tokens bridged through { bridgesListText } extensions\n      </Box>\n    );\n  })();\n\n  const tabs: Array<RoutedTab> = [\n    {\n      id: 'all',\n      title: 'All',\n      component: (\n        <TokensList\n          query={ tokensQuery }\n          sort={ sort }\n          onSortChange={ handleSortChange }\n          actionBar={ isMobile ? actionBar : null }\n          hasActiveFilters={ Boolean(searchTerm || tokenTypes) }\n          tableTop={ hasMultipleTabs ? TABS_HEIGHT : undefined }\n        />\n      ),\n    },\n    bridgedTokensFeature.isEnabled ? {\n      id: 'bridged',\n      title: 'Bridged',\n      component: (\n        <TokensList\n          query={ tokensQuery }\n          sort={ sort }\n          onSortChange={ handleSortChange }\n          actionBar={ isMobile ? actionBar : null }\n          hasActiveFilters={ Boolean(searchTerm || bridgeChains) }\n          description={ description }\n          tableTop={ hasMultipleTabs ? TABS_HEIGHT : undefined }\n        />\n      ),\n    } : undefined,\n  ].filter(Boolean);\n\n  return (\n    <>\n      <PageTitle\n        title={ config.meta.seo.enhancedDataEnabled ? `Tokens on ${ config.chain.name }` : 'Tokens' }\n        withTextAd\n      />\n      { !hasMultipleTabs && !isMobile && actionBar }\n      <RoutedTabs\n        tabs={ tabs }\n        tabListProps={ isMobile ? undefined : TAB_LIST_PROPS }\n        rightSlot={ hasMultipleTabs && !isMobile ? actionBar : null }\n        rightSlotProps={ !isMobile ? TABS_RIGHT_SLOT_PROPS : undefined }\n        stickyEnabled={ !isMobile }\n        onTabChange={ handleTabChange }\n      />\n    </>\n  );\n};\n\nexport default Tokens;\n","import { Box, Text, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport EmptySearchResult from 'ui/shared/EmptySearchResult';\n\nimport DataFetchAlert from './DataFetchAlert';\n\ntype FilterProps = {\n  hasActiveFilters: boolean;\n  emptyFilteredText: string;\n};\n\ntype Props = {\n  isError: boolean;\n  items?: Array<unknown>;\n  emptyText: React.ReactNode;\n  actionBar?: React.ReactNode;\n  showActionBarIfEmpty?: boolean;\n  content: React.ReactNode;\n  className?: string;\n  filterProps?: FilterProps;\n};\n\nconst DataListDisplay = (props: Props) => {\n  if (props.isError) {\n    return <DataFetchAlert className={ props.className }/>;\n  }\n\n  if (props.filterProps?.hasActiveFilters && !props.items?.length) {\n    return (\n      <Box className={ props.className }>\n        { props.actionBar }\n        <EmptySearchResult text={ props.filterProps.emptyFilteredText }/>\n      </Box>\n    );\n  }\n\n  if (!props.items?.length) {\n    return (\n      <>\n        { props.showActionBarIfEmpty && props.actionBar }\n        { props.emptyText && <Text className={ props.className }>{ props.emptyText }</Text> }\n      </>\n    );\n  }\n\n  return (\n    <Box className={ props.className }>\n      { props.actionBar }\n      { props.content }\n    </Box>\n  );\n};\n\nexport default chakra(DataListDisplay);\n","import { Flex, chakra } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  isAnimated?: boolean;\n}\n\nconst ListItemMobile = ({ children, className, isAnimated }: Props) => {\n  return (\n    <Flex\n      as={ motion.div }\n      initial={ isAnimated ? { opacity: 0, scale: 0.97 } : { opacity: 1, scale: 1 } }\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      rowGap={ 6 }\n      alignItems=\"flex-start\"\n      flexDirection=\"column\"\n      paddingY={ 6 }\n      borderColor=\"divider\"\n      borderTopWidth=\"1px\"\n      _last={{\n        borderBottomWidth: '1px',\n      }}\n      className={ className }\n      fontSize=\"16px\"\n      lineHeight=\"20px\"\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ListItemMobile);\n","import type { ChakraProps, ThemingProps } from '@chakra-ui/react';\nimport { chakra } from '@chakra-ui/react';\nimport { pickBy } from 'es-toolkit';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef } from 'react';\n\nimport type { RoutedTab } from './types';\n\nimport TabsWithScroll from './TabsWithScroll';\nimport useTabIndexFromQuery from './useTabIndexFromQuery';\n\ninterface Props extends ThemingProps<'Tabs'> {\n  tabs: Array<RoutedTab>;\n  tabListProps?: ChakraProps | (({ isSticky, activeTabIndex }: { isSticky: boolean; activeTabIndex: number }) => ChakraProps);\n  rightSlot?: React.ReactNode;\n  rightSlotProps?: ChakraProps;\n  leftSlot?: React.ReactNode;\n  leftSlotProps?: ChakraProps;\n  stickyEnabled?: boolean;\n  className?: string;\n  onTabChange?: (index: number) => void;\n  isLoading?: boolean;\n}\n\nconst RoutedTabs = ({\n  tabs,\n  tabListProps,\n  rightSlot,\n  rightSlotProps,\n  leftSlot,\n  leftSlotProps,\n  stickyEnabled,\n  className,\n  onTabChange,\n  isLoading,\n  ...themeProps\n}: Props) => {\n  const router = useRouter();\n  const tabIndex = useTabIndexFromQuery(tabs);\n  const tabsRef = useRef<HTMLDivElement>(null);\n\n  const handleTabChange = React.useCallback((index: number) => {\n    const nextTab = tabs[index];\n\n    const queryForPathname = pickBy(router.query, (value, key) => router.pathname.includes(`[${ key }]`));\n    const tabId = Array.isArray(nextTab.id) ? nextTab.id[0] : nextTab.id;\n    router.push(\n      { pathname: router.pathname, query: { ...queryForPathname, tab: tabId } },\n      undefined,\n      { shallow: true },\n    );\n\n    onTabChange?.(index);\n  }, [ tabs, router, onTabChange ]);\n\n  useEffect(() => {\n    if (router.query.scroll_to_tabs) {\n      tabsRef?.current?.scrollIntoView(true);\n      delete router.query.scroll_to_tabs;\n      router.push(\n        {\n          pathname: router.pathname,\n          query: router.query,\n        },\n        undefined,\n        { shallow: true },\n      );\n    }\n  // replicate componentDidMount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TabsWithScroll\n      tabs={ tabs }\n      tabListProps={ tabListProps }\n      leftSlot={ leftSlot }\n      leftSlotProps={ leftSlotProps }\n      rightSlot={ rightSlot }\n      rightSlotProps={ rightSlotProps }\n      stickyEnabled={ stickyEnabled }\n      onTabChange={ handleTabChange }\n      defaultTabIndex={ tabIndex }\n      isLoading={ isLoading }\n      { ...themeProps }\n    />\n  );\n};\n\nexport default React.memo(chakra(RoutedTabs));\n","import { useRouter } from 'next/router';\n\nimport type { RoutedTab } from './types';\n\nimport getQueryParamString from 'lib/router/getQueryParamString';\n\nexport default function useTabIndexFromQuery(tabs: Array<RoutedTab>) {\n  const router = useRouter();\n  const tabFromQuery = getQueryParamString(router.query.tab);\n\n  if (!tabFromQuery) {\n    return 0;\n  }\n\n  const tabIndex = tabs.findIndex(({ id, subTabs }) => {\n    if (Array.isArray(id)) {\n      return id.includes(tabFromQuery);\n    }\n\n    return id === tabFromQuery || subTabs?.some((id) => id === tabFromQuery);\n  });\n\n  if (tabIndex < 0) {\n    return 0;\n  }\n\n  return tabIndex;\n}\n","import { Thead, useColorModeValue } from '@chakra-ui/react';\nimport type { TableHeadProps, PositionProps } from '@chakra-ui/react';\nimport { throttle } from 'es-toolkit';\nimport React from 'react';\n\ninterface Props extends TableHeadProps {\n  top?: number;\n  children?: React.ReactNode;\n}\n\nconst TheadSticky = ({ top, children, ...restProps }: Props) => {\n  const ref = React.useRef<HTMLTableSectionElement>(null);\n  const [ isSticky, setIsSticky ] = React.useState(false);\n\n  const handleScroll = React.useCallback(() => {\n    if (Number(ref.current?.getBoundingClientRect().y) <= (top || 0)) {\n      setIsSticky(true);\n    } else {\n      setIsSticky(false);\n    }\n  }, [ top ]);\n\n  React.useEffect(() => {\n    const throttledHandleScroll = throttle(handleScroll, 300);\n\n    window.addEventListener('scroll', throttledHandleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', throttledHandleScroll);\n    };\n  }, [ handleScroll ]);\n\n  const props = {\n    ...restProps,\n    position: 'sticky' as PositionProps['position'],\n    top: top ? `${ top }px` : 0,\n    backgroundColor: useColorModeValue('white', 'black'),\n    boxShadow: isSticky ? 'md' : 'none',\n    zIndex: '1',\n  };\n\n  return (\n    <Thead { ...props } ref={ ref }>\n      { children }\n    </Thead>\n  );\n};\n\nexport default TheadSticky;\n","import React from 'react';\n\nimport type { WalletType } from 'types/client/wallets';\nimport type { WalletProvider } from 'types/web3';\n\nimport config from 'configs/app';\n\nconst feature = config.features.web3Wallet;\n\nexport default function useProvider() {\n  const [ provider, setProvider ] = React.useState<WalletProvider>();\n  const [ wallet, setWallet ] = React.useState<WalletType>();\n\n  const initializeProvider = React.useMemo(() => async() => {\n    if (!feature.isEnabled) {\n      return;\n    }\n\n    if (!('ethereum' in window && window.ethereum)) {\n      if (feature.wallets.includes('metamask') && window.navigator.userAgent.includes('Firefox')) {\n        const { WindowPostMessageStream } = (await import('@metamask/post-message-stream'));\n        const { initializeProvider } = (await import('@metamask/providers'));\n\n        // workaround for MetaMask in Firefox\n        // Firefox blocks MetaMask injection script because of our CSP for 'script-src'\n        // so we have to inject it manually while the issue is not fixed\n        // https://github.com/MetaMask/metamask-extension/issues/3133#issuecomment-1025641185\n        const metamaskStream = new WindowPostMessageStream({\n          name: 'metamask-inpage',\n          target: 'metamask-contentscript',\n        });\n\n        // this will initialize the provider and set it as window.ethereum\n        initializeProvider({\n          connectionStream: metamaskStream as never,\n          shouldShimWeb3: true,\n        });\n      } else {\n        return;\n      }\n    }\n\n    // have to check again in case provider was not set as window.ethereum in the previous step for MM in FF\n    // and also it makes typescript happy\n    if (!('ethereum' in window && window.ethereum)) {\n      return;\n    }\n\n    // if user has multiple wallets installed, they all are injected in the window.ethereum.providers array\n    // if user has only one wallet, the provider is injected in the window.ethereum directly\n    const providers = Array.isArray(window.ethereum.providers) ? window.ethereum.providers : [ window.ethereum ];\n\n    for (const wallet of feature.wallets) {\n      const provider = providers.find((provider) => {\n        return (\n          // some wallets (e.g TokenPocket, Liquality, etc) try to look like MetaMask but they are not (not even close)\n          // so we have to check in addition the presence of the provider._events property\n          // found this hack in wagmi repo\n          // https://github.com/wagmi-dev/wagmi/blob/399b9eab8cfd698b49bfaa8456598dad9b597e0e/packages/connectors/src/types.ts#L65\n          // for now it's the only way to distinguish them\n          (wallet === 'metamask' && provider.isMetaMask && Boolean(provider._events)) ||\n          (wallet === 'coinbase' && provider.isCoinbaseWallet) ||\n          (wallet === 'token_pocket' && provider.isTokenPocket)\n        );\n      });\n\n      if (provider) {\n        setProvider(provider);\n        setWallet(wallet);\n        break;\n      }\n    }\n  }, []);\n\n  React.useEffect(() => {\n    initializeProvider();\n  }, [ initializeProvider ]);\n\n  return { provider, wallet };\n}\n","import { get } from 'es-toolkit/compat';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport getErrorObj from 'lib/errors/getErrorObj';\n\nimport useProvider from './useProvider';\n\nexport default function useAddOrSwitchChain() {\n  const { wallet, provider } = useProvider();\n\n  return React.useCallback(async() => {\n    if (!wallet || !provider) {\n      return;\n    }\n\n    const hexadecimalChainId = '0x' + Number(config.chain.id).toString(16);\n\n    try {\n      return await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [ { chainId: hexadecimalChainId } ],\n      });\n    } catch (error) {\n\n      const errorObj = getErrorObj(error);\n      const code = errorObj && 'code' in errorObj ? errorObj.code : undefined;\n      const originalErrorCode = get(errorObj, 'data.originalError.code');\n\n      // This error code indicates that the chain has not been added to Wallet.\n      if (code === 4902 || originalErrorCode === 4902) {\n        const params = [ {\n          chainId: hexadecimalChainId,\n          chainName: config.chain.name,\n          nativeCurrency: {\n            name: config.chain.currency.name,\n            symbol: config.chain.currency.symbol,\n            decimals: config.chain.currency.decimals,\n          },\n          rpcUrls: config.chain.rpcUrls,\n          blockExplorerUrls: [ config.app.baseUrl ],\n        } ] as never;\n        // in wagmi types for wallet_addEthereumChain method is not provided\n\n        return await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: params,\n        });\n      }\n\n      throw error;\n    }\n  }, [ provider, wallet ]);\n}\n","import type { WalletType, WalletInfo } from 'types/client/wallets';\n\nexport const WALLETS_INFO: Record<Exclude<WalletType, 'none'>, WalletInfo> = {\n  metamask: {\n    name: 'MetaMask',\n    icon: 'wallets/metamask',\n  },\n  coinbase: {\n    name: 'Coinbase Wallet',\n    icon: 'wallets/coinbase',\n  },\n  token_pocket: {\n    name: 'TokenPocket',\n    icon: 'wallets/token-pocket',\n  },\n};\n","import { Box, chakra, IconButton, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport config from 'configs/app';\nimport useToast from 'lib/hooks/useToast';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport useAddOrSwitchChain from 'lib/web3/useAddOrSwitchChain';\nimport useProvider from 'lib/web3/useProvider';\nimport { WALLETS_INFO } from 'lib/web3/wallets';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\nconst feature = config.features.web3Wallet;\n\ninterface Props {\n  className?: string;\n  token: TokenInfo;\n  isLoading?: boolean;\n  variant?: 'icon' | 'button';\n  iconSize?: number;\n}\n\nconst AddressAddToWallet = ({ className, token, isLoading, variant = 'icon', iconSize = 6 }: Props) => {\n  const toast = useToast();\n  const { provider, wallet } = useProvider();\n  const addOrSwitchChain = useAddOrSwitchChain();\n\n  const handleClick = React.useCallback(async() => {\n    if (!wallet) {\n      return;\n    }\n\n    try {\n      // switch to the correct network otherwise the token will be added to the wrong one\n      await addOrSwitchChain();\n\n      const wasAdded = await provider?.request?.({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: token.address,\n            symbol: token.symbol || '',\n            decimals: Number(token.decimals) || 18,\n            image: token.icon_url || '',\n          },\n        },\n      });\n\n      if (wasAdded) {\n        toast({\n          position: 'top-right',\n          title: 'Success',\n          description: 'Successfully added token to your wallet',\n          status: 'success',\n          variant: 'subtle',\n          isClosable: true,\n        });\n\n        mixpanel.logEvent(mixpanel.EventTypes.ADD_TO_WALLET, {\n          Target: 'token',\n          Wallet: wallet,\n          Token: token.symbol || '',\n        });\n      }\n    } catch (error) {\n      toast({\n        position: 'top-right',\n        title: 'Error',\n        description: (error as Error)?.message || 'Something went wrong',\n        status: 'error',\n        variant: 'subtle',\n        isClosable: true,\n      });\n    }\n  }, [ toast, token, provider, wallet, addOrSwitchChain ]);\n\n  if (!provider || !wallet) {\n    return null;\n  }\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ iconSize } borderRadius=\"base\"/>;\n  }\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  if (variant === 'button') {\n    return (\n      <Tooltip label={ `Add token to ${ WALLETS_INFO[wallet].name }` }>\n        <IconButton\n          className={ className }\n          aria-label=\"Add token to wallet\"\n          variant=\"outline\"\n          size=\"sm\"\n          px={ 1 }\n          onClick={ handleClick }\n          icon={ <IconSvg name={ WALLETS_INFO[wallet].icon } boxSize={ 6 }/> }\n          flexShrink={ 0 }\n        />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ `Add token to ${ WALLETS_INFO[wallet].name }` }>\n      <Box className={ className } display=\"inline-flex\" cursor=\"pointer\" onClick={ handleClick } flexShrink={ 0 } aria-label=\"Add token to wallet\">\n        <IconSvg name={ WALLETS_INFO[wallet].icon } boxSize={ iconSize }/>\n      </Box>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(chakra(AddressAddToWallet));\n","import { Tag as ChakraTag } from '@chakra-ui/react';\nimport type { TagProps } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\nexport interface Props extends TagProps {\n  isLoading?: boolean;\n}\n\nconst Tag = ({ isLoading, ...props }: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n\n  if (props.isTruncated && typeof props.children === 'string') {\n    if (!props.children) {\n      return null;\n    }\n\n    return (\n      <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"12px\" maxW=\"100%\">\n        <TruncatedTextTooltip label={ props.children }>\n          <ChakraTag { ...props } ref={ ref }/>\n        </TruncatedTextTooltip>\n      </Skeleton>\n    );\n  }\n  return (\n    <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"12px\" maxW=\"100%\">\n      <ChakraTag { ...props } ref={ ref }/>\n    </Skeleton>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tag));\n","import type { As } from '@chakra-ui/react';\nimport { Box, Button, Circle, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\nconst FilterIcon = <IconSvg name=\"filter\" boxSize={ 5 } mr={{ base: 0, lg: 2 }}/>;\n\ninterface Props {\n  isActive?: boolean;\n  isLoading?: boolean;\n  appliedFiltersNum?: number;\n  onClick: () => void;\n  as?: As;\n}\n\nconst FilterButton = ({ isActive, isLoading, appliedFiltersNum, onClick, as }: Props, ref: React.ForwardedRef<HTMLButtonElement>) => {\n  const badgeColor = useColorModeValue('white', 'black');\n  const badgeBgColor = useColorModeValue('blue.700', 'gray.50');\n\n  if (isLoading) {\n    return <Skeleton w={{ base: 9, lg: '78px' }} h={ 8 } borderRadius=\"base\" flexShrink={ 0 }/>;\n  }\n\n  const num = (\n    <Circle\n      className=\"AppliedFiltersNum\"\n      bg={ isActive ? 'link_hovered' : badgeBgColor }\n      size={ 5 }\n      color={ badgeColor }\n    >\n      { appliedFiltersNum }\n    </Circle>\n  );\n\n  return (\n    <Button\n      ref={ ref }\n      rightIcon={ appliedFiltersNum ? num : undefined }\n      size=\"sm\"\n      fontWeight=\"500\"\n      variant=\"outline\"\n      colorScheme=\"gray\"\n      onClick={ onClick }\n      isActive={ isActive }\n      data-selected={ Boolean(appliedFiltersNum) }\n      px={ 1.5 }\n      flexShrink={ 0 }\n      as={ as }\n      pointerEvents=\"all\"\n      _hover={ isActive ? {\n        color: 'link_hovered',\n        '.AppliedFiltersNum': {\n          bg: 'link_hovered',\n        },\n      } : undefined }\n    >\n      { FilterIcon }\n      <Box display={{ base: 'none', lg: 'block' }}>Filter</Box>\n    </Button>\n  );\n};\n\nexport default React.forwardRef(FilterButton);\n","import { chakra, Input, InputGroup, InputLeftElement, InputRightElement, useColorModeValue } from '@chakra-ui/react';\nimport type { ChangeEvent } from 'react';\nimport React, { useCallback, useState } from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport ClearButton from 'ui/shared/ClearButton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype Props = {\n  onChange?: (searchTerm: string) => void;\n  className?: string;\n  size?: 'xs' | 'sm' | 'md' | 'lg';\n  placeholder: string;\n  initialValue?: string;\n  isLoading?: boolean;\n  type?: React.HTMLInputTypeAttribute;\n  name?: string;\n};\n\nconst FilterInput = ({ onChange, className, size = 'sm', placeholder, initialValue, isLoading, type, name }: Props) => {\n  const [ filterQuery, setFilterQuery ] = useState(initialValue || '');\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const iconColor = useColorModeValue('blackAlpha.600', 'whiteAlpha.600');\n\n  const handleFilterQueryChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setFilterQuery(value);\n    onChange?.(value);\n  }, [ onChange ]);\n\n  const handleFilterQueryClear = useCallback(() => {\n    setFilterQuery('');\n    onChange?.('');\n    inputRef?.current?.focus();\n  }, [ onChange ]);\n\n  return (\n    <Skeleton\n      isLoaded={ !isLoading }\n      className={ className }\n      minW=\"250px\"\n      borderRadius=\"base\"\n    >\n      <InputGroup\n        size={ size }\n      >\n        <InputLeftElement\n          pointerEvents=\"none\"\n        >\n          <IconSvg name=\"search\" color={ iconColor } boxSize={ 4 }/>\n        </InputLeftElement>\n\n        <Input\n          ref={ inputRef }\n          size={ size }\n          value={ filterQuery }\n          onChange={ handleFilterQueryChange }\n          placeholder={ placeholder }\n          borderWidth=\"2px\"\n          textOverflow=\"ellipsis\"\n          whiteSpace=\"nowrap\"\n          type={ type }\n          name={ name }\n        />\n\n        { filterQuery ? (\n          <InputRightElement>\n            <ClearButton onClick={ handleFilterQueryClear }/>\n          </InputRightElement>\n        ) : null }\n      </InputGroup>\n    </Skeleton>\n  );\n};\n\nexport default chakra(FilterInput);\n","import type { PopoverContentProps } from '@chakra-ui/react';\nimport {\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport FilterButton from 'ui/shared/filters/FilterButton';\n\ninterface Props {\n  appliedFiltersNum?: number;\n  children: React.ReactNode;\n  contentProps?: PopoverContentProps;\n  isLoading?: boolean;\n}\n\nconst PopoverFilter = ({ appliedFiltersNum, children, contentProps, isLoading }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <FilterButton\n          isActive={ isOpen }\n          onClick={ onToggle }\n          appliedFiltersNum={ appliedFiltersNum }\n          isLoading={ isLoading }\n        />\n      </PopoverTrigger>\n      <PopoverContent { ...contentProps }>\n        <PopoverBody px={ 4 } py={ 6 } display=\"flex\" flexDir=\"column\" rowGap={ 5 }>\n          { children }\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(PopoverFilter);\n","import { CheckboxGroup, Checkbox, Text, Flex, Link, useCheckboxGroup } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { NFTTokenType, TokenType } from 'types/api/token';\n\nimport {\n  TOKEN_TYPES, TOKEN_TYPE_IDS, NFT_TOKEN_TYPE_IDS } from 'lib/token/tokenTypes';\n\ntype Props<T extends TokenType | NFTTokenType> = {\n  onChange: (nextValue: Array<T>) => void;\n  defaultValue?: Array<T>;\n  nftOnly: T extends NFTTokenType ? true : false;\n};\nconst TokenTypeFilter = <T extends TokenType | NFTTokenType>({ nftOnly, onChange, defaultValue }: Props<T>) => {\n  const { value, setValue } = useCheckboxGroup({ defaultValue });\n\n  const handleReset = React.useCallback(() => {\n    if (value.length === 0) {\n      return;\n    }\n    setValue([]);\n    onChange([]);\n  }, [ onChange, setValue, value.length ]);\n\n  const handleChange = React.useCallback((nextValue: Array<T>) => {\n    setValue(nextValue);\n    onChange(nextValue);\n  }, [ onChange, setValue ]);\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" fontSize=\"sm\">\n        <Text fontWeight={ 600 } variant=\"secondary\">Type</Text>\n        <Link\n          onClick={ handleReset }\n          cursor={ value.length > 0 ? 'pointer' : 'unset' }\n          color={ value.length > 0 ? 'link' : 'text_secondary' }\n          _hover={{\n            color: value.length > 0 ? 'link_hovered' : 'text_secondary',\n          }}\n        >\n          Reset\n        </Link>\n      </Flex>\n      <CheckboxGroup size=\"lg\" onChange={ handleChange } value={ value }>\n        { (nftOnly ? NFT_TOKEN_TYPE_IDS : TOKEN_TYPE_IDS).map((id) => (\n          <Checkbox key={ id } value={ id }>\n            <Text fontSize=\"md\">{ TOKEN_TYPES[id] }</Text>\n          </Checkbox>\n        )) }\n      </CheckboxGroup>\n    </>\n  );\n};\n\nexport default TokenTypeFilter;\n","export default function getNextSortValue<SortField extends string, Sort extends string>(\n  sortSequence: Record<SortField, Array<Sort | undefined>>, field: SortField,\n) {\n  return (prevValue: Sort | undefined) => {\n    const sequence = sortSequence[field];\n    return getNextValueFromSequence(sequence, prevValue);\n  };\n}\n\nexport function getNextValueFromSequence<T>(sequence: Array<T>, prevValue: T) {\n  const curIndex = sequence.findIndex((val) => val === prevValue);\n  const nextIndex = curIndex + 1 > sequence.length - 1 ? 0 : curIndex + 1;\n  return sequence[nextIndex];\n}\n\n// asc desc undefined\ntype Order = 'asc' | 'desc' | undefined;\nconst sequence: Array<Order> = [ 'desc', 'asc', undefined ];\nexport const getNextOrderValue = (getNextValueFromSequence<Order>).bind(undefined, sequence);\n","export default function getSortParamsFromValue<SortValue extends string, SortField extends string, SortOrder extends string>(val?: SortValue) {\n  if (!val) {\n    return undefined;\n  }\n\n  const sortingChunks = val.split('-') as [ SortField, SortOrder ];\n  return { sort: sortingChunks[0], order: sortingChunks[1] };\n}\n","import type { SelectOption } from 'ui/shared/select/types';\n\nimport type { Query } from 'nextjs-routes';\n\nexport default function getSortValueFromQuery<SortValue extends string>(query: Query, sortOptions: Array<SelectOption<SortValue>>) {\n  if (!query.sort || !query.order) {\n    return undefined;\n  }\n\n  const str = query.sort + '-' + query.order;\n  if (sortOptions.map(option => option.value).includes(str as SortValue)) {\n    return str as SortValue;\n  }\n}\n","import type { TokenType } from 'types/api/token';\nimport type { TokensSortingValue } from 'types/api/tokens';\nimport type { SelectOption } from 'ui/shared/select/types';\n\nimport config from 'configs/app';\nimport getFilterValuesFromQuery from 'lib/getFilterValuesFromQuery';\nimport { TOKEN_TYPE_IDS } from 'lib/token/tokenTypes';\n\nexport const SORT_OPTIONS: Array<SelectOption<TokensSortingValue>> = [\n  { label: 'Default', value: undefined },\n  { label: 'Price ascending', value: 'fiat_value-asc' },\n  { label: 'Price descending', value: 'fiat_value-desc' },\n  { label: 'Holders ascending', value: 'holder_count-asc' },\n  { label: 'Holders descending', value: 'holder_count-desc' },\n  { label: 'On-chain market cap ascending', value: 'circulating_market_cap-asc' },\n  { label: 'On-chain market cap descending', value: 'circulating_market_cap-desc' },\n];\n\nexport const getTokenFilterValue = (getFilterValuesFromQuery<TokenType>).bind(null, TOKEN_TYPE_IDS);\n\nconst bridgedTokensChainIds = (() => {\n  const feature = config.features.bridgedTokens;\n  if (!feature.isEnabled) {\n    return [];\n  }\n\n  return feature.chains.map(chain => chain.id);\n})();\nexport const getBridgedChainsFilterValue = (getFilterValuesFromQuery<string>).bind(null, bridgedTokensChainIds);\n"],"names":["getFilterValue","filterValues","val","valArray","getValuesArrayFromQuery","filter","el","includes","getItemIndex","index","page","pageSize","DEFAULT_PAGE_SIZE","undefined","push","split","Array","isArray","length","forEach","tokenStandardName","config","chain","tokenStandard","TOKEN_TYPES","NFT_TOKEN_TYPE_IDS","TOKEN_TYPE_IDS","getTokenTypeName","typeId","TOKEN_INFO_ERC_20","address","ADDRESS_HASH","circulating_market_cap","decimals","exchange_rate","holders","name","symbol","total_supply","type","icon_url","TOKEN_INFO_ERC_1155","token_holders_count","transfers_count","ADDRESS_PARAMS","value","token_id","pagination","generateListStub","TOKEN_HOLDER_ERC_20","next_page_params","TOKEN_HOLDER_ERC_1155","block_hash","BLOCK_HASH","block_number","from","log_index","method","timestamp","to","token","total","transaction_hash","TX_HASH","TOKEN_TRANSFER_ERC_721","TOKEN_TRANSFER_ERC_20","TOKEN_INFO_ERC_721","TOKEN_INFO_ERC_404","TOKEN_TRANSFER_ERC_1155","TOKEN_TRANSFER_ERC_404","animation_url","external_app_url","id","image_url","is_unique","metadata","attributes","trait_type","description","external_url","image","owner","holder_address_hash","thumbnails","bridgedTokensFeature","features","bridgedTokens","TokensTableItem","isLoading","filecoin_robust_address","filecoinRobustAddress","exchangeRate","marketCap","origin_chain_id","originalChainId","bridgedChainTag","isEnabled","chains","find","short_title","ListItemMobile","rowGap","Grid","width","gridTemplateColumns","GridItem","display","TokenEntity","jointSymbol","noCopy","w","fontSize","fontWeight","Flex","ml","flexShrink","columnGap","Tag","Skeleton","isLoaded","color","minW","textAlign","lineHeight","span","justifyContent","alignItems","mt","AddressEntity","hash","filecoin","robust","truncation","noIcon","AddressAddToWallet","HStack","spacing","Number","toLocaleString","minimumSignificantDigits","BigNumber","toFormat","Tr","role","Td","mr","overflow","flexDir","py","tokenAddress","is_contract","is_verified","ens_domain_name","implementations","iconSize","opacity","_groupHover","isNumeric","maxWidth","getNextSortValue","bind","fiat_value","holder_count","items","TokensTable","sorting","setSorting","top","sortIconTransform","sort","React","field","Table","Thead","ACTION_BAR_HEIGHT_DESKTOP","Th","Link","onClick","IconSvg","boxSize","transform","Tbody","map","item","Tokens","onSortChange","actionBar","hasActiveFilters","tableTop","isError","isPlaceholderData","data","query","DataFetchAlert","content","Show","below","ssr","TokensListItem","Hide","DataListDisplay","emptyText","filterProps","emptyFilteredText","apos","isVisible","TokensActionBar","searchTerm","onSearchChange","inTabsSlot","searchInput","FilterInput","base","lg","size","onChange","placeholder","initialValue","mb","Sort","defaultValue","options","SORT_OPTIONS","ActionBar","Pagination","feature","TokensBridgedChainsFilter","setValue","useCheckboxGroup","handleReset","handleChange","nextValue","Text","variant","_hover","CheckboxGroup","title","shortTitle","Checkbox","whiteSpace","chakra","TAB_LIST_PROPS","marginBottom","pt","pb","marginTop","TABS_RIGHT_SLOT_PROPS","flexGrow","router","useRouter","isMobile","useIsMobile","tab","getQueryParamString","q","setSearchTerm","setSort","getSortValueFromQuery","tokenTypes","setTokenTypes","getTokenFilterValue","bridgeChains","setBridgeChains","getBridgedChainsFilterValue","chain_ids","debouncedSearchTerm","useDebounce","tokensQuery","useQueryWithPages","resourceName","filters","getSortParamsFromValue","placeholderData","items_count","market_cap","handleSearchTermChange","onFilterChange","handleTokenTypesChange","handleBridgeChainsChange","handleSortChange","onSortingChange","handleTabChange","hasMultipleTabs","PopoverFilter","contentProps","maxW","appliedFiltersNum","TokenTypeFilter","nftOnly","bridgesListText","bridges","array","Box","flexWrap","tabs","component","TokensList","Boolean","TABS_HEIGHT","PageTitle","meta","seo","enhancedDataEnabled","withTextAd","RoutedTabs","tabListProps","rightSlot","rightSlotProps","stickyEnabled","onTabChange","props","className","EmptySearchResult","text","showActionBarIfEmpty","isAnimated","as","motion","div","initial","scale","animate","transitionDuration","transitionTimingFunction","flexDirection","paddingY","borderColor","borderTopWidth","_last","borderBottomWidth","children","leftSlot","leftSlotProps","themeProps","tabIndex","useTabIndexFromQuery","tabsRef","useRef","nextTab","queryForPathname","pickBy","key","pathname","tabId","shallow","useEffect","scroll_to_tabs","current","scrollIntoView","TabsWithScroll","defaultTabIndex","tabFromQuery","findIndex","subTabs","some","restProps","ref","TheadSticky","isSticky","setIsSticky","handleScroll","getBoundingClientRect","y","throttledHandleScroll","throttle","window","addEventListener","removeEventListener","position","backgroundColor","useColorModeValue","boxShadow","zIndex","web3Wallet","useProvider","provider","setProvider","wallet","setWallet","initializeProvider","ethereum","wallets","navigator","userAgent","WindowPostMessageStream","connectionStream","metamaskStream","target","shouldShimWeb3","providers","isMetaMask","_events","isCoinbaseWallet","isTokenPocket","WALLETS_INFO","metamask","icon","coinbase","token_pocket","toast","useToast","addOrSwitchChain","useAddOrSwitchChain","hexadecimalChainId","toString","request","params","chainId","error","errorObj","getErrorObj","code","originalErrorCode","get","chainName","nativeCurrency","currency","rpcUrls","blockExplorerUrls","app","baseUrl","handleClick","status","isClosable","mixpanel","ADD_TO_WALLET","Target","Wallet","Token","message","borderRadius","Tooltip","label","IconButton","aria-label","px","cursor","isTruncated","TruncatedTextTooltip","ChakraTag","FilterIcon","FilterButton","isActive","badgeColor","badgeBgColor","h","num","Circle","bg","Button","rightIcon","colorScheme","data-selected","pointerEvents","filterQuery","setFilterQuery","useState","inputRef","iconColor","handleFilterQueryChange","useCallback","event","handleFilterQueryClear","focus","InputGroup","InputLeftElement","Input","borderWidth","textOverflow","InputRightElement","ClearButton","isOpen","onToggle","onClose","useDisclosure","Popover","placement","isLazy","PopoverTrigger","PopoverContent","PopoverBody","sortSequence","getNextValueFromSequence","prevValue","sequence","curIndex","nextIndex","getNextOrderValue","sortingChunks","order","sortOptions","str","option","bridgedTokensChainIds"],"sourceRoot":"","ignoreList":[]}