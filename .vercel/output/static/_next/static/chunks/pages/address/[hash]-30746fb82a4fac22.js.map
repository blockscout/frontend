{"version":3,"file":"static/chunks/pages/address/[hash]-30746fb82a4fac22.js","mappings":"kHAAA,eACA,aAA0S,OAApR,iDAAsE,YAAgB,mBAAsB,KAAO,mBAA2B,eAA0B,4CAAyD,WAAiC,WAAkB,sBAwB1S,MAtBA,YACA,OAAsB,SAqBP,MArB0B,SAqBX,CApB9B,mCACA,YACA,mBACA,CAAG,UAAyC,eAAmB,SAC/D,eACA,yaACA,EAAG,QAAmC,eAAmB,aAA4B,eAAmB,mBACxG,OACA,SACA,UACA,SACA,UACA,8BACA,CAAG,CAAe,eAAmB,SACrC,mBACA,CAAG,EAAgB,eAAmB,SACtC,SACA,mBACA,CAAG,KACH,mBCvBA,4CACA,kBACA,WACA,OAAe,EAAQ,KAA6C,CACpE,EACA,SAFsB,kECEP,SAASA,EAAoBC,CAAY,MAClCA,EAIpB,MAAOC,CAJaD,CAAa,OAAbA,GAAAA,EAAME,OAAAA,GAANF,KAAAA,MAAAA,KAAAA,EAAAA,EAChBG,GAAG,CAAC,OAAC,QAAEC,CAAM,CAAE,SAAKC,CAAAA,EAAAA,EAAAA,CAAAA,CAASA,CAACD,KAC/BE,MAAM,CAAC,CAACC,EAAQC,IAASD,EAAOE,IAAI,CAACD,GAAOE,EAAAA,GAAIA,GAAKA,EAAAA,EAAAA,EAErCC,GAAG,CAACC,EAAAA,EAAGA,CAC5B,gCCZe,SAASC,EAA2BC,CAAuC,CAAEC,CAAuC,EACjI,GAAmB,UAAf,OAAOA,GAAoBD,EAAaE,QAAQ,CAACD,GACnD,GADuE,IAChEA,CAEX,gFCDe,SAASE,IACtB,OAAOC,EAAAA,WAAiB,CAAEC,GAA4BA,EAAEC,eAAe,GAAI,EAAE,CAC/E,gECHe,SAASC,IACtB,OAAQC,EAAAA,CAAMA,CAACC,KAAK,CAACC,gBAAgB,EACnC,IAAK,aACH,MAAO,WAET,KAAK,SACH,MAAO,OAET,KAAK,UACH,MAAO,QAET,KAAK,aACH,MAAO,WAET,SACE,MAAO,OAEX,CACF,gQEbA,IAAMC,EAAUH,EAAAA,CAAMA,CAACI,QAAQ,CAACC,iBAAiB,CAI3CC,EAAoBC,EAAAA,GAAQ,CAAC,CACjCC,aAAcD,EAAAA,GAAQ,CAAC,CACrBE,SAAUF,EAAAA,GAAO,CAAC,CAAEA,EAAAA,GAAQ,GAAIA,EAAAA,GAAM,GAAI,CAC5C,EACF,GCVMJ,EAAUH,EAAAA,CAAMA,CAACI,QAAQ,CAACM,IAAI,KAAvBP,uDCMb,IAAMQ,EAAgB,sBAChBC,EAAa,2BAAHA,yMEwDhB,MAAehB,EAAAA,IAAU,CAnDc,IAErC,IAAMiB,EAAoBC,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KAChC,EAgDqDC,EAhD/CC,EAAcC,EAAMC,EAAE,CAACC,kBAAkB,CAACH,WAAW,CAE3D,OAAOA,EAAYI,QAAQ,CAAC,KAAOJ,EAAYK,SAAS,CAAC,EAAGL,EAAYM,MAAM,CAAG,GAAKN,CACxF,EAAG,CAAEC,EAAMC,EAAE,CAACC,kBAAkB,CAACH,WAAW,CAAE,EAE9C,MACE,WAACO,EAAAA,EAAEA,CAAAA,WACD,UAACC,EAAAA,EAAEA,CAAAA,CAACC,GAAK,EAAIC,GAAG,OAAOC,SAAS,cAC9B,UAACC,EAAAA,CAAkBA,CAAAA,CACjBC,UAAoD,IAAxCZ,EAAMC,EAAE,CAACY,kBAAkB,CAACD,SAAS,CACjDE,UAAYd,EAAMe,iBAAiB,CACnCC,MAAM,iBACNC,aAAa,KACbC,WAAa,MAGjB,UAACX,EAAAA,EAAEA,CAAAA,CAACC,GAAK,EAAIC,GAAG,OAAOC,SAAS,cAC9B,UAACS,EAAAA,CAAQA,CAAAA,CAACF,aAAa,KAAKG,SAAW,CAACpB,EAAMe,iBAAiB,UAC7D,WAACM,EAAAA,EAAGA,CAAAA,CAACC,QAAQ,iBACX,UAACC,EAAAA,CAAOA,CAAAA,CACNC,KAAK,YACLC,OAAO,IACPC,MAAM,IACNV,MAAM,WACNW,GAAG,MACHC,MAAO,CAAEZ,MAAO,UAAW,IAG7B,UAACa,EAAAA,CAAYA,CAAAA,CACXC,KAAO,OAAqD,OAA7C9B,EAAMC,EAAE,CAACY,kBAAkB,CAACkB,eAAe,EAC1DC,WAAW,OACXC,WAAW,eACXC,UAAU,sBAERtC,WAKV,UAACW,EAAAA,EAAEA,CAAAA,CAACC,GAAK,EAAIC,GAAG,OAAOC,SAAS,cAC9B,UAACW,EAAAA,EAAGA,CAAAA,CAACH,WAAa,WAChB,UAACiB,EAAAA,CAAWA,CAAAA,CAACC,OAASpC,EAAMC,EAAE,CAAGoC,eAAiBrC,EAAMqC,cAAc,CAAGjB,SAAW,CAACpB,EAAMe,iBAAiB,SAKtH,iGCGA,OAAepC,EAAAA,IAAU,CAAC2D,IAjDxB,IAAM1C,EAAoBC,CAAAA,EAAAA,EAAAA,OAAAA,CAAOA,CAAC,KAChC,CAgDoDyC,EAAC,CAhD/CvC,EAAcC,EAAMC,EAAE,CAACC,kBAAkB,CAACH,WAAW,CAE3D,OAAOA,EAAYI,QAAQ,CAAC,KAAOJ,EAAYK,SAAS,CAAC,EAAGL,EAAYM,MAAM,CAAG,GAAKN,CACxF,EAAG,CAAEC,EAAMC,EAAE,CAACC,kBAAkB,CAACH,WAAW,CAAE,EAE9C,MACE,WAACwC,GAAAA,CAAcA,CAAAA,CAACC,OAAS,EAAIC,EAAE,iBAC7B,UAACtB,EAAAA,CAAQA,CAAAA,CAACF,aAAa,KAAKG,SAAW,CAACpB,EAAMe,iBAAiB,CAAG0B,EAAE,gBAClE,WAACC,EAAAA,CAAIA,CAAAA,CAACC,eAAe,gBAAgBF,EAAE,iBACrC,WAACC,EAAAA,CAAIA,CAAAA,CAACE,UAAY,YAChB,UAACrB,EAAAA,CAAOA,CAAAA,CACNC,KAAK,YACLC,OAAO,IACPC,MAAM,IACNV,MAAM,WACNY,MAAO,CAAEZ,MAAO,UAAW,IAG7B,UAAC6B,GAAAA,CAAIA,CAAAA,CAACnC,SAAS,KAAKsB,WAAa,aAAM,cAIzC,UAACrB,EAAAA,CAAkBA,CAAAA,CACjBC,UAAoD,IAAxCZ,EAAMC,EAAE,CAACY,kBAAkB,CAACD,SAAS,CACjDI,MAAM,iBACNC,aAAa,KACbe,WAAa,WAInB,UAACb,EAAAA,CAAQA,CAAAA,CAACF,aAAa,KAAKG,SAAW,CAACpB,EAAMe,iBAAiB,UAC7D,UAACc,EAAAA,CAAYA,CAAAA,CACXC,KAAO,OAAqD,OAA7C9B,EAAMC,EAAE,CAACY,kBAAkB,CAACkB,eAAe,EAC1DC,WAAW,OACXC,WAAW,eACXC,UAAU,sBAERtC,MAIN,UAACyB,EAAAA,EAAGA,CAAAA,CAACyB,KAAK,gBACR,UAACX,EAAAA,CAAWA,CAAAA,CAACC,OAASpC,EAAMC,EAAE,CAAGoC,eAAiBrC,EAAMqC,cAAc,CAAGjB,SAAW,CAACpB,EAAMe,iBAAiB,OAIpH,+BC5DA,IAAMgC,GAAU,CACd,CAAEC,MAAO,MAAOC,MAAO,KAAM,EAC7B,CAAED,MAAO,WAAYC,MAAO,eAAgB,EAC5C,CAAED,MAAO,OAAQC,MAAO,SAAU,EACnC,CAwBD,GAAetE,EAAAA,IAAU,CAfI,OAAC,cAeiBuE,EAffC,CAAc,eAAEC,CAAa,iBAAEC,CAAe,WAAEvC,CAAS,CAAS,GAC1FwC,EAAmBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAmBA,CAACzC,GAE7C,MACE,UAAC0C,GAAAA,CAAkBA,CAAAA,CACjBhC,KAAK,yBACLiC,QAAUV,GACVW,SAAWP,EACXE,gBAAkBA,EAClBvC,UAAYwC,EACZK,aAAeP,GAAiBL,EAAO,CAAC,EAAE,CAACC,KAAK,EAGtD,GCTM1E,GAAiB,IAAmDsF,IAAI,CAAC,KJ8EvC,CI9E6CC,WJ8E/B,OAAQ,CAAU,CI+BxE,GArG8B,CAR+EA,MAQ9E,WAAEC,CAAS,WAqG3BC,GArG6BC,GAAe,CAAI,cAqG3BD,EAAC,EArG6C,EAAI,CAAS,GACvFE,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExB/B,EAAiBgC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAAEC,WAAW,GAEnE,CAAEC,EAAaC,EAAgB,CAAG/F,EAAAA,QAAc,CAA0BL,GAAe2F,EAAOK,KAAK,CAACK,MAAM,GAE5G,MAAEC,CAAI,SAAEC,CAAO,CAAEC,YAAU,mBAAE/D,CAAiB,CAAE,CAAGgE,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzEC,aAAc,wBACdC,WAAY,CAAEC,QAAS7C,CAAe,YACtCyB,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAA0BC,EAAAA,CAAeA,CAAE,GAAI,CAAEC,aAAa,EAAOC,WAAY,EAAGC,SAAU,EAAG,EACpI,CACF,GAEMC,EAAqBhH,EAAAA,WAAiB,CAAC,IAG3C+F,EADepG,GAAeE,GAEhC,EAAG,EAAG,EAEN,CAHiBoH,EAGb,CAACzB,GAAa,CAACH,EACjB,OAAO,KAGT,IAAM6B,EACJ,WAACC,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,EAAIC,GAAI,CAAEC,KAAM,EAAGC,GAAI,CAAE,YACxC,UAAChD,GAAoBA,CACnBE,cAAgBqB,EAChBtB,OAFmBD,QAEFyC,EACjBtC,iBAAkB8C,CAAQ1B,EAC1B3D,UAAYgE,EAAWhE,SAAS,GAGlC,UAACsF,EAAAA,CAAUA,CAAAA,CAACC,GAAI,CAAEJ,KAAM,OAAQK,GAAI,CAAE,EAAK,GAAGxB,CAAU,MAItDyB,EAAexF,QAAoB6D,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,MAAcA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAC7B,MAAM,CAAC8B,GAAKhC,EAAciC,CAAAA,EAAAA,EAAAA,EAAAA,CAAcA,CAACD,EAAGpE,KAAoBoC,EAAcgC,GAE3IE,EACJ,WAACtF,EAAAA,EAAGA,CAAAA,CAACuF,SAAS,qBACZ,UAACC,EAAAA,CAAIA,CAAAA,CAACC,MAAM,KAAKC,KAAM,iBACnBR,EAAAA,KAAAA,EAAAA,EAAc3I,GAAG,CAAC,CAACK,EAAMwI,IACzB,UAACnE,GAA6BA,CAE5BrC,GAAKhC,EACLoE,eAAiBA,EACjBtB,kBAAoBA,GAHd,GAAW9C,MAAAA,CAAPwI,EAAG,KAA6C,OAAzCxI,EAAK4C,kBAAkB,CAACkB,eAAe,MAQ9D,UAACiF,EAAAA,CAAIA,CAAAA,CAACF,MAAM,KAAKC,KAAM,WACrB,WAACE,EAAAA,CAAKA,CAAAA,WACJ,UAACC,EAAAA,CAAWA,CAAAA,CAACC,IAAM,YACjB,WAAC7G,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,iBAAQ,QAGlB,UAAC0F,EAAAA,EAAEA,CAAAA,UAAC,WAGJ,UAACA,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,iBAAQ,iBAKtB,UAAC2F,EAAAA,CAAKA,CAAAA,CAACC,SAAS,sBACZf,EAAAA,KAAAA,EAAAA,EAAc3I,GAAG,CAAC,CAACK,EAAMwI,IACzB,UAAC3G,EAA8BA,CAE7BG,GAAKhC,EACLoE,eAAiBA,EACjBtB,kBAAoBA,EAJSjB,CACvB,GAAW7B,MAAAA,CAAPwI,EAAG,KAA6C,OAAzCxI,EAAK4C,kBAAkB,CAACkB,eAAe,cAYtE,MACE,UAACwF,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,MAAQD,EACRiB,UAAU,6BACVb,QAAUA,EACVd,UAAYA,EACZ4B,YAAa,CACXC,kBAAkBvB,CAAQ1B,EAC1BkD,kBAAmB,mCACrB,GAGN,qGC9DA,OAAehJ,EAAAA,IAAU,CAjDc,QAqC9BI,EApCP,IAAMrB,EAAcF,CAAAA,EAAAA,GAAAA,CAAAA,CAAmBA,CAACwC,GAExC,GA8CuD4H,EAAC,CA7CtD,WAACrF,GAAAA,CAAcA,CAAAA,CAACC,OAAS,EAAIqF,UAAU,cACrC,WAACnF,EAAAA,CAAIA,CAAAA,CAACC,eAAe,gBAAgBF,EAAE,iBACrC,UAACqF,GAAAA,EAAWA,CAAAA,CACVhH,UAAYd,EAAMc,SAAS,CAC3BiH,OAAS/H,EAAMyB,MAAM,CACrBuG,MAAM,IACNhG,WAAa,MAEf,UAACrB,EAAAA,CAAkBA,CAAAA,CACjBC,UAAYZ,EAAMY,SAAS,CAC3BqH,gBAAiC,IAAfjI,EAAMkI,IAAI,CAC5BpH,UAAYd,EAAMc,SAAS,CAC3BE,MAAM,iBACNM,QAAQ,oBAGZ,WAACoB,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIH,EAAE,iBACtB,UAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGkB,WAAa,IAAMd,WAAa,WAAI,QAC5E,UAACC,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGQ,QAAQ,eAAeN,MAAM,8BACnE,UAACmH,OAAAA,UAAOnI,EAAMoI,iBAAiB,QAGnC,WAAC1F,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIH,EAAE,iBACtB,UAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGkB,WAAa,IAAMd,WAAa,WAAI,aAC5E,UAACC,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,UACnC,UAAC+B,GAAAA,CAAIA,CAAAA,CAAC7B,MAAM,0BAAmBlD,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkC,EAAMqI,QAAQ,EAAI,GAAGC,QAAQ,OAExE,UAACC,GAAAA,CAAYA,CAAAA,CACXC,QAAUxI,EAAMqI,QAAQ,CACxBI,SAAWzI,EAAM0I,SAAS,CAC1B5H,UAAYd,EAAMc,SAAS,MAG7B,EAAmC,QAAlC/B,EAAAA,EAAAA,CAAMA,CAAC4J,EAAE,CAACC,KAAK,CAACnL,KAAK,CAACoL,YAAAA,GAAtB9J,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoC+J,YAAAA,GAAgB,CAAC/J,EAAAA,CAAMA,CAACI,QAAQ,CAAC4J,MAAM,CAACC,SAAS,EACtF,WAACtG,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIH,EAAE,iBACtB,WAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGkB,WAAa,IAAMd,WAAa,YAAI,UAAS+H,GAAAA,CAAaA,CAACC,KAAK,IACxG,UAAC/H,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,UACnC,UAAC+B,GAAAA,CAAIA,CAAAA,CAAC7B,MAAM,0BAAmBtD,EAAYyL,OAAO,YAM9D,GCGA,GAAexK,EAAAA,IAAU,CAACyK,QAXjBrK,EAxCP,IAAMrB,EAAcF,CAAAA,EAAAA,GAAAA,CAAAA,CAAmBA,CAACwC,GAExC,IAiDwDoJ,EAhDtD,WAAC9I,EAAAA,EAAEA,CAAAA,WACD,UAACC,EAAAA,EAAEA,CAAAA,UACD,UAACuH,GAAAA,EAAWA,CAAAA,CACVhH,UAAYd,EAAMc,SAAS,CAC3BiH,OAAS/H,EAAMyB,MAAM,CACrBuG,MAAM,IACNtH,SAAS,KACT2I,WAAa,EACbrH,WAAa,QAGjB,UAACzB,EAAAA,EAAEA,CAAAA,UACD,UAACI,EAAAA,CAAkBA,CAAAA,CACjBC,UAAYZ,EAAMY,SAAS,CAC3BqH,gBAAiC,IAAfjI,EAAMkI,IAAI,CAC5BpH,UAAYd,EAAMc,SAAS,CAC3BE,MAAM,iBACNM,QAAQ,mBAGZ,UAACf,EAAAA,EAAEA,CAAAA,UACD,UAACY,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGQ,QAAQ,eAAeU,WAAW,eACxE,UAACmG,OAAAA,UAAOnI,EAAMoI,iBAAiB,OAGnC,UAAC7H,EAAAA,EAAEA,CAAAA,UACD,WAACmC,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS1G,UAAY,YACpC,UAACzB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGyI,UAAU,gBAC9CzL,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkC,EAAMqI,QAAQ,EAAI,GAAGC,QAAQ,KAE3C,UAACC,GAAAA,CAAYA,CAAAA,CACXC,QAAUxI,EAAMqI,QAAQ,CACxBI,SAAWzI,EAAM0I,SAAS,CAC1B5H,UAAYd,EAAMc,SAAS,QAI/B,EAAmC,QAAlC/B,EAAAA,EAAAA,CAAMA,CAAC4J,EAAE,CAACC,KAAK,CAACnL,KAAK,CAACoL,YAAY,GAAlC9J,KAAAA,MAAAA,KAAAA,EAAAA,EAAoC+J,YAAAA,GAAgB,CAAC/J,EAAAA,CAAMA,CAACI,QAAQ,CAAC4J,MAAM,CAACC,SAAS,EACtF,UAACzI,EAAAA,EAAEA,CAAAA,CAACiJ,SAAS,aACX,UAACrI,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGQ,QAAQ,wBAC9C,UAAC6G,OAAAA,UAAOzK,EAAYyL,OAAO,WAMvC,GC4GA,GAAexK,EAAAA,IAAU,CA9IM,QAsEb2F,EAUDvF,EAsDHuF,KAtIkB,MA8IiBmF,EAAC,GA9IhB3F,CAAS,cAAEE,GAAe,CAAI,gBAAEoB,GAAiB,CAAI,CAAS,GACxF,CAAEsE,EAAaC,EAAgB,CAAGhL,EAAAA,QAAc,CAAC,IACjD,CAAEiL,EAAeC,EAAkB,CAAGlL,EAAAA,QAAc,CAAC,GAErDmL,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAC5B9F,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExB4F,EAAcC,OAAOhG,EAAOK,KAAK,CAACC,IAAI,EACtCD,EAAQS,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CAC9BC,aAAc,2BACdC,WAAY,CAAEV,KAAMyF,CAAY,YAChClG,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAC/B4E,GAAAA,EAAKA,CACL,GACA,CACEC,iBAAkB,CAChBC,aAAc,QACdC,YAAa,EACf,CACF,EAEJ,CACF,GAEMC,EAAoB3L,EAAAA,WAAiB,CAAC,KAC1CgL,EAAe,+FACjB,EAAG,EAAE,EAECY,EAA4D5L,EAAAA,WAAiB,CAAC,IAClFgL,EAAe,IAEfG,EAAYU,YAAY,CACtBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,2BAA4B,CAAExF,WAAY,CAAEV,KAAMyF,CAAY,CAAE,GAC/E,GACE,EAIIU,EAJA,KAIc,CAJH,MAIU,EAlDV,EAkDcC,EAC3Bd,EAAiBe,GAAQA,EAAO,GACzBF,GAGF,CALsC,GAMxCA,CAAQ,CACXlE,MAAO,CAAEqE,EAAQpN,KAAK,IAAKiN,EAASlE,KAAK,CAAE,OAV3C,EAaR,EAAG,CAAEwD,EAAaF,EAAa,EAEzBgB,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,UAAsC,OAA3BhB,EAAYxF,WAAW,IACzCyG,cAAeX,EACfY,cAAeZ,EACfa,WAAY,CAACnB,GAAe1F,EAAMvD,iBAAiB,EAA8B,IAA1BuD,EAAMQ,UAAU,CAACoD,IAAI,GAQ9E,GANAkD,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,YACPC,QAASf,CACX,GAEI,CAACpG,GAAa,CAACH,EACjB,OAAO,KADwB,IAI3B2C,EAAUrC,CAAU,OAAVA,GAAAA,EAAMM,IAAI,GAAVN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYkC,KAAAA,EAC1B,iCACE,UAACK,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WACrB,WAACE,EAAAA,CAAKA,CAAAA,CAACuE,MAAO,CAAEC,YAAa,MAAO,YAClC,UAACC,EAAAA,CAAKA,CAAAA,CAACvE,IAAM7C,EAAMQ,UAAU,CAAC6G,SAAS,CAAGC,EAAAA,EAAyBA,CAAG,WACpE,WAACtL,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,UAAC,UACJ,UAACA,EAAAA,EAAEA,CAAAA,UAAC,QACJ,UAACA,EAAAA,EAAEA,CAAAA,UAAC,QACJ,UAACA,EAAAA,EAAEA,CAAAA,UAAC,aACF,EAAmC,QAAlCrI,EAAAA,EAAAA,CAAMA,CAAC4J,EAAE,CAACC,KAAK,CAACnL,KAAK,CAACoL,YAAAA,GAAtB9J,KAAAA,MAAAA,KAAAA,EAAAA,EAAoC+J,YAAAA,GAAgB,CAAC/J,EAAAA,CAAMA,CAACI,QAAQ,CAAC4J,MAAM,CAACC,SAAS,EACxF,WAAC5B,EAAAA,EAAEA,CAAAA,CAACoC,SAAS,cAAC,UAASP,GAAAA,CAAaA,CAACC,KAAK,SAG9C,WAAC7B,EAAAA,CAAKA,CAAAA,WACJ,UAACwE,GAAAA,EAA4B,EAC3BC,IAAMC,OAAOC,QAAQ,CAAClK,IAAI,CAC1BmK,IAAMrC,EACNsC,MAAQxC,EACRyC,KAAK,QACLrL,UAAYwD,EAAMvD,iBAAiB,GAEnCuD,EAAMM,IAAI,CAAC4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IAC5B,UAAChD,GAA+BA,CAE5B,GAAGnL,CAAI,CACTiK,KAAO5D,EAAMQ,UAAU,CAACoD,IAAI,CAC5BpH,UAAYwD,EAAMvD,GAJYqI,cAIK,EAH7BnL,EAAKwD,MAAM,EAAI6C,CAAAA,CAAMvD,iBAAiB,CAAGkJ,OAAOmC,GAAS,GAAC,WAS1E,WAACpF,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,KAAM,YACO,IAA1BzC,EAAMQ,UAAU,CAACoD,IAAI,EACrB,UAAC2D,GAAAA,EAA2B,EAC1BC,IAAMC,OAAOC,QAAQ,CAAClK,IAAI,CAC1BmK,IAAMrC,EACNsC,MAAQxC,EACRyC,KAAK,QACLrL,UAAYwD,EAAMvD,iBAAiB,GAGrCuD,EAAMM,IAAI,CAAC4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IAC5B,UAACxE,GAA8BA,CAE3B,GAAG3J,CAAI,CACTiK,KAAO5D,EAAMQ,UAAU,CAACoD,IAAI,CAC5BpH,UAAYwD,EAAMvD,EAJW6G,eAIM,EAH7B3J,EAAKwD,MAAM,EAAI6C,CAAAA,CAAMvD,iBAAiB,CAAGkJ,OAAOmC,GAAS,GAAC,SAQtE,KAEEvG,EAAYvB,EAAMQ,UAAU,CAAC6G,SAAS,CAC1C,UAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,WACf,UAACK,EAAAA,CAAUA,CAAAA,CAACC,GAAG,OAAS,GAAG/B,EAAMQ,UAAU,KAE3C,KAEJ,MACE,UAACyC,EAAAA,CAAeA,CAAAA,CACd1C,QAAUP,EAAMO,OAAO,CACvB2B,KAAK,SAAGlC,EAAAA,EAAMM,IAAAA,GAANN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYkC,KAAK,CACzBgB,UAAU,kDACVb,QAAUA,EACVd,UAAYA,GAGlB,2CC9JA,OAAewG,CAAAA,EAAAA,GAAAA,CAAAA,CAAMA,CATD,OAAC,KASaC,EAAC,IATZC,CAAS,CAAS,GACvC,MACE,WAACC,GAAAA,CAAKA,CAAAA,CAACC,OAAO,UAAUF,UAAYA,YAClC,UAAC1J,GAAAA,CAAIA,CAAAA,CAACZ,WAAW,eAAM,4BACvB,UAACyK,GAAAA,CAAIA,CAAAA,CAAC5K,KAAOiK,OAAOY,QAAQ,CAACX,QAAQ,CAAClK,IAAI,UAAG,4BAGnD,mBC2BA,OAAenD,EAAAA,IAAU,CAACiO,OA7BO,aAAE5C,CAAW,CAAS,EA6BL4C,CA5B1C,CA4B2C,KA5BzChI,CAAI,WAAEiI,CAAS,SAAEhI,CAAO,CAAE,CAAGiI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,6BAA8B,CAC7E7H,WAAY,CAAEV,KAAMyF,CAAY,CAClC,GAEMxD,EAAQ7H,EAAAA,OAAa,CAAC,KAC1B,GAAKiG,CAAD,CAIJ,IAJW,GAIJA,EAAK4B,KAAK,CAAC5I,GAAG,CAAC,OAAC,MAAEmP,CAAI,OAAE/J,CAAK,CAAE,SAAM,CAC1C+J,KAAM,IAAIC,KAAKD,GACf/J,MAAOlF,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkF,GAAO5E,GAAG,CAAC,IAAMW,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACC,QAAQ,EAAEC,QAAQ,EAC5E,GACF,EAAG,CAAEvI,EAAM,EAEX,MACE,UAACwI,GAAAA,CAAWA,CAAAA,CACVvI,QAAUA,EACVwI,MAAM,WACN7G,MAAQA,EACR1F,UAAY+L,EACZS,EAAE,QACFC,MAAQtE,GAAAA,CAAaA,CAACC,KAAK,CAC3B1B,UAAY5C,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4I,IAAAA,EAAN5I,CAAc,kCAA8C,OAAXA,EAAK4I,IAAI,CAAE,UAG9E,kECkCA,OAAe7O,EAAAA,IAAU,CAtDU,IACjC,IAAM8O,EAAU3P,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkC,EAAM0N,KAAK,CAqDcC,CArDZvP,CAqDa,EArDV,CAACC,GAAAA,EAAGA,EACxCuP,EAAkBH,EAAQI,GAAG,CAAC1P,GAAAA,EAAIA,EAExC,MACE,WAACoE,GAAAA,CAAcA,CAAAA,CAACC,OAAS,EAAIqF,UAAU,cACrC,WAACnF,EAAAA,CAAIA,CAAAA,CAACC,eAAe,gBAAgBF,EAAE,iBACrC,WAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGkB,WAAa,cACjDlE,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkC,EAAMgD,KAAK,EAAE5E,GAAG,CAACC,GAAAA,EAAGA,EAAEyP,EAAE,CAAC,GAAGxF,QAAQ,GAAI,IAAGW,GAAAA,CAAaA,CAACC,KAAK,IAE5E,UAAC/H,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,UACnC,UAACiN,GAAAA,CAAIA,CAAAA,CAACC,SAAS,aACb,WAACC,GAAAA,CAAYA,CAAAA,CAAC3M,QAAQ,OAAO4M,GAAK,EAAI5E,WAAW,mBAC/C,UAAC6E,GAAAA,EAASA,CAAAA,CAAChC,KAAOyB,EAAkB,WAAa,WAAajM,GAAK,IACnE,UAACkB,GAAAA,CAAIA,CAAAA,CAACuL,GAAG,OAAOpN,MAAQ4M,EAAkB,YAAc,UAAY5L,WAAa,aAC7EyL,EAAQK,EAAE,CAAC,GAAGxF,QAAQ,eAMlC,WAAC5F,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIH,EAAE,iBACtB,UAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGkB,WAAa,IAAMd,WAAa,WAAI,UAC5E,UAAC4G,GAAAA,EAAWA,CAAAA,CACVhH,UAAYd,EAAMc,SAAS,CAC3BiH,OAAS/H,EAAMoK,YAAY,CAC3BpC,MAAM,IACNhG,WAAa,SAGfhC,EAAMqO,gBAAgB,EACtB,WAAC3L,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIH,EAAE,iBACtB,UAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGkB,WAAa,IAAMd,WAAa,WAAI,QAC5E,UAACoN,GAAAA,EAAQA,CAAAA,CACP/J,KAAOvE,EAAMqO,gBAAgB,CAC7BvN,UAAYd,EAAMc,SAAS,CAC3BkH,MAAM,IACNlF,KAAK,aAIX,WAACJ,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIH,EAAE,iBACtB,UAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGkB,WAAa,IAAMd,WAAa,WAAI,QAC5E,UAACP,EAAAA,CAAkBA,CAAAA,CACjBC,UAAYZ,EAAMuO,eAAe,CACjCtG,gBAAiC,IAAfjI,EAAMkI,IAAI,CAC5BpH,UAAYd,EAAMc,SAAS,CAC3BE,MAAM,wBAKhB,GCEA,GAAerC,EAAAA,IAAU,CAxDW,IAClC,IAAM8O,EAAU3P,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkC,EAAM0N,KAAK,EAAEtP,EAuDc,CAvDX,CAACC,GAAAA,EAAGA,EACxCuP,EAAkBH,EAAQI,GAAG,CAAC1P,GAAAA,EAAIA,EAExC,MACE,WAACmC,EAAAA,EAAEA,CAAAA,WACD,UAACC,EAAAA,EAAEA,CAAAA,UACD,UAACuH,GAAAA,EAAWA,CAAAA,CACVhH,UAAYd,EAAMc,SAAS,CAC3BiH,OAAS/H,EAAMoK,YAAY,CAC3BpC,MAAM,IACNtH,SAAS,KACT2I,WAAa,EACbrH,WAAa,QAGjB,UAACzB,EAAAA,EAAEA,CAAAA,UACCP,EAAMqO,gBAAgB,EACtB,UAACC,GAAAA,EAAQA,CAAAA,CACP/J,KAAOvE,EAAMqO,gBAAgB,CAC7BvN,UAAYd,EAAMc,SAAS,CAC3BkH,MAAM,IACNlF,KAAK,YAIX,UAACvC,EAAAA,EAAEA,CAAAA,UACD,UAACI,EAAAA,CAAkBA,CAAAA,CACjBC,UAAYZ,EAAMuO,eAAe,CACjCtG,gBAAiC,IAAfjI,EAAMkI,IAAI,CAC5BpH,UAAYd,EAAMc,SAAS,CAC3BE,MAAM,iBACNM,QAAQ,mBAGZ,UAACf,EAAAA,EAAEA,CAAAA,CAACiJ,SAAS,IAACgF,GAAK,WACjB,UAACrN,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,CAAGE,MAAM,iBAAiBM,QAAQ,wBACrE,UAAC6G,OAAAA,UAAOrK,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkC,EAAMgD,KAAK,EAAE5E,GAAG,CAACC,GAAAA,EAAGA,EAAEyP,EAAE,CAAC,GAAGxF,QAAQ,SAG1D,UAAC/H,EAAAA,EAAEA,CAAAA,CAACiJ,SAAS,IAAClI,QAAQ,OAAOqB,eAAe,eAC1C,UAACxB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACpB,EAAMc,SAAS,UACnC,UAACiN,GAAAA,CAAIA,CAAAA,CAACC,SAAS,IAAI3E,WAAa,WAC9B,WAAC4E,GAAAA,CAAYA,CAAAA,CAAC3M,QAAQ,OAAO4M,GAAK,EAAI5E,WAAW,mBAC/C,UAAC6E,GAAAA,EAASA,CAAAA,CAAChC,KAAOyB,EAAkB,WAAa,WAAajM,GAAK,IACnE,UAACkB,GAAAA,CAAIA,CAAAA,CAACuL,GAAG,OAAOpN,MAAQ4M,EAAkB,YAAc,UAAY5L,WAAa,aAC7EyL,EAAQK,EAAE,CAAC,GAAGxF,QAAQ,gBAQxC,GCUA,GAAe3J,EAAAA,IAAU,CA1DS,QAEhB2F,EAgDJA,KAlDqB,OAAEA,CAAK,CAAS,EA0DCmK,CAxD5C9H,CAwD6C,CAxDnCrC,CAAAA,QAAAA,EAAAA,EAAMM,IAAAA,GAANN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYkC,KAAAA,EAC1B,iCACE,UAACK,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WACrB,WAACE,EAAAA,CAAKA,CAAAA,WACJ,UAACyE,EAAAA,CAAKA,CAAAA,CAACvE,IAAM7C,EAAMQ,UAAU,CAAC6G,SAAS,CAAGC,EAAAA,EAAyBA,CAAG,WACpE,WAACtL,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,UAChB,UAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,QAChB,UAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,QAChB,WAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,MAAM8H,SAAS,IAACgF,GAAK,YAAI,WAAUvF,GAAAA,CAAaA,CAACC,KAAK,IAChE,UAAC9B,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,MAAM8H,SAAS,aAAC,eAG9B,UAACnC,EAAAA,CAAKA,CAAAA,UACF/C,EAAMM,IAAI,CAAC4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IAC5B,UAACsC,GAA2BA,CAExB,GAAGzQ,CAAI,CACTiK,KAAO5D,EAAMQ,UAAU,CAACoD,IAAI,CAC5BpH,OAJ0B4N,GAIdpK,EAAMvD,iBAAiB,EAH7B9C,EAAKmM,YAAY,EAAI9F,CAAAA,CAAMvD,iBAAiB,CAAGkJ,OAAOmC,GAAS,GAAC,UAShF,UAACpF,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,KAAM,WACnBzC,EAAMM,IAAI,CAAC4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IAC5B,UAACuB,GAA0BA,CAEvB,GAAG1P,CAAI,CACTiK,KAAO5D,EAAMQ,UAAU,CAACoD,IAAI,CAC5BpH,MAJyB6M,IAIbrJ,EAAMvD,iBAAiB,EAH7B9C,EAAKmM,YAAY,EAAI9F,CAAAA,CAAMvD,iBAAiB,CAAGkJ,OAAOmC,GAAS,GAAC,QAQ5E,KAEEvG,EAAYvB,EAAMQ,UAAU,CAAC6G,SAAS,CAC1C,UAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,WACf,UAACK,EAAAA,CAAUA,CAAAA,CAACC,GAAG,OAAS,GAAG/B,EAAMQ,UAAU,KAE3C,KAEJ,MACE,UAACyC,EAAAA,CAAeA,CAAAA,CACdxB,GAAK,EACLlB,QAAUP,EAAMO,OAAO,CACvB2B,KAAK,SAAGlC,EAAAA,EAAMM,IAAAA,GAANN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYkC,KAAK,CACzBgB,UAAU,qDACVb,QAAUA,EACVd,UAAYA,GAGlB,GCwBA,GAAelH,EAAAA,IAAU,CAACgQ,OA9EE,YA8EiBA,EA9Ef3K,GAAe,CAAI,gBAAEoB,GAAiB,CAAI,CAAS,GACzE,CAAEsE,EAAaC,EAAgB,CAAGhL,EAAAA,QAAc,EAAC,GACjDmL,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAC5B9F,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExBN,EAAYnF,EAAAA,MAAY,CAAiB,MAEzCqL,EAAc3F,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EACnDqK,EAAmB7J,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzCC,aAAc,uBACdC,WAAY,CAAEV,KAAMyF,CAAY,YAChClG,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAC/BuJ,EAAAA,EAAoBA,CACpB,GACA,CACE1E,iBAAkB,CAChBC,aAAc,QACdC,YAAa,EACf,CACF,EAEJ,CACF,GAEMC,EAAoB3L,EAAAA,WAAiB,CAAC,KAC1CgL,GAAe,EACjB,EAAG,EAAE,EAECY,EAAsE5L,EAAAA,WAAiB,CAAEkM,IAC7FlB,GAAe,GAEfG,EAAYU,YAAY,CACtBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,uBAAwB,CAAExF,WAAY,CAAEV,KAAMyF,CAAY,CAAE,GAC1EU,IACC,GAAKA,CAAD,CAIJ,MAAO,CACL,CALa,EAKVA,CAAQ,CACXlE,MAAO,CACLqE,EAAQiE,YAAY,IACjBpE,EAASlE,KAAK,CAClB,CAEL,EACJ,EAAG,CAAEwD,EAAaF,EAAa,EAEzBgB,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,aAAyC,OAA3BhB,EAAYxF,WAAW,IAC5CyG,cAAeX,EACfY,cAAeZ,EACfa,WAAY,CAACnB,GAAe4E,EAAiB7N,iBAAiB,EAAI6N,MAAiB9J,UAAU,CAACoD,IAAI,SAQpG,CANAkD,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,eACPC,QAASf,CACX,GAEI,GAAevG,GAKjB,OALgB,EAKhB,wBACI0F,GAAe,UAAC4C,GAAWA,CAAC4B,GAAK,IACnC,OAD6B5B,CAC7B,EAACM,GAAuBA,CAAC5C,YAAcA,IACvC,UAAC5L,KADuBwO,CACvBxO,CAAI2Q,IAAMjL,IACX,UAAC2K,GAAyBA,CAACnK,MAAQsK,OAR9B,IAWX,gBAHgCH,kDC7EhC,IAAMO,GAAc,CAClBC,mBAAoB,MACpBC,sBAAuB,kBACvBC,kBAAmB,kBACrB,EAoCA,GAAexQ,EAAAA,IAAU,CAACyQ,QA7BX9K,KALa,CAAE+K,KAkCeD,CAlCX,CAkCY,MAlCV9K,CAAK,SAAEY,CAAO,SAAEoK,CAAO,uBAAEC,CAAqB,gBAAEC,CAAc,CAAS,GACzG,GAAIlL,EAAMvD,iBAAiB,EAAIwO,EAC7B,MAAO,UAACpO,EAAAA,CAAQA,CAAAA,CAACmM,EAAI,EAAI7K,EAAE,OAAOxB,aAAa,SAGjD,IAAM2D,EAAAA,QAAON,EAAAA,EAAMM,IAAAA,GAANN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAY,CAAC+K,EAAK,CAE/B,GAAI/K,EAAMO,OAAO,EAAqBD,MAAjBA,EACnB,CAD6C6K,KACtC,CADqB,EACrB,GADiD,EACjD,EAACtH,OAAAA,UAAK,MAGf,OAAQkH,GACN,IAAK,kBACH,MAAO,UAAClH,OAAAA,UAAOrK,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC8G,GAAM0D,QAAQ,IACzC,KAAK,qBACL,IAAK,wBACL,IAAK,oBACH,GAAa,KAAK,GAChB,MAAO,UAACH,OAAAA,UAAK,MAGf,GAAIqH,EACF,MAAO,QADW,EACVrH,OAAAA,UAAOuH,OAAO9K,GAAM+K,cAAc,KAG5C,MACE,UAAC9N,EAAAA,CAAYA,CAAAA,CAACC,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,kBAAmBvL,MAAO,CAAEC,KAAMW,EAAS4K,IAAKd,EAAW,CAACK,EAAK,CAAG,GAAKC,QAAUA,WACtHI,OAAO9K,GAAM+K,cAAc,IAIrC,CACF,uGCdA,OAAehR,EAAAA,IAAU,CAhCQ,OAAC,WAAEmC,CAAS,MAgCMiP,EAAC,KAhCL/F,CAAW,CAAS,GAC3DgG,EAAkBC,CAAAA,EAAAA,GAAAA,EAAAA,CAAkBA,GAE1C,GAAI,CAACD,GAAmBjR,EAAAA,CAAMA,CAAC4J,EAAE,CAACC,KAAK,CAAC1D,OAAO,CAACgL,UAAU,CAACC,gBAAgB,CAAC9P,MAAM,CAAG,EACnF,CADsF,MAC/E,KAGT,IAAM4C,EAA0C,WAAlC+M,EAAgBI,aAAa,CAAgB,UAAY,GAAwDC,MAAAA,CAApDtR,EAAAA,CAAMA,CAAC4J,EAAE,CAACC,KAAK,CAAC1D,OAAO,CAACgL,UAAU,CAACI,YAAY,EAAwB,OAAnBD,GAAAA,EAAiBA,CAAE,SAC5IE,EAAyC,WAAlCP,EAAgBI,aAAa,CAAgB,wCAA0C,wCAC9FI,EAA4C,WAAlCR,EAAgBI,aAAa,CAAgBpG,EAAcyG,CAAAA,EAAAA,GAAAA,EAAAA,CAAeA,CAACzG,GAE3F,MACE,iCACE,UAAC0G,GAAAA,EAAqB,EACpBH,KAAOA,EACPzP,UAAYA,WAEVmC,IAEJ,UAACyN,GAAAA,EAAqB,WACpB,UAACC,GAAAA,EAAaA,CAAAA,CACZzL,QAAS,CAAEX,KAAMiM,CAAQ,EACzB1P,UAAYA,EACZkH,MAAM,IACN4I,MAAM,IACNC,SAAS,UAKnB,+BCiDA,OAAelS,EAAAA,IAAU,CAxEF,OAAC,MAAEiG,CAAI,CAwEWkM,EAAC,QAxEVhQ,CAAS,CAAS,GAC1C,CAAEiQ,EAAiBC,EAAoB,CAAGrS,EAAAA,QAAc,CAASiG,EAAKqM,+BAA+B,EAAI,GACzGnH,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAE5BmH,EAAavS,EAAAA,WAAiB,CAAC,CAACwS,EAAiBC,EAAsBC,KAC3E,GAAIA,EAAcN,EAChB,OAGFC,EAAmBK,GACnB,GALmC,CAK7BC,EAAW7G,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,UAAW,CAAExF,WAAY,CAAEV,KAAMK,EAAKL,IAAI,CAAG,GAC7EuF,EAAYU,YAAY,CAAC8G,EAAU,IACjC,GAAK5G,CAAD,CAGJ,MAAO,CACL,CAJa,EAIVA,CAAQ,CACXoE,aAAcqC,EACdI,cAAeH,EACfH,gCAAiCI,CACnC,CACF,EACF,EAAG,CAAEzM,EAAKL,IAAI,CAAEwM,EAAiBjH,EAAa,EAExC0H,EAAmE7S,EAAAA,WAAiB,CAAC,IACzFuS,EAAWrG,EAAQsG,OAAO,CAAEtG,EAAQ0G,aAAa,CAAE1G,EAAQT,YAAY,CACzE,EAAG,CAAE8G,EAAY,EAEXO,EAAkF9S,EAAAA,WAAiB,CAAC,IACxGuS,EAAWrG,EAAQiE,YAAY,CAAEjE,EAAQ0G,aAAa,CAAE1G,EAAQT,YAAY,CAC9E,EAAG,CAAE8G,EAAY,EAEXpG,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,aAAuC,OAAzBpG,EAAKL,IAAI,CAACC,WAAW,IAC1C2G,WAAY,CAACvG,EAAKkK,YAAY,GAahC,MAXA1D,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,UACPC,QAASkG,CACX,GACApG,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,uBACPC,QAASmG,CACX,GAGE,iCACE,UAACf,GAAAA,EAAqB,EACpBH,KAAO,GAAyB,OAArBtH,GAAAA,CAAaA,CAACC,KAAK,CAAE,YAChCpI,UAAYA,WACb,YAGD,WAAC4P,GAAAA,EAAqB,EAACgB,UAAU,SAASC,SAAS,mBACjD,UAACC,GAAAA,CAAeA,CAAAA,CAACC,QAAU,EAAIlQ,GAAK,EAAIb,UAAYA,IACpD,UAACgR,GAAAA,CAAaA,CAAAA,CACZ9O,MAAQ4B,EAAKkK,YAAY,EAAI,IAC7BsC,aAAexM,EAAK2M,aAAa,CACjCrE,SAAWjD,OAAOlL,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACC,QAAQ,EAChDD,SAAWhE,GAAAA,CAAaA,CAACC,KAAK,CAC9B6I,YAAc,EACdC,SAAW,EACXL,SAAS,OACT7Q,UAAYA,SAKtB,GClCA,GAAenC,EAAAA,IAAU,CA1CM,OAAC,MAAEiG,CAAI,SA0CWqN,EA1CTnR,CAAS,WAAEoR,CAAS,CAAS,GAC7DC,EAAevN,EAAKvE,MAAM,CAAG,EAC7B,CAAE+R,EAAWC,EAAc,CAAG1T,EAAAA,QAAc,CAAC,IAG7C4R,EAAqB,YAAd2B,EACX,oCACA,iBAAsDC,MAAAA,CAApCA,EAAe,IAAM,GAAI,YAAqC,OAA1BA,EAAe,KAAO,GAAI,0BAElF,MACE,iCACE,UAACzB,GAAAA,EAAqB,EACpBH,KAAOA,EACPzP,UAAYA,EACZsR,UAAYA,WAVS,CAYnBE,aAZ+B,eAAiB,iBAA2C,OAAzBH,EAAe,IAAM,MAc3F,UAACzB,GAAAA,EAA+B,EAC9B6B,eAAiB,GACjBC,yBAA2BH,EAC3B7P,OAAS,EACTiQ,KAAK,iBAEH7N,EAAKhH,GAAG,CAAEK,GACV,UAAC0S,GAAAA,EAAaA,CAAAA,CAEZzL,QAAS,CACPX,KAAMtG,EAAKiH,OAAO,CAClBwN,SAAU,CAAEC,OAAQ1U,EAAK2U,uBAAuB,EAChDpR,KAAMvD,EAAKuD,IAAI,CACfqR,aAAa,CACf,EACA/R,UAAYA,EACZkH,MAAM,KARA/J,EAAKiH,OAAO,OAc9B,mBCoBA,OAAevG,EAAAA,IAAU,CA7DD,OAAC,MAAEiG,CAAI,EA6DWkO,EAAC,OA7DVhS,CAAS,CAAS,UACjD,EAASiS,KAAK,CAEV,iCACE,UAACrC,GAAAA,EAAqB,EACpBH,KAAK,wBACLzP,UAAYA,WACb,eAGD,UAAC4P,GAAAA,EAAqB,WACpB,UAACsC,GAAAA,EAAWA,CAAAA,CACVD,MAAQnO,EAAKmO,KAAK,CAClBjS,UAAYA,EACZkH,MAAM,IACNiL,MAAM,WAOZrO,EAAKiO,WAAW,EAAIjO,EAAKpD,IAAI,CAE7B,iCACE,UAACkP,GAAAA,EAAqB,EACpBH,KAAK,oDACLzP,UAAYA,WACb,kBAGD,UAAC4P,GAAAA,EAAqB,WACpB,UAACvP,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WAClB8D,EAAKpD,IAAI,QAOjBoD,EAAKpD,IAAI,CAET,CAFW,EAEX,8BACE,UAACkP,GAAAA,EAAqB,EACpBH,KAAK,4BACLzP,UAAYA,WACb,mBAGD,UAAC4P,GAAAA,EAAqB,WACpB,UAACvP,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WAClB8D,EAAKpD,IAAI,QAOd,IACT,2CCtEe,SAAS0R,GAAalV,CAAiB,CAAEC,CAAe,EACrE,OAAOD,EAAOE,IAAI,CAACD,EACrB,CCmBA,IAAMkV,GAAuC,CAAE,SAAU,UAAW,WAAY,UAAW,CAE9EC,GAAkB,CAACC,EAAoBC,IAC3CH,GAAmBI,OAAO,CAACF,CAAM,CAAC,EAAE,EAAiBF,GAAmBI,OAAO,CAACD,CAAM,CAAC,EAAE,EAAiB,EAAI,CAAC,EAGlHE,GAAyB,GAAgB,CAACC,EAA4BC,IACtED,EAAMzQ,KAAK,GAAK0Q,EAAM1Q,KAAK,CACtB,CADwB,CAGpB,QAAQ,CAAjB2Q,EACKjE,OAAO+D,EAAMzQ,KAAK,EAAI0M,OAAOgE,EAAM1Q,KAAK,EAAI,CAAC,EAAI,EAGnD0M,OAAO+D,EAAMzQ,KAAK,EAAI0M,OAAOgE,EAAM1Q,KAAK,EAAI,EAAI,CAAC,EAyB7C4Q,GAAa,CACxB,SAvBsB,CAuBZC,EAvB4B,CAACJ,EAA0BC,IACjE,EAAWI,GAAG,EAAKJ,EAAD,GAAU,CAKvBA,CALyB,CAKnBI,GAAG,CAGTL,CAHW,CAGLK,GAAG,CAID,CAJG,OAIK,CAAjBH,EACKF,EAAMK,GAAG,CAACC,EAAE,CAACL,EAAMI,GAAG,EAAI,CAAC,EAAI,EAGjCL,EAAMK,GAAG,CAACC,EAAE,CAACL,EAAMI,GAAG,EAAI,EAAI,CAAC,EAP7B,EAHA,CAAC,EALD,EAsBT,UAJuB,CAIZE,GAJkB,IAAM,EAKnC,WAAYR,GACZ,UAAWA,EACb,EAAE,GAE0B,GAAwB,QAK3CT,KAL4C,OAAEA,CAAK,CAAuB,UACjF,EAAWvR,EAAP,EAAW,CAIf,CAJiB,OAIVuR,EAAAA,EAAMvR,IAAAA,GAANuR,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYvO,WAAW,GAAG/F,QAAQ,CAACwV,GAHjC,CAACA,GAAoBlB,EAAM7N,OAAO,CAACV,WAAW,GAAG/F,QAAQ,CAACwV,EAIrE,EAAE,GAE+B,IAC/B,GAAwB,UAAU,CAA9BrP,EAAKmO,KAAK,CAAC5G,IAAI,CACjB,OAAOvH,EAGT,IAAMwM,EAAexM,EAAKmO,KAAK,CAACxB,aAAa,CAC7C,GAAI,CAACH,EACH,OAAOxM,EAGT,GAJmB,CAIbsI,EAAWwC,OAAO9K,EAAKmO,KAAK,CAAC7F,QAAQ,EAAI,MAC/C,MAAO,CACL,GAAGtI,CAAI,CACPkP,IAAKhW,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC8G,EAAK5B,KAAK,EAAE5E,GAAG,CAACN,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC,IAAMoP,IAAWgH,YAAY,CAACpW,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACsT,GACnF,CACF,EAAE,GAEgC,IAWzB,CAAE0C,IAVGK,OAAOC,MAAM,CAACxP,GACvBhH,GAAG,CAAC,OAAC,OAAE4I,CAAK,CAAE,UAAKA,EAAMzI,MAAM,CAACsW,GAAiBlW,GAAAA,EAAIA,IACrDJ,MAAM,CAACmV,GAAc/U,GAAAA,EAAIA,EAQd8N,EARQiH,EAEViB,OAAOC,MAAM,CAACxP,GACvBhH,GAAG,CAAC,OAAC,OAAE4I,CAAK,CAAE,UAAKA,EAAMnG,MAAM,GAC/BtC,MAAM,CAAC,CAACC,EAAQC,IAASD,EAASC,EAAM,GAIxBqW,WAFAH,OAAOC,MAAM,CAACxP,GAAM2P,IAAI,CAAC,OAAC,YAAED,CAAU,CAAE,UAAKA,IAElC,EAG1BD,GAAkB,CAACrW,EAAmBC,IAA4B,EAAM6V,GAAG,CAAY9V,EAAOE,IAAI,CAACJ,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACG,EAAK6V,GAAG,GAAvC9V,EC3F9EwW,GAAkC,GAAgC,QAGtEC,EAA6BxW,SAF7BwW,EAAM1B,KAAK,CAAC7N,OAAO,GAAKjH,EAAK8U,KAAK,CAAC7N,OAAO,EAC1CuP,EAAMC,QAAQ,GAAKzW,EAAKyW,QAAQ,EAChCD,CAAoB,QAApBA,EAAAA,EAAME,cAAAA,GAANF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBG,EAAAA,IAAE,SAAK3W,EAAAA,EAAK0W,cAAAA,GAAL1W,KAAAA,MAAAA,KAAAA,EAAAA,EAAqB2W,EAAAA,GAGrC,SAASC,GAAe,CAAwB,KAAxB,MAAEtQ,CAAI,SAAEY,CAAO,CAAS,CAAxB,EAC/B2P,EAAahI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,iBAAkB,CAC/C7H,WAAY,MAAEV,CAAK,EACnBwQ,YAAa,CAAE5I,KAAM,QAAS,EAC9B6I,aAAc,CAAE7P,SAASgB,CAAQ5B,GAASY,EAAS8P,gBAAgB,CAAM,CAC3E,GACMC,EAAcpI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,iBAAkB,CAChD7H,WAAY,MAAEV,CAAK,EACnBwQ,YAAa,CAAE5I,KAAM,SAAU,EAC/B6I,aAAc,CAAE7P,SAASgB,CAAQ5B,GAASY,EAAS8P,gBAAgB,CAAM,CAC3E,GACME,EAAerI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,iBAAkB,CACjD7H,WAAY,MAAEV,CAAK,EACnBwQ,YAAa,CAAE5I,KAAM,UAAW,EAChC6I,aAAc,CAAE7P,SAASgB,CAAQ5B,GAASY,EAAS8P,gBAAgB,CAAM,CAC3E,GACMG,EAActI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,iBAAkB,CAChD7H,WAAY,MAAEV,CAAK,EACnBwQ,YAAa,CAAE5I,KAAM,SAAU,EAC/B6I,aAAc,CAAE7P,SAASgB,CAAQ5B,GAASY,EAAS8P,gBAAgB,CAAM,CAC3E,GAEMnL,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAE5BsL,EAAmB1W,EAAAA,WAAiB,CAAC,CAACwN,EAAiBtB,KAC3D,IAAMyG,EAAW7G,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,iBAAkB,CAAExF,WAAY,CAAEV,MAAK,EAAGwQ,YAAa,MAAE5I,CAAK,CAAE,GAEhGrC,EAAYU,YAAY,CAAC8G,EAAU,IACjC,IAAM9K,EAAQkE,SAAAA,KAAAA,EAAAA,EAAUlE,GAAVkE,EAAe,CAAC9M,GAAG,CAAE0X,IACjC,IAAMC,EAAc1K,EAAQ2K,cAAc,CAACC,IAAI,CAACjB,GAAgCc,IAChF,aAAOC,EAAAA,EAAeD,CACxB,KAAM,EAAE,CAEFI,EAAahL,OAAAA,EAHV6K,KAGU7K,EAAAA,EAAUP,UAAVO,MAAUP,EAC3B,EAAE,CACFU,EAAQ2K,cAAc,CAAC7Q,MAAM,CAAC,GAAgB,CAAC6B,EAAM+N,IAAI,CAACC,GAAgCmB,YAE5F,EAOO,CACLnP,CARE,KAQKA,CARM,CAQAoP,MAAM,CAACF,GACpBvL,iBAAkBO,EAASP,gBAAgB,EARpC,CACL3D,MAAOkP,EACPvL,iBAAkB,IACpB,CAOJ,EACF,EAAG,CAAE5F,EAAMuF,EAAa,EAElB+L,EAAsFlX,EAAAA,WAAiB,CAAC,IAC5G0W,EAAiB,SAAUxK,EAC7B,EAAG,CAAEwK,EAAkB,EAEjBS,EAAwFnX,EAAAA,WAAiB,CAAEkM,IAC/GwK,EAAiB,UAAWxK,EAC9B,EAAG,CAAEwK,EAAkB,EAEjBU,EAA0FpX,EAAAA,WAAiB,CAAC,IAChH0W,EAAiB,WAAYxK,EAC/B,EAAG,CAAEwK,EAAkB,EAEjBW,EAAyFrX,EAAAA,WAAiB,CAAC,IAC/G0W,EAAiB,UAAWxK,EAC9B,EAAG,CAAEwK,EAAkB,EAEjBvK,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,aAAmC,OAArBzG,QAAAA,KAAAA,EAAAA,EAAAA,WAAiB,IACtC4G,YAAYhF,CAAQ5B,IAAUuQ,EAAW/T,GAAX+T,cAA4B,EAAII,EAAYnU,iBAAiB,EAAIoU,EAAapU,iBAAAA,CAC9G,GAEAqK,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,gCACPC,QAASuK,CACX,GACAzK,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,iCACPC,QAASwK,CACX,GACA1K,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,kCACPC,QAASyK,CACX,GACA3K,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,iCACPC,QAAS0K,CACX,GAEA,IAAMpR,EAAOjG,EAAAA,OAAa,CAAC,SAGdmW,EACaA,EAGbI,EACaA,EAGbC,EACaA,EAGbC,EACaD,EAfxB,MAAO,CACL,SAAU,CACR3O,MAAOsO,CAAe,QAAfA,EAAAA,EAAWlQ,IAAAA,GAAXkQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBtO,KAAK,CAAC5I,GAAG,CAACqY,GAAiBA,GAAK,EAAE,CAC1D3B,YAAYnO,CAAAA,CAAuB,QAAf2O,EAAAA,EAAWlQ,IAAAA,GAAXkQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiB3K,gBAAAA,CACvC,EACA,UAAW,CACT3D,MAAO0O,CAAgB,QAAhBA,EAAAA,EAAYtQ,IAAI,GAAhBsQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkB1O,KAAK,CAAC5I,GAAG,CAACqY,GAAiBA,GAAK,EAAE,CAC3D3B,YAAYnO,CAAAA,CAAAA,QAAQ+O,EAAAA,EAAYtQ,IAAAA,GAAZsQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkB/K,gBAAAA,CACxC,EACA,WAAY,CACV3D,MAAO2O,CAAAA,QAAAA,EAAAA,EAAavQ,IAAAA,GAAbuQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmB3O,KAAK,CAAC5I,GAAG,CAACqY,GAAiBA,GAAK,EAAE,CAC5D3B,YAAYnO,CAAAA,CAAAA,QAAQgP,EAAAA,EAAavQ,IAAAA,GAAbuQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBhL,gBAAAA,CACzC,EACA,UAAW,CACT3D,MAAO4O,CAAAA,QAAAA,EAAAA,EAAYxQ,IAAAA,GAAZwQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkB5O,KAAK,CAAC5I,GAAG,CAACqY,GAAiBA,GAAK,EAAE,CAC3D3B,YAAYnO,CAAAA,CAAyB,OAAjBgP,GAAAA,EAAavQ,IAAAA,GAAbuQ,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBhL,gBAAAA,CACzC,CACF,CACF,EAAG,CAAEgL,EAAavQ,IAAI,CAAEkQ,EAAWlQ,IAAI,CAAEsQ,EAAYtQ,IAAI,CAAEwQ,EAAYxQ,IAAI,CAAE,EAE7E,MAAO,CACLiI,UAAWiI,EAAWjI,SAAS,EAAIqI,EAAYrI,SAAS,EAAIsI,EAAatI,SAAS,EAAIuI,EAAYvI,SAAS,CAC3GhI,QAASiQ,EAAWjQ,OAAO,EAAIqQ,EAAYrQ,OAAO,EAAIsQ,EAAatQ,OAAO,EAAIuQ,EAAYvQ,OAAO,MACjGD,CACF,CACF,qDCzEA,OAjDgC,OAAC,CAAE3G,MAAI,aAAE+L,CAAW,IAiDrCkM,KAjDuC5G,CAAO,iBAiDvB4G,EAjDyBC,CAAiB,CAAS,GAEjFC,EAAa,UAACC,GAAAA,CAAKA,CAAAA,CAACC,IAAMrY,EAAKsY,OAAO,CAAGC,IAAMvY,EAAKuD,IAAI,CAAGqQ,QAAU,EAAIlQ,GAAKwU,EAAoB,EAAI,EAAIlV,aAAa,MAAMwV,SAAS,WAEtIC,EAAgBP,EACpB,iCACIC,EACAO,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,CAAC1Y,EAAKuD,IAAI,KAGxB,UAACoV,GAAAA,CAAOA,CAAAA,CAAC3T,MAAQ0T,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,CAAC1Y,EAAKuD,IAAI,WAAM4U,IAGvCS,EAAY,CAChBC,QAASX,EAAoB,cAAoB1G,EACjDnO,QAAS,OACTgI,WAAY,SACZ5I,SAAU,KACV2I,WAAY,EACZrH,WAAY,YACZsN,CACF,EAEA,GAAI,CACF,IAAMyH,EAAqB9Y,EAAK+Y,WAAW,CAACC,OAAO,CAjC9B,YAiCiDjN,GAChEkN,EAAe,IAAIC,IAAIJ,GAC7BG,EAAaE,YAAY,CAACC,MAAM,CAAC,aAAc,cAC/CH,EAAaE,YAAY,CAACC,MAAM,CAAC,aAAc,WAC/C,IAAMC,EAASrZ,EAAKqZ,MAAM,CAC1B,MAAyB,UAAlB,OAAOA,EACZ,UAACzV,EAAAA,CAAYA,CAAAA,CACXC,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,aAAcvL,MAAO,CAAEsQ,GAAI0C,EAAQxL,IAAKoL,EAAaK,QAAQ,EAAG,CAAE,GACzF,GAAGV,CAAS,UAEZH,IAGJ,UAACc,GAAAA,CAAYA,CAAAA,CACX1V,KAAOoV,EAAaK,QAAQ,GAC1B,GAAGV,CAAS,UAEZH,GAGR,CAAE,MAAOe,EAAO,CAAC,CAEjB,OAAO,IACT,ECpDMC,GAAoB3Y,EAAAA,CAAMA,CAACI,QAAQ,CAACwY,gBAAgB,CAgE1D,GAxDwB,OAAC,aAAEC,CAAW,CAAE9W,EAwDzB+W,SAxDkC,MAwDnBA,EAAC,KAxDoB7N,CAAW,CAAS,GAC/D,MAAEpF,CAAI,SAAEC,CAAO,CAAEgI,WAAS,CAAE,CAAGgI,GAAe,CAAEtQ,IAAI,MAAPsQ,CAAS+C,EAAAA,KAAAA,EAAAA,EAAarT,IAAI,CAAEY,OAAO,CAA1ByS,MAA4BA,EAAAA,KAAAA,EAAAA,EAAaE,UAAU,GAAvBF,CAEhFG,MAAOC,CAAS,CAAE,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CAC5CjV,MAAO4U,OAAAA,EAAAA,KAAAA,EAAAA,EAAa9I,YAAAA,CAAb8I,EAA6B,IACpC5F,SAAU,EACVD,YAAa,EACbX,YAAY,OAAEwG,EAAAA,KAAAA,EAAAA,EAAarG,aAAbqG,CACd1K,SAAUjD,OAAOlL,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACC,QAAQ,CACjD,GAEM,KAAE4G,CAAG,YAAEQ,CAAU,CAAE,CAAG4D,GAAmBtT,GAGzCuT,EAAWH,EAAU9Z,IAAI,CAAC4V,GAE1BsE,EAAoBzZ,EAAAA,WAAiB,CAAC,KAC1C0Z,GAAAA,EAAiB,CAACA,GAAAA,EAAmB,CAACC,YAAY,CAAE,CAAEC,QAAS,aAAcC,OAAQ,SAAU,EACjG,EAAG,EAAE,EAEDC,EAAkB,KAEtB,GAAIf,GAAkB1O,SAAS,EAAI,QAAC4O,EAAAA,KAAAA,EAAAA,EAAa/E,WAAAA,EAAa,CAC5D,GAAM,WAAE6F,CAAS,CAAE,CAAGhB,GAChBvB,EAAyC,IAArBuC,EAAUrY,MAAM,CAE1CoY,EACE,iCACE,UAACE,GAAAA,CAAaA,CAAAA,CAACC,GAAK,EAAI5X,MAAM,aAC9B,WAAC0B,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAASuP,IAAM,YAC9B,UAAChW,GAAAA,CAAIA,CAAAA,UAAC,eACJ6V,EAAU9a,GAAG,CAAC,GACd,UAACsY,GAAuBA,CAEtBjY,KAAOA,EACP+L,YAAcA,EACdsF,MAJsB4G,EAIZkC,EACVjC,kBAAoBA,GAJdlY,EAAKuD,IAAI,QAW3B,CAEA,MACE,WAACL,EAAAA,CAAQA,CAAAA,CAACG,QAAQ,OAAOgI,WAAW,SAASqI,SAAS,OAAOvQ,SAAW,CAACN,GAAa,CAAE8W,CAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAaE,UAAU,GAAIjL,CAAAA,CAAQ,CAAKgM,IAAM,YACpI,UAAChW,GAAAA,CAAIA,CAAAA,WACD,IAAa+U,OAAD,CAACA,KAAAA,EAAAA,EAAarG,OAAbqG,MAAarG,EAAyB,GAAgB4G,MAAAA,CArC5D7D,EAAa,IAAM,GAqCqC,KAA0B,OAAtB6D,EAAS7P,QAAQ,CAAC,IAA1C,QAE7CmQ,IAGR,ECnEMvZ,GAAUH,EAAAA,CAAMA,CAACI,QAAQ,CAAC2Z,QAAnB5Z,CAA4B,CAEnC6Z,GAAiBzZ,EAAAA,GAAQ,CAAC,CAC9B0Z,QAAS1Z,EAAAA,GAAQ,EACnB,GA0EA,GAAeX,EAAAA,IAAU,CAjEA,QA0C2C2F,KA1C1C,CAAEkE,GAiEeyQ,EAAC,IAjET,SAAE/T,CAAO,CAAS,GAE7CgU,EAAgBxJ,OAAOlH,GAEvBlE,EAAQ6U,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,CACrB7H,SAAU,CAAE,4BAA6B,SAAEpM,CAAQ,EAAG,CACtDkU,QAAS,UACP,GAAI,CAACla,GAAQ8J,SAAS,CACpB,CADsB,MAIxB,IAAMqQ,EAAW,MAAMC,MAAMpa,GAAQqa,cAAc,CAACtC,MAAhB/X,CAAuB,CAAC,YAAagG,IAEzE,OAAON,MADYyU,EAASG,IAAI,EAElC,EACAC,OAAQ,IACN,IAAMC,EAAiBpa,EAAAA,GAAW,CAACyZ,GAAgBM,GAEnD,GAAI,CAACK,EAAeC,OAAO,CACzB,CAD2B,KACrBC,MAAM,2BAGd,OAAOF,EAAeG,MAAM,EAE9BxU,gBAAiB,CAAE2T,QAAS,EAAG,EAC/B7T,QAASjG,GAAQ8J,SAAS,EAAIkQ,EAAgB,CAChD,GAEMY,EAAexV,EAHHpF,KAGc,EAAI,YAAaoF,EAAMmT,KAAK,CAAGnT,EAAMmT,KAAK,CAACsC,OAAO,MAAGtK,EAcrF,GAZA9Q,EAAAA,SAAe,CAAC,KArCC,4BAsCXmb,GACFR,MAAM,QADa3Z,2BAAUA,EAAE,KACkB,CAC/Cqa,OAAQ,OACRC,KAAMC,KAAKC,SAAS,CAAC,CACnBC,SAAU,4BACVtO,IAAK5M,GAAQ8J,SAAS,CAAG9J,GAAQqa,QAArBra,MAAmC,CAAC+X,MAAhB/X,CAAuB,CAAC,YAAagG,QAAWuK,CAClF,EACF,EAEJ,EAAG,CAAEvK,EAAS4U,EAAc,EAExBZ,GAAiB,GAAK,CAACha,GAAQ8J,SAAS,EAAI1E,EAAMO,OAAO,CAA3B3F,CAA+B,EAAW,OAAVoF,GAAAA,EAAMM,IAAAA,GAANN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAY0U,OAAO,EACnF,CADqF,MAC9E,KAGT,IAAMA,EAAUqB,KAAKC,KAAK,CAAChW,EAAMM,IAAI,CAACoU,OAAO,SAE7C,EAAc,EACL,CADQ,IAKf,iCACE,UAACL,GAAAA,CAAaA,CAAAA,CAAC3X,MAAM,YACrB,WAACG,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACkD,EAAMvD,iBAAiB,CAAGO,QAAQ,OAAOgI,WAAW,SAAS1G,UAAY,YAC7F,UAACyT,GAAAA,CAAKA,CAAAA,CAACC,IAAI,4BAA4B7T,EAAE,OAAO6K,EAAE,OAAOkJ,IAAI,iBAC7D,WAACgB,GAAAA,CAAYA,CAAAA,CAAC1V,KAAK,kEAAkEpB,SAAS,eAAK,QAC1FsY,EAAQrJ,cAAc,MAACF,EAAW,CAAE8K,sBAAuB,CAAE,GAAI,yBAKlF,mBCjFA,IAAMC,GAAiD,CACrDC,QAAS,UACTC,KAAM,kBACNC,QAAS,sBACTC,IAAK,2BACLC,WAAY,8BACZC,IAAK,2BACLC,KAAM,iBACNC,OAAQ,iBACRC,MAAO,mBACPC,SAAU,yBACVC,MAAO,kBACPC,YAAa,sBACbC,MAAO,mBACPxd,OAAQ,yBACRyd,OAAQ,oBACRC,SAAU,uBACZ,EAgBA,GAVyB,OAAC,WAAEC,CAAS,CAAS,GACtClJ,EAAOkI,CASAiB,CATW,CAACD,EAAU,QAEnC,EAIO,EAJH,CAIG,CAJI,CAIJ,KAACE,GAAAA,EAAGA,CAAAA,CAACC,YAAY,gBAASrJ,IAHxB,IAIX,gKC4BA,OAAe3T,EAAAA,UAAgB,CA7CL,GAA8CoQ,QAA7C,OA6CuB6M,CA7CrBC,CAAM,CAAE/a,WAAS,SAAEwO,CAAO,MAAE1K,CAAI,CAAS,GAC9D,KAAEkP,CAAG,KAAE7H,CAAG,YAAEqI,CAAU,CAAE,CAAG4D,GAAmBtT,GAC9CkX,EAAkBC,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,CADS7D,OACA,SAE7C8D,EAAS1H,EAAa,IAAM,GAE5B2H,EAActd,EAAAA,WAAiB,CAAC,OAChCmC,GAAc+a,CAAAA,GAAQ,CAI1BxD,GAAAA,EAJiB,CAICA,GAAAA,EAAmB,CAAC6D,WAAW,CAAE,CAAEC,KAAM,iBAAkB,GAC7E7M,IACF,EAAG,CAAExO,EAAW+a,EAAQvM,EAAS,EAEjC,MACE,WAACjO,EAAAA,EAAGA,CAAAA,CAACuF,SAAS,qBACZ,WAACwV,GAAAA,CAAMA,CAAAA,CACLrN,IAAMA,EACNsN,KAAK,KACLvF,QAAQ,UACR6E,YAAY,OACZrM,QAAU2M,EACVK,SAAWT,EACXU,aAAW,yBAEX,UAAChb,EAAAA,CAAOA,CAAAA,CAACC,KAAK,SAASqQ,QAAU,EAAIlQ,GAAK,IAC1C,WAAC0K,GAAAA,CAAMA,CAAClE,IAAI,EAACnG,WAAa,cAAQga,EAAU/P,KAC5C,WAACI,GAAAA,CAAMA,CAAClE,IAAI,EACVlG,WAAW,MACXjB,MAAM,iBACNgB,WAAa,IACbc,KAAM,CAAEmD,KAAM,sBAAuBK,GAAI,OAAQ,EACjDmQ,SAAS,SACT+F,aAAa,qBAEXC,GAAAA,EAAKA,CAAE,IAAGT,EAAQ,IAAGlI,EAAIxL,QAAQ,CAAC,GAAI,OAE1C,UAAC/G,EAAAA,CAAOA,CAAAA,CAACC,KAAK,mBAAmBkb,UAAYb,EAAS,gBAAkB,iBAAmBc,mBAAmB,SAAS9K,QAAU,EAAIxL,GAAK,OAE1IvF,GAAa,CAAC+a,GAAU,UAAC1a,EAAAA,CAAQA,CAAAA,CAACmM,EAAE,OAAO7K,EAAE,OAAOmE,SAAS,WAAWO,IAAM,EAAIyV,KAAO,EAAIC,QAAUf,EAAkB7a,aAAa,WAG9I,mEC8CA,OAAetC,EAAAA,IAAU,CAACme,OA3FD,MAAElY,CAAI,CAAS,GAEhCmY,EAAY,CAAC,KACjB,OAAQnY,EAAKmO,KAAK,CAAC5G,IAAI,EACrB,IAAK,SAAU,CACb,IAAM6Q,EAAgBtN,OAAO9K,EAAKmO,KAAK,CAAC7F,QAAQ,GAAK,GAC/CoF,EAAO,GAA+E1N,MAAAA,CAA3E9G,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC8G,EAAK5B,KAAK,EAAEia,SAAS,CAAC,IAAMD,GAAelP,EAAE,CAAC,GAAGxF,QAAQ,GAAI,KAA6B,OAAzB1D,EAAKmO,KAAK,CAACmK,MAAM,EAAI,IAEjH,MACE,iCACE,UAACC,GAAAA,CAAcA,CAAAA,CAACna,MAAQsP,IACtB1N,EAAKmO,KAAK,CAACxB,aAAa,EAAI,WAAClF,GAAAA,CAAMA,CAAClE,IAAI,EAAC9B,GAAK,YAAI,IAAGqJ,OAAO9K,EAAKmO,KAAK,CAACxB,aAAa,EAAE5B,cAAc,QAG5G,CACA,IAAK,UAAW,CACd,IAAM2C,EAAO,GAA0C1N,MAAAA,CAAtC9G,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC8G,EAAK5B,KAAK,EAAEsF,QAAQ,GAAI,KAA6B,OAAzB1D,EAAKmO,KAAK,CAACmK,MAAM,EAAI,IAC5E,MAAO,UAACC,GAAAA,CAAcA,CAAAA,CAACna,MAAQsP,GACjC,CACA,IAAK,WACH,MACE,iCACE,WAACjG,GAAAA,CAAMA,CAAClE,IAAI,EAACqU,aAAa,WAAW/F,SAAS,SAAS9U,GAAK,YAAI,IAC3DiD,EAAK8P,QAAQ,EAAI,KAEtB,UAACvM,OAAAA,UACGrK,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC8G,EAAK5B,KAAK,EAAEsF,QAAQ,OAKxC,KAAK,UACH,MACE,iCACsB,OAAlB1D,EAAK8P,QAAQ,EACb,WAACrI,GAAAA,CAAMA,CAAClE,IAAI,EAACqU,aAAa,WAAW/F,SAAS,SAAS9U,GAAK,YAAI,IAC3DiD,EAAK8P,QAAQ,EAAI,KAGP,OAAf9P,EAAK5B,KAAK,EACV,UAACmF,OAAAA,UACGvD,EAAKmO,KAAK,CAAC7F,QAAQ,CACnB+K,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CAAEjV,MAAO4B,EAAK5B,KAAK,CAAEkK,SAAUtI,EAAKmO,KAAK,CAAC7F,QAAQ,CAAE8E,SAAU,CAAE,GAAGoL,QAAQ,CAC5Ftf,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC8G,EAAK5B,KAAK,EAAEsF,QAAQ,OAO5C,EACF,IAEMwD,EAAM8D,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,gBAAiBvL,MAAO,CAAEC,KAAMK,EAAKmO,KAAK,CAAC7N,OAAO,CAAG,GAEnF,MACE,WAACrD,EAAAA,CAAYA,CAAAA,CACXrB,GAAK,EACLC,GAAG,OACHa,QAAQ,OACR+b,QAAQ,SACR7a,OAAS,EACT8a,YAAY,UACZC,kBAAkB,MAClBC,OAAQ,CACNX,QAASd,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,UAAW,WACxC,EACA/a,MAAM,QACNN,SAAS,KACToB,KAAOgK,YAEP,WAACpJ,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS7G,EAAE,OAAOgU,SAAS,mBAC1C,UAACzD,GAAAA,EAAWA,CAAAA,CACVD,MAAQnO,EAAKmO,KAAK,CAClB0K,QAAQ,IACRxK,MAAM,IACNrC,MAAM,IACN5O,WAAa,IACbL,GAAK,IAELiD,EAAKkP,GAAG,EACR,UAACqJ,GAAAA,CAAcA,CAAAA,CAACna,MAAQ,IAA2B,OAAtB4B,EAAKkP,GAAG,CAACxL,QAAQ,CAAC,IAAQtG,WAAa,IAAM0b,KAAK,QAAQrX,GAAG,OAAOsX,UAAU,aAG/G,UAACjb,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS3G,eAAe,gBAAgBF,EAAE,OAAOR,WAAW,kBACzE8a,MAIV,GCVA,GAAepe,EAAAA,IAAU,CAvED,OAAC,SAuEiBif,EAvEfC,CAAS,CAAEC,aAAW,YAAEC,CAAU,cAAExX,CAAY,eAAEyX,CAAa,aAAEC,CAAW,YAAEhK,CAAU,CAAS,GACpHiK,EAAkBnC,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,iBAAkB,kBAEtDoC,EAAoBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAACjK,OAAOC,MAAM,CAAC7N,GAAe,OAAC,OAAEC,CAAK,CAAE,UAAKA,EAAMnG,MAAM,GAAI,EAE5F,MACE,iCACE,WAACge,GAAAA,CAAUA,CAAAA,CAAChC,KAAK,KAAKnO,GAAK,YACzB,UAACoQ,GAAAA,CAAgBA,CAAAA,UACf,UAAC/c,EAAAA,CAAOA,CAAAA,CAACC,KAAK,SAASqQ,QAAU,EAAI7Q,MAAQkd,MAE/C,UAACK,GAAAA,CAAKA,CAAAA,CACJC,mBAAmB,OACnBpD,YAAY,uBACZ/U,GAAG,MACH3C,SAAWsa,EACXnB,QAAQ,iBAGZ,UAACna,EAAAA,CAAIA,CAAAA,CAAC2a,QAAQ,SAAS7a,OAAS,WAC5B2R,OAAOsK,OAAO,CAAClY,GAAcoN,IAAI,CAACP,IAAiBxV,GAAG,CAAC,OAANwV,CAASsL,EAAWC,EAAW,GAChF,GAA+B,GAAG,CAA9BA,EAAUnY,KAAK,CAACnG,MAAM,CACxB,OAAO,KAIT,IAAMue,EACJ,gBAAwC,SAAhBd,GACd,eAA4B,SAAfC,GACtB5R,cAAmC,SAAd0R,EACpB,gBACA,iBACEgB,EAAsB,CAAC,KAC3B,OAAQ1S,GACN,IAAK,WACH,OAAO2R,CACT,KAAK,SACH,OAAOD,CACT,SACE,MAAO,MACX,EACF,IACMiB,EACJ,eAAuBH,EAAUnY,KAAK,CAAC+N,IAAI,CAACtW,GAAQA,EAAK+E,KAAK,GAC9DmJ,gBACCA,cAAqBwS,EAAUnY,KAAK,CAAC+N,IAAI,CAAC,OAAC,KAAET,CAAG,CAAE,UAAKA,IACpDiL,EAAYJ,EAAUrK,UAAU,CAAG,IAAM,GAE/C,MACE,WAACjT,EAAAA,EAAGA,CAAAA,WACF,WAACqB,EAAAA,CAAIA,CAAAA,CAACC,eAAe,0BACnB,WAACE,GAAAA,CAAIA,CAAAA,CAACqL,GAAK,EAAIlN,MAAM,WAAWgB,WAAa,IAAMtB,SAAS,eACxDse,CAAAA,EAAAA,GAAAA,EAAAA,CAAgBA,CAAC7S,GAAO,YAAW4S,EAAaJ,EAAUnY,KAAK,CAACnG,MAAM,CAAE,OAE1Eye,GACA,UAACpS,GAAAA,CAAIA,CAAAA,CAACuS,YA9BDP,CA8BavS,CAAOmD,QAAU2O,EAAc1B,aAAa,QAAiC,OAAxByC,CAAAA,EAAAA,GAAAA,EAAAA,CAAgBA,CAAC7S,GAAO,oBAC7F,UAAC5K,EAAAA,CAAOA,CAAAA,CAACC,KAAK,cAAcqQ,QAAU,EAAI6K,UAAYkC,EAAiBjC,mBAAmB,gBAI9FgC,EAAUnY,KAAK,CAACmN,IAAI,CAACC,EAAU,CAACzH,EAAK,CAAC0S,IAAgBjhB,GAAG,CAAEgH,GAC3D,UAACkY,GAAeA,CAA4ClY,KAAOA,GAA5CA,EAAKmO,KAAK,CAAC7N,OAAO,CAAGN,EAAK8P,QAAQ,MAZlDvI,CAef,MAEAhG,CAAQ8N,GAAe,CAACkK,GAAqB,UAACtb,GAAAA,CAAIA,CAAAA,CAACnC,SAAS,cAAK,kCAGzE,mBCrFe,SAASwe,GAAeta,CAAmB,EACxD,GAAM,CAAEqP,EAAYkL,EAAe,CAAGxgB,EAAAA,QAAc,CAAC,IAC/C,CAAEmf,EAAasB,EAAgB,CAAGzgB,EAAAA,QAAc,CAAO,QACvD,CAAEof,EAAYsB,EAAe,CAAG1gB,EAAAA,QAAc,CAAO,QACrD,CAAEkf,EAAWyB,EAAc,CAAG3gB,EAAAA,QAAc,CAAO,QAEnDqf,EAAgBrf,EAAAA,WAAiB,CAAC,IACtCwgB,EAAc9T,EAAMkU,MAAM,CAACvc,KAAK,CAClC,EAAG,EAAE,EAECib,EAActf,EAAAA,WAAiB,CAAC,IACpC,IAAM+f,EAAY,EAAOc,aAAa,CAAuBC,YAAY,CAAC,aACxD,YAAY,CAA1Bf,GACFU,EAAe,GAA6B,SAAdM,EAAuB,MAAQ,QAE7C,WAAW,CAAzBhB,GACFW,EAAc,GAA6B,SAAdK,EAAuB,MAAQ,QAE5C,UAAU,CAAxBhB,GACFY,EAAa,GAA6B,SAAdI,EAAuB,MAAQ,OAE/D,EAAG,EAAE,EAECnZ,EAAe5H,EAAAA,OAAa,CAAC,IAC1BghB,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC/a,EAAM,OAAC,OAAE4B,CAAK,CAAE8N,YAAU,CAAE,SAAM,YACjDA,EACA9N,MAAOA,EAAM7B,MAAM,CAACib,GAAa3L,EAAWzP,OAAZob,IAAuB,IACzD,IACC,CAAEhb,EAAMqP,EAAY,EAEvB,MAAO,YACLA,EACA4J,wBACAC,aACAC,gBACAC,cACAC,OACArZ,eACA2B,CACF,CACF,CCdA,OAAe5H,EAAAA,IAAU,CAnBE,OAAC,MAAEiG,CAAI,KAmBWib,EAAC,IAnBV/e,CAAS,CAAS,GAC9C,CAAE+a,QAAM,UAAEiE,CAAQ,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAE7ChiB,EAASkhB,GAAeta,GAE9B,MACE,EAH2Bsa,CAG3B,QAACe,GAAAA,CAAOA,CAAAA,CAACpE,OAASA,EAASkE,QAAUA,EAAUG,UAAU,eAAeC,MAAM,cAC5E,UAACC,GAAAA,CAAcA,CAAAA,UACb,UAACxE,GAAiBA,CAACC,OAASA,EAASvM,QAAUwQ,EAAWlb,KAAO5G,CAA/C4d,CAAsDhX,IAAI,CAAG9D,UAAYA,MAE7F,UAACuf,GAAAA,CAAcA,CAAAA,CAAC5d,EAAE,QAAQgQ,KAAK,QAAQ6N,UAAU,kBAC/C,UAACC,GAAAA,CAAWA,CAAAA,CAAC/f,GAAK,EAAIC,GAAK,EAAI+f,UAAU,eACvC,UAAC5C,GAAeA,CAAG,GAAG5f,CAAM,SAKtC,UAL0B4f,iCCG1B,OAAejf,EAAAA,IAAU,CAjBC,OAAC,MAAEiG,CAAI,IAiBW6b,EAAC,KAjBV3f,CAAS,CAAS,GAC7C,QAAE+a,CAAM,UAAEiE,CAAQ,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAC7ChiB,EAASkhB,GAAeta,GAE9B,MACE,EAH2Bsa,CAG3B,8BACE,UAACtD,GAAiBA,CAACC,OAASA,EAASvM,QAAUwQ,EAAWlb,KAAO5G,CAA/C4d,CAAsDhX,IAAI,CAAG9D,UAAYA,IAC3F,UAAC4f,GAAAA,EAAKA,CAAAA,CAAC7E,OAASA,EAASkE,QAAUA,EAAU1D,KAAK,gBAChD,WAACsE,GAAAA,CAAYA,CAAAA,WACX,UAACC,GAAAA,CAAgBA,CAAAA,CAAAA,GACjB,UAAChD,GAAeA,CAAG,GAAG5f,CAAM,UAKtC,GCsDA,GAAeW,EAAAA,CD3DWif,GC2DD,CA3DL,OAAC,KA2DiBiD,EAAC,EA3DhBvR,CAAO,CAAS,GAC/BrL,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClB4c,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GACtBjX,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAE5BC,EAAc3F,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EACnDyc,EAAqBvW,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,UAAW,CAAExF,WAAY,CAAEV,KAAMyF,CAAY,CAAE,GAEnFiX,EAAmBnX,EAAYoX,YAAY,CAAUF,GAErD,MAAEpc,CAAI,SAAEC,CAAO,WAAEgI,CAAS,CAAE,CAAGgI,GAAe,CAAEtQ,IAAI,CAAE0c,KAATpM,GAASoM,KAAAA,EAAAA,EAAkB1c,IAAI,GAC5E4c,EAAoB1W,CAAAA,EADkCwW,EAClCxW,CAAAA,CAAcA,CAAC,iBAAkB,CAAExF,WAAY,CAAEV,IAAI,OAAE0c,EAAAA,KAAAA,EAAAA,EAAkB1c,IAAI,EAAIwQ,YAA1BkM,CAAyC9U,KAAM,QAAS,CAAE,GACrIiV,EAAmBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,CAAC,CAAE/P,SAAU6P,CAAkB,GAE/DG,EAAwB3iB,EAAAA,WAAiB,CAAC,KAC9C0Z,GAAAA,EAAiB,CAACA,GAAAA,EAAmB,CAAC6D,WAAW,CAAE,CAAEC,KAAM,wBAAyB,SACpF7M,GAAAA,GACF,EAAG,CAAEA,EAAS,EAEd,GAAIzC,EACF,EAJAyC,IAKE,GAFW,EAEX,MAAC5M,EAAAA,CAAIA,CAAAA,CAACE,UAAY,YAChB,UAACzB,EAAAA,CAAQA,CAAAA,CAACmM,EAAI,EAAI7K,EAAE,QAAQxB,aAAa,SACzC,UAACE,EAAAA,CAAQA,CAAAA,CAACmM,EAAI,EAAI7K,EAAI,EAAIxB,aAAa,YAK7C,IAAMsgB,EAAYnD,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAACjK,OAAOC,MAAM,CAACxP,GAAO,OAAC,OAAE4B,CAAK,CAAE,UAAKA,EAAMnG,MAAM,GAAI,SAC5E,GAAe,CAACkhB,EACP,SADkB,CACjBlgB,EAAAA,EAAGA,CAAAA,CAACZ,GAAG,eAAM,MAIrB,WAACiC,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAImD,GAAI,CAAEE,KAAM,EAAGK,GAAI,CAAE,YACvCwa,EACA,UAACL,GAAiBA,CAAC7b,KAAOA,EAAO9D,UAAiC,IAArBsgB,IAC7C,UAACvB,GAAkBA,CAACjb,KAAOA,EAAO9D,UAAiC,IAArBsgB,IAEhD,UAACxK,GAAAA,CAAOA,CAAAA,CAAC3T,MAAM,2BACb,UAAC5B,EAAAA,EAAGA,CAAAA,UACF,UAACmgB,KAAQA,CAAC1f,KAAM,CAAE+N,GAAT2R,MAAmB,kBAAmBld,MAAO,CAAEC,KAAMyF,EAAa8F,IAAK,QAAS,CAAE,EAAG2R,QAAQ,IAACC,cAAc,aACnH,UAACC,GAAAA,CAAUA,CAAAA,CACTpF,aAAW,kBACXzF,QAAQ,UACRuF,KAAK,KACLuF,GAAG,MACHpT,GAAG,MACHqT,KAAO,UAACtgB,EAAAA,CAAOA,CAAAA,CAACC,KAAK,SAASqQ,QAAU,IACxCzD,GAAG,IACHkB,QAAUgS,YAOxB,8BEkPA,OAAe3iB,EAAAA,IAAU,CAhSF,QAmEbiG,EAcAA,EAaCA,EAAuCA,CAkMTkd,CAlMwDld,CAkMvD,CA5JYA,EAiF5Cmd,EAoB0CA,KAzO5B,cAAEC,CAAY,WAAEle,CAAS,CAAS,GAClDG,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAElB8F,EAAc3F,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAEnDwd,EDdO,SAASE,CAAsD,KAA9B,MAAE1d,CAAI,CCcP0d,aDdSD,CAAY,CAAU,CAA9B,EACxC7c,GAAUgB,CAAQ5B,GAAS,CAACyd,EAAajhB,iBAAiB,CAE1DmhB,EAAWpV,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAyC,mBAAoB,CACvF7H,WAAY,MAAEV,CAAK,EACnByQ,aAAc,CACZ7P,QAASA,GAAW,CAAC6c,EAAaxS,cAAc,CAChDnK,gBAAiB8c,EAAAA,CAAgBA,CACjClN,gBAAgB,CAClB,CACF,GAEMmN,EAAWjJ,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAmD,CAC1E7H,SAAU,CAAE,MAAO,mBAAoB,MAAE/M,CAAK,EAAG,CACjD6U,QAAS,UACP,GAAI,CAACiJ,GAAAA,CAAYA,CACf,CADiB,KACX,MAAU,wBAKlB,OAAOC,QAAQC,GAAG,CAAC,CAFHF,GAAAA,CAAYA,CAACG,mBAAmB,CAAC,CAAEtd,QAASX,CAAwB,GAAGke,KAAK,CAAC,IAAM,MAIlG,CACH,EACAhJ,OAAQ,QAGgBiJ,EAFtB,GAAM,CAAEA,EAAS,CAAGrJ,EACpB,MAAO,CACLpK,mBAAqC,QAAjByT,QAAAA,EAAAA,KAAAA,EAAAA,EAASnL,QAAQ,CAAjBmL,CAAiB,GAAjBA,KAAAA,IAAAA,EAAAA,EAAuB,IAC3CxT,sBAAuB,IACvByT,gBAAiB,KACjBxT,kBAAmB,IACrB,CACF,EACA9J,gBAAiB,CAAEud,GAAAA,EAAsBA,CAAE,CAC3Czd,QAASA,IAAY6c,EAAaxS,KAAbwS,SAA2B,EAAIE,EAASrd,OAAAA,EAC7Dge,OAAO,EACP5N,gBAAgB,CAClB,GAEM6N,GAAa3c,EAAQ,CAAC6b,EAAaxS,cAAc,EAAI0S,EAASrd,OAAAA,GAAYud,EAASxd,IAAI,EAAIyd,GAAAA,CAAAA,EAGjG,MAAO,CAFqGH,GAA9FY,EAAaV,EAAiFF,CAG1G,CACA1S,EADGlL,KAAK,QACQwe,CAClB,CACF,ECjCgD,CAC5Cve,KAAMyF,eACNgY,CACF,GAEMe,EAAyBpkB,EAAAA,WAAiB,CAAC,KAC/CoN,OAAOiX,UAAU,CAAC,SAChB,QACAlf,GAAAA,QAAAA,EAAAA,EAAWmf,OAAXnf,GAAAA,KAAAA,IAAAA,GAAAA,EAAoBof,KADgC,SAClB,CAAC,CAAEC,SAAU,QAAS,EAC1D,EAAG,IACL,EAAG,CAAErf,EAAW,EAEVsf,EAAezkB,EAAAA,OAAa,CAAC,IAAO,EACxC4F,KAAMyF,GAAe,GACrB6I,aAAa,EACbwQ,gBAAiB,KACjBtQ,MAAO,KACPuQ,qBAAsB,KACtBC,gBAAiB,KACjBC,0BAA2B,KAC3BvS,gCAAiC,KACjCzP,KAAM,KACN+P,cAAe,KACfzC,aAAc,KACdgJ,YAAY,EACZ2L,qBAAqB,EACrBC,sBAAsB,EACtBhR,SAAUjD,OACVkU,gCAAiC,KACjCC,qBAAsB,KACxB,EAAI,CAAE5Z,EAAa,EAGnB,GAAIgY,EAAand,OAAO,CAAE,CACxB,IAAIgf,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC7B,EAAavK,KAAK,EAMrC,CANwC,KAMjC,UAACqM,GAAAA,CAAcA,CAAAA,CAAAA,GALH9B,EAAand,OAAO,EAAI,WAAYmd,EAAavK,KAAK,EAAkC,MAA9BuK,EAAavK,KAAK,CAAChL,MAAM,EAEpGsX,CAAAA,EAAAA,GAAAA,CAAAA,CAAwBA,CAAC/B,EAK/B,CAEA,IAAMpd,EAAOod,EAAand,OAAO,CAAGue,EAAepB,EAAapd,IAAI,CAEpE,GAAI,CAACA,EACH,IADS,GACF,KAGT,IAAMof,EAAqBpf,EAAKgf,oBAAoB,CAEpD,MACE,iCACI5B,EAAaxS,cAAc,EAAI,UAACyU,GAAAA,CAAyBA,CAAAA,CAACnjB,UAAYkhB,EAAajhB,iBAAiB,CAAGmN,GAAK,IAC9G,WAACgW,GAAAA,CAAIA,CAAAA,CACHthB,UAAY,EACZJ,OAAQ,CAAEyD,KAAM,EAAGK,GAAI,CAAE,EACzB6d,gBAAiB,CAAEle,KAAM,iBAAkBK,GAAI,qBAAsB,EAAGmQ,SAAS,mBAEjF,UAAC1G,GAAwBA,CAACjP,UAAYkhB,EAAajhB,gBAA1BgP,CAA2C,CAAG/F,YAAcA,IAEnFpF,CAAAA,QAAAA,EAAAA,EAAK8N,QAAAA,GAAL9N,KAAAA,MAAAA,KAAAA,EAAAA,EAAegQ,EAAAA,GACf,iCACE,UAAClE,GAAAA,EAAqB,EACpBH,KAAK,mFACN,OAGD,WAACG,GAAAA,EAAqB,YACpB,UAAC7N,GAAAA,CAAIA,CAAAA,UAAG+B,EAAK8N,QAAQ,CAACkC,EAAE,GACxB,UAACwP,GAAAA,CAAeA,CAAAA,CAAC9R,KAAO1N,EAAK8N,QAAQ,CAACkC,EAAE,SAK5ChQ,CAAAA,OAAAA,GAAAA,EAAK8N,QAAAA,GAAL9N,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAeyf,UAAAA,GACf,iCACE,UAAC3T,GAAAA,EAAqB,EACpBH,KAAK,sFACN,UAGD,UAACG,GAAAA,EAAqB,WACpB,UAAC+K,GAAgBA,CAACD,UAAY5W,EAAK8N,QAAQ,CAA1B+I,UAAqC,QAKzD7W,CAAAA,CAAa,QAAbA,EAAAA,EAAK8N,QAAAA,GAAL9N,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAeyf,UAAAA,IAAe,OAASzf,CAAAA,QAAAA,EAAAA,EAAK8N,QAAAA,GAAL9N,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAeyf,UAAU,IAAK,aAAW,EAAMzf,SAAAA,KAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAM8N,QAAQ,GAAd9N,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgB+N,MAAAA,GACvG,iCACE,UAACjC,GAAAA,EAAqB,EACpBH,KAAK,sGACN,qBAGD,UAACG,GAAAA,EAAqB,EAACiB,SAAS,kBAC9B,UAAChB,GAAAA,EAAaA,CAAAA,CACZzL,QAAS,CAAEX,KAAMK,EAAKL,IAAI,EAC1ByD,MAAM,IACN4I,MAAM,WAMd,UAACkC,GAAeA,CAAClO,KAAOA,EAAO9D,UAAYkhB,EAAajhB,iBAAiB,GAEvE6D,EAAKiO,WAAW,EAAIjO,EAAK4e,yBAAyB,EAAKQ,GACvD,iCACE,UAACtT,GAAAA,EAAqB,EACpBH,KAAK,sCACLzP,UAAYkhB,EAAajhB,iBAAiB,UAC3C,YAGD,WAAC2P,GAAAA,EAAqB,YACpB,UAACC,GAAAA,EAAaA,CAAAA,CACZzL,QAAS,CAAEX,KAAMyf,EAAoBtR,SAAU,CAAEC,OAAQ/N,EAAK+e,+BAAgC,CAAE,EAChGW,WAAW,WACXtc,MAAM,MAER,UAACnF,GAAAA,CAAIA,CAAAA,CAACZ,WAAW,eAAM,aACvB,UAACqM,GAAAA,EAAQA,CAAAA,CAAC/J,KAAOK,EAAK4e,yBAAyB,CAAGc,WAAW,WAAWtc,MAAM,IAACiL,QAAS,UAI5FrO,EAAKiO,WAAW,EAAIjO,EAAKye,eAAe,EAAIze,CAAoB,QAApBA,EAAAA,EAAKye,eAAAA,GAALze,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBvE,MAAM,EAAG,GAC3E,UAAC4R,GAAsBA,CACrBrN,KAAOA,EAAKye,eAAe,CAC3BviB,GAFqBmR,OAET+P,EAAajhB,iBAAiB,CAC1CmR,UAAYtN,EAAK2f,UAAU,GAI/B,UAACzT,GAAcA,CAAClM,KAAOA,EAAO9D,UAAYkhB,CAA3BlR,CAAwC/P,iBAAiB,GAEtE6D,EAAKkT,UAAU,EACf,iCACE,UAACpH,GAAAA,EAAqB,EACpBH,KAAK,qDACN,WAGD,UAACG,GAAAA,EAAqB,EAACjQ,GAAKuhB,EAAapd,IAAI,CAAG,OAAI6K,WAChDuS,EAAapd,IAAI,CAAG,UAACic,GAAWA,CAACvR,QAAUyT,IAA6B,OAAxClC,CAAwC,EAACxf,EAAAA,EAAGA,CAAAA,UAAC,WAIlFtC,CAAAA,EAAAA,CAAMA,CAACI,QAAQ,CAACwY,gBAAgB,CAAC3O,SAAS,EAAKpE,EAAK2M,aAAa,EAAI3M,EAAKkT,UAAAA,GAC3E,iCACE,UAACpH,GAAAA,EAAqB,EACpBH,KAAK,uDACLzP,UAAYkhB,EAAajhB,iBAAiB,UAC3C,cAGD,UAAC2P,GAAAA,EAAqB,EAACgB,UAAU,SAASjR,GAAK,WAC7C,UAACoX,GAAeA,CAACD,YAAcoK,EAAapd,IAAI,CAAGoF,YAAcA,EAAclJ,UAAYkhB,EAAajhB,iBAAiB,QAM/H,UAAC2P,GAAAA,EAAqB,EACpBH,KAAK,iDACLzP,UAAYkhB,EAAajhB,iBAAiB,EAAIghB,EAAchhB,iBAAiB,UAC9E,iBAGD,UAAC2P,GAAAA,EAAqB,WAClBsR,EAAapd,IAAI,CACjB,UAACwK,GAAkBA,CACjBC,KAAK,iBADYD,IAEjB9K,MAAQyd,EACR7c,QAAUN,EAAKL,IAAI,CACnB+K,QAAUyT,EACVxT,sBAAwByS,EAAajhB,iBAAiB,CACtDyO,eAAiBwS,EAAaxS,cAAc,GAG9C,IAGF5K,EAAK6e,mBAAmB,EACxB,iCACE,UAAC/S,GAAAA,EAAqB,EACpBH,KAAK,2CACLzP,UAAYkhB,EAAajhB,iBAAiB,EAAIghB,EAAchhB,iBAAiB,UAC9E,cAGD,UAAC2P,GAAAA,EAAqB,WAClBsR,EAAapd,IAAI,CACjB,UAACwK,GAAkBA,CACjBC,KAAK,iBADYD,OAEjB9K,MAAQyd,EACR7c,QAAUN,EAAKL,IAAI,CACnB+K,QAAUyT,EACVxT,sBAAwByS,EAAajhB,iBAAiB,CACtDyO,eAAiBwS,EAAaxS,cAAc,GAG9C,OAKNuS,CAAAA,QAAAA,EAAAA,EAAcnd,IAAAA,GAAdmd,KAAAA,MAAAA,KAAAA,EAAAA,EAAoBY,eAAAA,GACpB,iCACE,UAACjS,GAAAA,EAAqB,EACpBH,KAAK,0BACLzP,UAAYkhB,EAAajhB,iBAAiB,EAAIghB,EAAchhB,iBAAiB,UAC9E,aAGD,WAAC2P,GAAAA,EAAqB,YAClBsR,EAAapd,IAAI,CACjB,UAACwK,GAAkBA,CACjBC,KAAK,iBADYD,CAEjB9K,MAAQyd,EACR7c,QAAUN,EAAKL,IAAI,CACnB+K,QAAUyT,EACVxT,sBAAwByS,EAAajhB,iBAAiB,CACtDyO,eAAiBwS,EAAaxS,cAAc,GAG9C,EACA,CAACuS,EAAchhB,iBAAiB,GAAsB,QAAlBghB,EAAAA,EAAcnd,IAAI,GAAlBmd,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoBY,eAAAA,GACxD,UAAC1J,GAAgBA,CACfzQ,QAAUuZ,EAAcnd,IAAI,CAAC+d,KADd1J,UAC6B,CAC5C/T,QAAUN,EAAKL,IAAI,SAO3BK,EAAK8e,oBAAoB,EACzB,iCACE,UAAChT,GAAAA,EAAqB,EACpBH,KAAO,oBAAmEiU,MAAAA,CAA9C1lB,CAAAA,EAAAA,EAAAA,CAAAA,CAA8BA,GAAI,aAAwC,OAA5B0lB,CAAAA,EAAAA,GAAAA,CAAAA,CAAwBA,IAClG1jB,UAAYkhB,EAAajhB,iBAAiB,EAAIghB,EAAchhB,iBAAiB,UAE3E,UAA6C,OAAlCjC,CAAAA,EAAAA,EAAAA,CAAAA,CAA8BA,MAE7C,UAAC4R,GAAAA,EAAqB,WAClBsR,EAAapd,IAAI,CACjB,UAACwK,GAAkBA,CACjBC,KAAK,iBADYD,GAEjB9K,MAAQyd,EACR7c,QAAUN,EAAKL,IAAI,CACnB+K,QAAUyT,EACVxT,sBAAwByS,EAAajhB,iBAAiB,CACtDyO,eAAiBwS,EAAaxS,cAAc,GAG9C,OAKN5K,EAAKqM,+BAA+B,EACpC,iCACE,UAACP,GAAAA,EAAqB,EACpBH,KAAK,gDACLzP,UAAYkhB,EAAajhB,iBAAiB,UAC3C,wBAGD,UAAC2P,GAAAA,EAAqB,WACpB,UAAC5I,GAAAA,EAAWA,CAAAA,CACVC,OAASnD,EAAKqM,+BAA+B,CAC7CnQ,UAAYkhB,EAAajhB,iBAAiB,aAQ1D,mBClRA,OA7BqC,OAAC,CAAE9C,MAAI,WAAE6C,CAAS,CAAS,GACxD,UAAEsc,CAAQ,CAAE,CAAGnF,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CAAEjV,MAAO/E,EAAKwmB,MAAM,CAAEvX,EA4BnBwX,EAAC,KA5B4BzmB,EAAK8U,KAAK,CAAC7F,QAAS,GAC1F,MACE,WAAC5M,EAAAA,EAAEA,CAAAA,WACD,UAACC,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,WAACjiB,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAASuP,IAAM,YAC9B,UAAC/Q,GAAAA,EAAWA,CAAAA,CAACC,OAAS9J,EAAKmM,YAAY,CAAGtJ,UAAYA,EAAYkH,MAAM,IAAChG,WAAa,MACtF,UAACb,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WACpB,UAAC+B,GAAAA,CAAIA,CAAAA,CAAC7B,MAAM,iBAAiBgB,WAAa,aAAQ,WAA+B,OAAnB/D,EAAK2mB,YAAY,MAEjF,UAACjkB,EAAAA,CAAkBA,CAAAA,CAACC,UAAY3C,EAAKsQ,eAAe,CAAGzN,UAAYA,EAAY+jB,UAAU,iBAAiB7iB,WAAa,WAG3H,UAACzB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAACG,GAAAA,CAAkBA,CAAAA,CAAC3Y,KAAOlO,EAAKkO,IAAI,CAAGrL,UAAYA,MAErD,UAACP,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAAChU,GAAAA,EAAaA,CAAAA,CAACzL,QAAUjH,EAAK8mB,kBAAkB,CAAGjkB,UAAYA,EAAYwjB,WAAW,eAExF,UAAC/jB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,SAASnb,SAAS,aAClC,WAACrI,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,OAAOgI,WAAW,SAASuP,IAAM,EAAIlW,eAAe,qBAC1Fya,EACF,UAACpK,GAAAA,EAAWA,CAAAA,CAACD,MAAQ9U,EAAK8U,KAAK,CAAGjS,UAAYA,EAAYkkB,UAAU,IAACtjB,MAAM,OAAOuR,MAAM,aAKlG,ECJA,GA1BiC,OAAC,OAAEzM,CAAK,WAAE1F,CAAS,KAAEqG,CAAG,CAAS,GAChE,CAyBa8d,KAxBX,WAAChe,EAAAA,CAAKA,CAAAA,CAACyW,GAwB4BuH,EAxBvB,SAASzZ,MAAO,CAAEC,YAAa,MAAO,YAChD,UAACC,EAAAA,CAAKA,CAAAA,CAACvE,IAAMA,WACX,WAAC7G,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,UAAC,UACJ,UAACA,EAAAA,EAAEA,CAAAA,UAAC,gBACJ,UAACA,EAAAA,EAAEA,CAAAA,UAAC,uBACJ,UAACA,EAAAA,EAAEA,CAAAA,CAACoC,SAAS,aAAC,eAGlB,UAACnC,EAAAA,CAAKA,CAAAA,UACFb,EAAM5I,GAAG,CAAC,CAACK,EAAMmO,IAEf,UAACsY,GAA4BA,CAE3BzmB,KAAOA,EACP6C,UAAYA,GAFN7C,EAAKinB,UAAU,CAAGjnB,EAAKkO,EADFuY,EACM,CAAGzmB,EAAKwc,OAAO,CAAClW,IAAI,CAAGtG,EAAK8mB,kBAAkB,CAACxgB,IAAI,EAAIzD,CAAAA,CAAYmJ,OAAOmC,GAAS,GAAC,OASnI,8BCmCA,OAxDoC,OAAC,MAAEnO,CAAI,WAAE6C,CAAS,CAAS,GACvD,UAAEsc,CAuDK+H,CAvDK,CAAGlN,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CAAEjV,MAAO/E,EAAKwmB,MAAM,CAAEzS,EAuDnB,OAvD6B,EAAG9E,SAAUjP,EAAK8U,KAAK,CAAC7F,QAAQ,GACtG,MACE,WAACkY,GAAAA,CAAkBA,CAACC,SAAS,EAACC,oBAAoB,uBAEhD,UAACF,GAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,UAClD,UAACskB,GAAAA,CAAkBA,CAACI,KAAK,WACvB,UAAC1d,GAAAA,EAAWA,CAAAA,CACVC,OAAS2H,OAAOzR,EAAKmM,YAAY,EACjCtJ,UAAYA,EACZkH,MAAM,QAIV,UAACod,GAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,YAClD,UAACskB,GAAAA,CAAkBA,CAACI,KAAK,WACvB,UAACrkB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WAClB7C,EAAK2mB,YAAY,KAIvB,UAACQ,GAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,QAClD,UAACskB,GAAAA,CAAkBA,CAACI,KAAK,WACvB,UAAC7kB,EAAAA,CAAkBA,CAAAA,CACjBC,UAAY3C,EAAKsQ,eAAe,CAChCzN,UAAYA,EACZE,MAAM,iBACNM,QAAQ,mBAIZ,UAAC8jB,GAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,gBAClD,UAACskB,GAAAA,CAAkBA,CAACI,KAAK,WACvB,UAACV,GAAAA,CAAkBA,CAAAA,CAAC3Y,KAAOlO,EAAKkO,IAAI,CAAGrL,UAAYA,MAGrD,UAACskB,GAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,uBAClD,UAACskB,GAAAA,CAAkBA,CAACI,KAAK,WACvB,UAAC7U,GAAAA,EAAaA,CAAAA,CACZzL,QAAUjH,EAAK8mB,kBAAkB,CACjCjkB,UAAYA,MAIhB,UAACskB,GAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,UAClD,UAACskB,GAAAA,CAAkBA,CAACI,KAAK,WACvB,WAACrkB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,OAAOgI,WAAW,SAASuP,IAAM,YACvEuE,EACF,UAACpK,GAAAA,EAAWA,CAAAA,CAACD,MAAQ9U,EAAK8U,KAAK,CAAGjS,UAAYA,EAAYkkB,UAAU,IAACtjB,MAAM,OAAOuR,MAAM,aAMlG,ECuBA,GAxE4B,QA4BVwS,EAoCJA,KAhEe,WAAE3hB,CAAS,CAwEzB4hB,aAxE2B1hB,GAAe,CAAI,EAwE3B0hB,EAAC,YAxE4BtgB,GAAiB,CAAI,CAAS,GACrFnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExBG,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAE5CkhB,EAAe1gB,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACrCC,aAAc,wBACdC,WAAY,MACVV,CACF,YACAT,EACAL,QAAS,CACP0B,QAASC,IAAkBe,CAAQ5B,EACnCc,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAA0BqgB,EAAAA,EAAiBA,CAAE,GAAI,CAAExb,iBAAkB,CACpGsa,OAAQ,IACRpa,YAAa,GACb8B,KAAM,QACNyZ,gCAAiC,IACjCxb,aAAc,QAChB,CAAE,EACJ,CACF,GAEA,GAAI,CAACjG,GAAa,CAACH,EACjB,OAAO,KADwB,IAI3B2C,EAAU8e,CAAAA,QAAAA,EAAAA,EAAa7gB,IAAAA,GAAb6gB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjf,KAAAA,EACjC,iCACE,UAACK,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WACrB,UAACke,GAAwBA,CACvBze,MAAQif,EAAa7gB,IAAI,CAAC4B,KAAK,CAC/BW,IAAMse,EAAa3gB,QAFImgB,EAEM,CAACtZ,SAAS,CAAGC,EAAAA,EAAyBA,CAAG,EACtE9K,UAAY2kB,EAAa1kB,iBAAiB,KAG9C,UAACiG,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,KAAM,WACnB0e,EAAa7gB,IAAI,CAAC4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IACnC,UAAC+Y,GAA2BA,CAE1BlnB,KAAOA,EACP6C,UAAY2kB,EAAa1kB,iBAHCokB,EACpBlnB,EAAKinB,UAAU,CAAGjnB,EAAKkO,IAAI,CAAGlO,EAAKwc,OAAO,CAAClW,IAAI,CAAGtG,EAAK8mB,kBAAkB,CAACxgB,IAAI,EAAIkhB,CAAAA,CAAa1kB,iBAAiB,CAAGkJ,OAAOmC,GAAS,GAAC,QAOhJ,KAEEvG,EAAY4f,EAAa3gB,UAAU,CAAC6G,SAAS,CACjD,WAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,YACf,UAAC8f,GAAAA,CAAoBA,CAAAA,CACnB3gB,QAAUX,EACVzD,UAAY2kB,EAAa3gB,UAAU,CAAChE,SAAS,CAC7CglB,OAAQ,CAAE3Z,KAAM,eAAgB,EAChC9F,GAAI,CAAEC,GAAI,MAAO,IAEnB,UAACF,EAAAA,CAAUA,CAAAA,CAACC,GAAI,CAAEJ,KAAM,EAAGK,GAAI,CAAE,EAAK,GAAGmf,EAAa3gB,UAAU,MAEhE,KAEJ,MACE,UAACyC,EAAAA,CAAeA,CAAAA,CACd1C,QAAU4gB,EAAa5gB,OAAO,CAC9B2B,KAAK,SAAGif,EAAAA,EAAa7gB,IAAAA,GAAb6gB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjf,KAAK,CAChCgB,UAAU,+CACVb,QAAUA,EACVd,UAAYA,GAGlB,yFCDA,OAAelH,EAAAA,IAAU,CA1EM,QAcXonB,KAdY,MAC9B5Z,CAAI,CACJ6Z,EAwE+CC,EAAC,EAxE5C,IACJC,CAAE,OACFljB,CAAK,CACL2W,SAAO,OACPlC,CAAK,CACL0O,iBAAkBC,CAAe,CACjC/X,iBAAkBgY,CAAO,CACzBjc,aAAciH,CAAW,WACzBzQ,CAAS,gBACTyB,CAAc,WACdvB,CAAS,CACH,GACAwlB,EAAAA,QAAYP,EAAAA,GAAAA,CAAkBA,CAACtQ,IAAI,CAAC,OAAC,IAAEb,CAAE,CAAE,UAAKA,IAAOzI,MAA3C4Z,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkD1Y,KAAK,CAGzE,MACE,WAAC/M,EAAAA,EAAEA,CAAAA,CAACgJ,WAAW,gBACb,UAAC/I,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,WAACjiB,EAAAA,CAAIA,CAAAA,CAACF,OAAS,EAAImP,SAAS,iBAC1B,UAACrD,GAAAA,EAAQA,CAAAA,CACP/J,KAAO8hB,EACPvlB,UAAYA,EACZkH,MAAM,IACNsc,WAAW,kBAEb,UAAC3jB,EAAAA,CAAkBA,CAAAA,CACjBC,UAAYA,EACZqH,eAAe,IACfnH,UAAYA,EACZE,MAAM,iBACNgB,WAAW,MACXtB,SAAS,YAIf,UAACH,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,WAACjiB,EAAAA,CAAIA,CAAAA,CAACF,OAAS,EAAImP,SAAS,iBACxB2U,GACA,UAACjlB,EAAAA,EAAGA,CAAAA,CAACoB,EAAE,QAAQnB,QAAQ,wBACrB,UAACoa,GAAAA,CAAGA,CAAAA,CAACC,YAAY,OAAOha,GAAK,EAAIb,UAAYA,WAAcwlB,MAG/D,UAACC,GAAAA,CAAQA,CAAAA,CAAC9Z,OAASkN,EAAU,KAAO,QAAU6M,UAAY/O,EAAQ3W,UAAYA,SAGlF,UAACP,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAAC7c,GAAAA,EAAWA,CAAAA,CACVhH,UAAYA,EACZiH,OAASsJ,EACTrJ,MAAM,IACNtH,SAAS,KACT2I,WAAa,EACbrH,WAAa,QAGjB,UAACzB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAAC8B,GAAAA,CAAaA,CAAAA,CACZT,KAAOA,EACPE,GA7COA,CA6CFQ,EA7CYN,EA8CjBnD,QAAU5gB,EACVvB,UAAYA,MAGhB,UAACP,EAAAA,EAAEA,CAAAA,CAACiJ,SAAS,IAACmb,cAAc,kBAC1B,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,eAAeoc,KAAO,WAC5D5f,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkF,GAAO5E,GAAG,CAACN,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC,IAAMiB,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACC,QAAQ,GAAG5E,QAAQ,SAK1F,GC1CA,GA/B2B,OAAC,MAAE1D,CAAI,eA+BnB+hB,CA/BqBtkB,CAAc,WAAEvB,CAAS,CAAS,GACpE,EA8BgC,IA7B9B,UAAC8lB,GAAAA,EAAwBA,CAAAA,UACvB,WAAC3f,EAAAA,CAAKA,CAAAA,WACJ,UAACyE,EAAAA,CAAKA,CAAAA,CAACvE,IAAM,YACX,WAAC7G,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,oBAChB,UAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,SAChB,UAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,UAChB,UAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,YAChB,WAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,MAAM8H,SAAS,cAAC,SAChBP,GAAAA,CAAaA,CAACC,KAAK,SAIjC,UAAC7B,EAAAA,CAAKA,CAAAA,UACFzC,EAAKhH,GAAG,CAAC,CAACK,EAAMmO,IAChB,UAAC6Z,GAAsBA,CAEnB,GAAGhoB,CAAI,CACToE,eAAiBA,EACjBvB,MAJqBmlB,IAITnlB,GAHN7C,EAAKoQ,gBAAgB,CAAG,IAAMjC,UAWlD,ECvCMrJ,GAAU,CACd,CAAEC,MAAO,MAAOC,MAAO,CADZF,IACkB,EAC7B,CAAEC,MAAO,OAAQC,MAAO,uBAAwB,EAChD,CAAED,MAAO,KAAMC,MAAO,uBAAwB,EAC/C,CAwBD,GAAetE,EAAAA,IAAU,CAACkoB,OAfA,CAAE1jB,SAee0jB,EAAC,KAfF,eAAEzjB,CAAa,iBAAEC,CAAe,WAAEvC,CAAS,CAAS,GACtFwC,EAAmBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAmBA,CAACzC,GAE7C,MACE,UAAC0C,GAAAA,CAAkBA,CAAAA,CACjBhC,KAAK,aACLiC,QAAUV,GACVW,SAAWP,EACXE,UAFiBN,MAECM,EAClBvC,UAAYwC,EACZK,aAAeP,GAAiBL,EAAO,CAAC,EAAE,CAACC,KAAK,EAGtD,GCmDA,GAhE4B,QAcR+iB,KAdS,MAC3B5Z,CAAI,EA+DS2a,IA9Dbd,CAAI,IACJE,CAAE,OACFljB,CAAK,CA4D2B8jB,EAAC,MA3DjCnN,CAAO,OACPlC,CAAK,CACL0O,iBAAkBC,CAAe,CACjC/X,iBAAkBgY,CAAO,CACzBjc,aAAciH,CAAW,WACzBzQ,CAAS,gBACTyB,CAAc,WACdvB,CAAS,CACH,GACAwlB,EAAAA,QAAYP,EAAAA,GAAAA,CAAkBA,CAACtQ,IAAI,CAAC,OAAC,IAAEb,CAAE,CAAE,UAAKA,IAAOzI,MAA3C4Z,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkD1Y,KAAK,CAGzE,MACE,WAAC9K,GAAAA,CAAcA,CAAAA,CAACC,OAAS,YACvB,WAACE,EAAAA,CAAIA,CAAAA,CAACE,UAAY,YACd0jB,GAAa,UAAC5K,GAAAA,CAAGA,CAAAA,CAACC,YAAY,OAAO7a,UAAYA,WAAcwlB,IACjE,UAACC,GAAAA,CAAQA,CAAAA,CAAC9Z,OAASkN,EAAU,KAAO,QAAU6M,UAAY/O,EAAQ3W,UAAYA,OAEhF,WAAC4B,EAAAA,CAAIA,CAAAA,CAACC,eAAe,gBAAgBjB,MAAM,iBACzC,UAAC4M,GAAAA,EAAQA,CAAAA,CACP/J,KAAO8hB,EACPvlB,UAAYA,EACZwjB,WAAW,kBAEb,UAAC3jB,EAAAA,CAAkBA,CAAAA,CACjBC,UAAYA,EACZE,UAAYA,EACZE,MAAM,iBACNgB,WAAW,MACXtB,SAAS,UAGb,WAACqmB,EAAAA,CAAMA,CAAAA,CAACC,QAAU,YAChB,UAAC7lB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKsB,WAAa,aAAM,UACnE,UAAC8F,GAAAA,EAAWA,CAAAA,CACVhH,UAAYA,EACZiH,OAASsJ,EACTrJ,MAAM,IACNtH,SAAS,KACT2I,WAAa,OAGjB,UAACod,GAAAA,CAAaA,CAAAA,CACZT,KAAOA,EACPE,GAlCSA,CAkCJQ,EAlCcN,EAmCnBnD,QAAU5gB,EACVvB,UAAYA,EACZ2B,EAAE,SAEJ,WAACskB,EAAAA,CAAMA,CAAAA,CAACC,QAAU,YAChB,WAAC7lB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKsB,WAAa,cAAM,SAAQiH,GAAAA,CAAaA,CAACC,KAAK,IAC9F,UAAC/H,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKM,MAAM,iBAAiB0c,KAAO,WAC5E,UAACvV,OAAAA,UAAOrK,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAACkF,GAAO5E,GAAG,CAACN,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,CAAC,IAAMiB,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACC,QAAQ,GAAG5E,QAAQ,YAKhG,ECtDA,GAf0B,OAAC,MAAE1D,CAAI,cAelBqiB,EAfoB5kB,CAAc,WAAEvB,CAAS,CAAS,CAerCmmB,EAd9B,MACE,UAAC5lB,EAAAA,EAAGA,CAAAA,UACAuD,EAAKhH,GAAG,CAAC,CAACK,EAAMmO,IAChB,UAAC8a,GAAqBA,CAElB,GAAGjpB,CAAI,CACToE,YAHoB6kB,GAGH7kB,EACjBvB,UAAYA,GAHN7C,EAAKoQ,gBAAgB,CAAG,IAAMjC,KAQ9C,ECHM9N,GAAiB,IAA+CsF,IAAI,CAAC,KAAMujB,GAAAA,CAAyBA,EAwF1G,GAjF2B,OAAC,WAAErjB,CAAS,QAiFxBsjB,MAjF0BpjB,GAAe,CAAI,QAiF3BojB,EAAC,MAjF4BhiB,GAAiB,CAAI,CAAS,GACpFnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExB,CAAEK,EAAaC,EAAgB,CAAG/F,EAAAA,QAAc,CAAsBL,GAAe2F,EAAOK,KAAK,CAACK,MAAM,GAExGJ,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,CAFkDhG,IAE7C,CAACiG,IAAI,EAE5C,MAAEK,CAAI,mBAAE7D,CAAiB,SAAE8D,CAAO,YAAEC,CAAU,gBAAE3B,CAAc,CAAE,CAAG4B,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzFC,aAAc,uBACdC,WAAY,MAAEV,CAAK,EACnB8iB,QAAS,CAAE1iB,OAAQF,CAAY,YAC/BX,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAC/BgiB,GAAAA,CAAWA,CACX,GACA,CACEnd,iBAAkB,CAChBC,aAAc,QACdgC,MAAO,EACP/B,YAAa,GACbkd,kBAAmB,EACrB,CACF,EAEJ,CACF,GAEM5hB,EAAqBhH,EAAAA,WAAiB,CAAC,IAC3C,IAAMiH,EAAStH,GAAeE,GAC9BkG,EAAekB,GACfzC,EAAe,CAAEwB,OAAQiB,CAAO,EAClC,EAAG,CAAEzC,EAAgB,EAErB,EAL+B7E,CAK3B,CAAC6F,GAAa,CAACH,EACjB,OAAO,KADwB,IAI3B2C,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAAA,CAAN5B,CACd,iCACE,UAACoC,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,KAAM,WACrB,UAACkgB,GAAiBA,CAACriB,KAAOA,EAAK4B,KAAK,CAAGnE,UAArB4kB,KAAsC1iB,EAAOzD,UAAYC,MAE7E,UAAC8F,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WACrB,UAAC4f,GAAkBA,CAAC/hB,KAAOA,EAAK4B,KAAK,CAAGnE,WAArBskB,IAAsCpiB,EAAOzD,UAAYC,SAG9E,KAEE8E,EACJ,WAACC,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,EAAIpD,eAAe,iBAClC,UAACkkB,GAAgBA,CACfzjB,cAAgBqB,EAChBtB,IAFe0jB,WAEElhB,EACjBtC,iBAAkB8C,CAAQ1B,EAC1B3D,UAAYgE,EAAWhE,SAAS,GAElC,UAAC+kB,GAAAA,CAAoBA,CAAAA,CACnB3gB,QAAUX,EACVzD,UAAYgE,EAAWhE,SAAS,CAChCglB,OAAQ,CAAE3Z,KAAM,wBAAyBqb,WAAY,sBAAW/iB,CAAY,EAC5E4B,GAAI,CAAEJ,KAAM,EAAGK,GAAI,MAAO,IAE5B,UAACF,EAAAA,CAAUA,CAAAA,CAACC,GAAI,CAAEJ,KAAM,OAAQK,GAAI,CAAE,EAAK,GAAGxB,CAAU,MAI5D,MACE,UAACyC,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CACnBiB,YAAa,CAAEE,kBAAmB,SAAgB,OAAN8f,GAAAA,EAAIA,CAAE,mDAAkD/f,kBAAkBvB,CAAQ1B,CAAa,EAC3I+C,UAAU,uDACVb,QAAUA,EACVd,UAAYA,GAGlB,0CClFA,IAAM6hB,GAA8B,CAAE,IAAK,CAE5B,SAASC,GAAgB,CAAkC,MAmEJzF,EAA+DA,EAerDA,EAW1EA,EAA+DA,EAC3BA,EAAAA,KA9FF,CAAE3d,MAAI,WAAEyE,GAAY,CAAI,CAAU,CAAlC,EAChC,CAAE4e,EAAkBC,EAAmB,CAAGlpB,EAAAA,QAAc,EAAC,GAEzDujB,EAAWpV,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAgC,UAAW,CACrE7H,WAAY,MAAEV,CAAK,EACnByQ,aAAc,CACZ7P,QAAS6D,IAAa7C,CAAQ5B,EAC9Bc,gBAAiByiB,EAAAA,EAAYA,CAC7B7S,gBAAgB,EAChB4N,MAAO,CAACkF,EAActQ,IACpB,CAAImQ,GAIG/E,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAACkF,EAActQ,GAE7BuQ,CANwB,eAMP,MACRJ,GAAmB,GAAKK,GAAAA,EAEnC,CACF,EAH8C,CAKxC7F,EAAWjJ,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAA2C,CAClE7H,SAAU,CAAE,MAAO,UAAW,MAAE/M,CAAK,EAAG,CACxC6U,QAAS,UACP,GAAI,CAACiJ,GAAAA,CAAYA,CACf,CADiB,KACX,MAAU,wBAKlB,OAAOC,QAAQC,GAAG,CAAC,CAFHF,GAAAA,CAAYA,CAAC6F,UAAU,CAAC,CAAEhjB,QAASX,CAAwB,GAAGke,KAAK,CAAC,IAAM,MAIzF,CACH,EACAhJ,OAAQ,IACN,GAAM,CAAEtI,EAAS,CAAGkI,SAEpB,EAIO,EAJH,IAKF9U,CALY,CAMZ0M,gCAAiC,KACjCnC,aAAcqC,EAAQoG,QAAQ,GAC9BqM,qBAAsB,KACtBJ,0BAA2B,KAC3BjS,cAAe,KACf4W,gBAAiB,KACjBC,qBAAqB,EACrBC,UAAU,EACV5E,qBAAqB,EACrB3L,YAAY,EACZ4L,sBAAsB,EACtBL,gBAAiB,KACjBxQ,YAAa,GACbyV,aAAa,EACb9mB,KAAM,KACNuR,MAAO,KACPuQ,qBAAsB,KACtBiF,aAAc,KACdC,YAAa,KACbjF,gBAAiB,IACnB,EAzBS,IA0BX,EACAle,gBAAiB,CAAEojB,GAAAA,EAAWA,CAAE,CAChCtjB,QAAS,CAAC+c,EAASrd,OAAO,EAAIqd,EAASwG,gBAAgB,CAAG,IAAM,CAAExG,CAAAA,CAAc,QAAdA,EAAAA,EAASzK,KAAAA,GAATyK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBzV,MAAAA,GAAUib,GAA4BjpB,QAAQ,SAACyjB,EAAAA,EAASzK,KAAK,GAAdyK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBzV,OAAM,EACvJoW,OAAO,EACP5N,gBAAgB,CAClB,GAEAtW,EAAAA,SAAe,CAAC,MACVujB,EAASnhB,iBAAiB,EAAKshB,EAAD,CAACA,CAAYA,EAAE,CAI7CH,EAASrd,OAAO,EAAkC,GAAG,CAAjCqd,EAASwG,gBAAgB,CAC/Cb,EAAkB,IACR3F,EAASrd,OAAO,EAAE,GACV,GAEtB,EAAG,CAAEqd,EAASwG,gBAAgB,CAAExG,EAASrd,OAAO,CAAEqd,EAASnhB,iBAAiB,CAAgB,QAAdmhB,EAAAA,EAASzK,KAAAA,GAATyK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBzV,MAAM,CAAE,EAEtG9N,EAAAA,SAAe,CAAC,KACTyjB,EAASrhB,iBAAiB,EAAKqhB,EAAD,IAAc,EAAE,GAC/B,EAEtB,EAAG,CAAEA,EAASxd,IAAI,CAAEwd,EAASrhB,iBAAiB,CAAE,EAEhD,IAAM+hB,EAAa3c,GAEjB,CAAC+b,EAASrd,OAAO,EAAIqd,EAASnhB,iBAAAA,GAC9B,CAAEmhB,CAAAA,CAAc,QAAdA,EAAAA,EAASzK,KAAK,GAAdyK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBzV,MAAAA,GAAUib,GAA4BjpB,QAAQ,SAACyjB,EAAAA,EAASzK,KAAAA,GAATyK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBzV,MAAM,IACvF,CAACib,GAA4BjpB,QAAQ,CAAuB,QAAtByjB,EAAc,QAAdA,EAAAA,EAASzK,KAAAA,GAATyK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBzV,MAAM,GAAtByV,KAAAA,IAAAA,EAAAA,EAA0B,MAChEA,EAASwG,gBAAgB,CAAG,GAC5BtG,EAASxd,IAAI,EACbyd,GAAAA,CAAAA,EAKF,MAAO,CAF6FH,GAAtFY,EAAaV,EAAyEF,CAGlG,CACA1S,EADGlL,KAAK,QACQwe,CAClB,CACF,CCvDA,OA1DoB,OAAC,WAAEhf,CAAS,CA0DjB6kB,WAAWA,EA1DQ3kB,GAAe,CAAI,gBAAEoB,GAAiB,CAAI,CAAS,GAC7EnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExBG,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAC5C,MAAEK,CAAI,mBAAE7D,CAAiB,SAAE8D,CAAO,YAAEC,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzEC,aAAc,eACdC,WAAY,MAAEV,CAAK,EACnBT,YACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAiBsjB,GAAAA,CAAGA,CAAE,EAAG,CAAEze,iBAAkB,CAC5EC,aAAc,QACdgC,MAAO,GACP/B,YAAa,GACbkd,kBAAmB,EACrB,CAAE,EACJ,CACF,GAEMvF,EAAe2F,GAAgB,MAAEpjB,CAAK,GAEtCsB,EAF8B8hB,CAGlC,UAAC7hB,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,EAAI8iB,UAAU,IAAClmB,eAAgB,CAAEsD,KAAM,gBAAiBK,GAAI,KAAM,YACjF,UAACuf,GAAAA,CAAoBA,CAAAA,CACnB3gB,QAAUX,EACVzD,UAAYgE,EAAWhE,SAAS,CAChCglB,OAAQ,CAAE3Z,KAAM,MAAO,IAEzB,UAAC/F,EAAAA,CAAUA,CAAAA,CAACC,GAAI,CAAEJ,KAAM,EAAGK,GAAI,CAAE,EAAK,GAAGxB,CAAU,MAIvD,GAAI,CAACX,GAAa,CAACH,EACjB,OAAO,KAGT,IAAM2C,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAAA,CAAN5B,CAAcA,EAAK4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,SAM9B4V,EAAAA,QALpB,UAAC8G,GAAAA,CAAOA,CAAAA,CAEJ,GAAG7qB,CAAI,CACTkO,KAAK,UACLrL,UAAYC,EACZgoB,gBAAkB/G,CAAAA,QAAAA,EAAAA,EAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAmBgH,OAAAA,GAAnBhH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA4BiH,kBAAAA,EAAqB,aAAUxZ,GAJvErD,KAML,KAEL,MACE,UAAC7E,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CACnBgB,UAAU,sCACVb,QAAUA,EACVd,UAAYA,GAGlB,kEC7CA,IAAMqjB,GAAiB,OAAC,MAAE5W,CAAI,MAAExQ,CAAI,QAAEqnB,CAAM,WAAErlB,CAAS,CAAuB,GACtEslB,EAAYrN,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,YAE1CsN,EAAaC,CAAAA,EAAAA,GAAAA,CAAAA,CAASA,GAAKvd,OAAOC,QAAQ,CAAClK,IAAI,CAAG,GAElDynB,EAAc5qB,EAAAA,WAAiB,CAAC,KACpCoN,OAAOiX,UAAU,CAAC,SAChB,QACAlf,GAAAA,QAAAA,EAAAA,EAAWmf,OAAAA,GAAXnf,KAAAA,IAAAA,GAAAA,EAAoBof,KADgC,SAClB,CAAC,CAAEC,SAAU,QAAS,EAC1D,EAAG,IACL,EAAG,CAAErf,EAAW,SAEhB,EAEI,MAFQ,GAER,EAACogB,GAAAA,CAAIA,CAAAA,CAACrL,IAAM,EAAIpC,SAAS,SAAS0N,gBAAgB,YAAY7a,WAAW,mBACvE,UAACjI,EAAAA,EAAGA,CAAAA,CACFoV,SAAS,SACTxU,WAAW,SACXua,aAAa,oBAEXlK,IAEJ,UAAC8R,GAAAA,CAAeA,CAAAA,CAAC9R,KAAO+W,EAAald,KAAK,OAAOyM,GAAK,EAAI5X,MAAM,sBAMpE,WAACkjB,GAAAA,CAAIA,CAAAA,CAACrL,IAAM,EAAIpC,SAAS,SAAS0N,gBAAgB,YAAY7a,WAAW,mBACvE,UAACzH,EAAAA,CAAYA,CAAAA,CACXC,KAAOA,EACPwN,QAAUia,EACV9S,SAAS,SACT+F,aAAa,WACbva,WAAW,kBAETqQ,IAEF,CAAC6W,GAAU,UAAC5nB,EAAAA,CAAOA,CAAAA,CAACC,KAAK,cAAcqQ,QAAU,EAAI7Q,MAAQooB,MAGrE,EA4CA,GAAezqB,EAAAA,IAAU,CAAC0N,CAAAA,EAAAA,GAAAA,CAAAA,CAAMA,CA1CF,QAiBkB2V,EAhB9C,IAAMjN,EAAc,CAAEjF,IAAK,EAyC2B0Z,EAAC,EAzCrBjlB,KAAMvE,EAAMuE,IAAI,EAC5Cuc,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GAEtBiB,EAAe2F,GAAgB,CAAEpjB,KAAMvE,EAAMuE,IAAfojB,GAEpC,MACE,WAACtmB,EAAAA,EAAGA,CAAAA,CACFC,QAAUwf,EAAW,OAAS,OAC9BnP,SAAS,OACT2T,oBAAoB,sBACpBzM,IAAM,EACNvP,WAAW,SACXiD,UAAYvM,EAAMuM,SAAS,CAC3B7K,MAAM,cACNhB,SAAS,eAET,UAACa,EAAAA,CAAOA,CAAAA,CAACC,KAAK,MAAMqQ,QAAU,EAAI7Q,MAAQghB,CAAiB,QAAjBA,EAAAA,EAAapd,IAAI,GAAjBod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBsG,WAAAA,EAAc,YAAc,mBACzF,UAACY,GAAAA,CACC5W,KAAK,YACLxQ,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,kBAAmBvL,MAAOyQ,CAAY,GAC/DjR,UAAY9D,EAAM8D,SAAS,GAE7B,UAAColB,GAAAA,CACC5W,KAAOtS,EAAMypB,SAAS,CACtB3nB,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,kBAAmBvL,MAAO,CAAE,GAAGyQ,CAAW,CAAE2U,SAAU1pB,EAAM2pB,OAAO,CAAG,GAC/FR,OAAS,CAAE,cAAcnpB,CAAAA,CAAI,CAC7B8D,UAAY9D,EAAM8D,SAAS,GAE1B,aAAc9D,GACf,UAACkpB,GAAAA,CACC5W,KAAOtS,EAAM4pB,UAAU,CACvB9nB,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,kBAAmBvL,MAAO,CAAE,GAAGyQ,CAAW,CAAE2U,SAAU1pB,EAAM2pB,OAAO,CAAEE,UAAW7pB,EAAM8pB,QAAS,CAAE,GAC1HX,MAAM,IACNrlB,UAAY9D,EAAM8D,SAAS,KAMrC,oBClHO,IAAMimB,GAA4E,CACvFC,KAAM,CAAE,OAAQ,WAAOva,EAAW,CAClCwa,KAAM,CAAE,OAAQ,WAAOxa,EAAW,EAClC,GAE6B,CAACjO,EAAc2K,IACrC+d,CAAAA,EAAAA,GAAAA,CAAAA,CAAqBA,CAAC1oB,GAAQ,KAAO2K,EAAO,IAGxCge,GAAiB,GAC5B,MAAUC,OAAO,CAACpnB,GACTA,EAAMqnB,GADW,CACP,CAAC,MAGbrnB,EAAMuU,QAAQ,GC0BvB,GA/B+B,OAAC,MAAE3S,CAAI,CAAS,GACvC0lB,EAAgBvO,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,gBAAiB,IA8BtBwO,EAAC,iBA5BpC,CAAK3lB,GAAD,KAACA,KAAAA,EAAAA,EAAAA,MAAY,CAAC4lB,WAAW,CAACnqB,MAAAA,EAK5B,CALoC,EAKpC,8BACE,WAACC,EAAAA,EAAEA,CAAAA,CAACmqB,gBAAkBH,EAAgBI,kBAAkB,mBACtD,UAACnqB,EAAAA,EAAEA,CAAAA,CAACyB,WAAa,IAAMS,EAAE,QAAQ/B,SAAS,cAAK,UAC/C,UAACH,EAAAA,EAAEA,CAAAA,CAACyB,WAAa,IAAMS,EAAE,OAAO/B,SAAS,cAAK,SAC9C,UAACH,EAAAA,EAAEA,CAAAA,CAACyB,WAAa,IAAMtB,SAAS,cAAK,mBAGrCkE,EAAAA,KAAAA,EAAAA,EAAM+lB,MAAM,CAACH,WAAW,CAAC5sB,GAAG,CAAC,CAACgtB,EAASxe,IACrC,WAAC9L,EAAAA,EAAEA,CAAAA,CAAiBmqB,gBAAkBH,EAAgBI,kBAAkB,mBACtE,UAACnqB,EAAAA,EAAEA,CAAAA,CAACyB,WAAa,IAAMS,EAAE,QAAQhC,GAAK,EAAIuF,GAAK,EAAIwI,GAAK,EAAGtM,UAAU,qBAAc0oB,IACnF,UAACrqB,EAAAA,EAAEA,CAAAA,CAACyB,WAAa,IAAMS,EAAE,OAAOhC,GAAK,EAAIuF,GAAK,EAAI9D,UAAU,qBAAc0C,EAAK+lB,MAAM,CAACE,WAAW,CAACze,EAAM,GACxG,UAAC7L,EAAAA,EAAEA,CAAAA,CAACyB,WAAa,IAAME,UAAU,aAAazB,GAAK,EAAIuF,GAAK,WAC1D,UAAC3E,EAAAA,EAAGA,CAAAA,UACA8oB,GAAevlB,EAAKkmB,MAAM,CAACC,EAAbZ,KAAoB,CAACS,EAAQ,QALzCA,OAZT,IAyBX,ECsDA,GAxEyB,OAAC,SAAEjB,CAAO,IAwEpBqB,MAxEsBlB,CAAQ,SAwEdkB,EAAC,KAxEe5lB,GAAiB,CAAI,WAAEtB,CAAS,CAAS,GAChFG,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAElBK,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAE5C,CAAEK,MAAI,WAAE9D,CAAS,SAAE+D,CAAO,CAAE,CAAGiI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,qBAAsB,CACrE7H,WAAY,MAAEV,EAAMmlB,SAAUC,EAASE,UAAWC,CAAS,EAC3D9U,aAAc,CACZ7P,QAASC,CACX,CACF,UAEA,EACS,SADM,CACL6lB,GAAAA,CAAaA,CAAAA,CAAAA,GAGnBpmB,EACK,OADI,CACJ,EAACif,GAAAA,CAAcA,CAAAA,CAAAA,GAItB,iCACIlf,GACA,UAAC4kB,GAAqBA,CACpBjlB,KAAOA,EACPolB,QAAUA,EACVF,IAHoBD,KAGX,OAAG5kB,EAAAA,KAAAA,EAAAA,EAAMsmB,KAAK,CAAXtmB,eAA2B,CACvCklB,SAAWA,EACXF,WAAahlB,EAAKkmB,MAAM,CAAClW,EAAE,CAC3B1G,GAAK,EACLpK,UAAYA,IAGhB,UAACkD,EAAAA,CAAIA,CAAAA,CAACF,MAAM,KAAKC,IAAM,YACrB,WAACE,EAAAA,CAAKA,CAAAA,CAAChG,aAAa,MAAMuK,MAAO,CAAEC,YAAa,MAAO,EAAG/J,MAAM,OAAO+U,SAAS,mBAC5E7R,OAAAA,EAAAA,KAAAA,EAAAA,EAAM+lB,MAAN/lB,CAAaumB,SAAS,CAAC9qB,MAAAA,UAAUuE,EAAAA,KAAAA,EAAAA,EAAM+lB,MAAM,CAACQ,SAAS,CAACvtB,GAAG,CAAC,CAACwtB,EAAShf,IACtE,WAAC9L,EAAAA,EAAEA,CAAAA,CAAiBoqB,kBAAoBte,IAAUxH,EAAK+lB,MAAM,CAACQ,SAAS,CAAC9qB,MAAM,CAAG,EAAI,SAAW,kBAC9F,WAACE,EAAAA,EAAEA,CAAAA,CAACyB,WAAa,IAAMC,WAAW,SAASvB,SAAS,eAChD0qB,EAAS,KAAIxmB,EAAK+lB,MAAM,CAACU,SAAS,CAACjf,EAAM,CAAE,OAE/C,UAAC7L,EAAAA,EAAEA,CAAAA,CAAC+qB,QAAU,EAAI5qB,SAAS,cACzB,WAACgC,EAAAA,CAAIA,CAAAA,CAACC,eAAe,0BACnB,UAACwa,GAAAA,CAAcA,CAAAA,CAACna,MAAQmnB,GAAevlB,EAAKkmB,MAAM,CAACC,EAAbZ,KAAoB,CAACiB,EAAQ,EAAIzpB,GAAK,IAC1EyK,OAAe,UAAC/K,EAAAA,EAAGA,CAAAA,CAACL,MAAM,0BAAmBuqB,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC3mB,EAAKkmB,MAAM,CAAClqB,SAAS,EAAE4qB,MAAM,CAAC,gBAP/EJ,GAAAA,EAYZ,UAACb,GAAsBA,CAAC3lB,KAAOA,SAGnC,QAH2B2lB,EAG1B1jB,EAAAA,CAAIA,CAAAA,CAACC,MAAM,KAAKC,KAAM,WACrB,iCACInC,OAAAA,EAAAA,KAAAA,EAAAA,EAAM+lB,MAAN/lB,CAAaumB,SAAS,CAAC9qB,MAAAA,UAAUuE,EAAAA,KAAAA,EAAAA,EAAM+lB,MAAN/lB,CAAaumB,SAAS,CAACvtB,GAAG,CAAC,CAACwtB,EAAShf,IACtE,WAACqf,GAAAA,CAAMA,CAAAA,CAAC5S,IAAM,EAAoBvP,WAAW,QAAQ5I,SAAS,eAC5D,UAACgrB,GAAAA,CAAOA,CAAAA,CAAAA,GACR,WAAC7oB,GAAAA,CAAIA,CAAAA,CAACb,WAAa,IAAMC,WAAW,mBAChCmpB,EAAS,KAAIxmB,EAAK+lB,MAAM,CAACU,SAAS,CAACjf,EAAM,CAAE,OAE/C,UAACvJ,GAAAA,CAAIA,CAAAA,CAACX,UAAU,sBAAeioB,GAAevlB,EAAKkmB,MAAM,CAACC,EAAbZ,KAAoB,CAACiB,EAAQ,IAC9D,IAAVhf,GAAe,UAAC/K,EAAAA,EAAGA,CAAAA,CAACL,MAAM,0BAAmBuqB,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC3mB,EAAKkmB,MAAM,CAAClqB,SAAS,EAAE4qB,MAAM,CAAC,WAN7DJ,GAAAA,EAS1B,UAACnkB,EAAAA,CAAKA,CAAAA,CAAChG,aAAa,MAAMuK,MAAO,CAAEC,YAAa,MAAO,EAAG/J,MAAM,OAAOqE,GAAK,EAAI0Q,SAAS,kBACvF,UAAC8T,GAAsBA,CAAC3lB,KAAOA,aAM3C,IANmC2lB,6DEjDnC,OAxBmC,OAAC,OAAEvnB,EAAQ,EAAE,gBAwBjC2oB,IAxBmChmB,CAAkB,CAAEimB,YAAU,OAAEve,CAAK,EAwB7C,OAxB+C0S,CAAO,CAAS,GACjG,CAAEtb,EAAaC,EAAgB,CAAG/F,EAAAA,QAAc,CAASqE,GAEzD6oB,EAAWltB,EAAAA,WAAiB,CAAC,KACjCgH,EAAmBlB,EACrB,EAAG,CAAEkB,EAAoBlB,EAAa,EAEtC,MACE,UAACqnB,GAAAA,CAAiBA,CAAAA,CAChBze,MAAQA,EACR0e,SAAWtnB,IAAgBzB,EAC3B6oB,SAAWA,EACX9L,QAAUA,WAEV,UAACiM,GAAAA,CAAWA,CAAAA,CACVC,aAAejpB,EACfqZ,KAAK,KACL3Y,SAAWgB,EACX0W,YAAcwQ,KAItB,ECHA,GAlBmC,OAAC,OAAE5oB,EAAQ,EAAE,aAkBjC2oB,OAlBmChmB,CAAkB,YAAEimB,CAAU,OAAEve,CAAK,WAAEvM,CAAS,CAAS,GACzG,MACE,EAgBqC6qB,CAhBrC,CAgBsC,CAhBtC,KAACO,GAAAA,CAAwBA,CAAAA,CACvBN,WAAaA,EACbtP,UAAWnW,CAAQnD,EACnBlC,UAAYA,EACZ2B,EAAE,iBAEF,UAAC0pB,GAAiCA,CAChCnpB,MAAQA,EACR2C,mBAAqBA,EAFWwmB,MAGxB9e,EACRue,WAAaA,KAIrB,ECkMA,GA3L+B,OAAC,CAC9BhnB,MAAI,KACJuC,CAAG,OAyLUilB,EAxLbC,CAAO,eACPC,CAAa,GAuLsBF,EAAC,IAtLpC/E,CAAO,YACPkF,CAAU,gCACVC,CAA8B,WAC9B1oB,CAAS,CACTS,MAAI,CACE,GACAkoB,EAAe7nB,EAAK+lB,MAAM,CAACQ,SAAS,CAAC9qB,MAAM,CAAGuE,EAAK+lB,MAAM,CAACH,WAAW,CAACnqB,MAAM,CAC5EygB,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,CAAC,IACvB,CAAE2L,EAAcC,EAAiB,CAAGhuB,EAAAA,QAAc,CAASmiB,IAA2B,GACtF,CAAE8L,EAAUC,CAD0DC,CAC7C,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,EAAC,GACvC,CAAEC,EAAQC,EAAW,CAAGF,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,EAACjM,GAAW2L,KAE9CS,EAAevuB,EAAAA,MAAY,CAAmB,MAC9CwuB,EAAWxuB,EAAAA,KAHkE,CAGtD,CAAmB,MAE1CsF,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAElBkpB,EAAezuB,EAAAA,WAAiB,CAAC,SACzBwuB,EAAZP,GAAAA,CAAAA,QAAYO,EAAAA,EAASlK,OAAAA,GAATkK,KAAAA,IAAAA,GAAAA,EAAkBE,MAAM,CAAC,CAAEzQ,KAAM,CAAE,IAC/CiQ,EAAYS,MAAM,GAClBd,GACF,EAAG,CAAEK,EAAaL,EAAgCI,EAAU,EAEtDW,EAAgB5uB,EAAAA,WAAiB,CAAC,QAgBtCmF,EAfA,GAAIlF,EAAE4uB,OAAO,EAAI5uB,EAAE6uB,OAAO,CAExB,CAF0B,MAK5B7uB,EAAE8uB,cAAc,GAEhB,IAAM5D,EAAWlrB,EAAE4gB,aAAa,CAACC,YAAY,CAAC,WAC1CqK,GACF7lB,EAAO0pB,IAAI,CADC,CAER9d,SAAU,kBAAmBvL,MAAO,MAAEC,EAAMuL,IAAK,MAAO4Z,SAAU9kB,EAAKsmB,KAAK,CAACxB,QAAQ,CAAEG,UAAWC,CAAS,CAAE,OAC/Gra,EACA,CAAEme,SAAS,CAAK,GAGpB9pB,SAAAA,QAAAA,EAAAA,EAAWmf,CAAXnf,MAAWmf,GAAXnf,KAAAA,IAAAA,GAAAA,EAAoBof,cAAc,EACpC,EAAG,CAAEjf,EAAQH,EAAWS,EAAMK,EAAKsmB,KAAK,CAACxB,QAAQ,CAAE,EAE7C/jB,EAAqBhH,EAAAA,WAAiB,CAAC,GAA0C,IACrF4tB,EAAW3hB,IACT,IAAMhF,EAAS,CAAE,GAAGgF,CAAI,EAExB,OADAhF,CAAM,CAACioB,EAAM,CAAGrvB,EACToH,CACT,EACF,EAAG,CAAE2mB,EAAY,EAEXuB,EAAiBnvB,EAAAA,WAAiB,CACtC,GAAyB2tB,EAAc,MAAQ1tB,EAAE4gB,aAAa,CAACC,YAAY,CAAC,YAC5E,CAAE6M,EAAe,EAGbyB,EAAahS,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,gBAAiB,iBAEtDpd,EAAAA,SAAe,CAAC,KACd,GAAIquB,GAAU,CAACN,GAAgBQ,EAAajK,OAAO,CAAE,CACnD,IAAM+K,EAAQ3T,KAAK4T,KAAK,CAAC,CAACf,EAAajK,OAAO,CAACiL,qBAAqB,GAAGxsB,KAAK,CA/E5D,EA+E+DysB,CAAY,CAjF3E,GAiFgFC,EAC5F3B,EA/EY,GA+EoBuB,EAAQ,EAAIvB,EAC9CE,EAAgBqB,EADClB,GAGjBG,EAAUoB,GAHkD,EAKhE,CACF,EAAG,CAAE3B,EAAc9nB,EAAK+lB,MAAM,CAAEqC,EAAQC,EAAWR,EAAc,EAEjE,IAAM6B,EAAOxN,EAzFc,QA2FrByN,CAFkBC,CAEX,GAAa,CAACxB,EAAUpoB,EAAK+lB,MAAM,CAACQ,OAFFiD,EAEW,CAAGxpB,EAAK+lB,MAAM,CAACQ,SAAS,CAACsD,KAAK,CAAC,EAAG/B,GACtFtY,EAAS,GAAa,CAAC4Y,EAAUpoB,EAAK+lB,MAAM,CAACH,WAAW,CAAG5lB,EAAK+lB,MAAM,CAACH,WAAW,CAACiE,KAAK,CAAC,EAAG/B,EAAe9nB,EAAK+lB,MAAM,CAACQ,SAAS,CAAC9qB,MAAM,EACvIquB,EAAY,GAAa,CAAC1B,EAAUP,EAAeC,EAEnDiC,EAAuB,CAC3BzsB,UAAW,aACXD,WAAY,SACZyb,KAAM,GAAU,OAAN4Q,EAAM,MAChB7rB,EAAG,GAAqB,OAAjB,IAAMisB,EAAW,KACxB/J,cAAe,MACftb,WAAY,MACd,EAEMulB,EAAsB9N,GAAY8L,EAExC,GAAII,GAAU,CAACN,EACb,MAAO,MADoB,EACpB,EAACrrB,EAAAA,EAAGA,CAAAA,CAACoB,EAAE,OAAOsM,IAAMme,IAG7B,IAAM2B,EACJ,UAACznB,EAAAA,EAAEA,CAAAA,CAAC1F,MAAQ,GAAmB,OAAfysB,GAAe,OAAOxJ,cAAc,oBAClD,UAAC/N,GAAAA,CAAOA,CAAAA,CAAC3T,MAAQ2pB,EAAW,eAAiB,4BAC3C,UAAClgB,GAAAA,CAAIA,CAAAA,CAAC4C,QAAU8d,EAAe7Q,aAAW,6BAAoB,YAKpE,MAEE,CADA,EACA,OAAClb,EAAAA,EAAGA,CAAAA,CAACyB,KAAK,OAAOgsB,UAAYF,EAAsB,SAAW,QAAU3sB,SADP,EACkB,SAAS8M,IAAMoe,WAChG,WAAClmB,EAAAA,CAAKA,CAAAA,CAACuE,MAAO,CAAEC,YAAa,OAAQ,YACnC,UAACC,EAAAA,CAAKA,CAAAA,CAACvE,IAAMynB,EAAsB,EAAIznB,EAAM7F,QAAUstB,EAAsB,QAAU,qBAAuBnsB,EAAE,gBAC9G,WAACnC,EAAAA,EAAEA,CAAAA,WACCiuB,EAAK3wB,GAAG,CAAC,CAACwtB,EAAShf,KACnB,IAAMkG,EAAOyc,GAAgB3D,EAASxmB,EAAK+lB,MAAM,CAACU,CAAtB0D,QAA+B,CAAC3iB,EAAM,EAClE,MACE,UAAChF,EAAAA,EAAEA,CAAAA,CAAmB,GAAGunB,CAAQ,UAC7BviB,EAAQ,EACR,WAAC1J,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,mBACf,WAACoD,GAAAA,CAAIA,CAAAA,CACH4C,QAAUwe,EACVkB,UAAU5iB,EACV9K,QAAQ,OACRgI,WAAW,QACXD,WAAW,OACX1H,GAAK,YAEH0qB,OAAAA,EAAAA,KAAAA,EAAAA,EAAS1Y,IAAAA,IAAS,CAAlB0Y,KAAgC,OAAPjgB,IAAYigB,EAAQ4C,KAAK,EAClD,UAAC5tB,EAAAA,EAAGA,CAAAA,CAACqc,KAAK,OAAOjb,EAAE,OAAOd,GAAK,WAC7B,UAACJ,EAAAA,CAAOA,CAAAA,CACNC,KAAK,cACLqQ,QAAU,EACV6K,UAA8B,QAAlB2P,EAAQ4C,KAAK,CAAa,iBAAmB,oBAI7D3c,KAEJ,UAACjR,EAAAA,EAAGA,CAAAA,CAACqc,KAAK,OAAOjb,EAAE,gBACjB,UAACkpB,GAA0BA,CACzB3oB,MAAQqkB,CAAO,CAAW,IAAVjb,EAAc,YADLuf,EACqB,cAAc,CAC5Dte,MAAQiF,EACRsZ,WAAaR,EACbzlB,mBAAqBA,EAA6B,IAAVyG,EAAc,cAAgB,sBAI1EkG,GA/BI8Y,EAkCd,GACEhX,EAAOxW,GAAG,CAAC,CAACgtB,EAASxe,IACrB,WAAChF,EAAAA,EAAEA,CAAAA,CAAmB,GAAGunB,CAAQ,WAC7BzE,CAAAA,EAAAA,GAAAA,CAAAA,CAAqBA,CAACU,GAAU,KAAIhmB,EAAK+lB,MAAM,CAACE,WAAW,CAACze,EAAM,CAAE,MAD9Dwe,IAIVoC,GAAU,CAACJ,GAAYiC,EACzB,UAACznB,EAAAA,EAAEA,CAAAA,CAAG,GAAGunB,CAAQ,CAAGlsB,EAAI,GAAU,OAAN6rB,EAAM,eAAM,aACtCtB,GAAUJ,GAAYiC,OAG5B,UAACxnB,EAAAA,CAAKA,CAAAA,CAAC/F,QAAUstB,EAAsB,QAAU,kBAAoBnsB,EAAE,gBACnEmC,EAAK4B,KAAK,CAAC5I,GAAG,CAAC,GACf,WAAC0C,EAAAA,EAAEA,CAAAA,WACCiuB,EAAK3wB,GAAG,CAAC,CAACwtB,EAAShf,IACnB,WAAC7L,EAAAA,EAAEA,CAAAA,CAAiBkqB,gBAAkBsD,EAAe,GAAGY,CAAQ,WAClD,IAAVviB,EACA,UAACvK,EAAAA,CAAYA,CAAAA,CACXyN,QAAUie,EACVyB,UAAU/wB,EAAK2W,EAAE,CACjB5S,WAAa,IACbF,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,kBAAmBvL,MAAO,MAAEC,EAAMuL,IAAK,MAAO4Z,SAAU9kB,EAAKsmB,KAAK,CAACxB,QAAQ,CAAEG,UAAW5rB,EAAK2W,EAAE,CAAG,YAEzHuV,GAAelsB,EAAK8sB,OAAO,CAACK,CAAdjB,CAAsB,IAEtCA,GAAelsB,EAAK8sB,OAAO,CAACK,CAAdjB,CAAsB,EACxC,UAAC/F,GAAAA,CAAeA,CAAAA,CAAC9R,KAAOrU,EAAK8sB,OAAO,CAACK,EAAQ,KAXrCA,IAcVhX,EAAOxW,GAAG,CAAC,GACX,UAAC2C,EAAAA,EAAEA,CAAAA,CAAmB,GAAGouB,CAAQ,UAAKxE,GAAelsB,EAAK8sB,OAAO,CAACH,CAAdT,CAAsB,GAAhES,IACVoC,GAAU,CAACJ,GAAY,UAACrsB,EAAAA,EAAEA,CAAAA,CAACmB,MAAQ,GAAmB,OAAfysB,GAAe,SACxD,UAAC5tB,EAAAA,EAAEA,CAAAA,CAAG,GAAGouB,CAAQ,CAAG3tB,MAAM,iBAAiByB,EAAI,GAAU,OAAN6rB,EAAM,eAAQ/C,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAACttB,EAAK2C,SAAS,EAAE4qB,MAAM,CAAC,SAC5FwB,GAAUJ,GAAY,UAACrsB,EAAAA,EAAEA,CAAAA,CAACmB,MAAQ,GAAmB,OAAfysB,GAAe,WApB/ClwB,EAAK2W,EAAE,SA2B7B,EC3DA,GAnIwB,OAAC,WAAE9Q,CAAS,CAmIrBorB,QAnIuBvF,CAAO,MAmIfuF,EAAC,QAnIgB9pB,GAAiB,CAAI,CAAS,GACrEnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClB,CAAEmoB,EAAS8C,EAAY,CAC3BxwB,EAAAA,QAAc,CJ/BH,SAASywB,CAAsC,CAAEC,CAAsD,EACpH,GAAI,CAAC/qB,EAAMqP,EI8BkEyb,EJ9B9D,EAAI,CAAC9qB,EAAM2qB,KAAK,CAC7B,CAD+B,MAIjC,IAAMK,EAAUjrB,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACC,EAAMqP,IAAI,EAE9C,GAAI,CAACQ,OAAOoa,IAAI,CAACc,GAAa5wB,QAAQ,CAAC6wB,GACrC,OAD+C,IAI3CC,EAAWlrB,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACC,EAAM2qB,KAAK,EAEhD,GAAKI,CAAD,CAAaC,EAAQ,CAAC7wB,QAAQ,CAAC8wB,GAInC,MAAQ,CAAE5b,CAJoC,IAI9B2b,EAASL,MAAOM,CAAS,CAC3C,EIa0GtrB,EAAOK,KAAK,CAAEylB,KAChH,CAAE1C,EAASkF,EAAY,CAAG5tB,EAAAA,QAAc,CAA0B,CAAC,GACnEmiB,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GACtB,CAAEyO,EAA0BC,EAA6B,CAAG1C,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,CAACjM,GAEvEvc,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAE5C,CAAEK,MAAI,CAAE9D,WAAS,SAAE+D,CAAO,YAAEC,CAAU,iBAAE4qB,CAAe,CAAE,CAAG3qB,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CAClFC,aAAc,sBACdC,WAAY,MAAEV,EAAMmlB,SAAUC,CAAQ,UACtCtC,UACAgF,YACAvoB,EACAL,QAAS,CAEP0B,QAASC,CACX,CACF,GAEMknB,EAAgB3tB,EAAAA,WAAiB,CAAEH,IACvC,IAAMmxB,EAAa,CAAEhc,KAAMnV,EAAKywB,MAAOW,CAAAA,EAAAA,GAAAA,EAAAA,CAAiBA,CAACvD,OAAAA,EAAAA,KAAAA,EAAAA,EAAS1Y,IAAAA,IAASnV,CAAlB6tB,CAAwBA,EAAQ4C,KAAK,CAAGxf,OAAW,EAC5G0f,EAAWQ,GACXD,EAAgBC,EAClB,EAAG,CAAED,EAAiBrD,EAAS,EAEzBwD,EAAsBlxB,EAAAA,WAAiB,CAAC,GAAqB,KACjE4tB,EAAW3hB,IACT,IAAMklB,EAAa,CAAE,GAAGllB,CAAI,EAE5B,OADA,OAAOklB,CAAU,CAACC,EAAI,CACfD,CACT,EACF,EAAG,EAAE,EAECpoB,EAAmByM,OAAOC,MAAM,CAACiT,GAAS9S,IAAI,CAACpO,SAE/C6pB,EAAkBrxB,EAAAA,OAAa,CAAC,KACpC,IAAMsxB,EAAuBnrB,EAAW6G,SAAS,CAAGC,EAAAA,EAAyBA,CAlDtD,EAkDyDskB,CAEhF,OAAOxoB,EAAmBuoB,EAnDP,GAmD+CA,CACpE,EAAG,CAAEnrB,EAAW6G,SAAS,CAAEjE,EAAkB,EAE7C,GAAI5G,EACF,MAAO,GADM,EACN,KAACmqB,GAAAA,CAAaA,CAAAA,CAAAA,GAGvB,IAAMkF,EAAczoB,EAClB,UAACqf,EAAAA,CAAMA,CAAAA,CAAClO,IAAM,EAAI3K,GAAK,EAAIyD,SAAS,gBAChCwC,OAAOsK,OAAO,CAAC4I,GAASzpB,GAAG,CAAC,OAAC,CAAEmyB,EAAK/sB,EAAO,GACrCoJ,EAAQ2jB,kBAAsC,EAAI,EACxD,MACE,WAACrU,GAAAA,EAAGA,CAAAA,CAACpa,QAAQ,cAA0BwB,KAAK,QAAQ6Y,YAAY,iBAC9D,UAACtP,GAAAA,CAAMA,CAAClE,IAAI,EAACnH,MAAM,0BACjB+tB,GAAgBnqB,OAAAA,EAAAA,GAADmqB,EAACnqB,EAAAA,EAAM+lB,MAAM,CAACQ,SAAS,CAAC/e,EAAAA,GAAU,GAAIxH,OAAAA,EAAAA,KAAAA,EAAAA,EAAM+lB,MAAM,CAACU,SAAS,CAACjf,EAAAA,GAAU,MAExF,WAACC,GAAAA,CAAMA,CAAClE,IAAI,EAACnH,MAAM,OAAOyV,SAAS,SAAS+F,aAAa,WAAWva,WAAW,mBAC3EmuB,GAAAA,EAAIA,CACJptB,KAEJ,UAACqtB,GAAAA,EAAcA,CAAAA,CAAC/gB,QAAUugB,EAAoBE,OARfA,EAWrC,KAEA,KAEEO,EAAc1rB,EAClB,UAAC4kB,GAAqBA,CACpBjlB,KAAOA,EACPolB,QAAUA,EACVF,IAHoBD,KAGX,OAAG5kB,EAAAA,KAAAA,EAAAA,EAAMsmB,KAAK,CAAXtmB,eAA2B,CACvCd,UAAYA,EACZoK,GAAKxG,EAAmB,EAAI,IAE5B,KAEE7B,EAAY,CAAC,CAACib,GAAYpZ,GAAoB5C,EAAW6G,SAAAA,GAC7D,WAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,EAAI8iB,WAAa2G,EAA2B7sB,eAAe,gBAAgB2G,WAAa5B,EAAmB,QAAU,mBACpI,WAACrG,EAAAA,EAAGA,CAAAA,WACA,CAACyf,GAAYwP,EACbH,KAEJ,UAAC/pB,EAAAA,CAAUA,CAAAA,CAACC,GAAI,CAAEJ,KAAM,EAAGK,GAAI,CAAE,EAAK,GAAGxB,CAAU,MAIjD6B,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,CACd,UAACwnB,GAAsBA,CACrBxnB,KAAOA,EACPuC,IAAM6oB,EACN3D,QAAUA,CAHWD,CAIrBE,cAAgBA,EAChBC,WAAaA,EACblF,QAAUA,EACVmF,+BAAiCiD,EAA4BnC,MAAM,CACnExpB,UAAYA,EACZS,KAAOA,IAEP,KAEEiD,EACJ,iCACE,UAAC6E,GAAAA,CAAMA,CAAClE,IAAI,WAAC,8BACXvD,OAAAA,EAAAA,KAAAA,EAAAA,EAAMsmB,KAAK,CAAXtmB,eAAY2rB,EAAkB,UAAClkB,GAAAA,CAAMA,CAAClE,IAAI,EAACnG,WAAa,mBAAQ4C,EAAAA,KAAAA,EAAAA,EAAMsmB,KAAK,CAACqF,eAAe,GAAmB,gBAIpH,MACE,iCACIzP,GACA,UAACzf,EAAAA,EAAGA,CAAAA,CAAC6M,GAAK,WAAMoiB,IAElB,UAAC/oB,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,UACI4C,EACZC,YAAa,CACXE,kBAAmB,SAAgB,OAAN8f,GAAAA,EAAIA,CAAE,gDACnC/f,iBAAkByM,OAAOC,MAAM,CAACiT,GAAS9S,IAAI,CAACpO,QAChD,EACAQ,QAAUA,EACVd,UAAYA,EACZ2qB,qBAAuB,CAAC1P,EACxB/a,GAAKnB,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,MAAYvE,EAAS,EAAI,MAItC,0CC/CA,OAAe1B,EAAAA,IAAU,CA5FQ,OAAC,MAAEV,CAAI,WAAE6C,CAAS,CA4FC,WA5FU,MAAEyD,CAAI,CAAS,GACrE,CAAEqoB,EAAUC,EAAa,CAAGE,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,EAAC,GAEvC9oB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAElBusB,EAAe9xB,EAAAA,WAAiB,CAAEC,QAiBtCkF,EAhBA,GAAIlF,EAAE4uB,OAAO,EAAI5uB,EAAE6uB,OAAO,CAExB,CAF0B,MAK5B7uB,EAAE8uB,cAAc,GAEhB,IAAM/D,EAAU/qB,EAAE4gB,aAAa,CAACC,YAAY,CAAC,WACzCkK,GACF1lB,EAAO0pB,IADI,CAET,CAAE9d,SAAU,kBAAmBvL,MAAO,CAAEC,OAAMuL,IAAK,MAAO4Z,SAAUC,CAAQ,CAAE,OAC9Ela,EACA,CAAEme,SAAS,CAAK,SAIpB9pB,GAAkB,QAAlBA,EAAAA,EAAWmf,OAAO,GAAlBnf,KAAAA,IAAAA,GAAAA,EAAoBof,cAAc,EACpC,EAAG,CAAEjf,EAAQH,EAAWS,EAAM,EAE9B,MACE,WAAChC,GAAAA,CAAcA,CAAAA,CAACC,OAAS,EAAI9B,SAAS,KAAKD,GAAK,YAC9C,WAACiC,EAAAA,CAAIA,CAAAA,CAACD,EAAE,iBACN,UAACtB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WACpB,UAAC4L,GAAAA,CAAIA,CAAAA,CAACpL,QAAQ,iBACZ,UAACC,EAAAA,CAAOA,CAAAA,CACNC,KAAK,mBACLkb,UAAYkQ,EAAW,iBAAmB,iBAC1C/a,QAAU,EACV6e,OAAO,UACPphB,QAAUud,EAAYS,MAAM,CAC5B3Q,mBAAmB,SACnBJ,aAAW,oBAIjB,WAAClb,EAAAA,EAAGA,CAAAA,CAAC2M,SAAS,cACZ,WAACtL,EAAAA,CAAIA,CAAAA,CAACC,eAAe,gBAAgBlB,OAAS,EAAI6H,WAAW,SAAS4E,GAAK,YACzE,UAAC/M,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WACpB,UAACe,EAAAA,CAAYA,CAAAA,CACXyN,QAAUmhB,EACVzB,UAAU/wB,EAAKitB,KAAK,CAACxB,QAAQ,CAC7B1nB,WAAa,IACbF,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,kBAAmBvL,MAAO,MAAEC,EAAMuL,IAAK,MAAO4Z,SAAUzrB,EAAKitB,KAAK,CAACxB,QAAQ,CAAG,YAErGzrB,EAAKitB,KAAK,CAACqF,eAAe,KAGhC,UAACpvB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYE,MAAM,0BACpC/C,EAAKitB,KAAK,CAACyF,UAAU,MAG3B,UAACxvB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYE,MAAM,0BACtC,UAAC4vB,GAAAA,CAAiBA,CAAAA,CAACrsB,KAAOtG,EAAKitB,KAAK,CAACxB,QAAQ,CAAGvd,KAAK,iBAKzDygB,GACA,WAAC1I,GAAAA,CAAIA,CAAAA,CAACC,gBAAgB,WAAWtL,IAAI,WAAW7W,WAAa,IAAMS,EAAE,kBACjE0D,CAAQlI,EAAK0sB,MAAM,CAACQ,SAAS,CAAC9qB,MAAM,EACpC,iCACE,UAACwC,GAAAA,CAAIA,CAAAA,CAACwG,WAAW,gBAAO,QACxB,UAACoiB,GAAAA,CAAMA,CAAAA,CAAC5S,IAAM,EAAIvP,WAAW,iBACzBrL,EAAK0sB,MAAM,CAACQ,SAAS,CAACvtB,GAAG,CAAC,CAAC4D,EAAM4K,IACjC,WAACsP,GAAAA,CAAGA,CAAAA,WACF,UAACrP,GAAAA,CAAMA,CAAClE,IAAI,EAACnG,WAAa,aAAQ/D,EAAK0sB,MAAM,CAACU,SAAS,CAACjf,EAAM,GAAgB,IAAG5K,IADxEA,SAOnB,UAACqvB,GAAAA,CAAQA,CAAAA,CAACvF,QAAU,WAAI,UAACI,GAAAA,CAAOA,CAAAA,CAAAA,KAChC,UAAC7oB,GAAAA,CAAIA,CAAAA,CAACwG,WAAW,gBAAO,UACxB,UAACoiB,GAAAA,CAAMA,CAAAA,CAAC5S,IAAM,EAAIvP,WAAW,iBACzBrL,EAAK0sB,MAAM,CAACH,WAAW,CAAC5sB,GAAG,CAAC,CAAC4D,EAAM4K,IACnC,WAACvJ,GAAAA,CAAIA,CAAAA,WACH,UAACwJ,GAAAA,CAAMA,CAAClE,IAAI,EAACnG,WAAa,aAAQ/D,EAAK0sB,MAAM,CAACE,WAAW,CAACze,EAAM,GAAgB,IAAG5K,IADzEA,WAS1B,GCYA,GAAe7C,EAAAA,IAAU,CAxGS,OAAC,MAAEV,CAAI,WAAE6C,CAAS,EAwGC,SAxGCgD,CAAS,MAAES,CAAI,CAAS,GACtE,CAAEqoB,EAAUC,EAAa,CAAGE,CAAAA,EAAAA,GAAAA,CAAAA,CAAUA,EAAC,GAEvC9oB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAElBusB,EAAe9xB,EAAAA,WAAiB,CAAC,QAgBrCmF,EAfA,GAAIlF,EAAE4uB,OAAO,EAAI5uB,EAAE6uB,OAAO,CAExB,CAF0B,MAK5B7uB,EAAE8uB,cAAc,GAEhB,IAAM/D,EAAU/qB,EAAE4gB,aAAa,CAACC,YAAY,CAAC,WACzCkK,GACF1lB,EAAO0pB,IAAI,CACT,CAAE9d,SAAU,kBAAmBvL,MAAO,MAAEC,EAAMuL,IAAK,MAAO4Z,SAAUC,CAAQ,CAAE,OAC9Ela,EACA,CAAEme,SAAS,CAAK,SAGpB9pB,GAAAA,OAAAA,GAAAA,EAAWmf,OAAXnf,GAAAA,KAAAA,IAAAA,GAAAA,EAAoBof,cAAc,EACpC,EAAG,CAAEjf,EAAQH,EAAWS,EAAM,EAE9B,MACE,iCACE,WAACjE,EAAAA,EAAEA,CAAAA,CAACoqB,kBAAoBkC,EAAW,SAAW,kBAC5C,UAACrsB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WACpB,UAAC4L,GAAAA,CAAIA,CAAAA,CAACpL,QAAQ,iBACZ,UAACC,EAAAA,CAAOA,CAAAA,CACNC,KAAK,mBACLkb,UAAYkQ,EAAW,iBAAmB,iBAC1C/a,QAAU,EACV6e,OAAO,UACPphB,QAAUud,EAAYS,MAAM,CAC5B3Q,mBAAmB,SACnBJ,aAAW,sBAKnB,UAAChc,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WACpB,UAACe,EAAAA,CAAYA,CAAAA,CACXC,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,kBAAmBvL,MAAO,MAAEC,EAAMuL,IAAK,MAAO4Z,SAAUzrB,EAAKitB,KAAK,CAACxB,QAAQ,CAAG,GACvGsF,UAAU/wB,EAAKitB,KAAK,CAACxB,QAAQ,CAC7Bpa,QAAUmhB,EACVzuB,WAAa,aAEX/D,EAAKitB,KAAK,CAACqF,eAAe,OAIlC,UAAChwB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WAClB7C,EAAKitB,KAAK,CAACxB,QAAQ,KAGzB,UAACnpB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WAClB7C,EAAKitB,KAAK,CAACyF,UAAU,QAI3B/D,GACA,WAACtsB,EAAAA,EAAEA,CAAAA,WACD,UAACC,EAAAA,EAAEA,CAAAA,CAACuwB,GAAK,IACT,UAACvwB,EAAAA,EAAEA,CAAAA,CAAC+qB,QAAU,EAAIwF,GAAK,WACrB,WAAC7pB,EAAAA,CAAKA,CAAAA,YACFd,CAAQlI,EAAK0sB,MAAM,CAACQ,SAAS,CAAC9qB,MAAM,EACpC,WAACC,EAAAA,EAAEA,CAAAA,WACD,UAACC,EAAAA,EAAEA,CAAAA,CAACmB,MAAM,OAAOhB,SAAS,KAAKsB,WAAa,IAAMvB,GAAK,EAAImhB,GAAK,EAAI+C,cAAc,kBAAS,QAC3F,UAACpkB,EAAAA,EAAEA,CAAAA,CAACE,GAAK,WACP,UAACgrB,GAAAA,CAAMA,CAAAA,CAAC5S,IAAM,EAAIvP,WAAW,iBACzBrL,EAAK0sB,MAAM,CAACQ,SAAS,CAACvtB,GAAG,CAAC,CAAC4D,EAAM4K,IACjC,WAACsP,GAAAA,CAAGA,CAAAA,WACF,UAACrP,GAAAA,CAAMA,CAAClE,IAAI,EAACnG,WAAa,aAAQ/D,EAAK0sB,MAAM,CAACU,SAAS,CAACjf,EAAM,GAAgB,IAAG5K,IADxEA,WAQrB,WAAClB,EAAAA,EAAEA,CAAAA,CAACoqB,kBAAkB,mBACpB,UAACnqB,EAAAA,EAAEA,CAAAA,CAACmB,MAAM,OAAOhB,SAAS,KAAKsB,WAAa,IAAMvB,GAAK,EAAImhB,GAAK,WAAK,UACrE,UAACrhB,EAAAA,EAAEA,CAAAA,CAACG,SAAS,KAAKD,GAAK,WACrB,UAACgrB,GAAAA,CAAMA,CAAAA,CAAC5S,IAAM,EAAIvP,WAAW,iBACzBrL,EAAK0sB,MAAM,CAACH,WAAW,CAAC5sB,GAAG,CAAC,CAAC4D,EAAM4K,IACnC,WAACvJ,GAAAA,CAAIA,CAAAA,WACH,UAACwJ,GAAAA,CAAMA,CAAClE,IAAI,EAACnG,WAAa,aAAQ/D,EAAK0sB,MAAM,CAACE,WAAW,CAACze,EAAM,GAAgB,IAAG5K,IADzEA,qBAalC,GC9EA,GA1B8B,OAAC,OAAEgF,CAAK,WAAE1F,CAAS,KAAEqG,CAAG,WAAErD,CAAS,EA0B7BitB,EAAC,EA1B8BxsB,CAAI,CAAS,GAC9E,MACE,WAAC0C,EAAAA,CAAKA,CAAAA,CAACuE,MAAO,CAAEC,YAAa,MAAO,YAClC,UAACC,EAAAA,CAAKA,CAAAA,CAACvE,IAAMA,WACX,WAAC7G,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,SACV,UAAC0F,EAAAA,EAAEA,CAAAA,UAAC,cACJ,UAACA,EAAAA,EAAEA,CAAAA,UAAC,aACJ,UAACA,EAAAA,EAAEA,CAAAA,UAAC,cAGR,UAACC,EAAAA,CAAKA,CAAAA,UACFb,EAAM5I,GAAG,CAAC,CAACK,EAAMmO,IACjB,UAAC4kB,GAAyBA,CAExB/yB,KAAOA,EACP6C,UAAYA,EACZgD,MAJwBktB,IAIZltB,EACZS,KAAOA,GAJDtG,EAAKitB,KAAK,CAACxB,QAAQ,EAAI5oB,CAAAA,CAAYmJ,OAAOmC,GAAS,GAAC,OAUtE,ECgEA,GAlFyB,OAAC,WAAEtI,CAAS,EAkFtBmtB,cAlFwB7rB,EAkFR6rB,CAlFyB,CAAI,CAAS,GAC7DhtB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAElBK,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAC5C2sB,EAAI7sB,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAAC4sB,CAAC,EACtC,CAAEjd,EAAYkL,EAAe,CAAGxgB,EAAAA,QAAc,CAASuyB,GAAK,IAC5DC,EAAsBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,CAACnd,EAAY,KAE9C,MAAErP,CAAI,mBAAE7D,CAAiB,SAAE8D,CAAO,YAAEC,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzEC,aAAc,qBACdC,WAAY,MAAEV,CAAK,EACnB8iB,QAAS,CAAE6J,EAAGC,CAAoB,YAClCrtB,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAuB+rB,EAAAA,EAAsBA,CAAE,EAAG,CAAElnB,iBAAkB,CACrGE,YAAa,GACbqf,SAAU,GACZ,CAAE,EACJ,CACF,GAEMpmB,EAAmBC,CAAAA,EAAAA,GAAAA,CAAAA,CAAmBA,CAACxC,GAEvCuwB,EACJ,UAACtF,GAAAA,CAAWA,CAAAA,CACVvpB,EAAG,CAAEwD,KAAM,OAAQK,GAAI,OAAQ,EAC/BoX,KAAM,CAAEzX,KAAM,OAAQK,GAAI,OAAQ,EAClC+V,KAAK,KACL3Y,SAAWyb,EACX/D,YAAY,2CACZ6Q,aAAehY,EACfnT,UAAYwC,IAIVuC,EACJ,WAACC,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,EAAI8iB,UAAU,IAAClmB,eAAe,0BAC3C2uB,EACF,UAAClrB,EAAAA,CAAUA,CAAAA,CAACC,GAAI,CAAEJ,KAAM,EAAGK,GAAI,CAAE,EAAK,GAAGxB,CAAU,MAIjD6B,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAAA,CAAN5B,CACd,iCACE,UAACiC,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WACrB,UAACgqB,GAAqBA,CACpBvqB,MAAQ5B,EAAK4B,KAAK,CAClB1F,OAFoBiwB,GAERhwB,EACZoG,IAAMyE,EAAAA,EAAyBA,CAC/B9H,UAAYA,EACZS,KAAOA,MAGX,UAACyC,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,IAAM,YACnBnC,EAAK4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IACtB,UAACmlB,GAAwBA,CAEvBtzB,KAAOA,EACP6C,UAAYC,EACZwD,KAJuBgtB,GACjBtzB,EAAKitB,KAAK,CAACxB,QAAQ,EAAI3oB,CAAAA,CAAoBkJ,OAAOmC,GAAS,GAAC,QAQxE,KAEJ,MACE,UAAC7E,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,UACE,wCACV6C,YAAa,CACXE,kBAAmB,SAAgB,OAAN8f,GAAAA,EAAIA,CAAE,+CACnC/f,kBAAkBvB,CAAQ8N,CAC5B,EACAtN,QAAUA,EACVd,UAAYA,GAGlB,ECpEA,GArBmB,QAGD5B,EACCA,KAJC,IAqBLutB,OArBO1tB,CAAS,EAqBN0tB,EAAC,UArBOxtB,GAAe,CAAI,CAAEoB,kBAAiB,CAAI,CAAS,GAC5EjB,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GACxBH,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBylB,EAAAA,QAAU1lB,EAAAA,EAAOK,KAAK,CAAColB,QAAAA,GAAbzlB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBsT,QAAQ,GACzCuS,EAAiC,QAAtB7lB,EAAAA,EAAOK,KAAK,CAACulB,SAAAA,GAAb5lB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBsT,QAAQ,UAEjD,GAAmBvT,EAIf2lB,GAAWG,EACN,OALwB,CAKxB,EAACkB,GAAgBA,CAACrB,QAAUA,EAAUG,MAArBkB,GAAgClB,EAAW1kB,eAAiBA,EAAiBtB,UAAYA,IAG/G6lB,EACK,OADI,CACJ,EAACuF,GAAeA,CAACvF,QAAUA,EAAU7lB,KAArBorB,KAAiCprB,EAAYsB,eAAiBA,IAGhF,UAAC6rB,GAAgBA,CAACntB,UAAYA,EAAYsB,IAAzB6rB,WAA0C7rB,IAXzD,IAYX,4HCRA,OAAeiH,CAAAA,EAAAA,GAAAA,CAAAA,CAAMA,CAlBI,OAAC,UAAEolB,CAAQ,CAkBI,UAlBFllB,CAAS,CAAS,GACtD,MACE,UAAClL,EAAAA,EAAGA,CAAAA,CACFoB,EAAG,CAAEwD,KAAM,OAAQK,GAAI,OAAQ,EAC/BorB,OAAO,YACPpU,YAAcvB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,iBAAkB,kBAClD9a,aAAa,OACb0wB,EAAE,OACFjxB,SAAS,KACTsB,WAAa,IACbqH,WAAW,OACXkD,UAAYA,WAEVklB,GAGR,GCwCA,GA9CgB,OAAC,OAAE1e,CAAK,OAAE/P,CAAK,CA8CR,UA9CUlC,CAAS,eAAE8wB,CAAa,CAAE,GAAGC,EAAsB,GAC5EC,EAAc/e,EAAM7F,QAAQ,EAAIlK,EAAQiV,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,OAAEjV,EAAOkK,SAAU6F,EAAM7F,QAAQ,CAAE8E,SAAU,CAAE,GAAGoL,QAAQ,CAAGpa,EACtH+uB,EAAoBF,EAAcjd,EAAE,CACxChF,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,8BAA+BvL,MAAO,CAAEC,KAAMwO,EAAM7N,OAAO,CAAE0P,GAAIid,EAAcjd,EAAE,CAAG,QACtGnF,EAEF,MACE,WAACuiB,GAAgBA,CAACprB,SAAS,UAAVorB,WACf,UAAC7wB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,WACpB,UAACmxB,GAAAA,EAASA,CAAAA,UAAC,UAACvW,GAAAA,EAAGA,CAAAA,CAACwW,WAAW,UAAUC,OAAS,EAAIvrB,SAAS,WAAWO,IAAI,OAAOirB,MAAM,gBAASpT,CAAAA,EAAAA,GAAAA,EAAAA,CAAgBA,CAACjM,EAAM5G,IAAI,QAE7H,UAACO,GAAAA,CAAIA,CAAAA,CAAC5K,KAAOhB,OAAY2O,EAAYsiB,WACnC,UAACM,GAAAA,CAAQA,CAAAA,CACPnkB,GAAG,OACHtJ,KAAOitB,EACP/wB,UAAYA,EACZwxB,eAAgB,MAGpB,WAAC5vB,EAAAA,CAAIA,CAAAA,CAACC,eAAe,gBAAgBF,EAAE,OAAOkP,SAAS,iBACrD,WAACjP,EAAAA,CAAIA,CAAAA,CAAC2D,GAAK,EAAIoQ,SAAS,mBACtB,UAAC5T,GAAAA,CAAIA,CAAAA,CAACZ,WAAW,MAAM6U,QAAQ,qBAAY,SAC3C,UAACyb,GAAAA,EAASA,CAAAA,CAAChuB,KAAOwO,EAAM7N,OAAO,CAAG0P,GAAKid,EAAcjd,EAAE,CAAG9T,UAAYA,EAAYkH,MAAM,SAE1F,UAAC7G,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAY2V,SAAS,SAASpQ,GAAK,WACrDyrB,GACA,WAACpvB,EAAAA,CAAIA,CAAAA,WACH,UAACG,GAAAA,CAAIA,CAAAA,CAACiU,QAAQ,YAAY7U,WAAW,eAAM,SAC3C,UAACY,GAAAA,CAAIA,CAAAA,CAAC4T,SAAS,SAASvU,UAAU,qBAAc4vB,YAKtDF,GACA,UAAC5e,GAAAA,EAAWA,CAAAA,CACVjN,GAAK,EACLgN,MAAQA,EACRjS,UAAYA,EACZmS,MAAM,IACNwK,QAAQ,QAKlB,ECsDA,GA3F2B,OAAC,kBAAE+U,CAAgB,SAAEttB,CAAO,QA2FtButB,EAAC,QA3FuB/qB,CAAgB,CAAS,GAC1EoZ,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GAEtB,CAAElc,SAAO,mBAAE9D,CAAiB,MAAE6D,CAAI,YAAEE,CAAU,CAAE,CAAG0tB,EAEnD3sB,EAAYib,GAAYhc,EAAW6G,SAAS,EAChD,UAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,WACf,UAACK,EAAAA,CAAUA,CAAAA,CAACC,GAAG,OAAS,GAAGvB,CAAU,KAInC6B,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAAA,CAAN5B,OAAcA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,MAAkB,CAAC,GAAU3G,EAAKy0B,eAAe,CAACryB,MAAM,CAAG,GAAGzC,GAAG,CAAC,CAACK,EAAMmO,KACrG,IAAMumB,EAAgB/iB,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAC1BC,SAAU,gBACVvL,MAAO,CACLC,KAAMtG,EAAK8U,KAAK,CAAC7N,OAAO,CACxB4K,IAAK,YACL8iB,oBAAqB1tB,EACrB2tB,eAAgB,MAClB,CACF,GACMC,EAAcpjB,OAAOzR,EAAKwmB,MAAM,EAAIxmB,EAAKy0B,eAAe,CAACryB,MAAM,CACrE,MACE,WAACgB,EAAAA,EAAGA,CAAAA,CAAoC6M,GAAK,YAC3C,WAACxL,EAAAA,CAAIA,CAAAA,CAACwL,GAAK,EAAIyD,SAAS,OAAOtI,WAAW,iBACxC,UAAC2J,GAAAA,EAAWA,CAAAA,CACVtR,MAAM,OACN+b,QAAQ,IACR1K,MAAQ9U,EAAK8U,KAAK,CAClBjS,UAAYC,EACZkS,MAAM,IACNjR,WAAW,QAEb,UAACb,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACL,EAAoBY,GAAK,WAC7C,UAACkB,GAAAA,CAAIA,CAAAA,CAACiU,QAAQ,YAAY7U,WAAW,eAAQ,MAAqDyN,MAAAA,CAA9CA,OAAOzR,EAAKwmB,MAAM,EAAE9U,cAAc,GAAI,SAA4C,OAApCD,OAAOzR,EAAKwmB,MAAM,EAAI,EAAI,IAAM,QAEpI,UAAC5iB,EAAAA,CAAYA,CAAAA,CAACC,KAAO6wB,EAAgB7xB,UAAYC,WAC/C,UAACI,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACL,WAAoB,4BAG9C,WAACmjB,GAAAA,CAAIA,CAAAA,CACHzhB,EAAE,OACFyL,GAAK,EACLtL,UAAW,CAAEqD,KAAM,EAAGK,GAAI,CAAE,EAC5B9D,OAAQ,CAAEyD,KAAM,EAAGK,GAAI,CAAE,EACzBgf,oBAAqB,CAAErf,KAAM,mCAAoCK,GAAI,uCAAwC,YAE3GrI,EAAKy0B,eAAe,CAAC90B,GAAG,CAAC,CAACm1B,EAAU3mB,KACpC,IAAM2jB,EAAM9xB,EAAK8U,KAAK,CAAC7N,OAAO,CAAG,KAAO6tB,CAAAA,CAASne,EAAE,EAAI,CAAC7T,EAAoB,MAAoB,OAAbgyB,EAASne,EAAE,EAAM,SAAiB,OAAPxI,EAAAA,CAAO,CAErH,MACE,UAAC4mB,GAAOA,CAEJ,GAAGD,CAAQ,CACbhgB,KAHMigB,CAGE/0B,EAAK8U,KAAK,CAClBjS,UAAYC,GAHNgvB,EAMZ,GACE+C,GACA,UAACjxB,EAAAA,CAAYA,CAAAA,CAACP,QAAQ,OAAOQ,KAAO6wB,WAClC,WAACX,GAAgBA,CAAC1wB,QAAQ,OAAOgI,IAAhB0oB,OAA2B,SAASrvB,eAAe,SAASswB,cAAc,SAASC,KAAK,kBACvG,WAACnM,EAAAA,CAAMA,CAAAA,CAAClO,IAAM,EAAI3K,GAAK,YACrB,UAACilB,GAAAA,CAAWA,CAAAA,CAACtW,QAAQ,QAAQpa,EAAE,OAAO6K,EAAE,OAAOuE,QAAQ,OAAO8f,EAAI,IAClE,UAACwB,GAAAA,CAAWA,CAAAA,CAACtW,QAAQ,QAAQpa,EAAE,OAAO6K,EAAE,OAAOuE,QAAQ,OAAO8f,EAAI,IAClE,UAACwB,GAAAA,CAAWA,CAAAA,CAACtW,QAAQ,QAAQpa,EAAE,OAAO6K,EAAE,OAAOuE,QAAQ,OAAO8f,EAAI,OAC3D,0BA3CR1zB,EAAK8U,KAAK,CAAC7N,OAAO,CAAGkH,EAmDpC,GAAK,KAEL,MACE,UAAC7E,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CACnBgB,UAAU,wCACVb,QAAUA,EACVd,UAAYA,EACZ4B,YAAa,CACXE,kBAAmB,SAAgB,OAAN8f,GAAAA,EAAIA,CAAE,8DACnC/f,CACF,GAGN,ECjDA,GAhDoB,OAAC,CAAE0rB,WAgDRC,EAhDmB,SAgDRA,EAAC,OAhDS3rB,CAAgB,CAAS,GACrDoZ,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GAEtB,SAAElc,CAAO,mBAAE9D,CAAiB,MAAE6D,CAAI,YAAEE,CAAU,CAAE,CAAGsuB,EAEnDvtB,EAAYib,GAAYhc,EAAW6G,SAAS,EAChD,UAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,WACf,UAACK,EAAAA,CAAUA,CAAAA,CAACC,GAAG,OAAS,GAAGvB,CAAU,KAInC6B,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAAA,CAAN5B,CACd,UAACsf,GAAAA,CAAIA,CAAAA,CACHzhB,EAAE,OACFG,UAAW,CAAEqD,KAAM,EAAGK,GAAI,CAAE,EAC5B9D,OAAQ,CAAEyD,KAAM,EAAGK,GAAI,CAAE,EACzBgf,oBAAqB,CAAErf,KAAM,mCAAoCK,GAAI,uCAAwC,WAE3G1B,EAAK4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,KACtB,IAAM2jB,EAAM9xB,EAAK8U,KAAK,CAAC7N,OAAO,CAAG,KAAOjH,CAAAA,CAAK2W,EAAE,EAAI,CAAC7T,EAAoB,MAAgB,OAAT9C,EAAK2W,EAAE,EAAM,SAAiB,OAAPxI,EAAAA,CAAO,CAE7G,MACE,UAAC4mB,GAAOA,CAEJ,GAAG/0B,CAAI,CACT6C,KAHMkyB,KAGMjyB,EACZ6wB,aAAa,KAHP7B,EAMZ,KAEA,KAEJ,MACE,UAACxoB,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CACnBgB,UAAU,wCACVb,QAAUA,EACVd,UAAYA,EACZ4B,YAAa,CACXE,kBAAmB,SAAgB,OAAN8f,GAAAA,EAAIA,CAAE,8DACnC/f,CACF,GAGN,kBCIA,OArD4B,OAAC,OAAEqL,CAAK,OAAE/P,CAAK,IAqD5BswB,OArD8BxyB,CAAS,CAAS,GAEvD,CACJsc,MAkD8BkW,EAAC,CAlDrBC,CAAa,CACvBzf,IAAK0f,CAAU,CAChB,CAAGvb,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CAAEjV,MAAOA,EAAOoO,aAAc2B,EAAMxB,aAAa,CAAErE,SAAU6F,EAAM7F,QAAQ,CAAE8E,SAAU,EAAGD,YAAa,CAAE,GAE9H,MACE,WAACxP,GAAAA,CAAcA,CAAAA,CAACC,OAAS,YACvB,UAACE,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS5H,MAAM,gBAC9B,UAACsR,GAAAA,EAAWA,CAAAA,CACVD,MAAQA,EACRjS,UAAYA,EACZmS,MAAM,IACNwgB,WAAW,IACXzxB,WAAW,UAGf,WAACU,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAASsY,GAAK,YAC7B,UAACjR,GAAAA,EAAaA,CAAAA,CACZzL,QAAS,CAAEX,KAAMwO,EAAM7N,OAAO,EAC9BpE,UAAYA,EACZwjB,WAAW,WACXtc,MAAM,MAER,UAAC0rB,GAAAA,CAAkBA,CAAAA,CAAC3gB,MAAQA,EAAQ1M,GAAK,EAAIvF,UAAYA,OAEzDiS,WAAMxB,aAAa,EAAkBwB,SAAMxB,aAAa,EACxD,WAACwV,EAAAA,CAAMA,CAAAA,CAACC,QAAU,YAChB,UAAC7lB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKsB,WAAa,aAAM,UACnE,UAACb,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKM,MAAM,0BACpD,UAACmH,OAAAA,UAAO,IAAmD,OAA9CuH,OAAOqD,EAAMxB,aAAa,EAAE5B,cAAc,WAI7D,WAACoX,EAAAA,CAAMA,CAAAA,CAACC,QAAU,EAAI1d,WAAW,qBAC/B,UAACnI,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKsB,WAAa,aAAM,aACnE,UAACb,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKM,MAAM,iBAAiBiB,WAAW,WAAWC,UAAU,sBACrG,UAACiG,OAAAA,UAAOorB,SAGVC,YACA,WAACzM,EAAAA,CAAMA,CAAAA,CAACC,QAAU,EAAI1d,WAAW,qBAC/B,UAACnI,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKsB,WAAa,aAAM,UACnE,UAACb,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYJ,SAAS,KAAKM,MAAM,iBAAiBiB,WAAW,WAAWC,UAAU,sBACrG,WAACiG,OAAAA,WAAK,IAAGqrB,YAMrB,ECEA,GAAe70B,EAAAA,IAAU,CAtDI,OAAC,OAC5BoU,CAAK,MAqDwC4gB,CApD7C3wB,CAAK,WACLlC,CAAS,CACH,GAEA,CACJsc,SAAUmW,CAAa,CACvBzf,IAAK0f,CAAU,CAChB,CAAGvb,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CAAEjV,MAAOA,EAAOoO,aAAc2B,EAAMxB,aAAa,CAAErE,SAAU6F,EAAM7F,QAAQ,CAAE8E,SAAU,EAAGD,YAAa,CAAE,GAE9H,MACE,WAACzR,EAAAA,EAAEA,CAAAA,CACDszB,KAAK,kBAEL,UAACrzB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAAC3R,GAAAA,EAAWA,CAAAA,CACVD,MAAQA,EACRjS,UAAYA,EACZmS,MAAM,IACNwgB,WAAW,IACXzxB,WAAW,UAGf,UAACzB,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,WAACjiB,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS5H,MAAM,QAAQiB,eAAe,0BACrD,UAACgO,GAAAA,EAAaA,CAAAA,CACZzL,QAAS,CAAEX,KAAMwO,EAAM7N,OAAQ,EAC/BpE,UAAYA,EACZwjB,WAAW,WACXtc,MAAM,MAER,UAAC0rB,GAAAA,CAAkBA,CAAAA,CAAC3gB,MAAQA,EAAQ1M,GAAK,EAAIvF,UAAYA,EAAY+yB,QAAQ,IAAIC,YAAa,CAAED,QAAS,CAAE,SAG/G,UAACtzB,EAAAA,EAAEA,CAAAA,CAACiJ,SAAS,IAACmb,cAAc,kBAC1B,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,wBACtCyR,EAAMxB,aAAa,EAAI,IAAmD,OAA9C7B,OAAOqD,EAAMxB,aAAa,EAAE5B,cAAc,QAG5E,UAACpP,EAAAA,EAAEA,CAAAA,CAACiJ,SAAS,IAACmb,cAAc,kBAC1B,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,kBACtCiyB,MAGN,UAAChzB,EAAAA,EAAEA,CAAAA,CAACiJ,SAAS,IAACmb,cAAc,kBAC1B,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,kBACtCkyB,GAAc,IAAiB,OAAZA,SAK/B,GC7BA,GArByB,OAAC,MAAE5uB,CAAI,CAAEuC,KAAG,IAqBtB4sB,OArBwBjzB,CAAS,CAAS,GACvD,IAoB6BizB,EAnB3B,WAAC9sB,EAAAA,CAAKA,CAAAA,WACJ,UAACyE,EAAAA,CAAKA,CAAAA,CAACvE,IAAMA,WACX,WAAC7G,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,UAChB,UAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,eAAM,qBAChB,UAAC0F,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,MAAM8H,SAAS,aAAC,UAC1B,UAACpC,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,MAAM8H,SAAS,aAAC,aAC1B,UAACpC,EAAAA,EAAEA,CAAAA,CAAC1F,MAAM,MAAM8H,SAAS,aAAC,eAG9B,UAACnC,EAAAA,CAAKA,CAAAA,UACFzC,EAAKhH,GAAG,CAAC,CAACK,EAAMmO,IAChB,UAACunB,GAAoBA,CAAyD,GAAG11B,CAAI,CAAG6C,UAAYA,GAAxE7C,EAAK8U,GAAZ4gB,EAAiB,CAACzuB,OAAO,EAAIpE,CAAAA,CAAYsL,EAAQ,GAAC,OAKjF,ECiBA,GAnCoB,OAAC,CAAEgnB,WAmCRY,EAnCmB,CAAS,GACnClT,EAAWC,CAAAA,EAAAA,EAkCQ,CAlCRA,CAAAA,CAAWA,GAEtB,SAAElc,CAAO,mBAAE9D,CAAiB,MAAE6D,CAAI,CAAEE,YAAU,CAAE,CAAGsuB,EAEnDvtB,EAAYib,GAAYhc,EAAW6G,SAAS,EAChD,UAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,WACf,UAACK,EAAAA,CAAUA,CAAAA,CAACC,GAAG,OAAS,GAAGvB,CAAU,KAInC6B,EAAU/B,SAAAA,KAAAA,EAAAA,CAAAA,CAAM4B,KAAAA,EACpB,iCACE,UAACK,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WAAQ,UAACgtB,GAAgBA,CAACnvB,KAAOA,EAAK4B,KAAK,CAAGW,IAAMrC,EAA3BivB,SAA+C,CAAG,GAAK,EAAIjzB,UAAYC,MACvH,UAACiG,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,KAAM,WAAUnC,EAAK4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IACrD,UAACknB,GAAmBA,CAEhB,GAAGr1B,CAAI,CACT6C,UAAYC,GAFN9C,EAAK8U,EADOugB,GACF,CAACpuB,OAAO,EAAInE,CAAAA,CAAoBqL,EAAQ,GAAC,QAK7D,KAEJ,MACE,UAAC7E,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CACnBgB,UAAU,wCACVb,QAAUA,EACVd,UAAYA,GAIlB,ECnBA,GAAelH,EAAAA,IAAU,CAlBC,OAAC,MAAE6C,CAAI,IAkBWyyB,EAlBTpS,CAAI,OAAE7e,CAAK,gBAAEkxB,CAAc,WAAEpzB,CAAS,CAAS,GAE1E+b,EAAUd,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,gBAAiB,iBAEnD,MACE,WAAC1a,EAAAA,EAAGA,CAAAA,CAACb,GAAG,OAAOC,GAAG,OAAOoc,QAAUA,EAAU5b,aAAa,iBACxD,UAAC4B,GAAAA,CAAIA,CAAAA,CAACiU,QAAQ,YAAYpW,SAAS,KAAKsB,WAAa,IAAMkM,GAAK,WAAM1M,IACtE,WAACkB,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,mBACbuY,EACF,WAAC1gB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYkB,WAAW,MAAMC,WAAW,WAAWC,UAAU,aAAaZ,QAAQ,OAAO+E,GAAK,YAChHrD,EACAmD,EAAQ+tB,GAAmB,WAACrxB,GAAAA,CAAIA,CAAAA,CAAC7B,MAAM,2BAAiB,KAAIkzB,EAAgB,eAKxF,GC+CA,GA1DsB,SAGPjwB,EAAb,IAAMM,EAAAA,IAuDO4vB,IAvDAlwB,EAFEC,CAAAA,EAAAA,EAAAA,EAyDWiwB,EAAC,KAzDZjwB,CAASA,GAEJI,KAAK,CAACC,IAAI,GAAjBN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBsT,QAAQ,GAElCyK,EAAelV,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,UAAW,CAC1C7H,WAAY,MAAEV,CAAK,EACnByQ,aAAc,CAAE7P,SAASgB,CAAQ5B,EAAO0Q,gBAAgB,CAAM,CAChE,GAEMmf,EAAavf,GAAe,CAAEtQ,MAAK,GAEzC,CAFiCsQ,EAE7BmN,EAAand,OAAO,EAAIuvB,EAAWvvB,OAAO,CAC5C,CAD8C,KACvC,UAACif,GAAAA,CAAcA,CAAAA,CAAAA,GAGxB,IAAMlM,EAAcoK,EAAapd,IAAI,CAC/B,CAAEwY,SAAUiX,CAAW,CAAEtc,MAAOC,CAAS,CAAE,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAgBA,CAAC,CACnEjV,MAAO4U,OAAAA,EAAAA,KAAAA,EAAAA,EAAa9I,YAAAA,CAAb8I,EAA6B,IACpC5F,SAAU,EACVD,YAAa,EACbX,YAAY,CAAEwG,QAAAA,KAAAA,EAAAA,EAAarG,OAAbqG,MAA0B,CACxC1K,SAAUjD,OAAOlL,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACC,QAAQ,CACjD,GAEMonB,EAAapc,GAAmBkc,EAAWxvB,IAAI,EAC/CoX,EAASsY,EAAWhgB,GADW4D,OACD,CAAG,IAAM,GACvCC,EAAWH,EAAU9Z,IAAI,CAACo2B,EAAWxgB,GAAG,EACxCygB,EAAgBD,EAAWroB,GAAG,CAAG,EACrC,GAAeqoB,MAAAA,CAAXtY,GAA+BsY,MAAAA,CAApBA,EAAWroB,GAAG,CAAE,KAA6C,OAAzCqoB,EAAWroB,GAAG,CAAG,EAAI,SAAW,SACnE,IAEF,MACE,WAACvJ,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIJ,OAAS,EAAIuD,GAAI,CAAEE,KAAM,MAAOK,GAAI,CAAE,EAAG2sB,cAAe,CAAEhtB,KAAM,SAAUK,GAAI,KAAM,YACxG,UAAC2tB,GAAiBA,CAChBzyB,KAAK,YACLwB,GAFgBixB,GAERrc,OAAAA,EAAAA,KAAAA,EAAAA,EAAarG,aAAbqG,EAA6B,GAAgBO,MAAAA,CAAZ6D,EAAQ,KAA0B,OAAtB7D,EAAS7P,QAAQ,CAAC,IAAQ,MAC/ExH,UAAYkhB,EAAanV,SAAS,EAAIunB,EAAWvnB,SAAS,CAC1DgV,KAAO,UAACtgB,EAAAA,CAAOA,CAAAA,CAACC,KAAK,SAASqQ,QAAQ,OAAO3Q,WAAa,EAAIF,MAAM,qBAEtE,UAACizB,GAAiBA,CAChBzyB,KAAO,GAAyB,OAArByH,GAAAA,CAAaA,CADRgrB,KACc,CAAE,YAChCjxB,MAAQ,GAAqBiG,MAAAA,CAAjBorB,EAAa,KAAyB,OAArBprB,GAAAA,CAAaA,CAACC,KAAK,EAChDgrB,eAAiB,EAAWM,EAAE,CAACr2B,GAAAA,EAAIA,EAAoC,GAAhC,IAA4B,OAAvB6Z,EAAU1P,QAAQ,CAAC,IAC/DxH,UAAYkhB,EAAanV,SAAS,EAAIunB,EAAWvnB,SAAS,CAC1DgV,KAAO,UAACjQ,GAAAA,CAAeA,CAAAA,CAACC,QAAQ,WAElC,UAACoiB,GAAiBA,CAChBzyB,KAAK,SACLwB,MAAQuxB,EACRL,eAAiB,GAAgBI,MAAAA,CAAZtY,EAAQ,KAAgC,OAA5BsY,EAAWxgB,GAAG,CAACxL,QAAQ,CAAC,IACzDxH,UAAYkhB,EAAanV,SAAS,EAAIunB,EAAWvnB,SAAS,CAC1DgV,KAAO,UAACtgB,EAAAA,CAAOA,CAAAA,CAACC,KAAK,SAASqQ,QAAQ,OAAO3Q,WAAa,EAAIF,MAAM,uBAI5E,EC1CMyzB,GAAiB,CACrB1uB,GAAI,EACJmI,GAAI,CAAEjI,KAAM,EAAGK,GAAI,CAAE,EACrB7F,GAAI,EACJmC,UAAW,CACb,EAEM8xB,GAAwB,CAC5BC,GAAI,EACJ/xB,UAAW,CACb,EAEMgyB,GAAsB,KAAyChxB,IAAI,CAAC,KAAMixB,GAAAA,EAAkBA,EAgJlG,GAzIsB,QAuGeC,EACOtC,MAVtC1tB,EA9FiB,IAyIRiwB,UAzIU/wB,GAAe,CAAI,CAyIf,eAzIiBoB,GAAiB,CAAI,CAAS,GACpEnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClB4c,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GACtB5c,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExBN,EAAYnF,EAAAA,MAAY,CAAiB,MAEzCq2B,EAAoBC,GAAAA,EAAW,CAACA,GAAAA,EAAa,CAACC,wBAAwB,CAAEC,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAAGF,OAAO,EAC/F,CAAEG,EAAgBC,EAAmB,CAAG12B,EAAAA,QAAc,CAAkBq2B,WAA+B,OAAS,cAChH,CAAEM,EAAYC,EAAe,CAAG52B,EAAAA,QAAc,CAAkCi2B,GAAoB3wB,EAAOK,KAAK,CAAC6H,IAAI,GAAK,EAAE,EAE5H2D,EAAMzL,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACwL,GAAG,EAC1CvL,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAE5CixB,EAAazwB,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACnCC,aAAc,iBACdC,WAAY,MAAEV,CAAK,EACnB8iB,QAAS,CAAElb,KAAM,QAAS,YAC1BrI,EACAL,QAAS,CACP0B,QAASC,GAAmB,EAAC0K,GAAOA,UAAR,IAAoC,iBAARA,CAAQ,CAAa,CAC7EmF,gBAAgB,EAChB5P,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAmBmwB,EAAAA,EAA4BA,CAAE,GAAI,CAAEtrB,iBAAkB,IAAK,EACjH,CACF,GAEMqoB,EAAmBztB,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzCC,aAAc,sBACdC,WAAY,MAAEV,CAAK,YACnBT,EACAL,QAAS,CACP0B,QAASC,GAA0B,gBAAR0K,GAAyBslB,iBACpD/vB,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAwBowB,EAAAA,EAAkBA,CAAE,GAAI,CAAEvrB,iBAAkB,IAAK,EAC5G,EACAkd,QAAS,CAAElb,KAAMmpB,CAAW,CAC9B,GAEMR,EAAY/vB,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CAClCC,aAAc,eACdC,WAAY,MAAEV,CAAK,YACnBT,EACAL,QAAS,CACP0B,QAASC,GAA0B,gBAAR0K,GAA4C,SAAnBslB,EACpD/vB,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAiBqwB,EAAAA,EAAgBA,CAAE,GAAI,CAAExrB,iBAAkB,IAAK,EACnG,EACAkd,QAAS,CAAElb,KAAMmpB,CAAW,CAC9B,GAEMM,EAA8Bj3B,EAAAA,WAAiB,CAAC,IACpDs2B,GAAAA,EAAW,CAACA,GAAAA,EAAa,CAACC,wBAAwB,CAAE12B,GACpD62B,EAAkB72B,EACpB,EAAG,EAAE,EAECq3B,EAAyBl3B,EAAAA,WAAiB,CAAC,IAC/Cm2B,EAAU3xB,cAAc,CAAC,CAAEgJ,KAAMnJ,CAAM,GACvCwvB,EAAiBrvB,cAAc,CAAC,CAAEgJ,KAAMnJ,CAAM,GAC9CuyB,EAAcvyB,EAChB,EAAG,CAAE8xB,EAAWtC,EAAkB,EAElC,GAAI,CAACruB,GAAa,CAACH,EACjB,OAAO,KADwB,IAI3B8xB,EACJ,UAACC,GAAAA,CAAaA,CAAAA,CAACC,aAAc,CAAEvzB,EAAG,OAAQ,EAAGwzB,iBAAiB,OAAGX,EAAAA,KAAAA,EAAAA,EAAYj1B,MAAM,MAAlBi1B,IAC/D,UAACY,GAAAA,CAAeA,CAAAA,CAAeC,OAAO,IAACzyB,SAAWmyB,EAAyBlyB,aAAe2xB,MAIxF5tB,GAAmBvB,QAAQmvB,EAAAA,KAAAA,EAAAA,EAAYj1B,MAAAA,EAEvC+1B,EAAO,CACX,CAAExhB,GAAI,eAAgBvH,MAAO,GAAgC,OAA5BtO,EAAAA,CAAMA,CAACC,KAAK,CAACq3B,aAAa,CAAE,OAAMC,UAAW,UAACtC,GAAWA,CAACZ,YAAcoC,EAAfxB,CAA8B,EACxH,CACEpf,GAAI,cACJvH,MAAO,OACPipB,UAAWlB,WACT,UAAC/B,GAAWA,CAACD,YAAc0B,EAAfzB,iBAA8C3rB,IAC1D,UAAC+qB,GAAkBA,CAACD,iBAAmBA,EAAmBttB,EAAvCutB,MAAiDluB,EAAOmD,iBAAmBA,GAClG,EACD,CAEK6uB,EACJ,UAACC,GAAAA,CAAgBA,CAAAA,CACf9yB,SAAWkyB,EACXjyB,aAAeyxB,EACf5zB,KAAK,OACLiC,QAAU,CACR,CAAE4J,MAAO,gBAAiBrK,MAAO,aAAc6e,KAAM,aAAc4U,SAAU3V,CAAS,EACtF,CAAEzT,MAAO,OAAQrK,MAAO,OAAQ6e,KAAM,OAAQ4U,SAAU3V,CAAS,EAClE,GAOHhc,EADU,eAAe,CAAvBgL,EAC8B,SAAnBslB,EAA4BN,EAAUhwB,UAAU,CAAG0tB,EAAiB1tB,UAAU,CAE9E0wB,EAAW1wB,UAAU,CAGpC,IAAM4xB,EACJ,CAAE5B,EAAU/zB,iBAAiB,WAAI+zB,EAAAA,EAAUlwB,IAAAA,GAAVkwB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBtuB,KAAK,CAACnG,MAAAA,GACtD,CAACmyB,EAAiBzxB,iBAAiB,WAAIyxB,EAAAA,EAAiB5tB,IAAAA,GAAjB4tB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBhsB,KAAK,CAACnG,MAAAA,EAEjEs2B,EAAmB,WAAR7mB,GAA4B,iBAARA,EAE/B8mB,EACJ,iCACE,WAAC7P,EAAAA,CAAMA,CAAAA,CAACC,QAAU,YACd2P,IAAaD,GAAchvB,CAAAA,CAAe,EAAM6uB,CAAnCG,CACbC,IAAaD,GAAchvB,CAAAA,CAAe,EAAMouB,CAAnCY,IAEf5xB,EAAW6G,SAAS,EAAI,CAACmV,GAAY,UAAC1a,EAAAA,CAAUA,CAAAA,CAAG,GAAGtB,CAAU,MAItE,MACE,iCACE,UAACqvB,GAAaA,CAAAA,GAEd,UAAC9yB,EAAAA,CAFa8yB,CAEV9yB,CAAAA,CAAC0N,IAAMjL,IACX,UAAC+yB,GAAAA,CAAUA,CAAAA,CACTT,KAAOA,EACPtf,QAAQ,UACR6E,YAAY,OACZU,KAAK,KACLya,aAAehW,EAAW4T,GAAwBD,GAClDmC,UAAYA,EACZG,eAAyB,iBAARjnB,CAA0B,EAACgR,EAAsF,CAAC,EAA5E,CAAE9S,SAAU,EAAG1M,QAAS,OAAQqB,eAAgB,gBAAiB0D,GAAI,CAAE,EAC9H2wB,cAAgB,CAAClW,MAIzB,kEChJA,IAAM8T,GAAsB,KAAsChxB,IAAI,CAAC,KAAMqzB,GAAAA,EAAcA,EACrFC,GAAwB,IAA+CtzB,IAAI,CAAC,IADzDgxB,CAC+DzN,GAAAA,CAAyBA,EAI3GgQ,GAAe,CAAC9P,EAAkB+P,EAA8BlyB,MAChEmiB,EAAQ1iB,MAAM,EAAE,CACK,SAAnB0iB,EAAQ1iB,MAAM,EAAeyyB,EAAcpR,IAAI,CAACzhB,IAAI,GAAKW,CAAAA,GAAS,CAG/C,OAAnBmiB,EAAQ1iB,MAAM,EAAayyB,EAAclR,EAAE,CAAC3hB,IAAI,GAAKW,CAAAA,CAJ/CP,EAIwD,GAIhE0iB,EAAQlb,IAAI,GAAIkb,EAAQlb,IAAI,CAAC9L,MAAM,EAAE,CACnC,CAAC+2B,EAAcrkB,KAAK,GAAI,CAACsU,EAAQlb,IAAI,CAAC1N,QAAQ,CAAC24B,EAAcrkB,KAAK,CAAC5G,IAAI,CAD5C9L,EAC+C,GAgBpD,QA8HFgnB,KA9HG,WAAEvjB,CAAS,KA8N3BuzB,UA9N6BC,EA5BrB,EA4BmD,OA8NtCD,EAAC,GA9NuB1sB,EAAgB3G,GAAe,CAAI,gBAAEoB,EAAiB,EAAI,CAAS,GACvHnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClB4F,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAC5B+W,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GACtB5c,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExB/B,EAAiBgC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAEtD,CAAEmF,EAAaC,EAAgB,CAAGhL,EAAAA,QAAc,CAAC,IACjD,CAAEiL,EAAeC,EAAkB,CAAGlL,EAAAA,QAAc,CAAC,GAErD44B,EAAclzB,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACyO,KAAK,GAAKtD,OAEzD,CAAE4X,EAASkF,EAAY,CAAG5tB,EAAAA,QAAc,CAC5C,CACEwN,KAAMyoB,GAAoB3wB,EAAOK,KAAK,CAAC6H,IAAI,GAAK,EAAE,CAClDxH,OAAQuyB,GAAsBjzB,EAAOK,KAAK,CAACK,EADlBiwB,IACwB,CACnD,GAGI,SAAE/vB,CAAO,CAAE9D,mBAAiB,CAAE6D,MAAI,YAAEE,CAAU,gBAAE3B,CAAc,CAAE,CAAG4B,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzFC,aAAc,0BACdC,WAAY,CAAEV,KAAMlC,CAAe,EACnCglB,QAASkQ,EAAc,CAAExkB,MAAOwkB,CAAY,EAAIlQ,YAChDvjB,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBmyB,CAAAA,EAAAA,GAAAA,EAAAA,CAAqBA,MAAC/nB,EAAW,CAChDrF,aAAc,QACdgC,MAAO,GACP/B,YAAa,EACf,EACF,CACF,GAEMotB,EAAyB94B,EAAAA,WAAiB,CAAE+4B,IAChDv0B,EAAe,CAAE,GAAGkkB,CAAO,CAAElb,KAAMurB,CAAU,GAC7CnL,EAAW,GAAgB,EAAE,GAAGoL,CAAS,CAAExrB,EAAhB,GAAsBurB,EAAU,EAC7D,EAAG,CAAErQ,EAASlkB,EAAgB,EAExBy0B,EAA4Bj5B,EAAAA,WAAiB,CAAC,IAClD,IAAMk5B,EAAYX,GAAsBQ,GACxCv0B,EAAe,CAAE,GAAGkkB,CAAO,CAAE1iB,OAAQkzB,CAAU,GAC/CtL,EAAW,GAAgB,EAAE,GAAGoL,CAAS,CAAEhzB,EAAhB,KAAwBkzB,EAAU,EAC/D,EAAG,CAAExQ,EAASlkB,EAAgB,EAExB20B,EAAmBn5B,EAAAA,WAAiB,CAAC,KACzCwE,EAAe,CAAC,EAClB,EAAG,CAAEA,EAAgB,EA6Cf40B,EAAoBp5B,EAAAA,WAAiB,CAAC,KAC1CgL,EAAe,2EACjB,EAAG,EAAE,EAECW,EAAoB3L,EAAAA,WAAiB,CAAC,KAC1CgL,EAAe,qFACjB,EAAG,EAAE,EAECmB,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,aAA4C,OAA9B3I,EAAemC,WAAW,IAC/CyG,cAAe8sB,EACf7sB,cAAeZ,EACfa,WAAgC,IAApBrG,EAAWoD,IAAI,GAAU/B,CAAQoxB,CAC/C,GAEAnsB,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,iBACPC,QA7D4E,CA6DnEf,GA5DTZ,EAAe,IAEf,IAAMquB,EAAiC,EAAE,CACrCC,EAAW,EAEfptB,EAAQqtB,eAAe,CAACC,OAAO,CAACC,IAC1BxzB,CAAAA,QAAAA,KAAAA,EAAAA,EAAAA,KAAM4B,GAAS5B,EAAK4B,KAAK,CAACnG,MAAM,CAAG23B,EAAS33B,MAAM,EAAIi3B,EACpDH,GAAa9P,EAAS+Q,EAAU/1B,IAClC41B,EAFqE,EAKnEd,GAAa9P,EAAS+Q,EAAU/1B,EAJiB,EAKnD21B,EAASrK,IAAI,CAACyK,EAGpB,GAEIH,CANqD,CAM1C,GAAG,EACCrtB,GAAQA,EAAOqtB,GAG9BD,EAAS33B,MAAM,CAAG,GAAG,EACXmK,YAAY,CACtBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,0BAA2B,CAAExF,WAAY,CAAEV,KAAMlC,CAAe,EAAG0S,YAAa,CAAE,GAAGsS,CAAO,CAAG,GAC9G,IACE,GAAK3c,CAAD,CAIJ,MAAO,CACL,CALa,EAKVA,CAAQ,CACXlE,MAAO,IACFwxB,KACAttB,EAASlE,KAAK,CAClB,CAEL,EAIN,CAqBA,GAEA,IAAM6xB,EAAY15B,EAAAA,OAAa,CAAC,IAAO,EACrCuG,QAASqyB,GAAe,GACxB/1B,KAAM,GACN82B,SAAU,GACVpb,OAAQ,GACR/Q,KAAM,QACR,GAAI,CAAEorB,EAAa,EAEnB,GAAI,CAACpzB,GAAa,CAACH,EACjB,OAAO,KADwB,IAI3Bu0B,EAAmB,CAAClR,CAAY,OAAZA,GAAAA,EAAQlb,IAAI,GAAZkb,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAchnB,MAAAA,IAAU,EAAMgnB,GAAAA,MAAc,CAAG,GAAI,EACvEmR,EAAoB,CAACjB,GAAe,CAACgB,GAAoB,QAAC3zB,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAACnG,MAAAA,GAAU,CAACgC,EAEjFsE,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAAA,CAAN5B,CACd,iCACE,UAACiC,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WACrB,UAAC0xB,GAAAA,CAAkBA,CAAAA,CACjB7zB,IAAI,OAAGA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAClBkyB,YAAcr2B,EACds2B,UAAU,IACVxxB,IAAMqxB,EAAoB,EAAI5sB,EAAAA,EAAyBA,CACvDgtB,mBAAmB,IACnBC,eAAqC,IAApB/zB,EAAWoD,IAAI,EAAU,CAACqvB,EAC3CuB,gBAAkBpvB,EAClBqvB,cAAgBnvB,EAChB9I,UAAYC,MAGhB,WAACiG,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,IAAM,aACC,IAApBjC,EAAWoD,IAAI,EAAU,CAACqvB,GAC1B,UAAC1rB,GAAAA,EAA2B,EAC1BC,IAAMC,OAAOC,QAAQ,CAAClK,IAAI,CAC1BmK,IAAMrC,EACNsC,MAAQxC,EACRyC,KAAK,iBACLrL,UAAYC,IAGhB,UAACi4B,GAAAA,CAAiBA,CAAAA,CAChBp0B,IAAI,OAAGA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,YACOvC,EACds2B,UAAU,IACVC,mBAAmB,IACnB93B,UAAYC,UAIhB,KAEEk4B,EAAuB1B,GAC3B,WAAC70B,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAASqI,SAAS,OAAOzD,GAAI,CAAEjI,KAAMuyB,EAAoB,EAAI,EAAGlyB,GAAI,CAAE,EAAG3E,GAAK,YAC7F,UAACkB,GAAAA,CAAIA,CAAAA,CAACZ,WAAW,SAASN,GAAK,EAAIlB,GAAK,WAAI,sBAC5C,WAACiC,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS7I,GAAK,YAC7B,UAACuS,GAAAA,EAAgB,EAACD,MAAQslB,EAAYv3B,UAAYC,IAChD+f,EAAW,UAAC8P,GAAAA,CAAiBA,CAAAA,CAACrsB,KAAOgzB,IAAkBA,EACzD,UAAC2B,GAAAA,CAAeA,CAAAA,CAAC5pB,QAAUwoB,UAK3BjyB,EACJ,iCACIib,GAAYmY,EACZ,CAACT,GACD,WAAC1yB,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,YACb,CAAC+a,GAAYmY,EACb,CAAC1B,GACD,UAAC4B,GAAAA,CAAmBA,CAAAA,CAClBC,mBAAqB/R,EAAQlb,IAAI,CACjCktB,mBAAqB5B,EACrBxB,kBAAoBsC,EACpBe,iBAAiB,IACjBC,sBAAwB3B,EACxB4B,qBAAuBnS,EAAQ1iB,MAAM,CACrC7D,UAAYC,IAGdsB,GACA,UAACwjB,GAAAA,CAAoBA,CAAAA,CACnB3gB,QAAU7C,EACVyjB,OAAQ,CAAE3Z,KAAM,kBAAmBqb,WAAY,UAAW/iB,YAAa4iB,EAAQ1iB,MAAO,EACtF0B,GAAI,CAAEJ,KAAM,EAAGK,GAAI,MAAO,EAC1BxF,UAAYC,IAGhB,UAACqF,EAAAA,CAAUA,CAAAA,CAACC,GAAI,CAAEJ,KAAM,OAAQK,GAAI,CAAE,EAAK,GAAGxB,CAAU,SAMhE,MACE,UAACyC,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CACnBgB,UAAU,gCACVC,YAAa,CACXE,kBAAmB,SAAgB,OAAN8f,GAAAA,EAAIA,CAAE,sDACnC/f,kBAAkBvB,CAAQoyB,CAC5B,EACA5xB,QAAUA,EACVd,UAAYA,GAGlB,kECjOA,OAzC0B,QA+BZvB,KA/Ba,CACzBK,QAAM,aACNF,CAAW,GAuCmBg1B,EAAC,EAtC/Bn1B,CAAK,eACLo1B,GAAgB,CAAI,gBACpBb,GAAiB,CAAI,iBACrBC,CAAe,eACfC,CAAa,gBACb12B,CAAc,qBACdu2B,CAAmB,KACnBzxB,CAAG,SACHklB,CAAO,SACPsN,CAAO,CACD,GAEAC,EAAmBj7B,EAAAA,WAAiB,CAAC,IACzCg7B,EAAQ32B,GACRsB,EAAMorB,eAAe,CAACmK,CAAAA,EAAAA,GAAAA,CAAAA,CAAsBA,CAAC72B,GAC/C,EAAG,CAAE22B,EAASr1B,EAAO,EAErB,MACE,UAACw1B,GAAAA,CAAUA,CAAAA,CACTn1B,OAASA,EACTF,YAAcA,EACdi1B,cAAgBA,EAChBb,eAAiBA,EACjBC,gBAAkBA,EAClBC,cAAgBA,EAChB12B,eAAiBA,EACjBu2B,oBAAsBA,EACtBzxB,IAAMA,EACNX,KAAK,SAAGlC,EAAAA,EAAMM,IAAAA,GAANN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYkC,KAAK,CACzBzF,kBAAoBuD,EAAMvD,iBAAiB,CAC3C8D,QAAUP,EAAMO,OAAO,CACvBsqB,WAAayK,EACbjmB,KAAO0Y,EACP/nB,MAAQA,GAGd,kBCjCA,IAAMhG,GAAiB,IAA+CsF,IAAI,CAAC,KAAMujB,GAAAA,CAAyBA,EAEpG4S,EAFcz7B,CAEA,CAACmG,EAAkCu1B,EAA0B90B,KAC/E,GAAI,CAACT,EACH,OAAO,EAGT,EAJkB,CAIE,QAAQ,CAAxBA,EACF,OAAOu1B,EAAYhU,IAAI,CAACzhB,IAAI,GAAKW,EAGnC,GAAoB,OAAhBT,EAAsB,KACjBu1B,EAAP,MAAOA,CAAAA,QAAAA,EAAAA,EAAY9T,EAAAA,GAAZ8T,KAAAA,MAAAA,KAAAA,EAAAA,EAAgBz1B,IAAAA,IAASW,CAClC,CACF,EAqKA,GA3JmB,OAAC,WAAEpB,CAAS,UA2JNm2B,EAAC,GA3JO3C,EA1BV,EA0BwC,CAAEtzB,WAAhB2G,KAA+B,CAAI,gBAAEvF,GAAiB,CAAI,CAAS,GAC5GnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClB4F,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAC5B5F,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExB,CAAEsF,EAAaC,EAAgB,CAAGhL,EAAAA,QAAc,CAAC,IACjD,CAAEiL,EAAeC,EAAkB,CAAGlL,EAAAA,QAAc,CAAC,GACrD,CAAEgV,EAAMgmB,EAAS,CAAGh7B,EAAAA,QAAc,CAAuCu7B,CAAAA,EAAAA,GAAAA,CAAAA,CAAqBA,CAA2Bj2B,EAAOK,KAAK,CAAE61B,GAAAA,CAAYA,GAEnJrZ,EAAWC,CAAAA,EAAAA,GAAAA,CAAAA,CAAWA,GACtB1e,EAAiBgC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAEtD,CAAEE,EAAaC,EAAgB,CAAG/F,EAAAA,QAAc,CAAsBL,GAAe2F,EAAOK,KAAK,CAACK,MAAM,GAExGy1B,EAAkBr1B,CAAAA,EAFkEzG,EAElEyG,CAAAA,CAAiBA,CAAC,CACxCC,aAAc,cACdC,WAAY,CAAEV,KAAMlC,CAAe,EACnCglB,QAAS,CAAE1iB,OAAQF,CAAY,EAC/B4nB,QAASwN,CAAAA,EAAAA,GAAAA,CAAAA,CAAsBA,CAAmFlmB,aAClH7P,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAgB+0B,GAAAA,EAAEA,CAAE,GAAI,CAAElwB,iBAAkB,CAC3EC,aAAc,QACdgC,MAAO,EACP/B,YAAa,EACf,CAAE,EACJ,CACF,GAEM1E,EAAqBhH,EAAAA,WAAiB,CAAC,IAE3C,IAAMiH,EAAStH,GAAeE,GAC9BkG,EAAekB,GACfw0B,EAAgBj3B,YAFa7E,EAEC,CAAC,CAAEqG,OAAQiB,CAAO,EAClD,EAAG,CAAEw0B,EAAiB,EAEhB7vB,EAA8D5L,EAAAA,WAAiB,CAAEkM,IACrFlB,EAAe,IAEfG,EAAYU,YAAY,CACtBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,cAAe,CAAExF,WAAY,CAAEV,KAAMlC,CAAe,EAAG0S,YAAa,CAAEpQ,OAAQF,CAAY,CAAE,GAC3G,IACE,GAAI,CAACiG,EACH,OAGF,CAJe,GAITstB,EAA+B,EAAE,CACnCC,EAAW,EAsBf,OApBAptB,EAAQyvB,YAAY,CAACnC,OAAO,CAACl4B,IAC3B,IAAMs6B,EAAY7vB,EAASlE,KAAK,CAACg0B,SAAS,CAAC,GAAUv8B,EAAKsG,IAAI,GAAKtE,EAAGsE,IAAI,EAEtEg2B,EAAY,CAAC,EACf7vB,CADkB,CACTlE,KAAK,CAAC+zB,EAAU,CAAGt6B,EAExB85B,GAAYt1B,EAAaxE,EAAIoC,KAC3B21B,EAAS33B,MAAM,CAAGqK,EAASlE,CADiB,IACZ,CAACnG,MAAM,EAAIi3B,EAC7CW,IAEAD,EAASrK,IAAI,CAAC1tB,EAH8C,CAOpE,GAEIg4B,EAAW,GAAG,EACCrtB,GAAQA,EAAOqtB,GAG3B,CACL,GAAGvtB,CAAQ,CACXlE,MAAO,IACFwxB,KACAttB,EAASlE,KAAK,CAClB,CAACmN,IAAI,CAAC8mB,CAAAA,EAAAA,GAAAA,CAAAA,CAAiBA,CAAC9mB,GAC3B,CACF,EACJ,EAAG,CAAEtR,EAAgBoC,EAAa6yB,EAAextB,EAAa6J,EAAM,EAE9DokB,EAAoBp5B,EAAAA,WAAiB,CAAC,KAC1CgL,EAAe,wEACjB,EAAG,EAAE,EAECW,EAAoB3L,EAAAA,WAAiB,CAAC,KAC1CgL,EAAe,kFACjB,EAAG,EAAE,EAECmB,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,aAA6C,aAA/B3I,EAAAA,KAAAA,EAAAA,EAAgBmC,WAAW,IAChDyG,CADqB5I,aACN01B,EACf7sB,cAAeZ,EACfa,WAAYivB,MAAgBt1B,UAAU,CAACoD,IAAI,EAAUkyB,EAAgBr5B,iBAAiB,GAexF,GAZAqK,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,cACPC,QAASf,CACX,GAEAa,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,EACAO,MAAO,sBACPC,QAASf,CACX,GAEI,CAACpG,GAAa,CAACH,EACjB,OAAO,KADwB,IAI3BW,EACJ,UAACkiB,GAAgBA,CACfzjB,cAAgBqB,EAChBtB,IAFe0jB,WAEElhB,EACjBtC,iBAAkB8C,CAAQ1B,EAC1B3D,UAAYs5B,EAAgBt1B,UAAU,CAAChE,SAAS,GAI9C45B,EACJ,UAAC7U,GAAAA,CAAoBA,CAAAA,CACnB3gB,QAAU7C,EACVyjB,OAAQ,CAAE3Z,KAAM,eAAgBqb,WAAY,sBAAW/iB,CAAY,EACnE4B,GAAG,OACHvF,UAAYs5B,EAAgBt1B,UAAU,CAAChE,SAAS,GAIpD,MACE,iCACI,CAACggB,GACD,WAAChb,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,YACbpB,EACAtC,GAAkBq4B,EACpB,UAACt0B,EAAAA,CAAUA,CAAAA,CAAG,GAAGg0B,EAAgBt1B,UAAU,CAAGuB,GAAK,OAGvD,UAACozB,GAAiBA,CAChB90B,OAASA,EACTF,QAFgBg1B,IAEFh1B,EACdH,MAAQ81B,EACR/3B,eAAiB,iBAAOA,EAA8BA,OAAiBoN,EACvEmpB,mBAAmB,IACnBC,eAAqD,IAApCuB,EAAgBt1B,UAAU,CAACoD,IAAI,CAChD4wB,gBAAkBpvB,EAClBqvB,cAAgBnvB,EAChBzC,IAAMyE,EAAAA,EAAyBA,CAC/BygB,QAAU1Y,EACVgmB,QAAUA,MAIlB,kBCvKA,OA1BuB,OAAC,WAAE71B,CAAS,IA0BpB62B,UA1BsB32B,EAAe,EAAI,EA0B1B,cA1B4BoB,GAAiB,CAAI,CAAS,GAChFnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExBG,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAE5Cq2B,EAAe71B,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACrCC,aAAc,qBACdlB,EACAL,QAAS,CACP0B,QAASC,IAAkBe,CAAQ5B,EACnCc,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAau1B,EAAAA,EAAaA,CAAE,GAAI,CAAE1wB,iBAAkB,CACnF2wB,WAAY,8EACZC,UAAW,EACb,CAAE,EACJ,EACA1T,QAAS,CAAE2T,OAAQz2B,CAAK,CAC1B,UAEI,GAAeP,EAIZ,UAACi3B,EAJyB,CAIzBA,CAAcA,CAAAA,CAAC32B,MAAQs2B,EAAeM,YAAa,IAHlD,IAIX,0CC2CA,OA/D2B,OAAC,WAAEp3B,CAAS,QA+DxBq3B,MA/D0Bn3B,GAAe,CAAI,QA+D3Bm3B,EAAC,MA/D4B/1B,GAAiB,CAAI,CAAS,GACpFnB,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,CAAYA,GAExBG,EAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAE5C,MAAEK,CAAI,CAAE7D,mBAAiB,CAAE8D,SAAO,YAAEC,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAiBA,CAAC,CACzEC,aAAc,sBACdC,WAAY,MAAEV,CAAK,YACnBT,EACAL,QAAS,CACP0B,QAASC,EACTC,gBAAiBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAwB81B,GAAAA,CAAUA,CAAE,GAAI,CAAEjxB,iBAAkB,CAC3FiC,MAAO,EACP/B,YAAa,EACf,CAAE,EACJ,CACF,GAEA,GAAI,CAAClG,GAAa,CAACH,EACjB,OAAO,KAGT,IAAM2C,EAAU/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAM4B,KAAAA,CAAN5B,CACd,iCACE,UAACoC,EAAAA,CAAIA,CAAAA,CAACuE,MAAM,KAAKxE,KAAM,WACnBnC,EAAK4B,KAAK,CAAC5I,GAAG,CAAC,CAACK,EAAMmO,IACtB,UAACivB,GAAAA,CAA8BA,CAAAA,CAE7Bp9B,KAAOA,EACPq9B,KAAK,UACLx6B,UAAYC,GAHN9C,EAAKmO,KAAK,CAAGsD,OAAO3O,EAAoBqL,EAAQ,QAO5D,UAACvF,EAAAA,CAAIA,CAAAA,CAAC0E,MAAM,KAAKxE,KAAM,WACrB,UAACw0B,GAAAA,CAA2BA,CAAAA,CAC1B/0B,MAAQ5B,EAAK4B,KAAK,CAClB80B,KAAK,UACLn0B,IAAMrC,EAAW6G,SAAS,CAAGC,EAAAA,EAAyBA,CAAG,EACzD9K,UAAYC,SAIhB,KAEE8E,EAAYf,EAAW6G,SAAS,CACpC,UAAC7F,EAAAA,EAASA,CAAAA,CAACC,GAAK,CAAC,WACf,UAACK,EAAAA,CAAUA,CAAAA,CAACC,GAAG,OAAS,GAAGvB,CAAU,KAErC,KAEJ,MACE,UAACyC,EAAAA,CAAeA,CAAAA,CACd1C,QAAUA,EACV2B,KAAK,OAAG5B,EAAAA,KAAAA,EAAAA,EAAM4B,KAAK,CAAX5B,UACE,6CACV+B,QAAUA,EACVd,UAAYA,GAGlB,6ECoBA,OAAewG,CAAAA,EAAAA,GAAAA,CAAAA,CAAMA,CAjFS,OAAC,WAAEE,CAAS,CAAEhI,EAiFAi3B,EAAC,EAjFG,aAAEC,CAAW,CAAS,GAC9DC,EAAgB1b,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAC7B2b,EAAmB3b,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAChClW,EAAcC,CAAAA,EAAAA,GAAAA,EAAAA,CAAcA,GAC5B9F,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClB03B,EAAiBl9B,CAAAA,EAAAA,GAAAA,CAAAA,CAAgCA,GAEjDm9B,EAAsBl9B,EAAAA,WAAiB,CAAC,KAC5C88B,EAAcE,EAAiBG,MAAM,GAAKJ,EAAcI,MAAM,GAC9D,GAAgBzjB,GAAAA,EAAiB,CAACA,GAAAA,EAAmB,CAAC6D,WAAW,CAAE,CAAEC,KAAM,kBAAmB,EAChG,EAAG,CAAEsf,EAAaE,EAAkBD,EAAe,EAE7CK,EAA2Bp9B,EAAAA,WAAiB,CAAC,cACgBsF,EAAjE,IAAMqN,EAAW7G,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC,UAAW,CAAExF,WAAY,CAAEV,IAAI,SAAEN,EAAAA,EAAOK,KAAK,CAACC,IAAAA,GAAbN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBsT,QAAQ,EAAG,CAAE,EACjG,OAAMzN,EAAYkyB,cAAc,CAAC,UAAE1qB,CAAS,GAC5CoqB,EAAc3b,OAAO,EACvB,EAAG,CAAE2b,EAAe5xB,EAAa7F,EAAOK,KAAK,CAACC,IAAI,CAAE,EAE9C03B,EAAsBt9B,EAAAA,WAAiB,CAAC,KAC5C+8B,EAAc3b,OAAO,EACvB,EAAG,CAAE2b,EAAe,EAEdQ,EAAyBv9B,EAAAA,WAAiB,CAAC,KAC/Cg9B,EAAiB5b,OAAO,EAC1B,EAAG,CAAE4b,EAAkB,EAEjBQ,EAAWx9B,EAAAA,OAAa,CAAC,IAC7B,UAAI,OAAO88B,EACF,CAAEW,aAAc73B,CAAK,EAGvB,CACL63B,aAAc73B,EACdqQ,GAAI6mB,CACN,EACC,CAAEl3B,EAAMk3B,EAAa,SAExB,EAAK18B,CAAMA,CAAP,QAAgB,CAAC0b,OAAO,CAACzR,SAAS,CAKpC,CALsC,EAKtC,8BACE,UAACqzB,GAAAA,CAASA,CAAAA,CAACC,cAAgBT,WACvB,OAAC,SAAEvsB,CAAO,CAAE,SACZ,UAACsH,GAAAA,CAAOA,CAAAA,CAAC3T,MAAQ,GAAkF,OAA9Ew4B,EAAc,iCAAmC,sCACpE,UAAC9Z,GAAAA,CAAUA,CAAAA,CACTrF,UAAWnW,CAAQs1B,EACnBlvB,UAAYA,EACZgQ,aAAW,OACXzF,QAAQ,UACRuF,KAAK,KACLuF,GAAG,MACHpT,GAAG,MACHtN,WAAa,EACboO,QAAUA,EACVuS,KAAO,UAACtgB,EAAAA,CAAOA,CAAAA,CAACC,KAAOi6B,EAAc,cAAgB,eAAiB5pB,QAAU,IAChF+pB,eAAiBA,SAKzB,UAACW,GAAAA,CAAiBA,CAAAA,CACd,GAAGb,CAAa,CAClBc,KAAK,IACLzc,QAAUkc,EACVQ,UAAYV,EACZn3B,KAAOu3B,IAEPA,EAASvnB,EAAE,EACX,UAAC8nB,GAAAA,CAAkBA,CAAAA,CACf,GAAGf,CAAgB,CACrB5b,QAAUmc,EACVt3B,KAAOu3B,EACPM,UAAYV,OApCX,IAyCX,kEC/DA,IAAMY,GAAc,OAAC,MAAE/3B,CAAI,CAAgC,GACzD,MACE,UAACsf,GAAAA,CAAIA,CAAAA,CACHC,gBAAiB,CAAEle,KAAM,UAAqC,OAA1B22B,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAACh4B,EAAKvE,MAAM,CAAE,EAAG,GAAI,UAASiG,GAAI,UAAqC,OAA1Bs2B,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAACh4B,EAAKvE,MAAM,CAAE,EAAG,GAAI,SAAQ,EACxHuC,UAAY,EACZJ,OAAS,EACTuD,GAAK,WAEHnB,EAAK6pB,KAAK,CAAC,EAAG,GAAG7wB,GAAG,CAAC,GAAY,UAACi/B,GAAAA,EAASA,CAAAA,CAAmBC,OAASA,EAAOt7B,IAAI,CAAGu7B,SAAWD,EAAOC,QAAQ,CAAG9pB,MAAM,KAAtE6pB,EAAOloB,EAAE,IAGnE,EAsHA,GAAejW,EAAAA,IAAU,CApHC,OAAC,OAAE2F,CAAK,CAAE0F,EAoHQgzB,EAAC,SApHE,gBAAEC,CAAc,CAAS,GAChE,QAAEphB,CAAM,UAAEiE,CAAQ,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAE7C,MAAEpb,CAAI,WAAEiI,CAAS,SAAEhI,CAAO,CAAE,CAAGP,EAErC,GAAIO,EACF,OADW,KAIb,GAAIgI,EACF,MAAO,GADM,EACN,KAAC1L,EAAAA,CAAQA,CAAAA,CAACmM,EAAI,EAAI7K,EAAG,CAAEwD,KAAM,OAAQi3B,GAAI,OAAQ,EAAGj8B,aAAa,SAG1E,GAA0B,GAAG,CAAzB2D,EAAK4B,KAAK,CAACnG,MAAM,CACnB,OAAO,KAGT,IAAM88B,EAAav4B,EAAK4B,KAAK,CAACiP,IAAI,CAAEqnB,GAAWG,GAAkBH,EAAOt7B,IAAI,GAAKy7B,GAC3EG,EAAex4B,EAAK4B,KAAK,CAAC7B,MAAM,CAAC,QAejCm4B,QAdJ,EAAIG,GAAkBH,EAAOt7B,IAAI,GAAKy7B,CAAAA,GAAgB,EAKlDH,EAAOO,gBAAgB,EAAIP,EAAOO,gBAAgB,CAAC94B,IAAI,CAACC,WAAW,KAAOwF,EAAYxF,WAAW,KAAI,GAIrGs4B,EAAOQ,KAAK,EAAIR,EAAOQ,KAAK,CAAC/4B,IAAI,CAACC,WAAW,KAAOwF,EAAYxF,WAAW,IAAI,CAK/Es4B,QAAAA,EAAAA,EAAOS,aAAAA,GAAPT,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBv4B,IAAI,CAACC,WAAW,MAAOwF,EAAYxF,WAAW,IAAI,EAClEs4B,EAAOO,gBAAgB,EAAIP,EAAOO,gBAAgB,CAAC94B,IAAI,CAACC,WAAW,KAAOwF,EAAYxF,WAAW,IAI7G,GACMg5B,EAAkB54B,EAAK4B,KAAK,CAAC7B,MAAM,CAAEm4B,GACzCA,EAAOO,gBAAgB,EACvBP,EAAOO,gBAAgB,CAAC94B,IAAI,CAACC,WAAW,KAAOwF,EAAYxF,WAAW,IACtEs4B,EAAOt7B,IAAI,GAAKy7B,GAGZQ,EAAe74B,EAAK4B,KAAK,CAACnG,MAAM,CAAG,GAAK,MAAQuE,EAAK4B,KAAK,CAACnG,MAAM,CAEvE,MACE,WAAC4f,GAAAA,CAAOA,CAAAA,CAACpE,OAASA,EAASkE,QAAUA,EAAUG,UAAU,eAAeC,MAAM,cAC5E,UAACC,GAAAA,CAAcA,CAAAA,UACb,UAACsd,GAAAA,CAAqBA,CAAAA,CAACz6B,MAAM,2DAC3B,WAACmZ,GAAAA,CAAMA,CAAAA,CACLC,KAAK,KACLvF,QAAQ,UACR6E,YAAY,OACZrM,QAAUwQ,EACVxD,SAAWT,EACXU,aAAW,kBACXva,WAAa,IACbxB,GAAK,EACL8M,EAAE,OACFpM,WAAa,YAEb,UAACK,EAAAA,CAAOA,CAAAA,CAACC,KAAK,WAAWqQ,QAAU,IACnC,UAAC7K,EAAAA,CAAIA,CAAAA,CAACF,MAAM,cACV,WAACuF,GAAAA,CAAMA,CAAClE,IAAI,EAAC9B,GAAK,YAAMo3B,EAAc,UAAS74B,EAAK4B,KAAK,CAACnG,MAAM,CAAG,EAAI,IAAM,QAE/E,UAACwG,EAAAA,CAAIA,CAAAA,CAACC,MAAM,cACV,UAACuF,GAAAA,CAAMA,CAAClE,IAAI,EAAC9B,GAAK,WAAMo3B,aAKhC,UAACpd,GAAAA,CAAcA,CAAAA,CAAC5d,EAAG,CAAEwD,KAAM,QAASK,GAAI,OAAQ,WAC9C,WAACia,GAAAA,CAAWA,CAAAA,CAAC/f,GAAK,EAAIC,GAAK,EAAIC,SAAS,KAAKY,QAAQ,OAAO+b,QAAQ,SAAS7a,OAAS,EAAI8G,WAAW,uBACjG6zB,GACA,WAAC97B,EAAAA,EAAGA,CAAAA,CAACoB,EAAE,iBACL,UAAC4J,GAAAA,CAAMA,CAAClE,IAAI,EAACnH,MAAM,iBAAiBN,SAAS,cAAK,aAClD,WAACgC,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS5I,SAAS,KAAKqF,GAAK,YAC3C,UAAC82B,GAAAA,EAASA,CAAAA,CAACC,OAASK,EAAW37B,IAAI,CAAGu7B,SAAWI,EAAWJ,QAAQ,CAAG/6B,WAAa,IAAMiR,MAAM,MAC9FkqB,EAAWQ,WAAW,EACpB,WAACtxB,GAAAA,CAAMA,CAAClE,IAAI,EAACnH,MAAM,iBAAiBiB,WAAW,gBAAM,aAAYspB,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC4R,EAAWQ,WAAW,EAAEC,OAAO,GAAI,aAIlHR,EAAa/8B,MAAM,CAAG,GACtB,WAACjC,MAAAA,WACC,UAACiO,GAAAA,CAAMA,CAAClE,IAAI,EAACnH,MAAM,iBAAiBN,SAAS,cAAK,0BAClD,UAACi8B,GAAAA,CAAY/3B,KAAOw4B,OAGtBI,EAAgBn9B,MAAM,CAAG,GACzB,WAACjC,MAAAA,WACC,UAACiO,GAAAA,CAAMA,CAAClE,IAAI,EAACnH,MAAM,iBAAiBN,SAAS,cAAK,6BAClD,UAACi8B,GAAAA,CAAY/3B,KAAO44B,OAGrBJ,CAAAA,EAAa/8B,MAAM,CAAG,GAAKm9B,EAAgBn9B,MAAM,EAAG,GACrD,WAACwB,EAAAA,CAAYA,CAAAA,CACXC,KAAO8N,CAAAA,EAAAA,GAAAA,CAAAA,CAAKA,CAAC,CAAEC,SAAU,gBAAiBvL,MAAO,CAAEu5B,SAAU,OAAQC,YAAa,OAAQ54B,QAAS8E,CAAY,CAAE,aAEjH,UAAC7B,OAAAA,UAAK,kBACN,WAACkE,GAAAA,CAAMA,CAAClE,IAAI,EAACnH,MAAM,2BAAiB,KAAIy8B,EAAc,UAGxDN,GACA,UAAC9wB,GAAAA,CAAMA,CAAClE,IAAI,EAACzH,SAAS,KAAKqF,GAAK,CAAC,WAAI,iGAQjD,2CCjKO,IAAMg4B,GAA8Cz+B,EAAAA,GAAQ,CAAC,CAClE0+B,SAAU1+B,EAAAA,GAAQ,GAClB2+B,IAAK3+B,EAAAA,GAAQ,GACb4+B,KAAM5+B,EAAAA,GAAQ,GACd6+B,cAAe7+B,EAAAA,GAAQ,GACvB8+B,IAAK9+B,EAAAA,GAAQ,GACb++B,OAAQ/+B,EAAAA,GAAQ,EAClB,GAAG,GAE+BA,EAAAA,GAAQ,CAAC,CACzCg/B,YAAah/B,EAAAA,GAAQ,CAAC,CACpBi/B,aAAcj/B,EAAAA,GAAQ,GACtBk/B,YAAal/B,EAAAA,GAAQ,GACrBm/B,aAAcn/B,EAAAA,GAAQ,CAAC,CACrBo/B,SAAUp/B,EAAAA,GAAQ,GAClBq/B,4BAA6BZ,EAC/B,GACAa,sBAAuBt/B,EAAAA,GAAQ,EACjC,EACF,GAAG,GCRmB,yBAAHI,OACbC,GAAa,sBAAHA,4CCsDhB,OAAehB,EAAAA,IAAU,CAlDE,OAAC,MAAE4F,CAAI,CAAS,GACnC,CAiDqCs6B,EAAC,KAjDpChjB,CAAM,UAAEiE,CAAQ,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,GAAAA,CAAAA,CAAaA,GAE7C,MAAEpb,CAAI,mBAAE7D,CAAiB,SAAE8D,CAAO,CAAE,CDL7B,SAASi6B,CAA+B,ICKMA,CDLtB,MAAEv6B,CAAI,CAAU,CAAhB,EAC/BD,EAAQwI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAACpN,GAAe,CACvCuF,WAAY,CAAEV,MAAK,EACnByQ,IAFqCtV,SAEvB,CACZ+Z,OAASJ,IACP,IAAMK,EAAiBpa,EAAAA,GAAW,CAACy/B,GAAoB1lB,GAEvD,GAAI,CAACK,EAAeC,MAFiColB,CAE1B,CACzB,CAD2B,KACrBnlB,MAAMja,IAGd,OAAO+Z,EAAeG,MAAM,EAE9B1U,IAL0BxF,KAKjBwG,CAAQ5B,EACjBc,gBAAiB25B,GAAAA,EAAoBA,CACrCnc,MAAO,CACT,CACF,GAEM/I,EAAexV,EAAMmT,KAAK,EAAI,YAAanT,EAAMmT,KAAK,CAAGnT,EAAMmT,KAAK,CAACsC,OAAO,MAAGtK,EAcrF,OAZA9Q,EAAAA,SAAe,CAAC,KACVmb,IAAiBna,IACnB2Z,MAAM,eADuB3Z,EAAE,yBACkB,CAC/Cqa,OAAQ,OACRC,KAAMC,KAAKC,SAAS,CAAC,CACnBC,SAAU1a,GACVoM,IAAKmzB,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAACv/B,GAAe,CAAE6E,MAAK,GADb7E,IACgB+P,GAAW,EACpD,EACF,EAEJ,EAAG,CAAEqK,EAAcvV,EAAM,EAElBD,CACT,EC7B8D,MAAEC,CAAK,GAEnE,GAAIM,GAAW,CAACD,EACd,IADoB,GACb,KAGT,IAAMs6B,EAAQxvB,OAAO9K,EAAK05B,WAAW,CAACG,YAAY,CAACC,QAAQ,EAE3D,GAAI,CAACQ,EACH,KADU,EACH,KAGT,IAAMC,EAAkBv6B,EAAK05B,WAAW,CAACG,YAAY,CAACE,2BAA2B,CAE3ES,EAAuBC,CADCF,EAAkBhrB,OAAOC,MAAM,CAAC+qB,GAAmB,EAAE,EAChCphC,MAAM,CAAC,CAACuhC,EAAK9gC,IAAQ8gC,EAAM9gC,EAAK,GAEnF,MACE,WAACyhB,GAAAA,CAAOA,CAAAA,CAACpE,OAASA,EAASkE,QAAUA,EAAUG,UAAU,eAAeC,MAAM,cAC5E,UAACC,GAAAA,CAAcA,CAAAA,UACb,UAACmf,GAAAA,CAAwBA,CAAAA,CACvBL,MAAQA,EACRp+B,UAAYC,EACZuO,QAAUwQ,EACVxD,SAAWT,MAGf,UAACwE,GAAAA,CAAcA,CAAAA,CAAC5d,EAAG,CAAEwD,KAAM,QAASK,GAAI,OAAQ,WAC9C,WAACia,GAAAA,CAAWA,CAAAA,CAAC/f,GAAG,OAAOC,GAAG,OAAOC,SAAS,eACxC,WAACW,EAAAA,EAAGA,CAAAA,CAAC6M,GAAK,EAAI7E,WAAW,iBAAO,uDAE9B,UAACm2B,GAAAA,CAAIA,CAAAA,CAACpxB,GAAKqxB,GAAAA,CAAgBA,CAAG99B,GAAK,EAAI0E,GAAG,MAAM5D,EAAE,OAAO6K,EAAE,OAAOhM,QAAQ,eAAeqjB,cAAc,WACvG,UAAC9hB,GAAAA,CAAIA,CAAAA,CAACb,WAAa,IAAMV,QAAQ,wBAAe,oBAElD,UAACo+B,GAAAA,CAAuBA,CAAAA,CAACR,MAAQA,EAAQhxB,GAAK,IAC5CixB,GAAmBC,EAAuB,GAC1C,WAAC/9B,EAAAA,EAAGA,CAAAA,CAAC6M,GAAK,YACR,UAACrL,GAAAA,CAAIA,CAAAA,CAACpC,GAAG,MAAMqW,QAAQ,YAAYpW,SAAS,KAAKsB,WAAa,aAAM,iCACpE,UAAC29B,GAAAA,CAAyBA,CAAAA,CAACR,gBAAkBA,EAAkBC,qBAAuBA,OAG1F,UAAC5nB,GAAAA,CAAYA,CAAAA,CAAC1V,KAAO8C,EAAK05B,WAAW,CAACM,qBAAqB,UAAG,4BAKxE,GE5DMgB,GAAqB,kFCmD3B,IAAMC,GAAa,CAAE,eAAgB,cAAe,yBAA0B,mBAAoB,CAG5FC,GAAmB/gC,EAAAA,CAAMA,CAACI,QAAQ,CAAC2gC,gBAAgB,CACnDC,GAA2BhhC,EAAAA,CAAMA,CAACI,QAAQ,CAACC,iBAAiB,CAC5D4gC,GAAgBjhC,EAAAA,CAAMA,CAACI,QAAQ,CAAC8gC,UAAU,CA2XhD,GAzX2B,QAyXZC,CAnUXC,EAgBoEne,EAQIA,EAmInDoe,EAAAA,EA4DrBC,EAwC4Gre,EAIxGA,EAEWA,CA8Dcke,CApCXle,CAoCY,CAlCXA,EACoCA,EAErBA,EAAAA,EAGhBA,EAAkCA,EAG0CA,EAQ9EA,EAAkCA,EAOjBse,EAAAA,EAAAA,EArBCte,EAzVpC,IAAM/d,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBq8B,EAAWpL,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAExBqL,EAAgB7hC,EAAAA,MAAY,CAAiB,MAC7C4F,GAAOF,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAACJ,EAAOK,KAAK,CAACC,IAAI,EAE5Ck8B,GD/DO,SAASC,CAAgD,EACtE,IAAMz8B,EAASC,CAAAA,EAAAA,EC8DgCw8B,SD9DhCx8B,CAASA,GAClBy8B,EAAkBf,GAAmBgB,IAAI,CAACC,GAC1Cz7B,EAAiBrG,EAAAA,CAAMA,CAACI,QAAQ,CAAC2hC,WAAW,CAAC93B,SAAS,EAAI23B,EAC1D,CAAE7/B,EAAWigC,EAAc,CAAGpiC,EAAAA,QAAc,CAACyG,GAE7C47B,EAAoBl0B,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,iBAAkB,CACtD7H,WAAY,CAAEg8B,QAASliC,EAAAA,CAAMA,CAACC,KAAK,CAAC4V,EAAE,EACtCG,YAAa,CACXvT,KAAMq/B,EACNK,aAAa,CACf,EACAlsB,aAAc,CACZ7P,QAASC,CACX,CACF,GAqBA,OAnBAzG,EAAAA,SAAe,CAAC,SAKaqiC,EAAAA,EAAAA,EAJ3B,GAAIA,EAAkBn0B,SAAS,CAC7B,CAD+B,MAIjC,IAAMs0B,EAAAA,QAAqBH,EAAAA,EAAkBp8B,IAAAA,GAAlBo8B,KAAAA,MAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAwBx6B,KAAK,CAAC,KAA9Bw6B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAkC3D,gBAAAA,GAAlC2D,KAAAA,MAAAA,KAAAA,EAAAA,EAAoDz8B,IAAI,CAC/E48B,EACFl9B,EAAOgT,OAAO,CAAC,CAAEpH,OADK,EACK,kBAAmBvL,MAAO,CAAEC,KAAM48B,CAAmB,CAAE,GAElFJ,GAAa,EAEjB,EAAG,CAAEC,EAAkBn0B,SAAS,CAAEm0B,EAAkBp8B,IAAI,CAAEX,EAAQ,EAElEtF,EAAAA,SAAe,CAAC,KACTgiC,GACHI,GAAa,EAEjB,EAAG,CAAEJ,EAAiB,EAEf7/B,CACT,CAN0B,CCgCwByD,IAC1C68B,GFlEO,SAASC,CAAkC,EACxD,IAAMp9B,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GAClBo9B,EAAkBviC,EAAAA,CAAMA,CAAC4J,EAAE,CAACC,KAAK,CAAC1D,OAAO,CAACgL,UAAU,CAACC,gBAAgB,CAAC1R,QAAQ,CAAC,WAAa8iC,CAAAA,EAAAA,GAAAA,EAAAA,CAAeA,CAACh9B,GAC5G,CAAEzD,EAAWigC,EAAc,CAAGpiC,EAAAA,QAAc,CAAC2iC,GAenD,OAbA3iC,EAAAA,SAAe,CAAC,KACd,GAAI,CAACmC,EACH,OAGF,EAJgB,EAIV0gC,EAAaC,CAAAA,EAAAA,GAAAA,EAAAA,CAAiBA,CAACl9B,GACjCi9B,IAAej9B,EACjBN,EAAOgT,EADgB,KACT,CAAC,CAAEpH,SAAU,kBAAmBvL,MAAO,CAAE,GAAGL,EAAOK,KAAK,CAAEC,KAAMi9B,CAAW,CAAE,GAE3FT,GAAa,EAEjB,EAAG,CAAEx8B,EAAMzD,EAAWmD,EAAQ,EAEvBnD,CACT,EE+CmDyD,IAC3Cm9B,GAAoB,CAACjB,IAAmB,CAACW,GACzCpf,GAAe2F,GAAgB,MAAEpjB,GAAMyE,GAAT2e,OAAoB+Z,EAAkB,GAEpEC,GAA2B70B,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,wBAAyB,CACpE7H,WAAY,MAAEV,EAAK,EACnByQ,aAAc,CACZ7P,QAASu8B,KAAqBv7B,CAAQ5B,GACtCc,gBAAiBu8B,EAAAA,EAAqBA,CAE1C,GAEMC,GAAsB/0B,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,mBAAoB,CAC1D7H,WAAY,MAAEV,EAAK,EACnByQ,aAAc,CACZ7P,QAASu8B,KAAqBv7B,CAAQ5B,IAASxF,EAAAA,CAAMA,CAACI,QAAQ,CAAC2iC,OAAO,CAAC94B,SAAS,CAChF3D,gBAAiB08B,EAAAA,EAAgBA,CAErC,GAEMC,GAAsBl1B,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,2BAA4B,CAClE7H,WAAY,MAAEV,EAAK,EACnByQ,aAAc,CACZ7P,QAASpG,EAAAA,CAAMA,CAACI,QAAQ,CAAC8iC,YAAY,CAACj5B,SAAS,EAAI04B,KAAqBv7B,CAAQ5B,GAChFc,gBAAiB,EACnB,CACF,GAEM68B,GAA4BvjC,EAAAA,OAAa,CAAC,IAAO,CAAE4F,GAAM,CAACI,MAAM,CAACwB,SAAW,CAAE5B,GAAM,EACpF+7B,GAAuB6B,CAAAA,EAAAA,EAAAA,CAAAA,CAA2BA,CAACD,GAA2BR,IAC9EtB,GAAuBgC,SvFnFPA,CAAkD,MAAEp5B,IAAAA,KuFmFpBo5B,KvFnFoBp5B,MAAAA,CAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,CACpEsQ,EAAQ+oB,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,GAEtB,MAAOlpB,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAA+D,CAC5E7H,SAAU,CAAE,eAAgB/M,EAAM,CAClC6U,QAAS,SACP,EAAapQ,SAAS,EAAKzE,EAAD,EAIbrF,EAJoB,cAIE,CAAC+X,OAAO,CAAC,YAAa1S,IAHhD+d,QAAQggB,MAAM,GAKzBn9B,QAAS6D,GAAa7C,EAAQ5B,EAC9B0Q,gBAAgB,EAChBwE,OAAQ,IACN,IAAMC,EAAiBpa,EAAAA,GAAW,CAACD,EAAmBga,GAEtD,GAAI,CAACK,EAAeC,OAAO,CACzB,CAD2B,KACrBC,MAAMja,2BAGd,OAAO+Z,EAAeG,MAAM,CAEhC,EACF,EuF2DyDtV,GAAMw7B,GAAyB/2B,SAAS,EAAI04B,IAE7FvB,GAAyBrzB,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,mBAAoB,CAC7D7H,WAAY,CAAEg8B,QAASliC,EAAAA,CAAMA,CAACC,KAAK,CAAC4V,EAAG,EACvCG,YAAa,CACX7P,QAASX,GACTu5B,aAAa,EACbD,UAAU,EACVqD,aAAa,EACbjS,MAAO,KACT,EACAja,aAAc,CACZ7P,QAASgB,EAAQ5B,IAASxF,EAAAA,CAAMA,CAACI,QAAQ,CAAC2hC,WAAW,CAAC93B,SAAS,CAEnE,GACMu5B,GAAoB,GAAcxhC,iBAAiB,CAEvD0O,OAFuD,QACvD0wB,EAAAA,GAAuBv7B,IAAAA,GAAvBu7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA6B35B,KAAK,CAACiP,IAAI,CAAC,QAA4BuM,SAAhB8a,EAAOt7B,IAAI,YAAKwgB,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBmG,eAAAA,IAGnFrnB,GAAYkhB,GAAajhB,iBAAiB,CAC1CyhC,GACJ1hC,IACA6gC,GAAyB5gC,iBAAiB,EACzChC,EAAAA,CAAMA,CAACI,QAAQ,CAAC2iC,OAAO,CAAC94B,SAAS,EAAI64B,GAAoB9gC,iBAAiB,EAC1EhC,EAAAA,CAAMA,CAACI,QAAQ,CAAC8iC,YAAY,CAACj5B,SAAS,EAAIg5B,GAAoBjhC,iBAAiB,CAE5E0hC,GAA+B9jC,EAAAA,WAAiB,CAAC,KACrDqjB,GAAa0gB,OAAO,EACtB,EAAG,CAAE1gB,GAAc,EAEblX,GAAUC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,CAC/BC,MAAO,aAAmC,aAArBzG,GAAAA,KAAAA,EAAAA,GAAMC,IAAND,OAAiB,IACtC4G,WAAYq3B,IAAiBxgB,GAAaxS,cAAc,EAAIrJ,EAAAA,CAAAA,OAAQ6b,GAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,CACzF,GACAzH,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAC,SACfN,GACAO,MAAO,mBACPC,QAASm3B,EACX,GAEA,IAAME,GtFvIO,SAASC,CAAyC,EAC/D,IAAMtpB,EAAQ+oB,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,GAEhB,MAAEz9B,CAAI,CAAE,CAAGuU,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAAC,CACxB7H,SAAU,CAAE,uBAAwB/M,EAAM,CAC1C6U,QAAS,SACP,EAAapQ,SAAS,EAAKzE,EAIpB+U,EAAM,EAJoB,CAII/U,IAJzBrF,EAIyBqF,CAApBrF,EAAQ2jC,MAAM,CAAE,KAAU,OAANt+B,GAAbrF,CAHfojB,QAAQggB,MAAM,GAKzBn9B,QAASjG,EAAQ8J,SAAS,GAAI7C,CAAQ5B,EACtC0Q,OADgB/V,SACA,CAClB,GAEA,OAAOiH,CAAQvB,CACjB,EsFsHyC,CAACod,GAAajhB,iBAAiB,WAAIihB,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,EAActO,QAAOkL,GAC5GqzB,GAAgB/mB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,QAAS,SAE3CskB,GAAa0C,SrFnIGA,CAAmC,KAAhB,GqFmIJA,GrFnIMx+B,CAAI,CAAU,CAAhB,EACnCD,EAAQwI,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAACpN,EAAe,CACvCuF,WAAY,MAAEV,CAAK,EACnByQ,aAAc,CACZyE,OAAQ,IACN,IAAMC,EAAiBpa,EAAAA,GAAW,CAACA,EAAAA,GAAQ,CAAC,CAAEsF,KAAMtF,EAAAA,GAAQ,CAAC,CAAE0jC,MAAO1jC,EAAAA,GAAU,CAACA,EAAAA,GAAQ,GAAI,EAAG,GAAI+Z,GAEpG,GAAI,CAACK,EAAeC,OAAO,CACzB,CAD2B,KACrBC,MAAMja,GAGd,OAAO+Z,EAAeG,MAAM,EAE9B1U,SAL0BxF,CAKT4E,GAASxF,EAAAA,CAAMA,CAACI,QAAQ,CAAC8gC,UAAU,CAACj3B,SAAS,CAC9D3D,gBAAiB,CACfT,KAAM,CAAEo+B,MAAO,MAAO,CACxB,EACAngB,MAAO,CACT,CACF,GAEM/I,EAAexV,EAAMmT,KAAK,EAAI,YAAanT,EAAMmT,KAAK,CAAGnT,EAAMmT,KAAK,CAACsC,OAAO,MAAGtK,EAcrF,OAZA9Q,EAAAA,SAAe,CAAC,KACVmb,IAAiBna,GACnB2Z,MAAM,oBADuB3Z,EAAE,oBACkB,CAC/Cqa,OAAQ,OACRC,KAAMC,KAAKC,SAAS,CAAC,CACnBC,SAAU1a,EACVoM,IAAKmzB,CAAAA,EAAAA,EAAAA,CAAAA,CAAQA,CAACv/B,EAAe,MAAE6E,CAAK,OAAGkL,GAAW,EACpD,EACF,EAEJ,EAAG,CAAEqK,EAAcvV,EAAM,EAElBD,CACT,EqF+FwC,MAAEC,EAAK,GAEvC0+B,GAAeC,CAAAA,EAAAA,GAAAA,CAAAA,CAAeA,CAClClhB,GAAapd,IAAI,CACjB7F,EAAAA,CAAMA,CAACI,QAAQ,CAAC8iC,YAAY,CAACj5B,SAAS,EAAIg5B,GAAoBjhC,iBAAiB,EAAIihB,GAAajhB,iBAAiB,EACjHoF,CADqH6b,CAC7GjjB,EAAAA,CAAMA,CAACI,QADmH4B,CAC1GkhC,YAAY,CAACj5B,GAD8G,MACrG,EAAIg5B,GAAoBp9B,IAAI,EAAIo9B,GAAoBp9B,IAAI,CAAG,IAGrGwxB,GAAyBz3B,EAAAA,OAAa,CAAC,SAWhCgjC,EAUoCE,EAIlCA,EAI8BF,EAI9BA,EAOFA,EAMAA,EAOAA,EAGTA,EAGSA,EAQTA,EAIWA,EAIXA,EAIWA,EAKX3f,EAnFF,MAAO,CACLjjB,EAAAA,CAAMA,CAACI,QAAQ,CAAC8iC,YAAY,CAACj5B,SAAS,EAAIg5B,GAAoBp9B,IAAI,EAAIo9B,GAAoBp9B,IAAI,CAAG,GAAK,CACpGgQ,GAAI,MACJvH,MAAO,MACP2gB,MAAOgU,GAAoBp9B,IAAI,CAC/B0xB,UAAW,UAAC9E,GAAUA,CAAC1tB,UAAY08B,EAAgBx8B,EAA7BwtB,WAA4C,CAACgR,GAAgBp9B,eAAiBs8B,IACtG,EACA,CACE9sB,GAAI,MACJvH,MAAO,eACP2gB,KAAK,SAAE2T,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,MAAAA,KAAAA,EAAAA,EAA+B1yB,kBAAkB,CACxDqnB,UAAW,UAAC2D,GAAUA,CAACn2B,UAAY08B,EAAgBx8B,EAA7Bi2B,WAA4C,CAACuI,GAAgBp9B,eAAiBs8B,IACtG,EACA5B,GAAiB92B,SAAS,EAAkC,UAA9B82B,GAAiBqD,QAAQ,CACrD,CACEvuB,GAAI,kBACJvH,MAAO,kBACPipB,UAAW,UAACvyB,GAAqBA,CAACD,UAAY08B,EAAgBx8B,aAA7BD,CAA6Cy+B,GAAgBp9B,eAAiBs8B,IACjH,OACAjyB,EACF1Q,EAAAA,CAAMA,CAACI,QAAQ,CAAC2iC,OAAO,CAAC94B,SAAS,EAAI7C,CAAgC,CAAhCA,OAAQ07B,EAAAA,GAAoBj9B,IAAAA,GAApBi9B,KAAAA,MAAAA,KAAAA,EAAAA,EAA0BuB,SAAAA,EACrE,CACExuB,GAAI,WACJvH,MAAO,kBACP2gB,KAAK,SAAE6T,EAAAA,GAAoBj9B,IAAAA,GAApBi9B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA0BuB,SAAS,CAC1C9M,UAAW,UAACqE,GAAcA,CAAC32B,aAAe,CAACw+B,GAAgBp9B,CAAjCu1B,cAAkD+G,IAC9E,OACAjyB,EACF1Q,EAAAA,CAAMA,CAACI,QAAQ,CAACkkC,WAAW,CAACr6B,SAAS,WAAI24B,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+B2B,iBAAAA,EACtE,CACE1uB,GAAI,cACJvH,MAAO,cACP2gB,KAAK,CAA+B,QAA7B2T,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+B2B,iBAAiB,CACvDhN,UAAW,UAAC6E,GAAkBA,CAACr3B,UAAY08B,EAAgBx8B,UAA7Bm3B,GAA4C,CAACqH,GAAgBp9B,eAAiBs8B,IAC9G,OACAjyB,EACF,CACEmF,GAAI,kBACJvH,MAAO,kBACP2gB,KAAK,CAA+B,QAA7B2T,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+BzyB,qBAAqB,CAC3DonB,UAAW,UAACe,GAAqBA,CAACvzB,UAAY08B,EAAgBx8B,aAA7BqzB,CAA6CmL,GAAgBp9B,eAAiBs8B,IACjH,EACA,CACE9sB,GAAI,SACJvH,MAAO,SACP2gB,KAAK,SAAE2T,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+B4B,oBAAoB,CAC1DjN,UAAW,UAACvB,GAAaA,CAAC/wB,aAAe,CAACw+B,GAAjBzN,eAAkD2M,KAC3E8B,QAAS3D,EACX,EACA,CACEjrB,GAAI,gBACJvH,MAAO,gBACP2gB,KAAK,CAA+B,QAA7B2T,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+B8B,2BAA2B,CACjEnN,UAAW,UAAClP,GAAkBA,CAACtjB,UAAY08B,EAAgBx8B,UAA7BojB,GAA4C,CAACob,GAAgBp9B,eAAiBs8B,IAC9G,EACAC,CAAAA,QAAAA,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,MAAAA,KAAAA,EAAAA,EAA+B+B,2BAAAA,EAA8B,CAC3D9uB,GAAI,gBACJvH,MAAO,gBACP2gB,KAAK,SAAE2T,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,MAAAA,KAAAA,EAAAA,EAA+B+B,2BAA2B,CACjEpN,UAAW,UAAC5Q,GAAmBA,CAAC5hB,UAAY08B,EAAgBx8B,WAA7B0hB,EAA4C,CAAC8c,GAAgBp9B,eAAiBs8B,IAC/G,OAAIjyB,EACJ,CACEmF,GAAI,uBACJvH,MAAO,uBACPipB,UAAW,UAAC3nB,GAAkBA,CAAC3K,aAAe,CAACw+B,GAAgBp9B,KAAjCuJ,UAAkD+yB,IAClF,EACAC,CAAAA,QAAAA,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,MAAAA,KAAAA,EAAAA,EAA+BxyB,iBAAAA,EAC7B,CACEyF,GAAI,mBACJvH,MAAO,UAA6C,OAAlCvO,CAAAA,EAAAA,EAAAA,CAAAA,CAA8BA,IAChDkvB,KAAK,CAA+B,OAA7B2T,GAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+BxyB,iBAAiB,CACvDmnB,UAAW,UAAC7sB,GAAsBA,CAAC3F,UAAY08B,EAAgBx8B,aAAe,CAA5CyF,GAA6DrE,eAAiBs8B,IAClH,OACAjyB,EACFkyB,CAAAA,QAAAA,EAAAA,GAAyB/8B,IAAI,GAA7B+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+BgC,UAAAA,EAC7B,CACE/uB,GAAI,OACJvH,MAAO,OACP2gB,KAAK,SAAE2T,EAAAA,GAAyB/8B,IAAAA,GAAzB+8B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA+BgC,UAAU,CAChDrN,UAAW,UAAC3N,GAAWA,CAAC7kB,UAAY08B,EAAgBx8B,GAA7B2kB,UAA4C,CAAC6Z,GAAgBp9B,eAAiBs8B,IACvG,OACAjyB,EAEFuS,CAAAA,QAAAA,EAAAA,GAAapd,IAAI,GAAjBod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,EAAc,CAC/B+B,GAAI,WACJvH,MAAO,KACL,IAAMu2B,EAA2C,YAAjC5hB,GAAapd,IAAI,CAAC2f,UAAU,CAAiB,OAAS,kBAEtE,GAAiB3f,IAAI,CAAC0jB,WAAW,CAE7B,CAF+B,EAE/B,8BACE,UAACngB,OAAAA,UAAOy7B,IACR,UAACriC,EAAAA,CAAOA,CAAAA,CAACC,KAAK,iBAAiBqQ,QAAQ,OAAO7Q,MAAM,YAAYqF,GAAK,OAKpEu9B,CACT,EACAtN,UACE,UAACuN,GAAAA,CAAeA,CAAAA,CACdzN,KAAO6M,GAAa7M,IAAI,CACxBpyB,aAAe,CAACw+B,GAChB1hC,UAAYmiC,GAAaniC,SAAS,GAGtC0iC,QAASM,GAAAA,EAAgBA,OACvBr0B,EACL,CAAC9K,MAAM,CAACwB,QACX,EAAG,CACD6b,GAAapd,IAAI,CACjBq+B,GACAtB,GAAyB/8B,IAAI,CAC7Bi9B,GAAoBj9B,IAAI,CACxB49B,GACAd,GACAM,GAAoBp9B,IAAI,CACzB,EAEKm/B,GAA0C,QAAzB3D,EAAAA,GAAqBx7B,IAAAA,GAArBw7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAA2B7gC,YAAAA,GAA3B6gC,KAAAA,MAAAA,KAAAA,EAAAA,EAAyC5gC,QAAQ,CAElEwkC,GAAyBrlC,EAAAA,OAAa,CAAC,SAErCqjB,EAAAA,EACHA,EACuCA,EAGxCA,EAAAA,EAA8CA,EAG9CA,EAAAA,EAA8CA,EAG9CA,EAqBIse,EAAAA,EAAAA,EACHte,EAA6Dqe,EAlChE,MAAO,IACDre,CAAAA,QAAAA,EAAAA,GAAapd,IAAI,GAAjBod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAmBwG,WAAAA,GAAnBxG,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgCpkB,GAAG,CAAC,GAAU,EAAEqmC,CAAF,IAAQC,EAAIjhC,KAAK,CAAEzB,KAAM0iC,EAAIC,YAAY,CAAEC,QAAS,SAAmBC,QAAS,CAAC,EAAE,KAAO,EAAE,CAC9I,SAACriB,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,OAA2GpD,EAA7F,CAAEw0B,KAAM,MAAOziC,KAAM,MAAO4iC,QAAS,SAAmBC,SAASC,EAAwB,EAC3HvlC,EAAAA,CAAMA,CAACI,QAAQ,CAAColC,UAAU,CAACv7B,SAAS,WAAIgZ,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmB0B,oBAAAA,EACzD,CAAEugB,KAAM,YAAaziC,KAAM,YAAa4iC,QAAS,SAAmBC,SAASC,EAAwB,OACrG70B,EACFuS,CAAAA,QAAAA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAmBqB,eAAAA,GAAnBrB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoC3hB,MAAAA,GAAU2hB,CAAAA,QAAAA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBuC,UAAAA,IAAe,UAC9E,CAAE0f,KAAM,QAASziC,KAAM,QAAS4iC,QAAS,SAAmBC,SAASC,EAAwB,OAC7F70B,EACFuS,CAAAA,QAAAA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAmBqB,eAAAA,GAAnBrB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoC3hB,MAAAA,GAAU2hB,CAAAA,OAAAA,GAAAA,GAAapd,IAAAA,GAAbod,KAAAA,MAAAA,KAAAA,EAAAA,EAAmBuC,UAAAA,IAAe,UAC9E,CAAE0f,KAAM,UAAWziC,KAAM,WAAY4iC,QAAS,SAAmBC,SAASC,EAAwB,OAClG70B,EACFuS,CAAAA,QAAAA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjP,KAAK,EAAG,CAAEkxB,KAAM,QAASziC,KAAM,QAAS4iC,QAAS,SAAmBC,SAASC,EAAwB,OAAI70B,EAC5HkzB,GAAgB,CAAEsB,KAAM,OAAQziC,KAAM,iBAAkB4iC,QAAS,SAAmBC,QAAS,CAAC,EAAG,OAAI50B,EACrGswB,GAAyB/2B,SAAS,EAAI+6B,GAAiB,CACrDE,KAAM,eACNziC,KAAMuiC,GACNK,QAAS,SACTC,QAAS,GACTG,KAAM,CACJC,QAAS1E,GAAyB0E,OAAO,CACzC5nB,QAASkjB,GAAyB2E,UAAU,CAC5C7f,UAAWkb,GAAyB4E,YAAY,CAChDC,OAAQ7E,GAAyB8E,eAAe,CAAG9E,GAAyB8E,eAAe,CAAC5tB,OAAO,CAAC,aAAc8sB,IAAkBt0B,MACtI,CACF,OAAIA,EACJ1Q,EAAAA,CAAMA,CAACI,QAAQ,CAAC2iC,OAAO,CAAC94B,SAAS,EAAI64B,GAAoBj9B,IAAI,CAC3D,CAAEq/B,KAAM,eAAgBziC,KAAM,wBAAyB4iC,QAAS,SAAmBC,QArP3D,CAqPoEC,EAAwB,OACpH70B,EACF1Q,EAAAA,CAAMA,CAACI,QAAQ,CAAC8iC,YAAY,CAACj5B,SAAS,EAAIg5B,GAAoBp9B,IAAI,CAChE,CAAEq/B,KAAM,MAAOziC,KAAM,YAAa4iC,QAAS,SAAmBC,SAASC,EAAwB,OAC/F70B,KACCq1B,CAAAA,EAAAA,GAAAA,CAAAA,CAAcA,CAAC9iB,GAAapd,IAAI,KAC/B07B,CAAAA,QAAAA,EAAAA,GAAqB17B,IAAAA,GAArB07B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAA2ByE,SAAAA,GAA3BzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,CAAsC,CAAC/7B,GAAKC,WAAW,MAAvD87B,KAAAA,MAAAA,KAAAA,EAAAA,EAA4D0D,IAAI,CAACr/B,MAAM,CAACu/B,GAAOA,WAAIE,OAAO,CAAK,GAAW,EAAE,CAChH,UAACpiB,EAAAA,GAAapd,IAAI,GAAjBod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,GAAemtB,GAAch3B,SAAS,WAAIq3B,EAAAA,GAAWz7B,IAAAA,GAAXy7B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBz7B,IAAI,CAACo+B,KAAAA,EAClF,CACEiB,KAAM,QACNziC,KAAM,OAAoC,OAA5B6+B,GAAWz7B,IAAI,CAACA,IAAI,CAACo+B,KAAK,CAAE,UAC1CoB,QAAS,SACTC,QAAS,GACTG,KAAM,CACJQ,aAAc,wBACdC,mBACE,2IACFC,WAAYlF,GAAcl0B,GAC5B,CACF,OACA2D,EACH,CAAC9K,MAAM,CAACwB,SAASwN,IAAI,CAACwxB,GAAAA,CAAcA,CACvC,EAAG,CACD7E,GAAqB17B,IAAI,CACzBod,GAAapd,IAAI,CACjBL,GACAo+B,GACAd,GAAoBj9B,IAAI,CACxBo9B,GAAoBp9B,IAAI,CACxBm/B,GACe,QAAf1D,EAAAA,GAAWz7B,IAAAA,GAAXy7B,KAAAA,MAAAA,KAAAA,EAAAA,EAAiBz7B,IAAI,CACtB,EAEKwgC,GACJ,UAACC,GAAAA,CAAUA,CAAAA,CACTrB,KAAOA,GACPljC,UACEA,IACC/B,EAAAA,CAAMA,CAACI,QAAQ,CAAC2iC,OAAO,CAAC94B,SAAS,EAAI64B,GAAoB9gC,iBAAiB,EAC1EhC,EAAAA,CAAMA,CAACI,QAAQ,CAACmmC,eAAe,CAACt8B,SAAS,EAAIs3B,GAAqBzzB,SAAS,EAC3EkzB,GAAyB/2B,SAAS,EAAIo3B,GAAqBvzB,SAAS,EACpEmzB,GAAch3B,SAAS,EAAIq3B,GAAWt/B,iBAAiB,GAKxD4F,GAAU,GAAc9B,OAAO,EAAImd,GAAaxS,cAAc,CAClE,KACA,UAACqnB,GAAAA,CAAUA,CAAAA,CAACT,KAAOA,GAAOU,aAAc,CAAE/wB,GAAI,CAAE,EAAGjF,UAAY0hC,KAE3D+C,GAAW5mC,EAAAA,OAAa,CAAC,IAC7B,EAAa6mC,QAAQ,EAAIjF,EAASiF,QAAQ,CAAC/mC,QAAQ,CAAC,aAC3C,CADyD,MAEvD,4BACPqN,IAAKy0B,EAASiF,QAAQ,EAItBjF,EAASiF,QAAQ,EAAIjF,EAASiF,QAAQ,CAAC/mC,QAAQ,CAAC,eAC3C,CAD2D,MAEzD,0BACPqN,IAAKy0B,EAASiF,QAChB,SAID,CAAEjF,EAASiF,QAAQ,CAAE,EAIlBC,GAAkB9mC,EAAAA,OAAa,CAAC,SAAMqjB,EAAAA,SAAAA,QAAAA,EAAAA,QAAAA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBzd,IAAAA,GAAnByd,KAAAA,MAAAA,ExFjX/B,SAAS0jB,CAAuC,EAC7D,GAAI,CACF,MAAOC,CAAAA,EAAAA,EAAAA,CAAAA,CAAUA,CACfzgC,EAEAnG,EAAAA,CAAMA,CAACC,GADP,EACY,CAAC4V,EAAE,CAAGlF,OAAO3Q,EAAAA,CAAMA,CAACC,KAAK,CAAC4V,EAAE,OAAInF,EAEhD,CAAE,MAAOgI,EAAO,CACd,OAAOvS,CACT,CACF,EwFuWiGX,KAAO,CAAEA,GAAuB,QAAjByd,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,GxF7WR,EwF6WQA,EAAAA,EAAmBzd,IAAI,CAAE,EAEjIqhC,GACJ,WAACljC,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS7G,EAAE,OAAOG,UAAY,EAAIJ,OAAS,EAAImP,SAAU,CAAE1L,KAAM,OAAQK,GAAI,QAAS,YACnG0b,CAAAA,QAAAA,EAAAA,GAAapd,IAAI,GAAjBod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBmG,eAAe,GAClC,UAAC0U,GAAAA,EAASA,CAAAA,CACRC,MAAM,QAAG9a,GAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBmG,eAAe,CAC3C4U,SAAW,GAAwBlwB,SAAS,CAAiC,WAA9B01B,GAAAA,KAAAA,EAAAA,GAAmBxF,QAAQ,CAC1E8I,QAD+CtD,GACpC,UACX7hC,SAAS,KACTsB,WAAa,IACbL,GAAK,EACLmB,KAAK,UAGT,UAAC6N,GAAAA,EAAaA,CAAAA,CACZzL,QAAS,CACP,GAAG8c,GAAapd,IAAI,CACpBL,KAAMkhC,GACNjkC,KAAM,GACN2mB,gBAAiB,GACjB9E,gBAAiB,IACnB,EACAviB,UAAYA,GACZ+kC,WAAW,UACXnlC,SAAS,KACTsB,WAAa,IACb4O,MAAM,IACN+xB,cAAgBA,GAChB9gB,KAAM,CAAE7gB,MAAO2hC,GAAgBG,QAAgBrzB,CAAU,EACzD9N,GAAK,IAEL,CAACb,IAAAA,CAAAA,QAAakhB,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,GAAemP,GAAapd,IAAI,CAACmO,KAAK,EACvE,UAAC2gB,GAAAA,CAAkBA,CAAAA,CAAC3gB,MAAQiP,GAAapd,IAAI,CAACmO,KAAK,CAAG+D,QAAQ,WAC9D,CAAChW,IAAa,UAACkhB,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,GAAe9T,EAAAA,CAAMA,CAACI,QAAQ,CAACsb,OAAO,CAACzR,SAAS,EAClF,UAACwyB,GAAqBA,CAACj3B,KAAOA,GAAOk3B,WAAW,MAA1BD,GAA6BxZ,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBsB,oBAAoB,GAE5F,UAACwiB,GAAAA,CAAaA,CAAAA,CAAC5gC,QAAS,CAAEX,KAAMyd,QAAAA,EAAAA,QAAAA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAmBtP,QAAAA,GAAnBsP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA6BrP,MAAAA,GAA7BqP,KAAAA,IAAAA,EAAAA,EAAuCyjB,EAAgB,EAAG3kC,UAAYA,KACtG,UAACilC,GAAAA,CAAkBA,CAAAA,CAACjlC,UAAYA,KAChC,UAACimB,EAAAA,CAAMA,CAAAA,CAAC1gB,GAAG,OAAOwS,IAAM,IACtB,CAAC/X,IAAAA,CAAAA,QAAakhB,EAAAA,GAAapd,IAAI,GAAjBod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,GAAW,SAAImP,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBsG,WAAAA,GAAevpB,EAAAA,CAAMA,CAAC4J,EAAE,CAACC,KAAK,CAAC1D,OAAO,CAAC8gC,mBAAmB,EAC7H,UAACnH,GAAkBA,CAACt6B,KAAOA,KAC3B,CAACzD,IAAaq/B,GAAuBv7B,IADlBi6B,EAC0B9/B,EAAAA,CAAMA,CAACI,QAAQ,CAAC2hC,WAAW,CAAC93B,SAAS,EAClF,UAACg0B,GAAiBA,CAAC14B,MAAQ67B,GAAyBn2B,YAAczF,GAAhDy4B,cAAqE,SAAGhb,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBmG,eAAe,GAC9H,UAAC8d,GAAAA,CAAgBA,CAAAA,CAAC95B,KAAK,UAAU+5B,UAAY3hC,GAAKC,WAAW,QAIjE,MACE,iCACE,UAAC2hC,GAAAA,CAASA,CAAAA,CACR94B,MAAQ,GAA4G,OAAxG2U,CAAAA,QAAAA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBnP,WAAAA,GAAemP,CAAiB,QAAjBA,EAAAA,GAAapd,IAAAA,GAAbod,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBuC,UAAAA,IAAe,UAAY,WAAa,UAAW,YACpHghB,SAAWA,GACXa,aAAehB,GACfroB,UAAY6oB,GACZ9kC,UAAYA,KAEZ,CAACw/B,GAAqBzzB,SAAS,EAC/B,UAACw5B,GAAAA,CAAoBA,CAAAA,CAACrC,IAAI,SAAG1D,EAAAA,GAAqB17B,IAAAA,GAArB07B,KAAAA,MAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAA2ByE,SAAAA,GAA3BzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,CAAsC,CAAC/7B,GAAKC,WAAW,MAAvD87B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA4D0D,IAAI,CAAGj+B,GAAG,OAAOmI,GAAK,IAC/GnP,EAAAA,CAAMA,CAACI,QAAQ,CAACmnC,UAAU,CAACt9B,SAAS,EAAI,UAAC3H,EAAAA,EAAGA,CAAAA,CAACC,QAAQ,OAAOsT,GAAG,uBAAuB2xB,aAAa,CAACzlC,KACtG,UAACghB,GAAcA,CAACE,aAAeA,GAAele,EAA/Bge,QAA2C0e,IAE1D,UAACn/B,EAAAA,EAAGA,CAAAA,CAAC0N,IAAMyxB,IACT75B,KAGR,YC/ZA,OAR+C,GAE3C,IAMW6/B,CANX,KAACC,EAAAA,CAAUA,CAAAA,CAAC52B,SAJoB,CAITA,iBAAWvL,MAAQtE,EAAMsE,KAAK,CAAGoiC,QAAU1mC,EAAM0mC,OAAO,UAC7E,UAACC,GAAOA,CAAAA,GAAAA,iDCfP,IAAMvL,EAA8B,CACzC3W,OAAQ,WACRrY,MAAO,QACPw6B,SAAUC,SAAAA,CAAcA,CACxBC,gBAAiB,MACjB18B,aAAc,QACdxJ,UAAW,6BACb,EAAE,8CCmGK,IAAMumB,EAA4B,CAAE,OAAQ,KAAM,CAAU,0MCzBnE,MA3DqC,OAAC,QACpCtL,CAAM,SACNkE,CAAO,EAyDMgnB,KAxDb15B,CAAK,KAwDmB05B,EAAC,QAvDzBC,CAAa,YACbC,CAAU,WACVxK,CAAS,CACV,GACO,CAAEyK,EAAgBC,EAAiB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GAE/CC,EAAeC,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,KAC/BH,GAAgB,GAChBpnB,GACF,EAAG,CAAEA,EAASonB,EAAiB,EAEzB,QAAEI,CAAM,WAAE16B,CAAS,CAAE,CAAG26B,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,CACxCP,aACAxK,UAAW,UACTA,IACA1c,GACF,EACA0nB,QAAS,KACPN,GAAgB,EAClB,CACF,GAEMO,EAAgBJ,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,KAChCH,GAAgB,GAChBI,GACF,EAAG,CAAEJ,EAAiBI,EAAQ,EAExBzmB,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAE5B,MACE,WAACL,EAAAA,EAAKA,CAAAA,CAAC7E,OAASA,EAASkE,QAAUsnB,EAAehrB,KAAOyE,EAAW,OAAS,eAC3E,UAAC6mB,EAAAA,CAAYA,CAAAA,CAAAA,GACb,WAAChnB,EAAAA,CAAYA,CAAAA,WACX,UAACinB,EAAAA,CAAWA,CAAAA,CAAC5lC,WAAW,MAAM6lC,UAAU,cAAOx6B,IAC/C,UAACuT,EAAAA,CAAgBA,CAAAA,CAAAA,GACjB,WAACknB,EAAAA,CAASA,CAAAA,WACNZ,GAAkB,UAAC7lC,EAAAA,EAAGA,CAAAA,CAAC6M,GAAK,WAAI,UAAC65B,EAAAA,CAAeA,CAAAA,CAAAA,KAChDf,OAEJ,UAACgB,EAAAA,CAAWA,CAAAA,UACV,UAAC5rB,EAAAA,CAAMA,CAAAA,CACLC,KAAK,KACL/M,QAAUo4B,EACV5mC,UAAY+L,EAEZ1B,YAAa,WACd,kBAOX,iGCvEA,IAAM88B,EAAsF,CAC1FC,MAAO,CACL51B,KAAM,0BAENrP,MAAO,6KACPjC,MAAO,MACT,EACAmnC,UAAW,CACT71B,KAAM,oBACNrP,MAAO,6IACPjC,MAAO,QACT,EACAonC,kBAAmB,CACjB91B,KAAM,qBAENrP,MAAO,gMACPjC,MAAO,MACT,EACAqnC,MAAO,CACL/1B,KAAM,iBACNrP,MAAO,yHACPjC,MAAO,QACT,CACF,EAcA,EAAerC,EAAAA,IAAU,CAZE,OAAC,MAAEwN,CAAI,KAYW2Y,EAAC,IAZVhkB,CAAS,CAAS,GAC9C,MAAEwR,CAAI,OAAErP,CAAK,OAAEjC,CAAK,CAAE,CAAGinC,CAAS,CAAC97B,EAAK,CAE9C,MACE,UAACyK,EAAAA,CAAOA,CAAAA,CAAC3T,MAAQA,EAAQH,KAAK,QAAQ6a,UAAU,kBAC9C,UAACjC,EAAAA,CAAGA,CAAAA,CAACC,YAAc3a,EAAQF,UAAYA,WACnCwR,KAIV,0JCLA,MAAejG,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CA1BG,QAYai8B,EAA8CA,KAZ1D,CA0Ba12B,EAAC,QA1BZ9Q,CAAS,WAAEyL,CAAS,MAAEJ,CAAI,CAAS,GACtDm8B,EAAmBx7B,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,QAAS,CAC5CkI,aAAc,CACZC,gBAAgB,EAChB5P,gBAAiBkjC,EAAAA,EAAcA,CAEnC,GAEA,GAAIznC,GAAawnC,EAAiBvnC,iBAAiB,CACjD,CADmD,KAC5C,UAACI,EAAAA,CAAQA,CAAAA,CAACF,aAAa,OAAOsL,UAAYA,IAGnD,IAAM+J,EAAe,cAATnK,EAA4C,QAArBm8B,EAAAA,EAAiB1jC,IAAAA,GAAjB0jC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBE,oBAAoB,SAAGF,EAAAA,EAAiB1jC,IAAAA,GAAjB0jC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBG,UAAU,CAElH,MACE,UAACpyB,EAAAA,CAAKA,CAAAA,CACJpV,aAAa,OACbsL,UAAYA,EACZ+J,IAAMA,GAAO,GACbE,IAAM,GAAkC,OAA9BzX,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACiQ,MAAM,CAAE,SACxCwrB,SAAW,UAACC,EAAAA,CAAoBA,CAAAA,CAAC1nC,aAAa,OAAOsL,UAAYA,IACjEq8B,iBAAmBtyB,EAAM,UAAY,qBAG3C,wJCpBA,MAAe3X,EAAAA,IAAU,CAVI,OAAC,OAAEqE,CAAK,MAUU6lC,EAAC,GAVT/nC,CAAS,CAAS,GACvD,MACE,UAAC8V,EAAAA,CAAOA,CAAAA,CAAC3T,MAAM,2BACb,UAAC9B,EAAAA,CAAQA,CAAAA,CAACH,MAAM,iBAAiBI,SAAW,CAACN,WAC3C,WAACqH,OAAAA,WAAQnF,CAAAA,EAAQ,EAAI,IAAM,GAAC,CAAKA,EAAM2M,cAAc,CAACF,OAAW,CAAE8K,sBAAuB,CAAE,GAAI,UAIxG,6BCRA,IAAMuuB,EAAgB/pC,EAAAA,CAAMA,CAACI,QAAQ,CAAC4J,MAAM,CA2C5C,EAAepK,EAAAA,IAAU,CAAC0N,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAjCX,OAAC,CAAEE,MAiCuBhE,EAAC,GAjCf,SAAEC,CAAO,UAAEC,CAAQ,WAAEsgC,CAAS,WAAEjoC,CAAS,CAAS,GAC3EkoC,EACJxgC,GAAuB,MAAZA,CACV,IAACsgC,EAAc9/B,SAAS,EAA2B,eAAvB8/B,EAAc38B,IAAI,EAA4C,cAAvB28B,EAAc38B,IAAI,CAAe,CAEjG88B,EAAiBltB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,mBAErD,EAKE,EALE,CAKF,cALsB,IAKtB,YACE,UAACnF,EAAAA,CAAOA,CAAAA,CAAC3T,MAAQnC,OAAY2O,EAAY,sBACvC,UAACpO,EAAAA,EAAGA,CAAAA,UACF,UAAC6nC,EAAAA,CAAWA,CAAAA,CACVvtB,YAAY,OACZ3Y,MAAQlF,CAAAA,EAAAA,EAAAA,CAAAA,CAASA,CAAC0K,GAASyU,SAAS,CAACnf,CAAAA,EAAAA,EAAAA,CAAAA,CAASA,CAAC2K,IAAW0E,QAAQ,GAClErM,UAAYA,EACZyL,UAAYA,QAIhBw8B,GACA,iCACE,UAACpwB,EAAAA,CAAaA,CAAAA,CAAC3X,MAAQioC,EAAiBrwB,GAAK,IAC7C,UAACiwB,EAAoBA,CAAC7lC,MAAQ+lC,EAAYjoC,UAAYA,MAAjC+nC,IAlBpB,IAuBX,mOCsGA,MAAelqC,EAAAA,IAAU,CAAC0N,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAtHZ,OAAC,MAsHyBe,CArH5C5G,CAAK,CACL6G,OAAK,CACLtN,aAAW,WACXe,CAAS,WACTyL,CAAS,SACT1H,CAAO,OACP0I,CAAK,WACL/F,CAAS,aACT2hC,CAAW,MACXrnC,CAAI,CACE,GACAiN,EAAMq6B,CAAAA,EAAAA,EAAAA,MAAAA,CAAMA,CAAiB,MAC7B,WAAEC,CAAS,YAAEC,CAAU,iBAAEC,CAAe,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAOA,GAEpDlsB,EAAcvB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,YAE5C0tB,EAAWjjC,GAASA,EAAMnG,MAAM,CAAG,EAEnCsG,EACJ,UAAC+iC,EAAAA,CAAkBA,CAAAA,CACjBljC,MAAQA,EACR3B,QAAUA,EACV/D,UAAYA,EACZyM,MAAQA,EACRF,MAAQA,EACR7F,UAAYA,EACZ8hC,WAAaA,EACbD,UAAYA,EACZF,YAAcA,IAIZQ,EACJ,WAACjnC,EAAAA,CAAIA,CAAAA,CACHsL,SAAW,EACXqP,QAAQ,SACR/T,WAAW,aACXonB,OAAS5uB,EAAO,UAAY,UAC5B0b,OAAS1b,EAAO,CAAEd,MAAO,cAAe,EAAI,CAAC,YAE7C,UAACG,EAAAA,CAAQA,CAAAA,CACPC,SAAW,CAACN,EACZkB,WAAa,IACbqa,KAAM,CAAEpW,KAAM,KAAMK,GAAI,IAAK,WAG7B,UAAC6B,OAAAA,UAAOkF,MAGRtN,GACA,UAACoB,EAAAA,CAAQA,CAAAA,CACPC,SAAW,CAACN,EACZE,MAAM,iBACNN,SAAS,KACTqF,GAAK,WAGL,UAACoC,OAAAA,UAAOpI,SAMhB,MACE,WAAC2C,EAAAA,CAAIA,CAAAA,CACHjB,OAAO,OACPsN,IAAMA,EACNsO,QAAQ,SACRusB,QAAS,CAAE3jC,KAAM,EAAGK,GAAI,CAAE,EAC1BrF,aAAa,KACbywB,OAAO,MACPpU,YAAcA,EACd/Q,UAAYA,YAEZ,WAAC7J,EAAAA,CAAIA,CAAAA,CAACE,UAAY,EAAIsL,GAAK,EAAI5E,WAAW,uBACtCxH,EACA,UAAC0f,IAAQA,CAAC1f,KAAOA,EAAO2f,QAAQ,IAACC,cAAc,WAAtCF,EACLmoB,IAEFA,EACJ,WAACjnC,EAAAA,CAAIA,CAAAA,CAAC2D,GAAG,OAAOzD,UAAY,YAC1B,UAACgU,EAAAA,CAAOA,CAAAA,CAAC3T,MAAM,sBACb,UAAC0e,EAAAA,CAAUA,CAAAA,CACTkoB,OAAS,CAACR,EACV9sB,aAAW,aACXZ,YAAY,OACZlZ,EAAI,EACJ6K,EAAI,EACJ+O,KAAK,KACLvF,QAAQ,UACRxH,QAAUi6B,EACV1nB,KAAO,UAACtgB,EAAAA,CAAOA,CAAAA,CAACC,KAAK,SAASiB,EAAI,EAAI6K,EAAI,QAI5Cm8B,GACA,UAACK,EAAAA,CAASA,CAAAA,CACRtjC,MAAQA,EACR6G,MAAQA,EACRtN,YAAcA,EACdgqC,SAAWjoC,EAAO/C,EAAAA,CAAMA,CAACirC,GAAG,CAACC,OAAO,CAAGr6B,CAAAA,EAAAA,EAAAA,CAAAA,CAAKA,CAAC9N,QAAQ2N,EACrD3O,UAAYA,EACZopC,SAAWn7B,EACXxB,MAAQA,EACR+7B,WAAaA,EACbC,gBAAkBA,EAClBF,UAAYA,UAMlB1iC,IAGR,mGCpHA,MAAehI,EAAAA,IAAU,CApBE,OAAC,CAAE6C,MAAI,KAoBWgC,EAAC,UApBVH,CAAe,SAAEI,CAAO,WAAE3C,CAAS,UAAE4C,CAAQ,cAAEC,CAAY,CAAS,GACtG,MACE,UAACwmC,EAAAA,CAAMA,CAAAA,CACL1mC,QAAUA,EACVjC,KAAOA,EACPmC,aAAeA,EACfD,SAAWA,WAET,OAAC,QAAEmY,CAAM,UAAEiE,CAAQ,CAAE,SACrB,UAACsqB,EAAAA,CAAYA,CAAAA,CACX9tB,SAAWT,EACXvM,QAAUwQ,EACVmW,kBAAoB5yB,EAAkB,EAAI,EAC1CvC,UAAYA,MAKtB,mICqBA,MAAeuL,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAlCK,OAAC,OAAEgB,CAAK,GAkCMye,EAAC,KAlCLC,CAAQ,WAAEse,CAAS,UAAEC,CAAQ,UAAEze,CAAQ,SAAE0e,CAAO,SAAExqB,CAAO,UAAE0R,CAAQ,CAAS,GACxG+Y,EAAgB7rC,EAAAA,WAAiB,CAAC,KACtCohB,GAAWA,IACX8L,GACF,EAAG,CAAE9L,EAAS8L,EAAU,EACxB,MACE,iCACE,WAACnpB,EAAAA,CAAIA,CAAAA,CAAC4G,WAAW,SAAS3G,eAAe,0BACvC,UAACE,EAAAA,CAAIA,CAAAA,CAAC7B,MAAM,iBAAiBgB,WAAW,eAAQqL,IAC9Ci9B,GACA,UAAC59B,EAAAA,CAAIA,CAAAA,CACH4C,QAAUi7B,EACV7Z,OAAS3E,EAAW,UAAY,QAChC8H,QAAU9H,EAAW,EAAI,GACzBvO,OAAQ,CACNxc,MAAO+qB,EAAW,eAAiB,MACrC,WACD,aAKH0F,EACF,UAACrV,EAAAA,CAAMA,CAAAA,CACLjR,WAAa,CAACk/B,EACd/6B,QAAUk7B,EACV/nC,EAAE,uBACH,aAKP,6KCsBA,MAAe4J,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAnDY,OAAC,YAAEuf,CAAU,KAmDCM,EAAC,GAnDA5P,CAAQ,WAAE/P,CAAS,UAAEklB,CAAQ,WAAE3wB,CAAS,OAAEkC,CAAK,CAAS,GAChG,QAAE6Y,CAAM,UAAEiE,CAAQ,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAE7CrZ,EAAUhI,EAAAA,QAAc,CAAC8rC,IAAI,CAAChZ,GAI9BiZ,EAAkB/rC,EAAAA,YAAkB,CACxCgI,EACA,SAAEoZ,CAAQ,GAGZ,MACE,WAACE,EAAAA,CAAOA,CAAAA,CAACpE,OAASA,EAASkE,QAAUA,EAAUG,UAAU,eAAeC,MAAM,IAACwqB,aAAa,oBAC1F,UAACvqB,EAAAA,CAAcA,CAAAA,UACb,UAAChE,EAAAA,CAAMA,CAAAA,CACL9M,QAAUwQ,EACVvD,aAAa,aAA0B,OAAZqP,GAC3B9U,QAAQ,QACRxJ,EAAE,OACFgP,UAAWnW,CAAQnD,GAAUsZ,EAC7BnR,WAAarK,EACbG,aAAa,MACbD,MAAM,iBACNN,SAAS,KACTsB,WAAa,IACb4oC,SAAW,UAACrpC,EAAAA,CAAOA,CAAAA,CAACC,KAAK,SAASiB,EAAE,OAAO6K,EAAE,SAC7Cs8B,QAAU,EACViB,GAAI,CACF,kBAAmB,CACjBjyB,GAAI,CACN,EACA,wBAAyB,CACvBjX,GAAI,KACN,CACF,YAEEwE,CAAQnD,GAAU,UAACqJ,EAAAA,CAAMA,CAAClE,IAAI,WAAGnF,QAGvC,UAAC8nC,EAAAA,CAAMA,CAAAA,UACL,UAACzqB,EAAAA,CAAcA,CAAAA,CAAC9T,UAAYA,WAC1B,UAACgU,EAAAA,CAAWA,CAAAA,CAAC/f,GAAK,EAAIC,GAAK,EAAIa,QAAQ,OAAO+b,QAAQ,SAAS7a,OAAS,WACpEkoC,UAMd,+KCXA,MAAer+B,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAAC1N,EAAAA,UAAgB,CA1CL,GAE/BoQ,QADA,OAAEmwB,CAAK,OAyCwDK,EAAC,EAzCvDz+B,CAAS,UAAE21B,CAAQ,SAAEnnB,CAAO,OAAErM,EAAQ,gBAAgB,UAAEqZ,CAAQ,CAAE/P,WAAS,CAAS,GAGvF,YAAEw+B,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAqBA,CAAC9L,GACvC+L,EAAelvB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,YAC7C+E,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtB6a,EAAiBl9B,CAAAA,EAAAA,EAAAA,CAAAA,CAAgCA,GAEvD,MACE,UAACkY,EAAAA,CAAOA,CAAAA,CAAC3T,MAAQA,EAAQkI,WAAa2V,EAAWoqB,UAAY,IAAMvtB,UAAU,kBAC3E,WAACvB,EAAAA,CAAMA,CAAAA,CACL7P,UAAYA,EACZwC,IAAMA,EACN/N,MAAQF,EAAYmqC,EAAeF,EACnC1uB,KAAK,KACLvF,QAAQ,UACR6E,YAAY,OACZrM,QAAUA,EACVgN,SAAWA,EACXC,aAAW,qBACXva,WAAa,IACbxB,GAAG,MACHU,WAAa,EACb0B,UAAY,EACZuI,WAAarK,EACbqqC,UAAW,CACTtX,QAAS,EACTrW,OAAQ,CACNxc,MAAOiqC,CACT,CACF,EACArP,eAAiBA,YAEjB,UAACr6B,EAAAA,CAAOA,CAAAA,CAACC,KAAO09B,EAAQ,GAAK,qBAAuB,iBAAmBrtB,QAAU,IAC/E/Q,GAAa,UAACsqC,EAAAA,CAAOA,CAAAA,CAAC/uB,KAAK,OAC3B,CAACvb,IAAc21B,EAAW,KAAOyI,CAAAA,CAAlBzI,KAIzB,4IChDA,IAAM4U,EAA8C,CAClD,CAAEz2B,GAAI,WAAYpT,KAAM,WAAYR,MAAO,SAAU,EACrD,CAAE4T,GAAI,OAAQpT,KAAM,OAAQR,MAAO,SAAU,EAC7C,CAAE4T,GAAI,SAAUpT,KAAM,SAAUR,MAAO,SAAU,EACjD,CAAE4T,GAAI,MAAOpT,KAAM,MAAOR,MAAO,SAAU,EAC3C,CAAE4T,GAAI,gBAAiBpT,KAAM,gBAAiBR,MAAO,SAAU,EAC/D,CAAE4T,GAAI,MAAOpT,KAAM,MAAOR,MAAO,SAAU,EAC5C,CAaKsqC,EAAyB,OAAC,MAAErtC,CAAI,iBAAEkhC,CAAe,sBAAEC,CAAoB,CAAa,GAClFmM,EAAQxvB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,gBAAiB,iBAC3CyvB,EAAsBzvB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,YACpD0vB,EAAgBtM,CAAe,CAAClhC,EAAK2W,EAAE,CAAC,QAE9C,KAAsBnF,IAAlBg8B,EACK,KADwB,CAK/B,gCACE,UAACpqC,EAAAA,EAAGA,CAAAA,CAACoB,EAAI,EAAI6K,EAAI,EAAIo+B,GAAKztC,EAAK+C,KAAK,CAAGC,aAAa,MAAMU,GAAK,IAC/D,WAACe,EAAAA,CAAIA,CAAAA,CAACC,eAAe,gBAAgBhB,GAAK,YACxC,UAACkB,EAAAA,CAAIA,CAAAA,UAAG5E,EAAKuD,IAAI,GACjB,UAACqB,EAAAA,CAAIA,CAAAA,CAAC7B,MAAQyqC,EAAgB,EAAI,OAASD,WAAwBrM,CAAe,CAAClhC,EAAK2W,EAAE,CAAC,MAE7F,UAACvT,EAAAA,EAAGA,CAAAA,CAACqqC,GAAKH,EAAQj+B,EAAE,OAAOrM,aAAa,eACtC,UAACI,EAAAA,EAAGA,CAAAA,CAACqqC,GAAKztC,EAAK+C,KAAK,CAAGyB,EAAIgpC,EAAgBrM,EAAuB9xB,EAAE,OAAOrM,aAAa,YAIhG,EAYA,EAAeoL,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAVa,OAAC,iBAAE8yB,CAAe,CAUJQ,EAAC,mBAVKP,CAAoB,CAAS,GACjF,MACE,UAAClb,EAAAA,CAAIA,CAAAA,CAACC,gBAAgB,iBAAiB7a,WAAW,SAAS9G,OAAS,WAChE6oC,EAAmBztC,GAAG,CAACK,GACvB,UAACqtC,EAAAA,CAAuBrtC,KAAOA,EAAuBkhC,gBAAkBA,EAAkBC,qBAAuBA,GAArEnhC,EAAK2W,EAAE,IAI3D,sKClBA,MAAevI,CAAAA,EAAAA,EAAAA,CAAAA,CAAMA,CAACqzB,OAhCW,WAAEnzB,CAAS,KAgCEmzB,EAhCAR,CAAK,CAAS,GACpD,YAAEyM,CAAU,YAAEZ,CAAU,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAqBA,CAAC9L,GAEnD0M,EAAiB7vB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,YAC/CyvB,EAAsBzvB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,WAAY,YACpD8vB,EAAiB9vB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,QAAS,YAElD,MACE,WAACrZ,EAAAA,CAAIA,CAAAA,CAAC6J,UAAYA,EAAYjD,WAAW,mBACvC,UAACjI,EAAAA,EAAGA,CAAAA,CACFoB,EAAI,GACJ6K,EAAI,GACJw+B,WAAa,kBAAsCf,MAAAA,CAAnBA,EAAY,QAAuB7L,MAAAA,CAAhB6L,EAAY,KAAiBa,MAAAA,CAAb1M,EAAO,OAA6B0M,MAAAA,CAAvBA,EAAgB,QAAuB,OAAhBA,EAAgB,UACvH3qC,aAAa,OACb2F,SAAS,WACTjF,GAAK,WAEL,UAACoqC,EAAAA,CAAMA,CAAAA,CAACnlC,SAAS,WAAWnE,EAAE,OAAO6K,EAAE,OAAOnG,IAAI,MAAMirB,MAAM,MAAMsZ,GAAKG,EAAiB5qC,aAAa,gBACrG,UAACM,EAAAA,CAAOA,CAAAA,CAACC,KAAO09B,EAAQ,GAAK,qBAAuB,iBAAmBrtB,QAAU,EAAI7Q,MAAQ+pC,QAGjG,WAAC1pC,EAAAA,EAAGA,CAAAA,WACF,WAACqB,EAAAA,CAAIA,CAAAA,WACH,UAACG,EAAAA,CAAIA,CAAAA,CAAC7B,MAAQ+pC,EAAarqC,SAAS,KAAKsB,WAAa,aAAQk9B,IAC9D,UAACr8B,EAAAA,CAAIA,CAAAA,CAAC7B,MAAQwqC,EAAsB9qC,SAAS,KAAKsB,WAAa,IAAMC,WAAW,eAAM,cAExF,WAACY,EAAAA,CAAIA,CAAAA,CAAC7B,MAAQ+pC,EAAa/oC,WAAa,cAAM,qBAAoB2pC,UAI1E,iECxCe,SAASX,EAAsB9L,CAAa,MAKrD6L,EACAY,EALJ,IAAMK,EAAkBjwB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,YAAa,aACjDkwB,EAAoBlwB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,aAAc,cACpDmwB,EAAgBnwB,CAAAA,EAAAA,EAAAA,EAAAA,CAAiBA,CAAC,UAAW,WAcnD,OAVImjB,GAAS,IAAI,EACF8M,EACbL,EAAa,SACJzM,GAAS,IAAI,EACT+M,EACbN,EAAa,YAEbZ,EAAamB,EACbP,EAAa,OAER,YAAEZ,EAAYY,YAAW,CAClC,gCCpBe,SAAS9R,EAAqGr7B,CAAe,EAC1I,GAAI,CAACA,EACH,GADQ,IACDiR,IAGH08B,EAAgB3tC,EAAI4tC,KAAK,CAAC,KAChC,MAAO,CAAEz4B,KAAMw4B,CAAa,CAAC,EAAE,CAAEld,MAAOkd,CAAa,CAAC,EAAE,CAC1D,gDCHe,SAASjS,EAAgD51B,CAAY,CAAE+qB,CAA2C,EAC/H,GAAI,CAAC/qB,EAAMqP,IAAI,EAAI,CAACrP,EAAM2qB,KAAK,CAC7B,CAD+B,MACxBxf,IAGH48B,EAAM/nC,EAAMqP,IAAI,CAAG,IAAMrP,EAAM2qB,KAAK,CAC1C,GAAII,EAAYzxB,GAAG,CAAC0uC,GAAUA,EAAOtpC,KAAK,EAAEvE,QAAQ,CAAC4tC,GACnD,GADsE,IAC/DA,CAEX,8RCLA,IAAME,EAAoBxtC,EAAAA,CAAMA,CAACC,KAAK,CAACq3B,aAAa,CAE9CmW,EAAgB,CAAE,SAAU,SAAU,UAAW,UAAW,CAC5DC,EAAsB,CAC1B1tC,EAAAA,CAAMA,CAACC,KAAK,CAACiO,QAAQ,CAACiQ,MAAM,CAC3B,GAAsB,OAAnBqvB,EAAmB,OACtB,GAA+BA,MAAAA,CAA5BA,EAAmB,UAA4B,OAAnBA,EAAmB,eAClD,GAAsB,OAAnBA,EAAmB,QAAO,CAEjB,SAASG,IACtB,MACE,UAACxoB,EAAAA,CAAIA,CAAAA,CAACC,gBAAiB,CAAEle,KAAM,yBAA0BK,GAAI,wBAAyB,EAAGuS,IAAK,CAAE5S,KAAM,YAAaK,GAAI,WAAY,WAC/HkmC,EAAc5uC,GAAG,CAAC,CAAC+uC,EAAcvgC,KACjC,IAAMwgC,EAAoB,yBAAwC,OAAdD,EAAc,aAC5DE,EAAoB,yBAAwC,OAAdF,EAAc,cAClE,MACE,WAAChuC,EAAAA,QAAc,YACb,UAACkyB,EAAAA,CAAQA,CAAAA,CACPic,gBAAiB,CAAE7mC,KAAM,EAAGK,GAAI,CAAE,EAClCymC,cAAe,CAAE9mC,KAAM,EAAGK,GAAI,CAAE,EAChC0mC,UAAW,CACTjnC,GAAI,CAAEE,KAAM,EAAGK,GAAI,CAAE,CACvB,WAEEmmC,CAAmB,CAACrgC,EAAM,GAE9B,UAACykB,EAAAA,CAAQA,CAAAA,UACP,UAACoc,EAAAA,CAAiBA,CAAAA,CAChBzrC,KAAOorC,EACP3pC,MAAM,eAGV,UAAC4tB,EAAAA,CAAQA,CAAAA,UACP,UAACoc,EAAAA,CAAiBA,CAAAA,CAChBzrC,KAAOqrC,EACP5pC,MAAM,iBAnBU0pC,EAwB1B,IAGN,CCzBA,IAAMH,EAAgB,CAAE,SAAU,SAAU,IAAzBA,MAAoC,UAAW,CA+KlE,EA5IqC,OAAC,MAAE5nC,CAAI,WAAE63B,CAAS,WA4I7ByQ,EAAC,IA5I8B/F,CAAe,OAAE3K,CAAK,CAAE,GACzE,CAAE2Q,EAASC,EAAY,CAAGhG,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GAEnCiG,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,GAC9BC,EAAmBF,EAAazoC,IAAI,EAAI,CAACyoC,EAAazoC,IAAI,CAAC4oC,KAAK,CAChEC,EAAYztB,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAE3B0tB,EAAuB,CAAC,SACvB9oC,EAAAA,KAAAA,EAAAA,EAAM+oC,MAAN/oC,eAA2B,EAG9B8oC,CAHgC,CAGT9oC,EAAK+oC,qBAAqB,CAFjDnB,EAAcrU,OAAO,CAACyV,GAAKF,CAAoB,CAACE,EAAE,CAAG,CAAEC,MAA1CrB,GAAoD,CAACe,EAAkBO,UAAW,CAACP,CAAiB,GAKnH,IAAMQ,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,CAAOA,CAAS,CAC9BC,cAAe,CACb/oC,QAASN,OAAAA,EAAAA,KAAAA,EAAAA,EAAMw3B,MAANx3B,MAAMw3B,GAAgB,GAC/B8H,IAAKt/B,OAAAA,EAAAA,KAAAA,EAAAA,EAAMpD,IAAAA,EAANoD,CAAc,GACnB+nC,aAAc/nC,SAAAA,KAAAA,EAAAA,CAAAA,CAAMspC,oBAAAA,EAAuBtpC,EAAKspC,oBAAoB,CAACV,KAAK,CAAG,CAACD,EAC9EI,sBAAuBD,CACzB,EACAS,KAAM,WACR,GAEMC,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAwBtB,aAAEC,CAAW,CAAE,CAAG9G,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,CAAC,CAClCP,WAvBF,CAuBcsH,QAvBLA,CAAgC,EACvC,IAAMt0B,EAAO,CACXzY,IAAI,OAAE26B,EAAAA,KAAAA,EAAAA,EAAU+H,GAAG,CACnB9H,MADMD,MACM,OAAEA,EAAAA,KAAAA,EAAAA,EAAUj3B,OAAO,CAC/ByoC,EADcxR,oBACSA,EAASwR,qBAAqB,CACrDO,qBAAsB,CACpBV,MAAOrR,EAASwQ,YAAY,CAEhC,QACA,CAAKnQ,GAAS53B,EAELwpC,EAAS,EAFE,UAEW,CAC3BnpC,WAAY,CAAE2P,GAAIhQ,OAAAA,EAAAA,KAAAA,EAAAA,EAAMgQ,EAAAA,EAAK3K,EAAXrF,KAAkBA,EAAKgQ,EAAE,EAAI,EAAG,EAClD45B,YAAa,CAAEx0B,OAAQ,WAAOC,CAAK,CACrC,GAIOm0B,EAAS,YAAa,CAAEI,YAAa,CAAEx0B,OAAQ,YAAQC,CAAK,CAAE,EAEzE,EAIEwiB,UAAW,UACT,MAAMA,IACN2Q,GAAW,EACb,EACA3F,QAAS,QAEUhwB,EADjB21B,GAAW,GACX,IAAMqB,EAAwB,QAAbh3B,EAAAA,EAAM5M,OAAAA,GAAN4M,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAei3B,MAAM,QAClCD,EAAAA,KAAAA,EAAAA,EAAUrS,UAAVqS,EAAUrS,GAAgBqS,SAAAA,KAAAA,EAAAA,EAAUjtC,GAAVitC,CAAUjtC,GAAM,OAC5CitC,EAAAA,KAAAA,EAAAA,EAAUrS,UAAVqS,EAAUrS,GAAgB2R,EAAQY,QAAQ,CAAC,UAAW,CAAExiC,KAAM,SAAU4N,QAAS60B,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,CAACH,EAAU,eAAgB,GAC3HA,OAAAA,EAAAA,KAAAA,EAAAA,EAAUjtC,IAAI,GAAIusC,EAAQY,CAA1BF,OAAkC,CAAC,MAAO,CAAEtiC,KAAM,SAAU4N,QAAS60B,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,CAACH,EAAU,OAAQ,WAC9FA,EAAAA,KAAAA,EAAAA,EAAUI,UAAVJ,EAAsB,EAAE,EACzBE,QAAQ,CAAC,UAAW,CAAExiC,KAAM,SAAU4N,QAAS60B,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,CAACH,EAAU,eAAgB,GAEjGtH,GAAgB,EAEpB,CACF,GAEM2H,EAAkC,MAAM3S,IAC5CgL,GAAgB,GAChBiG,GAAW,GACX,MAAMkB,EAAYnS,EACpB,EAEA,MACE,UAAC4S,EAAAA,EAAYA,CAAAA,CAAG,GAAGhB,CAAO,UACxB,WAACiB,OAAAA,CAAKC,UAAU,IAACH,SAAWf,EAAQmB,YAAY,CAACJ,aAC/C,UAACK,EAAAA,CAAgBA,CAAAA,CACf3tC,KAAK,UACL4tC,UAAU,IACVvyB,QAAQ,YACR3O,GAAK,IAEP,UAACmhC,EAAAA,CAAaA,CAAAA,CACZ7tC,KAAK,MACL4Z,YAAY,kCACZg0B,UAAU,IACVE,MAAO,CACLC,UAzHW,CAyHAC,CACb,EACA3yB,QAAQ,YACR3O,GAAK,IAELq/B,EACA,iCACE,WAAC/gC,EAAAA,CAAKA,CAAAA,CACJC,OAAO,OACPkP,YAAY,OACZra,QAAQ,OACR2xB,cAAe,CAAEhtB,KAAM,SAAUC,GAAI,KAAM,EAC3CoD,WAAY,CAAErD,KAAM,aAAcK,GAAI,QAAS,EAC/C1D,UAAY,EACZJ,OAAS,EACTC,EAAE,wBACH,qEAEC,UAAC2Z,EAAAA,CAAMA,CAAAA,CAACtF,QAAQ,UAAUuF,KAAK,KAAK/M,QAAUm+B,EAAU3R,MAAM,UAAG,iBAEjE2R,EAAU5xB,MAAM,EAAI,UAAC4zB,EAAAA,CAASA,CAAAA,CAACC,cAAe,CAAEvjC,KAAM,QAASwjC,QAAQ,CAAK,EAAG5vB,QAAU0tB,EAAU1tB,OAAO,MAG9G,iCACE,UAACld,EAAAA,CAAIA,CAAAA,CAACiU,QAAQ,YAAYpW,SAAS,KAAKkvC,aAAe,WAAI,+DAG3D,UAACvuC,EAAAA,EAAGA,CAAAA,CAACuuC,aAAe,WAClB,UAAClD,EAAwBA,CAAAA,KAE3B,UAAC7pC,EAAAA,CAAIA,CAAAA,CAACiU,CAFqB41B,OAEb,YAAYhsC,SAAS,KAAKkvC,aAAc,CAAE3pC,KAAM,OAAQK,GAAI,CAAE,WAAG,yBAC/E,UAAC2mC,EAAAA,CAAiBA,CAAAA,CAChBzrC,KAAK,eACLyB,MAAM,2BAIZ,UAAC5B,EAAAA,EAAGA,CAAAA,CAACwuC,UAAY,WACf,UAACzzB,EAAAA,CAAMA,CAAAA,CACLC,KAAK,KACLlQ,KAAK,SACLrL,UAAYqsC,EACZhiC,WAAa,CAAC4iC,EAAQ+B,SAAS,CAACC,OAAO,UAErC,EAA0B,cAAjB,uBAMvB,EChKA,EAvBsC,OAAC,QAAEl0B,CAAM,SAAEkE,CAAO,CAuBzCiwB,UAvB2CvT,CAAS,CAuBxCuT,EAAC,GAvByCprC,CAAI,OAAE43B,CAAK,CAAE,GAC1EnvB,EAASmvB,EAAoC,4BAA5B,0BACjBlqB,EAAOkqB,EAAQ,kHAAoH,GAEnI,CAAE0K,EAAgBC,EAAiB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,EAAC,GAE/C6I,EAAa3I,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,IACtB,UAAC4F,EAAWA,CAACtoC,KAAOA,EAAO63B,UAAYA,EAAY0K,EAAvC+F,cAAyD/F,EAAkB3K,MAAQA,IACrG,CAAE53B,EAAM43B,EAAOC,EAAW,EAE7B,MACE,UAACyT,EAAAA,CAASA,CAAAA,CACRr0B,OAASA,EACTkE,QAAUA,EACV1S,MAAQA,EACRiF,KAAOA,EACP29B,WAAaA,EACb/I,eAAiBA,EACjBC,gBAAkBA,GAGxB,sHCWA,MAhC4C,OAAC,CAAEtrB,QAAM,SAAEkE,CAAO,EAgC/C2c,SAhCiDD,CAAS,MAAE73B,CAAI,CAAE,EAgC/C,CA/B1Bkc,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GACtBqtB,EAAWC,CAAAA,EAAAA,EAAAA,CAAAA,CAAWA,GAEtBpH,EAAaK,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,IACtB8G,EAAS,YAAa,CAC3BnpC,WAAY,CAAE2P,GAAI3K,OAAOrF,EAAKgQ,EAAE,CAAE,EAClC45B,YAAa,CAAEx0B,OAAQ,QAAS,CAClC,GACC,OAAEpV,EAAAA,KAAAA,EAAAA,EAAMgQ,EAAE,CAAEw5B,EAAU,CAApBxpC,CAECM,QAAUN,EAAAA,KAAAA,EAAAA,EAAMw3B,MAANx3B,MAAkB,CAE5BurC,EAAqB7I,CAAAA,EAAAA,EAAAA,WAAAA,CAAWA,CAAC,KACrC,IAAM8I,EAAgBtvB,EAAW,CAAE5b,EAAQupB,KAAK,CAAC,EAAG,GAAIvpB,EAAQupB,KAAK,CAAC,CAAC,GAAI,CAACpE,IAAI,CAAC,OAASnlB,EAC1F,MACE,WAACrC,EAAAA,CAAIA,CAAAA,WAAC,WAAQ,WAACA,EAAAA,CAAIA,CAAAA,CAACb,WAAW,MAAMoM,GAAG,iBAAO,IAAGgiC,GAAiB,aAAkB,qBAEzF,EAAG,CAAElrC,EAAS4b,EAAU,EAExB,MACE,UAACimB,EAAAA,CAAWA,CAAAA,CACVlrB,OAASA,EACTkE,QAAUA,EACV1S,MAAM,iCACN25B,cAAgBmJ,EAChBlJ,WAAaA,EACbxK,UAAYA,GAGlB,qKC/BA,IAAMv9B,EAAUH,EAAAA,CAAMA,CAACI,QAAQ,CAACkkC,WAAW,CA+E3C,EAlEuC,OAAC,MAAEplC,CAAI,WAAE6C,CAAS,CAAEw6B,CAkE5CD,KAlEgD,CAAS,UACtE,EAAaryB,EAAT,OAAkB,CAKpB,CALsB,CAiEmBqyB,CA5DzC,CA4D0C,CA5D1C,MAACjW,EAAAA,CAAkBA,CAACC,SAAS,EAACC,oBAAoB,uBAEhD,UAACF,EAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,UAClD,UAACskB,EAAAA,CAAkBA,CAACI,KAAK,WACvB,UAACrkB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,wBAAiBrD,EAAKmO,KAAK,KAGvE,UAACgZ,EAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,oBAClD,UAACskB,EAAAA,CAAkBA,CAACI,KAAK,WACvB,UAACrkB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,wBAAiBrD,EAAK6oC,eAAe,KAGtE,UAATxL,GACA,iCACE,UAAClW,EAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,UAClD,UAACskB,EAAAA,CAAkBA,CAACI,KAAK,WACvB,UAAC1d,EAAAA,EAAWA,CAAAA,CACVC,OAAS9J,EAAKmM,YAAY,CAC1BtJ,UAAYA,EACZJ,SAAS,KACT2I,WAAa,SAMV,YAATiyB,GACA,iCACE,UAAClW,EAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,OAA6B,UAACskB,EAAAA,CAAkBA,CAACI,KAAK,WACtG,UAAC7U,EAAAA,EAAaA,CAAAA,CACZzL,QAAUjH,EAAK2oC,QAAQ,CACvB9lC,UAAYA,EACZwjB,WAAW,kBAMR,UAATgX,GACA,iCACE,UAAClW,EAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,QAClD,UAACskB,EAAAA,CAAkBA,CAACI,KAAK,WACvB,UAAC7kB,EAAAA,CAAkBA,CAAAA,CACjBC,UAAY3C,EAAK2C,SAAS,CAC1BE,UAAYA,EACZQ,QAAQ,mBAIZ,UAAC8jB,EAAAA,CAAkBA,CAACG,KAAK,EAACzkB,UAAYA,WAAY,UAClD,UAACskB,EAAAA,CAAkBA,CAACI,KAAK,WACvB,UAAC1T,EAAAA,CAAaA,CAAAA,CAAC9O,MAAQ/E,EAAKwmB,MAAM,CAAGxX,SAAWhE,EAAAA,CAAaA,CAACC,KAAK,CAAGpI,UAAYA,YAvDnF,IA8DX,4NCtBA,MA9CwC,OAAC,MAAE7C,CAAI,MAAEq9B,CAAI,WAAEx6B,CAAS,CAAS,GACvE,MACE,EA4CWuvC,CA5CX,QAAC/vC,EAAAA,EAAEA,CAAAA,WACD,MA2CwC+vC,EA3CxC,EAAC9vC,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,wBAAiBrD,EAAKmO,KAAK,KAEvE,UAAC7L,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAACxjB,EAAAA,CAAQA,CAAAA,CAACC,SAAW,CAACN,EAAYQ,QAAQ,wBAAiBrD,EAAK6oC,eAAe,KAEtE,UAATxL,GACA,UAAC/6B,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAAC7c,EAAAA,EAAWA,CAAAA,CACVC,OAAS9J,EAAKmM,YAAY,CAC1BtJ,UAAYA,EACZJ,SAAS,KACT2I,WAAa,EACbrB,MAAM,QAID,YAATszB,GACA,UAAC/6B,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAAChU,EAAAA,EAAaA,CAAAA,CACZzL,QAAUjH,EAAK2oC,QAAQ,CACvB9lC,UAAYA,EACZwjB,WAAW,eAIN,UAATgX,GACA,UAAC/6B,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,SAASnW,GAAK,YAC9B,UAAC7N,EAAAA,CAAkBA,CAAAA,CACjBC,UAAY3C,EAAK2C,SAAS,CAC1BE,UAAYA,EACZE,MAAM,iBACNM,QAAQ,mBAId,UAACf,EAAAA,EAAEA,CAAAA,CAACokB,cAAc,kBAChB,UAAC7S,EAAAA,CAAaA,CAAAA,CAAC9O,MAAQ/E,EAAKwmB,MAAM,CAAG3jB,UAAYA,QAIzD,ECvDM5B,EAAUH,EAAAA,CAAMA,CAACI,QAAQ,CAACkkC,WAAW,CAmD3C,EAnCoC,OAAC,OAAE78B,CAAK,WAAE1F,CAAS,CAAEqG,KAAG,CAAEm0B,MAAI,CAAS,GACnE,QAAEgV,CAAM,eAkC0B/U,EAAC,CAlCzBgV,CAAgB,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,CAAChqC,EAAO,CAAC1F,UAEjE,EAAakI,EAAT,OAAkB,CAKpB,CALsB,EAKtB,QAAC/B,EAAAA,CAAKA,CAAAA,CAACuE,MAAO,CAAEC,YAAa,MAAO,EAAGiS,KAAK,kBAC1C,UAAChS,EAAAA,CAAKA,CAAAA,CAACvE,IAAMA,WACX,WAAC7G,EAAAA,EAAEA,CAAAA,WACD,UAAC8G,EAAAA,EAAEA,CAAAA,CAACsW,KAAK,iBAAQ,UACjB,UAACtW,EAAAA,EAAEA,CAAAA,CAACsW,KAAK,iBAAQ,oBACf4d,aAAoB,UAACl0B,EAAAA,EAAEA,CAAAA,CAAC3E,EAAE,eAAM,UACvB,YAAT64B,GAAsB,UAACl0B,EAAAA,EAAEA,CAAAA,CAAC3E,EAAE,eAAM,OACzB,UAAT64B,GAAoB,UAACl0B,EAAAA,EAAEA,CAAAA,CAAC3E,EAAE,eAAM,QAClC,UAAC2E,EAAAA,EAAEA,CAAAA,CAAC3E,EAAE,eAAQ,SAAmC,OAAzBvD,EAAQ+N,QAAQ,CAACiQ,MAAM,SAGnD,WAAC7V,EAAAA,CAAKA,CAAAA,WACO,YAAU,EAAkConB,KAAK,CAAC,EAAG8hB,GAAkB3yC,GAAG,CAAC,CAACK,EAAMmO,IAC3F,UAACikC,EAA+BA,CAAuDpyC,KAAOA,EAAOq9B,KAAK,OAAOx6B,UAAYA,GAAtF7C,EAAKmO,KAAK,CAAjBikC,CAAqBvvC,CAAAA,CAAYmJ,OAAOmC,GAAS,GAAC,GAEzE,YAATkvB,GAAsB,EAAyC7M,KAAK,CAAC,EAAG8hB,GAAkB3yC,GAAG,CAAC,CAACK,EAAMmO,IACrG,UAACikC,EAA+BA,CAAuDpyC,KAAOA,EAAOq9B,KAAK,UAAUx6B,UAAYA,GAAzF7C,EAAKmO,GAAZikC,EAAiB,EAAIvvC,CAAAA,CAAYmJ,OAAOmC,GAAS,GAAC,GAEzE,UAATkvB,GAAoB,EAAuC7M,KAAK,CAAC,EAAG8hB,GAAkB3yC,GAAG,CAAC,CAACK,EAAMmO,IACjG,UAACikC,EAA+BA,CAAuDpyC,KAAOA,EAAOq9B,KAAK,QAAQx6B,UAAYA,GAAvF7C,EAAKmO,KAAZikC,EAAqBvvC,CAAAA,CAAYmJ,OAAOmC,GAAS,GAAC,GAEpF,UAACqkC,KAAAA,CAAG1hC,IAAMuhC,UAzBP,IA6BX","sources":["webpack://_N_E/./icons/brands/solidity_scan.svg","webpack://_N_E/?7154","webpack://_N_E/./lib/block/getBlockTotalReward.ts","webpack://_N_E/./lib/getFilterValueFromQuery.ts","webpack://_N_E/./lib/hooks/usePreventFocusAfterModalClosing.tsx","webpack://_N_E/./lib/networks/getNetworkValidationActionText.ts","webpack://_N_E/./lib/address/getCheckedSummedAddress.ts","webpack://_N_E/./lib/hooks/useAddressProfileApiQuery.tsx","webpack://_N_E/./lib/hooks/useIsSafeAddress.tsx","webpack://_N_E/./lib/xStarScore/useFetchXStarScore.ts","webpack://_N_E/./types/api/noves.ts","webpack://_N_E/./ui/address/accountHistory/AddressAccountHistoryTableItem.tsx","webpack://_N_E/./ui/address/accountHistory/AddressAccountHistoryListItem.tsx","webpack://_N_E/./ui/address/AddressAccountHistoryFilter.tsx","webpack://_N_E/./ui/address/AddressAccountHistory.tsx","webpack://_N_E/./ui/address/blocksValidated/AddressBlocksValidatedListItem.tsx","webpack://_N_E/./ui/address/blocksValidated/AddressBlocksValidatedTableItem.tsx","webpack://_N_E/./ui/address/AddressBlocksValidated.tsx","webpack://_N_E/./ui/shared/SocketAlert.tsx","webpack://_N_E/./ui/address/coinBalance/AddressCoinBalanceChart.tsx","webpack://_N_E/./ui/address/coinBalance/AddressCoinBalanceListItem.tsx","webpack://_N_E/./ui/address/coinBalance/AddressCoinBalanceTableItem.tsx","webpack://_N_E/./ui/address/coinBalance/AddressCoinBalanceHistory.tsx","webpack://_N_E/./ui/address/AddressCoinBalance.tsx","webpack://_N_E/./ui/address/details/AddressCounterItem.tsx","webpack://_N_E/./ui/address/details/AddressAlternativeFormat.tsx","webpack://_N_E/./ui/address/details/AddressBalance.tsx","webpack://_N_E/./ui/address/details/AddressImplementations.tsx","webpack://_N_E/./ui/address/details/AddressNameInfo.tsx","webpack://_N_E/./lib/bigint/sumBnReducer.ts","webpack://_N_E/./ui/address/utils/tokenUtils.ts","webpack://_N_E/./ui/address/utils/useFetchTokens.ts","webpack://_N_E/./ui/address/details/AddressMultichainButton.tsx","webpack://_N_E/./ui/address/details/AddressNetWorth.tsx","webpack://_N_E/./ui/address/details/AddressSaveOnGas.tsx","webpack://_N_E/./ui/address/filecoin/FilecoinActorTag.tsx","webpack://_N_E/./ui/address/tokenSelect/TokenSelectButton.tsx","webpack://_N_E/./ui/address/tokenSelect/TokenSelectItem.tsx","webpack://_N_E/./ui/address/tokenSelect/TokenSelectMenu.tsx","webpack://_N_E/./ui/address/tokenSelect/useTokenSelect.ts","webpack://_N_E/./ui/address/tokenSelect/TokenSelectDesktop.tsx","webpack://_N_E/./ui/address/tokenSelect/TokenSelectMobile.tsx","webpack://_N_E/./ui/address/tokenSelect/TokenSelect.tsx","webpack://_N_E/./ui/address/utils/useAddressCountersQuery.ts","webpack://_N_E/./ui/address/AddressDetails.tsx","webpack://_N_E/./ui/address/epochRewards/AddressEpochRewardsTableItem.tsx","webpack://_N_E/./ui/address/epochRewards/AddressEpochRewardsTable.tsx","webpack://_N_E/./ui/address/epochRewards/AddressEpochRewardsListItem.tsx","webpack://_N_E/./ui/address/AddressEpochRewards.tsx","webpack://_N_E/./ui/address/internals/AddressIntTxsTableItem.tsx","webpack://_N_E/./ui/address/internals/AddressIntTxsTable.tsx","webpack://_N_E/./ui/address/AddressTxsFilter.tsx","webpack://_N_E/./ui/address/internals/AddressIntTxsListItem.tsx","webpack://_N_E/./ui/address/internals/AddressIntTxsList.tsx","webpack://_N_E/./ui/address/AddressInternalTxs.tsx","webpack://_N_E/./ui/address/utils/useAddressQuery.ts","webpack://_N_E/./ui/address/AddressLogs.tsx","webpack://_N_E/./ui/address/mud/AddressMudBreadcrumbs.tsx","webpack://_N_E/./ui/address/mud/utils.ts","webpack://_N_E/./ui/address/mud/AddressMudRecordValues.tsx","webpack://_N_E/./ui/address/mud/AddressMudRecord.tsx","webpack://_N_E/./ui/shared/sort/getSortParamsFromQuery.ts","webpack://_N_E/./ui/address/mud/AddressMudRecordsKeyFilterContent.tsx","webpack://_N_E/./ui/address/mud/AddressMudRecordsKeyFilter.tsx","webpack://_N_E/./ui/address/mud/AddressMudRecordsTable.tsx","webpack://_N_E/./ui/address/mud/AddressMudTable.tsx","webpack://_N_E/./ui/address/mud/AddressMudTablesListItem.tsx","webpack://_N_E/./ui/address/mud/AddressMudTablesTableItem.tsx","webpack://_N_E/./ui/address/mud/AddressMudTablesTable.tsx","webpack://_N_E/./ui/address/mud/AddressMudTables.tsx","webpack://_N_E/./ui/address/AddressMud.tsx","webpack://_N_E/./ui/address/tokens/NFTItemContainer.tsx","webpack://_N_E/./ui/address/tokens/NFTItem.tsx","webpack://_N_E/./ui/address/tokens/AddressCollections.tsx","webpack://_N_E/./ui/address/tokens/AddressNFTs.tsx","webpack://_N_E/./ui/address/tokens/ERC20TokensListItem.tsx","webpack://_N_E/./ui/address/tokens/ERC20TokensTableItem.tsx","webpack://_N_E/./ui/address/tokens/ERC20TokensTable.tsx","webpack://_N_E/./ui/address/tokens/ERC20Tokens.tsx","webpack://_N_E/./ui/address/tokens/TokenBalancesItem.tsx","webpack://_N_E/./ui/address/tokens/TokenBalances.tsx","webpack://_N_E/./ui/address/AddressTokens.tsx","webpack://_N_E/./ui/address/AddressTokenTransfers.tsx","webpack://_N_E/./ui/txs/TxsWithAPISorting.tsx","webpack://_N_E/./ui/address/AddressTxs.tsx","webpack://_N_E/./ui/address/AddressUserOps.tsx","webpack://_N_E/./ui/address/AddressWithdrawals.tsx","webpack://_N_E/./ui/address/details/AddressFavoriteButton.tsx","webpack://_N_E/./ui/address/ensDomains/AddressEnsDomains.tsx","webpack://_N_E/./lib/solidityScan/schema.ts","webpack://_N_E/./lib/solidityScan/useFetchReport.ts","webpack://_N_E/./ui/address/SolidityscanReport.tsx","webpack://_N_E/./ui/address/utils/useCheckAddressFormat.ts","webpack://_N_E/./ui/address/utils/useCheckDomainNameParam.ts","webpack://_N_E/./ui/pages/Address.tsx","webpack://_N_E/./pages/address/[hash]/index.tsx","webpack://_N_E/./stubs/withdrawals.ts","webpack://_N_E/./types/api/address.ts","webpack://_N_E/./ui/shared/DeleteModal.tsx","webpack://_N_E/./ui/shared/EpochRewardTypeTag.tsx","webpack://_N_E/./ui/shared/NativeTokenIcon.tsx","webpack://_N_E/./ui/shared/GasUsedToTargetRatio.tsx","webpack://_N_E/./ui/shared/block/BlockGasUsed.tsx","webpack://_N_E/./ui/shared/chart/ChartWidget.tsx","webpack://_N_E/./ui/shared/filters/PopoverFilterRadio.tsx","webpack://_N_E/./ui/shared/filters/TableColumnFilter.tsx","webpack://_N_E/./ui/shared/filters/TableColumnFilterWrapper.tsx","webpack://_N_E/./ui/shared/solidityscanReport/SolidityscanReportButton.tsx","webpack://_N_E/./ui/shared/solidityscanReport/SolidityscanReportDetails.tsx","webpack://_N_E/./ui/shared/solidityscanReport/SolidityscanReportScore.tsx","webpack://_N_E/./ui/shared/solidityscanReport/useScoreLevelAndColor.ts","webpack://_N_E/./ui/shared/sort/getSortParamsFromValue.ts","webpack://_N_E/./ui/shared/sort/getSortValueFromQuery.ts","webpack://_N_E/./ui/watchlist/AddressModal/AddressFormNotifications.tsx","webpack://_N_E/./ui/watchlist/AddressModal/AddressForm.tsx","webpack://_N_E/./ui/watchlist/AddressModal/AddressModal.tsx","webpack://_N_E/./ui/watchlist/DeleteAddressModal.tsx","webpack://_N_E/./ui/withdrawals/beaconChain/BeaconChainWithdrawalsListItem.tsx","webpack://_N_E/./ui/withdrawals/beaconChain/BeaconChainWithdrawalsTableItem.tsx","webpack://_N_E/./ui/withdrawals/beaconChain/BeaconChainWithdrawalsTable.tsx"],"sourcesContent":["var _path, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgSolidityScan = function SvgSolidityScan(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 23 20\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"url(#a)\",\n    d: \"M1.12 1.111v5.556h2.241V2.222h4.482V0H2.241a1.13 1.13 0 0 0-.793.325c-.21.209-.327.491-.327.786Zm20.168 5.556V1.11c0-.295-.118-.577-.328-.786A1.125 1.125 0 0 0 20.168 0h-5.603v2.222h4.482v4.445h2.24Zm-2.24 11.11h-4.483V20h5.603c.297 0 .582-.117.792-.326.21-.208.328-.49.328-.785v-5.556h-2.24v4.445ZM7.842 20v-2.222H3.361v-4.445h-2.24v5.556c0 .295.117.577.327.785.21.209.496.326.793.326h5.602ZM0 8.889h22.408v2.222H0V8.89Z\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"a\",\n    x1: 2.161,\n    x2: 21.104,\n    y1: 1.429,\n    y2: 18.729,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#52FF00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#00EEFD\"\n  })))));\n};\nexport default SvgSolidityScan;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/address/[hash]\",\n      function () {\n        return require(\"private-next-pages/address/[hash]/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/address/[hash]\"])\n      });\n    }\n  ","import BigNumber from 'bignumber.js';\n\nimport type { Block } from 'types/api/block';\n\nimport { WEI, ZERO } from 'lib/consts';\n\nexport default function getBlockTotalReward(block: Block) {\n  const totalReward = block.rewards\n    ?.map(({ reward }) => BigNumber(reward))\n    .reduce((result, item) => result.plus(item), ZERO) || ZERO;\n\n  return totalReward.div(WEI);\n}\n","export default function getFilterValue<FilterType>(filterValues: ReadonlyArray<FilterType>, val: string | Array<string> | undefined): FilterType | undefined {\n  if (typeof val === 'string' && filterValues.includes(val as FilterType)) {\n    return val as FilterType;\n  }\n}\n","import React from 'react';\n\n// prevent set focus on button when closing modal\nexport default function usePreventFocusAfterModalClosing() {\n  return React.useCallback((e: React.SyntheticEvent) => e.stopPropagation(), []);\n}\n","import config from 'configs/app';\n\nexport default function getNetworkValidationActionText() {\n  switch (config.chain.verificationType) {\n    case 'validation': {\n      return 'validated';\n    }\n    case 'mining': {\n      return 'mined';\n    }\n    case 'posting': {\n      return 'posted';\n    }\n    case 'sequencing': {\n      return 'sequenced';\n    }\n    default: {\n      return 'miner';\n    }\n  }\n}\n","import { getAddress } from 'viem';\n\nimport config from 'configs/app';\n\nexport default function getCheckedSummedAddress(address: string): string {\n  try {\n    return getAddress(\n      address,\n      // We need to pass chainId to getAddress to make it work correctly for some chains, e.g. Rootstock\n      config.chain.id ? Number(config.chain.id) : undefined,\n    );\n  } catch (error) {\n    return address;\n  }\n}\n","import { useQuery } from '@tanstack/react-query';\nimport * as v from 'valibot';\n\nimport config from 'configs/app';\nimport type { ResourceError } from 'lib/api/resources';\nimport useFetch from 'lib/hooks/useFetch';\n\nconst feature = config.features.addressProfileAPI;\n\ntype AddressInfoApiQueryResponse = v.InferOutput<typeof AddressInfoSchema>;\n\nconst AddressInfoSchema = v.object({\n  user_profile: v.object({\n    username: v.union([ v.string(), v.null() ]),\n  }),\n});\n\nconst ERROR_NAME = 'Invalid response schema';\n\nexport default function useAddressProfileApiQuery(hash: string | undefined, isEnabled = true) {\n  const fetch = useFetch();\n\n  return useQuery<unknown, ResourceError<unknown>, AddressInfoApiQueryResponse>({\n    queryKey: [ 'username_api', hash ],\n    queryFn: async() => {\n      if (!feature.isEnabled || !hash) {\n        return Promise.reject();\n      }\n\n      return fetch(feature.apiUrlTemplate.replace('{address}', hash));\n    },\n    enabled: isEnabled && Boolean(hash),\n    refetchOnMount: false,\n    select: (response) => {\n      const parsedResponse = v.safeParse(AddressInfoSchema, response);\n\n      if (!parsedResponse.success) {\n        throw Error(ERROR_NAME);\n      }\n\n      return parsedResponse.output;\n    },\n  });\n}\n","import { useQuery } from '@tanstack/react-query';\n\nimport config from 'configs/app';\nimport useFetch from 'lib/hooks/useFetch';\n\nconst feature = config.features.safe;\n\nexport default function useIsSafeAddress(hash: string | undefined): boolean {\n  const fetch = useFetch();\n\n  const { data } = useQuery({\n    queryKey: [ 'safe_transaction_api', hash ],\n    queryFn: async() => {\n      if (!feature.isEnabled || !hash) {\n        return Promise.reject();\n      }\n\n      return fetch(`${ feature.apiUrl }/${ hash }`);\n    },\n    enabled: feature.isEnabled && Boolean(hash),\n    refetchOnMount: false,\n  });\n\n  return Boolean(data);\n}\n","import React from 'react';\nimport * as v from 'valibot';\n\nimport config from 'configs/app';\nimport buildUrl from 'lib/api/buildUrl';\nimport useApiQuery from 'lib/api/useApiQuery';\n\ninterface Params {\n  hash: string;\n}\n\nconst RESOURCE_NAME = 'address_xstar_score';\nconst ERROR_NAME = 'Invalid response schema';\n\nexport default function useFetchXStarScore({ hash }: Params) {\n  const query = useApiQuery(RESOURCE_NAME, {\n    pathParams: { hash },\n    queryOptions: {\n      select: (response) => {\n        const parsedResponse = v.safeParse(v.object({ data: v.object({ level: v.nullable(v.string()) }) }), response);\n\n        if (!parsedResponse.success) {\n          throw Error(ERROR_NAME);\n        }\n\n        return parsedResponse.output;\n      },\n      enabled: Boolean(hash) && config.features.xStarScore.isEnabled,\n      placeholderData: {\n        data: { level: 'Base' },\n      },\n      retry: 0,\n    },\n  });\n\n  const errorMessage = query.error && 'message' in query.error ? query.error.message : undefined;\n\n  React.useEffect(() => {\n    if (errorMessage === ERROR_NAME) {\n      fetch('/node-api/monitoring/invalid-api-schema', {\n        method: 'POST',\n        body: JSON.stringify({\n          resource: RESOURCE_NAME,\n          url: buildUrl(RESOURCE_NAME, { hash }, undefined, true),\n        }),\n      });\n    }\n  }, [ errorMessage, hash ]);\n\n  return query;\n}\n","export interface NovesResponseData {\n  txTypeVersion: number;\n  chain: string;\n  accountAddress: string;\n  classificationData: NovesClassificationData;\n  rawTransactionData: NovesRawTransactionData;\n}\n\nexport interface NovesClassificationData {\n  type: string;\n  typeFormatted?: string;\n  description: string;\n  sent: Array<NovesSentReceived>;\n  received: Array<NovesSentReceived>;\n  approved?: Approved;\n  protocol?: {\n    name: string | null;\n  };\n  source: {\n    type: string | null;\n  };\n  message?: string;\n  deployedContractAddress?: string;\n}\n\nexport interface Approved {\n  amount: string;\n  spender: string;\n  token?: NovesToken;\n  nft?: NovesNft;\n}\n\nexport interface NovesSentReceived {\n  action: string;\n  actionFormatted?: string;\n  amount: string;\n  to: NovesTo;\n  from: NovesFrom;\n  token?: NovesToken;\n  nft?: NovesNft;\n}\n\nexport interface NovesToken {\n  symbol: string;\n  name: string;\n  decimals: number;\n  address: string;\n  id?: string;\n}\n\nexport interface NovesNft {\n  name: string;\n  id: string;\n  symbol: string;\n  address: string;\n}\n\nexport interface NovesFrom {\n  name: string | null;\n  address: string;\n}\n\nexport interface NovesTo {\n  name: string | null;\n  address: string | null;\n}\n\nexport interface NovesRawTransactionData {\n  transactionHash: string;\n  fromAddress: string;\n  toAddress: string;\n  blockNumber: number;\n  gas: number;\n  gasPrice: number;\n  transactionFee: NovesTransactionFee | number;\n  timestamp: number;\n}\n\nexport interface NovesTransactionFee {\n  amount: string;\n  currency?: string;\n  token?: {\n    decimals: number;\n    symbol: string;\n  };\n}\n\nexport interface NovesAccountHistoryResponse {\n  hasNextPage: boolean;\n  items: Array<NovesResponseData>;\n  pageNumber: number;\n  pageSize: number;\n  next_page_params?: {\n    startBlock: string;\n    endBlock: string;\n    pageNumber: number;\n    pageSize: number;\n    ignoreTransactions: string;\n    viewAsAccountAddress: string;\n  };\n}\n\nexport const NovesHistoryFilterValues = [ 'received', 'sent' ] as const;\n\nexport type NovesHistoryFilterValue = typeof NovesHistoryFilterValues[number] | undefined;\n\nexport interface NovesHistoryFilters {\n  filter?: NovesHistoryFilterValue;\n}\n\nexport interface NovesDescribeResponse {\n  type: string;\n  description: string;\n}\n\nexport type NovesDescribeTxsResponse = {\n  txHash: string;\n  type: string;\n  description: string;\n};\n\nexport interface NovesTxTranslation {\n  data?: NovesDescribeTxsResponse;\n  isLoading: boolean;\n}\n","import { Td, Tr, Box } from '@chakra-ui/react';\nimport React, { useMemo } from 'react';\n\nimport type { NovesResponseData } from 'types/api/noves';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport NovesFromTo from 'ui/shared/Noves/NovesFromTo';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = {\n  isPlaceholderData: boolean;\n  tx: NovesResponseData;\n  currentAddress: string;\n};\n\nconst AddressAccountHistoryTableItem = (props: Props) => {\n\n  const parsedDescription = useMemo(() => {\n    const description = props.tx.classificationData.description;\n\n    return description.endsWith('.') ? description.substring(0, description.length - 1) : description;\n  }, [ props.tx.classificationData.description ]);\n\n  return (\n    <Tr>\n      <Td px={ 3 } py=\"18px\" fontSize=\"sm\" >\n        <TimeAgoWithTooltip\n          timestamp={ props.tx.rawTransactionData.timestamp * 1000 }\n          isLoading={ props.isPlaceholderData }\n          color=\"text_secondary\"\n          borderRadius=\"sm\"\n          flexShrink={ 0 }\n        />\n      </Td>\n      <Td px={ 3 } py=\"18px\" fontSize=\"sm\" >\n        <Skeleton borderRadius=\"sm\" isLoaded={ !props.isPlaceholderData }>\n          <Box display=\"flex\">\n            <IconSvg\n              name=\"lightning\"\n              height=\"5\"\n              width=\"5\"\n              color=\"gray.500\"\n              mr=\"8px\"\n              _dark={{ color: 'gray.400' }}\n            />\n\n            <LinkInternal\n              href={ `/tx/${ props.tx.rawTransactionData.transactionHash }` }\n              fontWeight=\"bold\"\n              whiteSpace=\"break-spaces\"\n              wordBreak=\"break-word\"\n            >\n              { parsedDescription }\n            </LinkInternal>\n          </Box>\n        </Skeleton>\n      </Td>\n      <Td px={ 3 } py=\"18px\" fontSize=\"sm\">\n        <Box flexShrink={ 0 } >\n          <NovesFromTo txData={ props.tx } currentAddress={ props.currentAddress } isLoaded={ !props.isPlaceholderData }/>\n        </Box>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default React.memo(AddressAccountHistoryTableItem);\n","import { Box, Flex, Text } from '@chakra-ui/react';\nimport React, { useMemo } from 'react';\n\nimport type { NovesResponseData } from 'types/api/noves';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\nimport NovesFromTo from 'ui/shared/Noves/NovesFromTo';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = {\n  isPlaceholderData: boolean;\n  tx: NovesResponseData;\n  currentAddress: string;\n};\n\nconst AddressAccountHistoryListItem = (props: Props) => {\n\n  const parsedDescription = useMemo(() => {\n    const description = props.tx.classificationData.description;\n\n    return description.endsWith('.') ? description.substring(0, description.length - 1) : description;\n  }, [ props.tx.classificationData.description ]);\n\n  return (\n    <ListItemMobile rowGap={ 4 } w=\"full\">\n      <Skeleton borderRadius=\"sm\" isLoaded={ !props.isPlaceholderData } w=\"full\">\n        <Flex justifyContent=\"space-between\" w=\"full\">\n          <Flex columnGap={ 2 }>\n            <IconSvg\n              name=\"lightning\"\n              height=\"5\"\n              width=\"5\"\n              color=\"gray.500\"\n              _dark={{ color: 'gray.400' }}\n            />\n\n            <Text fontSize=\"sm\" fontWeight={ 500 }>\n              Action\n            </Text>\n          </Flex>\n          <TimeAgoWithTooltip\n            timestamp={ props.tx.rawTransactionData.timestamp * 1000 }\n            color=\"text_secondary\"\n            borderRadius=\"sm\"\n            fontWeight={ 500 }\n          />\n        </Flex>\n      </Skeleton>\n      <Skeleton borderRadius=\"sm\" isLoaded={ !props.isPlaceholderData }>\n        <LinkInternal\n          href={ `/tx/${ props.tx.rawTransactionData.transactionHash }` }\n          fontWeight=\"bold\"\n          whiteSpace=\"break-spaces\"\n          wordBreak=\"break-word\"\n        >\n          { parsedDescription }\n        </LinkInternal>\n      </Skeleton>\n\n      <Box maxW=\"full\">\n        <NovesFromTo txData={ props.tx } currentAddress={ props.currentAddress } isLoaded={ !props.isPlaceholderData }/>\n      </Box>\n    </ListItemMobile>\n  );\n};\n\nexport default React.memo(AddressAccountHistoryListItem);\n","import React from 'react';\n\nimport type { NovesHistoryFilterValue } from 'types/api/noves';\n\nimport useIsInitialLoading from 'lib/hooks/useIsInitialLoading';\nimport PopoverFilterRadio from 'ui/shared/filters/PopoverFilterRadio';\n\nconst OPTIONS = [\n  { value: 'all', label: 'All' },\n  { value: 'received', label: 'Received from' },\n  { value: 'sent', label: 'Sent to' },\n];\n\ninterface Props {\n  hasActiveFilter: boolean;\n  defaultFilter: NovesHistoryFilterValue;\n  onFilterChange: (nextValue: string | Array<string>) => void;\n  isLoading?: boolean;\n}\n\nconst AccountHistoryFilter = ({ onFilterChange, defaultFilter, hasActiveFilter, isLoading }: Props) => {\n  const isInitialLoading = useIsInitialLoading(isLoading);\n\n  return (\n    <PopoverFilterRadio\n      name=\"account_history_filter\"\n      options={ OPTIONS }\n      onChange={ onFilterChange }\n      hasActiveFilter={ hasActiveFilter }\n      isLoading={ isInitialLoading }\n      defaultValue={ defaultFilter || OPTIONS[0].value }\n    />\n  );\n};\n\nexport default React.memo(AccountHistoryFilter);\n","import { Box, Hide, Show, Table,\n  Tbody, Th, Tr } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { NovesHistoryFilterValue } from 'types/api/noves';\nimport { NovesHistoryFilterValues } from 'types/api/noves';\n\nimport getFilterValueFromQuery from 'lib/getFilterValueFromQuery';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { NOVES_TRANSLATE } from 'stubs/noves/NovesTranslate';\nimport { generateListStub } from 'stubs/utils';\nimport AddressAccountHistoryTableItem from 'ui/address/accountHistory/AddressAccountHistoryTableItem';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport { getFromToValue } from 'ui/shared/Noves/utils';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport TheadSticky from 'ui/shared/TheadSticky';\n\nimport AddressAccountHistoryListItem from './accountHistory/AddressAccountHistoryListItem';\nimport AccountHistoryFilter from './AddressAccountHistoryFilter';\n\nconst getFilterValue = (getFilterValueFromQuery<NovesHistoryFilterValue>).bind(null, NovesHistoryFilterValues);\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressAccountHistory = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const currentAddress = getQueryParamString(router.query.hash).toLowerCase();\n\n  const [ filterValue, setFilterValue ] = React.useState<NovesHistoryFilterValue>(getFilterValue(router.query.filter));\n\n  const { data, isError, pagination, isPlaceholderData } = useQueryWithPages({\n    resourceName: 'noves_address_history',\n    pathParams: { address: currentAddress },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'noves_address_history'>(NOVES_TRANSLATE, 10, { hasNextPage: false, pageNumber: 1, pageSize: 10 }),\n    },\n  });\n\n  const handleFilterChange = React.useCallback((val: string | Array<string>) => {\n\n    const newVal = getFilterValue(val);\n    setFilterValue(newVal);\n  }, [ ]);\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const actionBar = (\n    <ActionBar mt={ -6 } pb={{ base: 6, md: 5 }}>\n      <AccountHistoryFilter\n        defaultFilter={ filterValue }\n        onFilterChange={ handleFilterChange }\n        hasActiveFilter={ Boolean(filterValue) }\n        isLoading={ pagination.isLoading }\n      />\n\n      <Pagination ml={{ base: 'auto', lg: 8 }} { ...pagination }/>\n    </ActionBar>\n  );\n\n  const filteredData = isPlaceholderData ? data?.items : data?.items.filter(i => filterValue ? getFromToValue(i, currentAddress) === filterValue : i);\n\n  const content = (\n    <Box position=\"relative\">\n      <Hide above=\"lg\" ssr={ false }>\n        { filteredData?.map((item, i) => (\n          <AddressAccountHistoryListItem\n            key={ `${ i }-${ item.rawTransactionData.transactionHash }` }\n            tx={ item }\n            currentAddress={ currentAddress }\n            isPlaceholderData={ isPlaceholderData }\n          />\n        )) }\n      </Hide>\n\n      <Show above=\"lg\" ssr={ false }>\n        <Table>\n          <TheadSticky top={ 75 }>\n            <Tr>\n              <Th width=\"120px\">\n                Age\n              </Th>\n              <Th>\n                Action\n              </Th>\n              <Th width=\"320px\">\n                From/To\n              </Th>\n            </Tr>\n          </TheadSticky>\n          <Tbody maxWidth=\"full\">\n            { filteredData?.map((item, i) => (\n              <AddressAccountHistoryTableItem\n                key={ `${ i }-${ item.rawTransactionData.transactionHash }` }\n                tx={ item }\n                currentAddress={ currentAddress }\n                isPlaceholderData={ isPlaceholderData }\n              />\n            )) }\n          </Tbody>\n        </Table>\n      </Show>\n    </Box>\n  );\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ filteredData }\n      emptyText=\"There are no transactions.\"\n      content={ content }\n      actionBar={ actionBar }\n      filterProps={{\n        hasActiveFilters: Boolean(filterValue),\n        emptyFilteredText: 'No match found for current filter',\n      }}\n    />\n  );\n};\n\nexport default AddressAccountHistory;\n","import { Text, Flex } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { Block } from 'types/api/block';\n\nimport config from 'configs/app';\nimport getBlockTotalReward from 'lib/block/getBlockTotalReward';\nimport { currencyUnits } from 'lib/units';\nimport BlockGasUsed from 'ui/shared/block/BlockGasUsed';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = Block & {\n  page: number;\n  isLoading: boolean;\n};\n\nconst AddressBlocksValidatedListItem = (props: Props) => {\n  const totalReward = getBlockTotalReward(props);\n\n  return (\n    <ListItemMobile rowGap={ 2 } isAnimated>\n      <Flex justifyContent=\"space-between\" w=\"100%\">\n        <BlockEntity\n          isLoading={ props.isLoading }\n          number={ props.height }\n          noIcon\n          fontWeight={ 700 }\n        />\n        <TimeAgoWithTooltip\n          timestamp={ props.timestamp }\n          enableIncrement={ props.page === 1 }\n          isLoading={ props.isLoading }\n          color=\"text_secondary\"\n          display=\"inline-block\"\n        />\n      </Flex>\n      <Flex columnGap={ 2 } w=\"100%\">\n        <Skeleton isLoaded={ !props.isLoading } fontWeight={ 500 } flexShrink={ 0 }>Txn</Skeleton>\n        <Skeleton isLoaded={ !props.isLoading } display=\"inline-block\" color=\"Skeleton_secondary\">\n          <span>{ props.transaction_count }</span>\n        </Skeleton>\n      </Flex>\n      <Flex columnGap={ 2 } w=\"100%\">\n        <Skeleton isLoaded={ !props.isLoading } fontWeight={ 500 } flexShrink={ 0 }>Gas used</Skeleton>\n        <Skeleton isLoaded={ !props.isLoading }>\n          <Text color=\"text_secondary\">{ BigNumber(props.gas_used || 0).toFormat() }</Text>\n        </Skeleton>\n        <BlockGasUsed\n          gasUsed={ props.gas_used }\n          gasLimit={ props.gas_limit }\n          isLoading={ props.isLoading }\n        />\n      </Flex>\n      { !config.UI.views.block.hiddenFields?.total_reward && !config.features.rollup.isEnabled && (\n        <Flex columnGap={ 2 } w=\"100%\">\n          <Skeleton isLoaded={ !props.isLoading } fontWeight={ 500 } flexShrink={ 0 }>Reward { currencyUnits.ether }</Skeleton>\n          <Skeleton isLoaded={ !props.isLoading }>\n            <Text color=\"text_secondary\">{ totalReward.toFixed() }</Text>\n          </Skeleton>\n        </Flex>\n      ) }\n    </ListItemMobile>\n  );\n};\n\nexport default React.memo(AddressBlocksValidatedListItem);\n","import { Td, Tr, Flex } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { Block } from 'types/api/block';\n\nimport config from 'configs/app';\nimport getBlockTotalReward from 'lib/block/getBlockTotalReward';\nimport BlockGasUsed from 'ui/shared/block/BlockGasUsed';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = Block & {\n  page: number;\n  isLoading: boolean;\n};\n\nconst AddressBlocksValidatedTableItem = (props: Props) => {\n  const totalReward = getBlockTotalReward(props);\n\n  return (\n    <Tr>\n      <Td>\n        <BlockEntity\n          isLoading={ props.isLoading }\n          number={ props.height }\n          noIcon\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          fontWeight={ 700 }\n        />\n      </Td>\n      <Td>\n        <TimeAgoWithTooltip\n          timestamp={ props.timestamp }\n          enableIncrement={ props.page === 1 }\n          isLoading={ props.isLoading }\n          color=\"text_secondary\"\n          display=\"inline-block\"\n        />\n      </Td>\n      <Td>\n        <Skeleton isLoaded={ !props.isLoading } display=\"inline-block\" fontWeight=\"500\">\n          <span>{ props.transaction_count }</span>\n        </Skeleton>\n      </Td>\n      <Td>\n        <Flex alignItems=\"center\" columnGap={ 2 }>\n          <Skeleton isLoaded={ !props.isLoading } flexBasis=\"80px\">\n            { BigNumber(props.gas_used || 0).toFormat() }\n          </Skeleton>\n          <BlockGasUsed\n            gasUsed={ props.gas_used }\n            gasLimit={ props.gas_limit }\n            isLoading={ props.isLoading }\n          />\n        </Flex>\n      </Td>\n      { !config.UI.views.block.hiddenFields?.total_reward && !config.features.rollup.isEnabled && (\n        <Td isNumeric>\n          <Skeleton isLoaded={ !props.isLoading } display=\"inline-block\">\n            <span>{ totalReward.toFixed() }</span>\n          </Skeleton>\n        </Td>\n      ) }\n    </Tr>\n  );\n};\n\nexport default React.memo(AddressBlocksValidatedTableItem);\n","import { Hide, Show, Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { AddressBlocksValidatedResponse } from 'types/api/address';\n\nimport config from 'configs/app';\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport { currencyUnits } from 'lib/units';\nimport { BLOCK } from 'stubs/block';\nimport { generateListStub } from 'stubs/utils';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport * as SocketNewItemsNotice from 'ui/shared/SocketNewItemsNotice';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport AddressBlocksValidatedListItem from './blocksValidated/AddressBlocksValidatedListItem';\nimport AddressBlocksValidatedTableItem from './blocksValidated/AddressBlocksValidatedTableItem';\n\nconst OVERLOAD_COUNT = 75;\n\ninterface Props {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n}\n\nconst AddressBlocksValidated = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const [ socketAlert, setSocketAlert ] = React.useState('');\n  const [ newItemsCount, setNewItemsCount ] = React.useState(0);\n\n  const queryClient = useQueryClient();\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const addressHash = String(router.query.hash);\n  const query = useQueryWithPages({\n    resourceName: 'address_blocks_validated',\n    pathParams: { hash: addressHash },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'address_blocks_validated'>(\n        BLOCK,\n        50,\n        {\n          next_page_params: {\n            block_number: 9060562,\n            items_count: 50,\n          },\n        },\n      ),\n    },\n  });\n\n  const handleSocketError = React.useCallback(() => {\n    setSocketAlert('An error has occurred while fetching new blocks. Please refresh the page to load new blocks.');\n  }, []);\n\n  const handleNewSocketMessage: SocketMessage.NewBlock['handler'] = React.useCallback((payload) => {\n    setSocketAlert('');\n\n    queryClient.setQueryData(\n      getResourceKey('address_blocks_validated', { pathParams: { hash: addressHash } }),\n      (prevData: AddressBlocksValidatedResponse | undefined) => {\n        if (!prevData) {\n          return;\n        }\n\n        if (prevData.items.length >= OVERLOAD_COUNT) {\n          setNewItemsCount(prev => prev + 1);\n          return prevData;\n        }\n\n        return {\n          ...prevData,\n          items: [ payload.block, ...prevData.items ],\n        };\n      });\n  }, [ addressHash, queryClient ]);\n\n  const channel = useSocketChannel({\n    topic: `blocks:${ addressHash.toLowerCase() }`,\n    onSocketClose: handleSocketError,\n    onSocketError: handleSocketError,\n    isDisabled: !addressHash || query.isPlaceholderData || query.pagination.page !== 1,\n  });\n  useSocketMessage({\n    channel,\n    event: 'new_block',\n    handler: handleNewSocketMessage,\n  });\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const content = query.data?.items ? (\n    <>\n      <Hide below=\"lg\" ssr={ false }>\n        <Table style={{ tableLayout: 'auto' }}>\n          <Thead top={ query.pagination.isVisible ? ACTION_BAR_HEIGHT_DESKTOP : 0 }>\n            <Tr>\n              <Th>Block</Th>\n              <Th>Age</Th>\n              <Th>Txn</Th>\n              <Th>Gas used</Th>\n              { !config.UI.views.block.hiddenFields?.total_reward && !config.features.rollup.isEnabled &&\n              <Th isNumeric>Reward { currencyUnits.ether }</Th> }\n            </Tr>\n          </Thead>\n          <Tbody>\n            <SocketNewItemsNotice.Desktop\n              url={ window.location.href }\n              num={ newItemsCount }\n              alert={ socketAlert }\n              type=\"block\"\n              isLoading={ query.isPlaceholderData }\n            />\n            { query.data.items.map((item, index) => (\n              <AddressBlocksValidatedTableItem\n                key={ item.height + (query.isPlaceholderData ? String(index) : '') }\n                { ...item }\n                page={ query.pagination.page }\n                isLoading={ query.isPlaceholderData }\n              />\n            )) }\n          </Tbody>\n        </Table>\n      </Hide>\n      <Show below=\"lg\" ssr={ false }>\n        { query.pagination.page === 1 && (\n          <SocketNewItemsNotice.Mobile\n            url={ window.location.href }\n            num={ newItemsCount }\n            alert={ socketAlert }\n            type=\"block\"\n            isLoading={ query.isPlaceholderData }\n          />\n        ) }\n        { query.data.items.map((item, index) => (\n          <AddressBlocksValidatedListItem\n            key={ item.height + (query.isPlaceholderData ? String(index) : '') }\n            { ...item }\n            page={ query.pagination.page }\n            isLoading={ query.isPlaceholderData }\n          />\n        )) }\n      </Show>\n    </>\n  ) : null;\n\n  const actionBar = query.pagination.isVisible ? (\n    <ActionBar mt={ -6 }>\n      <Pagination ml=\"auto\" { ...query.pagination }/>\n    </ActionBar>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ query.isError }\n      items={ query.data?.items }\n      emptyText=\"There are no validated blocks for this address.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default React.memo(AddressBlocksValidated);\n","import { Text, Alert, Link, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n}\n\nconst SocketAlert = ({ className }: Props) => {\n  return (\n    <Alert status=\"warning\" className={ className }>\n      <Text whiteSpace=\"pre\">Connection lost, click </Text>\n      <Link href={ window.document.location.href }>to load newer records</Link>\n    </Alert>\n  );\n};\n\nexport default chakra(SocketAlert);\n","import BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { currencyUnits } from 'lib/units';\nimport ChartWidget from 'ui/shared/chart/ChartWidget';\n\ninterface Props {\n  addressHash: string;\n}\n\nconst AddressCoinBalanceChart = ({ addressHash }: Props) => {\n  const { data, isPending, isError } = useApiQuery('address_coin_balance_chart', {\n    pathParams: { hash: addressHash },\n  });\n\n  const items = React.useMemo(() => {\n    if (!data) {\n      return undefined;\n    }\n\n    return data.items.map(({ date, value }) => ({\n      date: new Date(date),\n      value: BigNumber(value).div(10 ** config.chain.currency.decimals).toNumber(),\n    }));\n  }, [ data ]);\n\n  return (\n    <ChartWidget\n      isError={ isError }\n      title=\"Balances\"\n      items={ items }\n      isLoading={ isPending }\n      h=\"300px\"\n      units={ currencyUnits.ether }\n      emptyText={ data?.days && `Insufficient data for the past ${ data.days } days` }\n    />\n  );\n};\n\nexport default React.memo(AddressCoinBalanceChart);\n","import { Text, Stat, StatHelpText, StatArrow, Flex } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { AddressCoinBalanceHistoryItem } from 'types/api/address';\n\nimport { WEI, ZERO } from 'lib/consts';\nimport { currencyUnits } from 'lib/units';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TxEntity from 'ui/shared/entities/tx/TxEntity';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = AddressCoinBalanceHistoryItem & {\n  page: number;\n  isLoading: boolean;\n};\n\nconst AddressCoinBalanceListItem = (props: Props) => {\n  const deltaBn = BigNumber(props.delta).div(WEI);\n  const isPositiveDelta = deltaBn.gte(ZERO);\n\n  return (\n    <ListItemMobile rowGap={ 2 } isAnimated>\n      <Flex justifyContent=\"space-between\" w=\"100%\">\n        <Skeleton isLoaded={ !props.isLoading } fontWeight={ 600 }>\n          { BigNumber(props.value).div(WEI).dp(8).toFormat() } { currencyUnits.ether }\n        </Skeleton>\n        <Skeleton isLoaded={ !props.isLoading }>\n          <Stat flexGrow=\"0\">\n            <StatHelpText display=\"flex\" mb={ 0 } alignItems=\"center\">\n              <StatArrow type={ isPositiveDelta ? 'increase' : 'decrease' } mr={ 2 }/>\n              <Text as=\"span\" color={ isPositiveDelta ? 'green.500' : 'red.500' } fontWeight={ 600 }>\n                { deltaBn.dp(8).toFormat() }\n              </Text>\n            </StatHelpText>\n          </Stat>\n        </Skeleton>\n      </Flex>\n      <Flex columnGap={ 2 } w=\"100%\">\n        <Skeleton isLoaded={ !props.isLoading } fontWeight={ 500 } flexShrink={ 0 }>Block</Skeleton>\n        <BlockEntity\n          isLoading={ props.isLoading }\n          number={ props.block_number }\n          noIcon\n          fontWeight={ 700 }\n        />\n      </Flex>\n      { props.transaction_hash && (\n        <Flex columnGap={ 2 } w=\"100%\">\n          <Skeleton isLoaded={ !props.isLoading } fontWeight={ 500 } flexShrink={ 0 }>Txs</Skeleton>\n          <TxEntity\n            hash={ props.transaction_hash }\n            isLoading={ props.isLoading }\n            noIcon\n            maxW=\"150px\"\n          />\n        </Flex>\n      ) }\n      <Flex columnGap={ 2 } w=\"100%\">\n        <Skeleton isLoaded={ !props.isLoading } fontWeight={ 500 } flexShrink={ 0 }>Age</Skeleton>\n        <TimeAgoWithTooltip\n          timestamp={ props.block_timestamp }\n          enableIncrement={ props.page === 1 }\n          isLoading={ props.isLoading }\n          color=\"text_secondary\"\n        />\n      </Flex>\n    </ListItemMobile>\n  );\n};\n\nexport default React.memo(AddressCoinBalanceListItem);\n","import { Td, Tr, Text, Stat, StatHelpText, StatArrow } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { AddressCoinBalanceHistoryItem } from 'types/api/address';\n\nimport { WEI, ZERO } from 'lib/consts';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TxEntity from 'ui/shared/entities/tx/TxEntity';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = AddressCoinBalanceHistoryItem & {\n  page: number;\n  isLoading: boolean;\n};\n\nconst AddressCoinBalanceTableItem = (props: Props) => {\n  const deltaBn = BigNumber(props.delta).div(WEI);\n  const isPositiveDelta = deltaBn.gte(ZERO);\n\n  return (\n    <Tr>\n      <Td>\n        <BlockEntity\n          isLoading={ props.isLoading }\n          number={ props.block_number }\n          noIcon\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          fontWeight={ 700 }\n        />\n      </Td>\n      <Td>\n        { props.transaction_hash && (\n          <TxEntity\n            hash={ props.transaction_hash }\n            isLoading={ props.isLoading }\n            noIcon\n            maxW=\"150px\"\n          />\n        ) }\n      </Td>\n      <Td>\n        <TimeAgoWithTooltip\n          timestamp={ props.block_timestamp }\n          enableIncrement={ props.page === 1 }\n          isLoading={ props.isLoading }\n          color=\"text_secondary\"\n          display=\"inline-block\"\n        />\n      </Td>\n      <Td isNumeric pr={ 1 }>\n        <Skeleton isLoaded={ !props.isLoading } color=\"text_secondary\" display=\"inline-block\">\n          <span>{ BigNumber(props.value).div(WEI).dp(8).toFormat() }</span>\n        </Skeleton>\n      </Td>\n      <Td isNumeric display=\"flex\" justifyContent=\"end\">\n        <Skeleton isLoaded={ !props.isLoading }>\n          <Stat flexGrow=\"0\" lineHeight={ 5 }>\n            <StatHelpText display=\"flex\" mb={ 0 } alignItems=\"center\">\n              <StatArrow type={ isPositiveDelta ? 'increase' : 'decrease' } mr={ 2 }/>\n              <Text as=\"span\" color={ isPositiveDelta ? 'green.500' : 'red.500' } fontWeight={ 600 }>\n                { deltaBn.dp(8).toFormat() }\n              </Text>\n            </StatHelpText>\n          </Stat>\n        </Skeleton>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default React.memo(AddressCoinBalanceTableItem);\n","import { Hide, Show, Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { AddressCoinBalanceHistoryResponse } from 'types/api/address';\nimport type { PaginationParams } from 'ui/shared/pagination/types';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport { currencyUnits } from 'lib/units';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport AddressCoinBalanceListItem from './AddressCoinBalanceListItem';\nimport AddressCoinBalanceTableItem from './AddressCoinBalanceTableItem';\n\ninterface Props {\n  query: UseQueryResult<AddressCoinBalanceHistoryResponse, ResourceError<unknown>> & {\n    pagination: PaginationParams;\n  };\n}\n\nconst AddressCoinBalanceHistory = ({ query }: Props) => {\n\n  const content = query.data?.items ? (\n    <>\n      <Hide below=\"lg\" ssr={ false }>\n        <Table>\n          <Thead top={ query.pagination.isVisible ? ACTION_BAR_HEIGHT_DESKTOP : 0 }>\n            <Tr>\n              <Th width=\"20%\">Block</Th>\n              <Th width=\"20%\">Txn</Th>\n              <Th width=\"20%\">Age</Th>\n              <Th width=\"20%\" isNumeric pr={ 1 }>Balance { currencyUnits.ether }</Th>\n              <Th width=\"20%\" isNumeric>Delta</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            { query.data.items.map((item, index) => (\n              <AddressCoinBalanceTableItem\n                key={ item.block_number + (query.isPlaceholderData ? String(index) : '') }\n                { ...item }\n                page={ query.pagination.page }\n                isLoading={ query.isPlaceholderData }\n              />\n            )) }\n          </Tbody>\n        </Table>\n      </Hide>\n      <Show below=\"lg\" ssr={ false }>\n        { query.data.items.map((item, index) => (\n          <AddressCoinBalanceListItem\n            key={ item.block_number + (query.isPlaceholderData ? String(index) : '') }\n            { ...item }\n            page={ query.pagination.page }\n            isLoading={ query.isPlaceholderData }\n          />\n        )) }\n      </Show>\n    </>\n  ) : null;\n\n  const actionBar = query.pagination.isVisible ? (\n    <ActionBar mt={ -6 }>\n      <Pagination ml=\"auto\" { ...query.pagination }/>\n    </ActionBar>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      mt={ 8 }\n      isError={ query.isError }\n      items={ query.data?.items }\n      emptyText=\"There is no coin balance history for this address.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default React.memo(AddressCoinBalanceHistory);\n","import { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { AddressCoinBalanceHistoryResponse } from 'types/api/address';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport { ADDRESS_COIN_BALANCE } from 'stubs/address';\nimport { generateListStub } from 'stubs/utils';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport SocketAlert from 'ui/shared/SocketAlert';\n\nimport AddressCoinBalanceChart from './coinBalance/AddressCoinBalanceChart';\nimport AddressCoinBalanceHistory from './coinBalance/AddressCoinBalanceHistory';\n\ntype Props = {\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressCoinBalance = ({ shouldRender = true, isQueryEnabled = true }: Props) => {\n  const [ socketAlert, setSocketAlert ] = React.useState(false);\n  const queryClient = useQueryClient();\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  const addressHash = getQueryParamString(router.query.hash);\n  const coinBalanceQuery = useQueryWithPages({\n    resourceName: 'address_coin_balance',\n    pathParams: { hash: addressHash },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'address_coin_balance'>(\n        ADDRESS_COIN_BALANCE,\n        50,\n        {\n          next_page_params: {\n            block_number: 8009880,\n            items_count: 50,\n          },\n        },\n      ),\n    },\n  });\n\n  const handleSocketError = React.useCallback(() => {\n    setSocketAlert(true);\n  }, []);\n\n  const handleNewSocketMessage: SocketMessage.AddressCoinBalance['handler'] = React.useCallback((payload) => {\n    setSocketAlert(false);\n\n    queryClient.setQueryData(\n      getResourceKey('address_coin_balance', { pathParams: { hash: addressHash } }),\n      (prevData: AddressCoinBalanceHistoryResponse | undefined) => {\n        if (!prevData) {\n          return;\n        }\n\n        return {\n          ...prevData,\n          items: [\n            payload.coin_balance,\n            ...prevData.items,\n          ],\n        };\n      });\n  }, [ addressHash, queryClient ]);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ addressHash.toLowerCase() }`,\n    onSocketClose: handleSocketError,\n    onSocketError: handleSocketError,\n    isDisabled: !addressHash || coinBalanceQuery.isPlaceholderData || coinBalanceQuery.pagination.page !== 1,\n  });\n  useSocketMessage({\n    channel,\n    event: 'coin_balance',\n    handler: handleNewSocketMessage,\n  });\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  return (\n    <>\n      { socketAlert && <SocketAlert mb={ 6 }/> }\n      <AddressCoinBalanceChart addressHash={ addressHash }/>\n      <div ref={ scrollRef }></div>\n      <AddressCoinBalanceHistory query={ coinBalanceQuery }/>\n    </>\n  );\n};\n\nexport default React.memo(AddressCoinBalance);\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { AddressCounters } from 'types/api/address';\n\nimport { route } from 'nextjs-routes';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ninterface Props {\n  prop: keyof AddressCounters;\n  query: UseQueryResult<AddressCounters, ResourceError<unknown>>;\n  address: string;\n  onClick: () => void;\n  isAddressQueryLoading: boolean;\n  isDegradedData: boolean;\n}\n\nconst PROP_TO_TAB = {\n  transactions_count: 'txs',\n  token_transfers_count: 'token_transfers',\n  validations_count: 'blocks_validated',\n};\n\nconst AddressCounterItem = ({ prop, query, address, onClick, isAddressQueryLoading, isDegradedData }: Props) => {\n  if (query.isPlaceholderData || isAddressQueryLoading) {\n    return <Skeleton h={ 5 } w=\"80px\" borderRadius=\"full\"/>;\n  }\n\n  const data = query.data?.[prop];\n\n  if (query.isError || data === null || data === undefined) {\n    return <span>0</span>;\n  }\n\n  switch (prop) {\n    case 'gas_usage_count':\n      return <span>{ BigNumber(data).toFormat() }</span>;\n    case 'transactions_count':\n    case 'token_transfers_count':\n    case 'validations_count': {\n      if (data === '0') {\n        return <span>0</span>;\n      }\n\n      if (isDegradedData) {\n        return <span>{ Number(data).toLocaleString() }</span>;\n      }\n\n      return (\n        <LinkInternal href={ route({ pathname: '/address/[hash]', query: { hash: address, tab: PROP_TO_TAB[prop] } }) } onClick={ onClick }>\n          { Number(data).toLocaleString() }\n        </LinkInternal>\n      );\n    }\n  }\n};\n\nexport default React.memo(AddressCounterItem);\n","import React from 'react';\n\nimport config from 'configs/app';\nimport { BECH_32_SEPARATOR, toBech32Address } from 'lib/address/bech32';\nimport { useSettingsContext } from 'lib/contexts/settings';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\n\ninterface Props {\n  isLoading: boolean;\n  addressHash: string;\n}\n\nconst AddressAlternativeFormat = ({ isLoading, addressHash }: Props) => {\n  const settingsContext = useSettingsContext();\n\n  if (!settingsContext || config.UI.views.address.hashFormat.availableFormats.length < 2) {\n    return null;\n  }\n\n  const label = settingsContext.addressFormat === 'bech32' ? '0x hash' : `${ config.UI.views.address.hashFormat.bech32Prefix }${ BECH_32_SEPARATOR } hash`;\n  const hint = settingsContext.addressFormat === 'bech32' ? 'Address hash encoded in base16 format' : 'Address hash encoded in bech32 format';\n  const altHash = settingsContext.addressFormat === 'bech32' ? addressHash : toBech32Address(addressHash);\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint={ hint }\n        isLoading={ isLoading }\n      >\n        { label }\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <AddressEntity\n          address={{ hash: altHash }}\n          isLoading={ isLoading }\n          noIcon\n          noLink\n          noAltHash\n        />\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default React.memo(AddressAlternativeFormat);\n","import { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { Address } from 'types/api/address';\n\nimport config from 'configs/app';\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport { currencyUnits } from 'lib/units';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport NativeTokenIcon from 'ui/shared/NativeTokenIcon';\n\ninterface Props {\n  data: Pick<Address, 'block_number_balance_updated_at' | 'coin_balance' | 'hash' | 'exchange_rate'>;\n  isLoading: boolean;\n}\n\nconst AddressBalance = ({ data, isLoading }: Props) => {\n  const [ lastBlockNumber, setLastBlockNumber ] = React.useState<number>(data.block_number_balance_updated_at || 0);\n  const queryClient = useQueryClient();\n\n  const updateData = React.useCallback((balance: string, exchangeRate: string, blockNumber: number) => {\n    if (blockNumber < lastBlockNumber) {\n      return;\n    }\n\n    setLastBlockNumber(blockNumber);\n    const queryKey = getResourceKey('address', { pathParams: { hash: data.hash } });\n    queryClient.setQueryData(queryKey, (prevData: Address | undefined) => {\n      if (!prevData) {\n        return;\n      }\n      return {\n        ...prevData,\n        coin_balance: balance,\n        exchange_rate: exchangeRate,\n        block_number_balance_updated_at: blockNumber,\n      };\n    });\n  }, [ data.hash, lastBlockNumber, queryClient ]);\n\n  const handleNewBalanceMessage: SocketMessage.AddressBalance['handler'] = React.useCallback((payload) => {\n    updateData(payload.balance, payload.exchange_rate, payload.block_number);\n  }, [ updateData ]);\n\n  const handleNewCoinBalanceMessage: SocketMessage.AddressCurrentCoinBalance['handler'] = React.useCallback((payload) => {\n    updateData(payload.coin_balance, payload.exchange_rate, payload.block_number);\n  }, [ updateData ]);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ data.hash.toLowerCase() }`,\n    isDisabled: !data.coin_balance,\n  });\n  useSocketMessage({\n    channel,\n    event: 'balance',\n    handler: handleNewBalanceMessage,\n  });\n  useSocketMessage({\n    channel,\n    event: 'current_coin_balance',\n    handler: handleNewCoinBalanceMessage,\n  });\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint={ `${ currencyUnits.ether } balance` }\n        isLoading={ isLoading }\n      >\n        Balance\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value alignSelf=\"center\" flexWrap=\"nowrap\">\n        <NativeTokenIcon boxSize={ 6 } mr={ 2 } isLoading={ isLoading }/>\n        <CurrencyValue\n          value={ data.coin_balance || '0' }\n          exchangeRate={ data.exchange_rate }\n          decimals={ String(config.chain.currency.decimals) }\n          currency={ currencyUnits.ether }\n          accuracyUsd={ 2 }\n          accuracy={ 8 }\n          flexWrap=\"wrap\"\n          isLoading={ isLoading }\n        />\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default React.memo(AddressBalance);\n","import React from 'react';\n\nimport type { AddressImplementation } from 'types/api/addressParams';\nimport type { SmartContractProxyType } from 'types/api/contract';\n\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\n\ninterface Props {\n  data: Array<AddressImplementation>;\n  isLoading?: boolean;\n  proxyType?: SmartContractProxyType;\n}\n\nconst AddressImplementations = ({ data, isLoading, proxyType }: Props) => {\n  const hasManyItems = data.length > 1;\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  const text = proxyType === 'eip7702' ? 'Delegated to' : `Implementation${ hasManyItems ? 's' : '' }`;\n  const hint = proxyType === 'eip7702' ?\n    'Account\\'s executable code address' :\n    `Implementation${ hasManyItems ? 's' : '' } address${ hasManyItems ? 'es' : '' } of the proxy contract`;\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint={ hint }\n        isLoading={ isLoading }\n        hasScroll={ hasScroll }\n      >\n        { text }\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.ValueWithScroll\n        gradientHeight={ 48 }\n        onScrollVisibilityChange={ setHasScroll }\n        rowGap={ 2 }\n        maxH=\"200px\"\n      >\n        { data.map((item) => (\n          <AddressEntity\n            key={ item.address }\n            address={{\n              hash: item.address,\n              filecoin: { robust: item.filecoin_robust_address },\n              name: item.name,\n              is_contract: true,\n            }}\n            isLoading={ isLoading }\n            noIcon\n          />\n        )) }\n      </DetailsInfoItem.ValueWithScroll>\n    </>\n  );\n};\n\nexport default React.memo(AddressImplementations);\n","import React from 'react';\n\nimport type { Address } from 'types/api/address';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ninterface Props {\n  data: Pick<Address, 'name' | 'token' | 'is_contract'>;\n  isLoading: boolean;\n}\n\nconst AddressNameInfo = ({ data, isLoading }: Props) => {\n  if (data.token) {\n    return (\n      <>\n        <DetailsInfoItem.Label\n          hint=\"Token name and symbol\"\n          isLoading={ isLoading }\n        >\n          Token name\n        </DetailsInfoItem.Label>\n        <DetailsInfoItem.Value>\n          <TokenEntity\n            token={ data.token }\n            isLoading={ isLoading }\n            noIcon\n            noCopy\n          />\n        </DetailsInfoItem.Value>\n      </>\n    );\n  }\n\n  if (data.is_contract && data.name) {\n    return (\n      <>\n        <DetailsInfoItem.Label\n          hint=\"The name found in the source code of the Contract\"\n          isLoading={ isLoading }\n        >\n          Contract name\n        </DetailsInfoItem.Label>\n        <DetailsInfoItem.Value>\n          <Skeleton isLoaded={ !isLoading }>\n            { data.name }\n          </Skeleton>\n        </DetailsInfoItem.Value>\n      </>\n    );\n  }\n\n  if (data.name) {\n    return (\n      <>\n        <DetailsInfoItem.Label\n          hint=\"The name of the validator\"\n          isLoading={ isLoading }\n        >\n          Validator name\n        </DetailsInfoItem.Label>\n        <DetailsInfoItem.Value>\n          <Skeleton isLoaded={ !isLoading }>\n            { data.name }\n          </Skeleton>\n        </DetailsInfoItem.Value>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default React.memo(AddressNameInfo);\n","import type BigNumber from 'bignumber.js';\n\nexport default function sumBnReducer(result: BigNumber, item: BigNumber) {\n  return result.plus(item);\n}\n","import BigNumber from 'bignumber.js';\n\nimport type { AddressTokenBalance } from 'types/api/address';\nimport type { TokenType } from 'types/api/token';\n\nimport sumBnReducer from 'lib/bigint/sumBnReducer';\nimport { ZERO } from 'lib/consts';\n\nexport type TokenEnhancedData = AddressTokenBalance & {\n  usd?: BigNumber ;\n};\n\nexport type Sort = 'desc' | 'asc';\n\nexport type TokenSelectData = Record<TokenType, TokenSelectDataItem>;\n\nexport interface TokenSelectDataItem {\n  items: Array<TokenEnhancedData>;\n  isOverflow: boolean;\n}\n\ntype TokenGroup = [string, TokenSelectDataItem];\n\nconst TOKEN_GROUPS_ORDER: Array<TokenType> = [ 'ERC-20', 'ERC-721', 'ERC-1155', 'ERC-404' ];\n\nexport const sortTokenGroups = (groupA: TokenGroup, groupB: TokenGroup) => {\n  return TOKEN_GROUPS_ORDER.indexOf(groupA[0] as TokenType) > TOKEN_GROUPS_ORDER.indexOf(groupB[0] as TokenType) ? 1 : -1;\n};\n\nconst sortErc1155or404Tokens = (sort: Sort) => (dataA: AddressTokenBalance, dataB: AddressTokenBalance) => {\n  if (dataA.value === dataB.value) {\n    return 0;\n  }\n  if (sort === 'desc') {\n    return Number(dataA.value) > Number(dataB.value) ? -1 : 1;\n  }\n\n  return Number(dataA.value) > Number(dataB.value) ? 1 : -1;\n};\n\nconst sortErc20Tokens = (sort: Sort) => (dataA: TokenEnhancedData, dataB: TokenEnhancedData) => {\n  if (!dataA.usd && !dataB.usd) {\n    return 0;\n  }\n\n  // keep tokens without usd value in the end of the group\n  if (!dataB.usd) {\n    return -1;\n  }\n  if (!dataA.usd) {\n    return 0;\n  }\n\n  if (sort === 'desc') {\n    return dataA.usd.gt(dataB.usd) ? -1 : 1;\n  }\n\n  return dataA.usd.gt(dataB.usd) ? 1 : -1;\n};\n\nconst sortErc721Tokens = () => () => 0;\n\nexport const sortingFns = {\n  'ERC-20': sortErc20Tokens,\n  'ERC-721': sortErc721Tokens,\n  'ERC-1155': sortErc1155or404Tokens,\n  'ERC-404': sortErc1155or404Tokens,\n};\n\nexport const filterTokens = (searchTerm: string) => ({ token }: AddressTokenBalance) => {\n  if (!token.name) {\n    return !searchTerm ? true : token.address.toLowerCase().includes(searchTerm);\n  }\n\n  return token.name?.toLowerCase().includes(searchTerm);\n};\n\nexport const calculateUsdValue = (data: AddressTokenBalance): TokenEnhancedData => {\n  if (data.token.type !== 'ERC-20') {\n    return data;\n  }\n\n  const exchangeRate = data.token.exchange_rate;\n  if (!exchangeRate) {\n    return data;\n  }\n\n  const decimals = Number(data.token.decimals || '18');\n  return {\n    ...data,\n    usd: BigNumber(data.value).div(BigNumber(10 ** decimals)).multipliedBy(BigNumber(exchangeRate)),\n  };\n};\n\nexport const getTokensTotalInfo = (data: TokenSelectData) => {\n  const usd = Object.values(data)\n    .map(({ items }) => items.reduce(usdValueReducer, ZERO))\n    .reduce(sumBnReducer, ZERO);\n\n  const num = Object.values(data)\n    .map(({ items }) => items.length)\n    .reduce((result, item) => result + item, 0);\n\n  const isOverflow = Object.values(data).some(({ isOverflow }) => isOverflow);\n\n  return { usd, num, isOverflow };\n};\n\nconst usdValueReducer = (result: BigNumber, item: TokenEnhancedData) => !item.usd ? result : result.plus(BigNumber(item.usd));\n","import { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { AddressTokenBalance, AddressTokensBalancesSocketMessage, AddressTokensResponse } from 'types/api/address';\nimport type { TokenType } from 'types/api/token';\n\nimport useApiQuery, { getResourceKey } from 'lib/api/useApiQuery';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\n\nimport { calculateUsdValue } from './tokenUtils';\ninterface Props {\n  hash?: string;\n  enabled?: boolean;\n}\n\nconst tokenBalanceItemIdentityFactory = (match: AddressTokenBalance) => (item: AddressTokenBalance) => ((\n  match.token.address === item.token.address &&\n  match.token_id === item.token_id &&\n  match.token_instance?.id === item.token_instance?.id\n));\n\nexport default function useFetchTokens({ hash, enabled }: Props) {\n  const erc20query = useApiQuery('address_tokens', {\n    pathParams: { hash },\n    queryParams: { type: 'ERC-20' },\n    queryOptions: { enabled: Boolean(hash) && enabled, refetchOnMount: false },\n  });\n  const erc721query = useApiQuery('address_tokens', {\n    pathParams: { hash },\n    queryParams: { type: 'ERC-721' },\n    queryOptions: { enabled: Boolean(hash) && enabled, refetchOnMount: false },\n  });\n  const erc1155query = useApiQuery('address_tokens', {\n    pathParams: { hash },\n    queryParams: { type: 'ERC-1155' },\n    queryOptions: { enabled: Boolean(hash) && enabled, refetchOnMount: false },\n  });\n  const erc404query = useApiQuery('address_tokens', {\n    pathParams: { hash },\n    queryParams: { type: 'ERC-404' },\n    queryOptions: { enabled: Boolean(hash) && enabled, refetchOnMount: false },\n  });\n\n  const queryClient = useQueryClient();\n\n  const updateTokensData = React.useCallback((type: TokenType, payload: AddressTokensBalancesSocketMessage) => {\n    const queryKey = getResourceKey('address_tokens', { pathParams: { hash }, queryParams: { type } });\n\n    queryClient.setQueryData(queryKey, (prevData: AddressTokensResponse | undefined) => {\n      const items = prevData?.items.map((currentItem) => {\n        const updatedData = payload.token_balances.find(tokenBalanceItemIdentityFactory(currentItem));\n        return updatedData ?? currentItem;\n      }) || [];\n\n      const extraItems = prevData?.next_page_params ?\n        [] :\n        payload.token_balances.filter((socketItem) => !items.some(tokenBalanceItemIdentityFactory(socketItem)));\n\n      if (!prevData) {\n        return {\n          items: extraItems,\n          next_page_params: null,\n        };\n      }\n\n      return {\n        items: items.concat(extraItems),\n        next_page_params: prevData.next_page_params,\n      };\n    });\n  }, [ hash, queryClient ]);\n\n  const handleTokenBalancesErc20Message: SocketMessage.AddressTokenBalancesErc20['handler'] = React.useCallback((payload) => {\n    updateTokensData('ERC-20', payload);\n  }, [ updateTokensData ]);\n\n  const handleTokenBalancesErc721Message: SocketMessage.AddressTokenBalancesErc721['handler'] = React.useCallback((payload) => {\n    updateTokensData('ERC-721', payload);\n  }, [ updateTokensData ]);\n\n  const handleTokenBalancesErc1155Message: SocketMessage.AddressTokenBalancesErc1155['handler'] = React.useCallback((payload) => {\n    updateTokensData('ERC-1155', payload);\n  }, [ updateTokensData ]);\n\n  const handleTokenBalancesErc404Message: SocketMessage.AddressTokenBalancesErc1155['handler'] = React.useCallback((payload) => {\n    updateTokensData('ERC-404', payload);\n  }, [ updateTokensData ]);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ hash?.toLowerCase() }`,\n    isDisabled: Boolean(hash) && (erc20query.isPlaceholderData || erc721query.isPlaceholderData || erc1155query.isPlaceholderData),\n  });\n\n  useSocketMessage({\n    channel,\n    event: 'updated_token_balances_erc_20',\n    handler: handleTokenBalancesErc20Message,\n  });\n  useSocketMessage({\n    channel,\n    event: 'updated_token_balances_erc_721',\n    handler: handleTokenBalancesErc721Message,\n  });\n  useSocketMessage({\n    channel,\n    event: 'updated_token_balances_erc_1155',\n    handler: handleTokenBalancesErc1155Message,\n  });\n  useSocketMessage({\n    channel,\n    event: 'updated_token_balances_erc_404',\n    handler: handleTokenBalancesErc404Message,\n  });\n\n  const data = React.useMemo(() => {\n    return {\n      'ERC-20': {\n        items: erc20query.data?.items.map(calculateUsdValue) || [],\n        isOverflow: Boolean(erc20query.data?.next_page_params),\n      },\n      'ERC-721': {\n        items: erc721query.data?.items.map(calculateUsdValue) || [],\n        isOverflow: Boolean(erc721query.data?.next_page_params),\n      },\n      'ERC-1155': {\n        items: erc1155query.data?.items.map(calculateUsdValue) || [],\n        isOverflow: Boolean(erc1155query.data?.next_page_params),\n      },\n      'ERC-404': {\n        items: erc404query.data?.items.map(calculateUsdValue) || [],\n        isOverflow: Boolean(erc1155query.data?.next_page_params),\n      },\n    };\n  }, [ erc1155query.data, erc20query.data, erc721query.data, erc404query.data ]);\n\n  return {\n    isPending: erc20query.isPending || erc721query.isPending || erc1155query.isPending || erc404query.isPending,\n    isError: erc20query.isError || erc721query.isError || erc1155query.isError || erc404query.isError,\n    data,\n  };\n}\n","import { Image, Tooltip } from '@chakra-ui/react';\nimport { capitalize } from 'es-toolkit';\nimport React from 'react';\n\nimport type { MultichainProviderConfigParsed } from 'types/client/multichainProviderConfig';\n\nimport { route } from 'nextjs-routes';\n\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\nconst TEMPLATE_ADDRESS = '{address}';\n\ntype Props = {\n  hasSingleProvider: boolean;\n  item: MultichainProviderConfigParsed;\n  addressHash: string;\n  onClick?: () => void;\n};\n\nconst AddressMultichainButton = ({ item, addressHash, onClick, hasSingleProvider }: Props) => {\n\n  const buttonIcon = <Image src={ item.logoUrl } alt={ item.name } boxSize={ 5 } mr={ hasSingleProvider ? 2 : 0 } borderRadius=\"4px\" overflow=\"hidden\"/>;\n\n  const buttonContent = hasSingleProvider ? (\n    <>\n      { buttonIcon }\n      { capitalize(item.name) }\n    </>\n  ) : (\n    <Tooltip label={ capitalize(item.name) }>{ buttonIcon }</Tooltip>\n  );\n\n  const linkProps = {\n    variant: hasSingleProvider ? 'subtle' as const : undefined,\n    display: 'flex',\n    alignItems: 'center',\n    fontSize: 'sm',\n    lineHeight: 5,\n    fontWeight: 500,\n    onClick,\n  };\n\n  try {\n    const portfolioUrlString = item.urlTemplate.replace(TEMPLATE_ADDRESS, addressHash);\n    const portfolioUrl = new URL(portfolioUrlString);\n    portfolioUrl.searchParams.append('utm_source', 'blockscout');\n    portfolioUrl.searchParams.append('utm_medium', 'address');\n    const dappId = item.dappId;\n    return typeof dappId === 'string' ? (\n      <LinkInternal\n        href={ route({ pathname: '/apps/[id]', query: { id: dappId, url: portfolioUrl.toString() } }) }\n        { ...linkProps }\n      >\n        { buttonContent }\n      </LinkInternal>\n    ) : (\n      <LinkExternal\n        href={ portfolioUrl.toString() }\n        { ...linkProps }\n      >\n        { buttonContent }\n      </LinkExternal>\n    );\n  } catch (error) {}\n\n  return null;\n};\n\nexport default AddressMultichainButton;\n","import { Text, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Address } from 'types/api/address';\n\nimport config from 'configs/app';\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\nimport { getTokensTotalInfo } from '../utils/tokenUtils';\nimport useFetchTokens from '../utils/useFetchTokens';\nimport AddressMultichainButton from './AddressMultichainButton';\n\nconst multichainFeature = config.features.multichainButton;\n\ntype Props = {\n  addressHash: string;\n  addressData?: Address;\n  isLoading?: boolean;\n};\n\nconst AddressNetWorth = ({ addressData, isLoading, addressHash }: Props) => {\n  const { data, isError, isPending } = useFetchTokens({ hash: addressData?.hash, enabled: addressData?.has_tokens });\n\n  const { usdBn: nativeUsd } = getCurrencyValue({\n    value: addressData?.coin_balance || '0',\n    accuracy: 8,\n    accuracyUsd: 2,\n    exchangeRate: addressData?.exchange_rate,\n    decimals: String(config.chain.currency.decimals),\n  });\n\n  const { usd, isOverflow } = getTokensTotalInfo(data);\n  const prefix = isOverflow ? '>' : '';\n\n  const totalUsd = nativeUsd.plus(usd);\n\n  const onMultichainClick = React.useCallback(() => {\n    mixpanel.logEvent(mixpanel.EventTypes.BUTTON_CLICK, { Content: 'Multichain', Source: 'address' });\n  }, []);\n\n  let multichainItems = null;\n\n  if (multichainFeature.isEnabled && !addressData?.is_contract) {\n    const { providers } = multichainFeature;\n    const hasSingleProvider = providers.length === 1;\n\n    multichainItems = (\n      <>\n        <TextSeparator mx={ 0 } color=\"gray.500\"/>\n        <Flex alignItems=\"center\" gap={ 2 }>\n          <Text>Multichain</Text>\n          { providers.map((item) => (\n            <AddressMultichainButton\n              key={ item.name }\n              item={ item }\n              addressHash={ addressHash }\n              onClick={ onMultichainClick }\n              hasSingleProvider={ hasSingleProvider }\n            />\n          ))\n          }\n        </Flex>\n      </>\n    );\n  }\n\n  return (\n    <Skeleton display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" isLoaded={ !isLoading && !(addressData?.has_tokens && isPending) } gap={ 2 }>\n      <Text>\n        { (isError || !addressData?.exchange_rate) ? 'N/A' : `${ prefix }$${ totalUsd.toFormat(2) }` }\n      </Text>\n      { multichainItems }\n    </Skeleton>\n  );\n};\n\nexport default AddressNetWorth;\n","import { Image } from '@chakra-ui/react';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport * as v from 'valibot';\n\nimport config from 'configs/app';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\nconst feature = config.features.saveOnGas;\n\nconst responseSchema = v.object({\n  percent: v.number(),\n});\n\nconst ERROR_NAME = 'Invalid response schema';\n\ninterface Props {\n  gasUsed: string;\n  address: string;\n}\n\nconst AddressSaveOnGas = ({ gasUsed, address }: Props) => {\n\n  const gasUsedNumber = Number(gasUsed);\n\n  const query = useQuery({\n    queryKey: [ 'gas_hawk_saving_potential', { address } ],\n    queryFn: async() => {\n      if (!feature.isEnabled) {\n        return;\n      }\n\n      const response = await fetch(feature.apiUrlTemplate.replace('<address>', address));\n      const data = await response.json();\n      return data;\n    },\n    select: (response) => {\n      const parsedResponse = v.safeParse(responseSchema, response);\n\n      if (!parsedResponse.success) {\n        throw Error('Invalid response schema');\n      }\n\n      return parsedResponse.output;\n    },\n    placeholderData: { percent: 42 },\n    enabled: feature.isEnabled && gasUsedNumber > 0,\n  });\n\n  const errorMessage = query.error && 'message' in query.error ? query.error.message : undefined;\n\n  React.useEffect(() => {\n    if (errorMessage === ERROR_NAME) {\n      fetch('/node-api/monitoring/invalid-api-schema', {\n        method: 'POST',\n        body: JSON.stringify({\n          resource: 'gas_hawk_saving_potential',\n          url: feature.isEnabled ? feature.apiUrlTemplate.replace('<address>', address) : undefined,\n        }),\n      });\n    }\n  }, [ address, errorMessage ]);\n\n  if (gasUsedNumber <= 0 || !feature.isEnabled || query.isError || !query.data?.percent) {\n    return null;\n  }\n\n  const percent = Math.round(query.data.percent);\n\n  if (percent < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <TextSeparator color=\"divider\"/>\n      <Skeleton isLoaded={ !query.isPlaceholderData } display=\"flex\" alignItems=\"center\" columnGap={ 2 }>\n        <Image src=\"/static/gas_hawk_logo.svg\" w=\"15px\" h=\"20px\" alt=\"GasHawk logo\"/>\n        <LinkExternal href=\"https://www.gashawk.io?utm_source=blockscout&utm_medium=address\" fontSize=\"sm\">\n          Save { percent.toLocaleString(undefined, { maximumFractionDigits: 0 }) }% with GasHawk\n        </LinkExternal>\n      </Skeleton>\n    </>\n  );\n};\n\nexport default React.memo(AddressSaveOnGas);\n","import { Tag } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FilecoinActorType } from 'types/api/addressParams';\n\nconst ACTOR_TYPES: Record<FilecoinActorType, string> = {\n  account: 'Account',\n  cron: 'Scheduled Tasks',\n  datacap: 'Data Cap Management',\n  eam: 'Ethereum Address Manager',\n  ethaccount: 'Ethereum-Compatible Account',\n  evm: 'Ethereum Virtual Machine',\n  init: 'Initialization',\n  market: 'Storage Market',\n  miner: 'Storage Provider',\n  multisig: 'Multi-Signature Wallet',\n  paych: 'Payment Channel',\n  placeholder: 'Placeholder Address',\n  power: 'Power Management',\n  reward: 'Incentives and Rewards',\n  system: 'System Operations',\n  verifreg: 'Verification Registry',\n};\n\ntype Props = {\n  actorType: FilecoinActorType;\n};\n\nconst FilecoinActorTag = ({ actorType }: Props) => {\n  const text = ACTOR_TYPES[actorType];\n\n  if (!text) {\n    return null;\n  }\n\n  return <Tag colorScheme=\"gray\">{ text }</Tag>;\n};\n\nexport default FilecoinActorTag;\n","import { Box, Button, chakra, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormattedData } from './types';\n\nimport { space } from 'lib/html-entities';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport { getTokensTotalInfo } from '../utils/tokenUtils';\n\ninterface Props {\n  isOpen: boolean;\n  isLoading: boolean;\n  onClick: () => void;\n  data: FormattedData;\n}\n\nconst TokenSelectButton = ({ isOpen, isLoading, onClick, data }: Props, ref: React.ForwardedRef<HTMLButtonElement>) => {\n  const { usd, num, isOverflow } = getTokensTotalInfo(data);\n  const skeletonBgColor = useColorModeValue('white', 'black');\n\n  const prefix = isOverflow ? '>' : '';\n\n  const handleClick = React.useCallback(() => {\n    if (isLoading && !isOpen) {\n      return;\n    }\n\n    mixpanel.logEvent(mixpanel.EventTypes.PAGE_WIDGET, { Type: 'Tokens dropdown' });\n    onClick();\n  }, [ isLoading, isOpen, onClick ]);\n\n  return (\n    <Box position=\"relative\">\n      <Button\n        ref={ ref }\n        size=\"sm\"\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        onClick={ handleClick }\n        isActive={ isOpen }\n        aria-label=\"Token select\"\n      >\n        <IconSvg name=\"tokens\" boxSize={ 4 } mr={ 2 }/>\n        <chakra.span fontWeight={ 600 }>{ prefix }{ num }</chakra.span>\n        <chakra.span\n          whiteSpace=\"pre\"\n          color=\"text_secondary\"\n          fontWeight={ 400 }\n          maxW={{ base: 'calc(100vw - 230px)', lg: '500px' }}\n          overflow=\"hidden\"\n          textOverflow=\"ellipsis\"\n        >\n          { space }({ prefix }${ usd.toFormat(2) })\n        </chakra.span>\n        <IconSvg name=\"arrows/east-mini\" transform={ isOpen ? 'rotate(90deg)' : 'rotate(-90deg)' } transitionDuration=\"faster\" boxSize={ 5 } ml={ 3 }/>\n      </Button>\n      { isLoading && !isOpen && <Skeleton h=\"100%\" w=\"100%\" position=\"absolute\" top={ 0 } left={ 0 } bgColor={ skeletonBgColor } borderRadius=\"base\"/> }\n    </Box>\n  );\n};\n\nexport default React.forwardRef(TokenSelectButton);\n","import { chakra, Flex, useColorModeValue } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\n\nimport type { TokenEnhancedData } from '../utils/tokenUtils';\n\ninterface Props {\n  data: TokenEnhancedData;\n}\n\nconst TokenSelectItem = ({ data }: Props) => {\n\n  const secondRow = (() => {\n    switch (data.token.type) {\n      case 'ERC-20': {\n        const tokenDecimals = Number(data.token.decimals) || 18;\n        const text = `${ BigNumber(data.value).dividedBy(10 ** tokenDecimals).dp(8).toFormat() } ${ data.token.symbol || '' }`;\n\n        return (\n          <>\n            <TruncatedValue value={ text }/>\n            { data.token.exchange_rate && <chakra.span ml={ 2 }>@{ Number(data.token.exchange_rate).toLocaleString() }</chakra.span> }\n          </>\n        );\n      }\n      case 'ERC-721': {\n        const text = `${ BigNumber(data.value).toFormat() } ${ data.token.symbol || '' }`;\n        return <TruncatedValue value={ text }/>;\n      }\n      case 'ERC-1155': {\n        return (\n          <>\n            <chakra.span textOverflow=\"ellipsis\" overflow=\"hidden\" mr={ 6 }>\n              #{ data.token_id || 0 }\n            </chakra.span>\n            <span>\n              { BigNumber(data.value).toFormat() }\n            </span>\n          </>\n        );\n      }\n      case 'ERC-404': {\n        return (\n          <>\n            { data.token_id !== null && (\n              <chakra.span textOverflow=\"ellipsis\" overflow=\"hidden\" mr={ 6 }>\n                #{ data.token_id || 0 }\n              </chakra.span>\n            ) }\n            { data.value !== null && (\n              <span>\n                { data.token.decimals ?\n                  getCurrencyValue({ value: data.value, decimals: data.token.decimals, accuracy: 2 }).valueStr :\n                  BigNumber(data.value).toFormat()\n                }\n              </span>\n            ) }\n          </>\n        );\n      }\n    }\n  })();\n\n  const url = route({ pathname: '/token/[hash]', query: { hash: data.token.address } });\n\n  return (\n    <LinkInternal\n      px={ 1 }\n      py=\"10px\"\n      display=\"flex\"\n      flexDir=\"column\"\n      rowGap={ 2 }\n      borderColor=\"divider\"\n      borderBottomWidth=\"1px\"\n      _hover={{\n        bgColor: useColorModeValue('blue.50', 'gray.800'),\n      }}\n      color=\"unset\"\n      fontSize=\"sm\"\n      href={ url }\n    >\n      <Flex alignItems=\"center\" w=\"100%\" overflow=\"hidden\">\n        <TokenEntity\n          token={ data.token }\n          noSymbol\n          noCopy\n          noLink\n          fontWeight={ 700 }\n          mr={ 2 }\n        />\n        { data.usd && (\n          <TruncatedValue value={ `$${ data.usd.toFormat(2) }` } fontWeight={ 700 } minW=\"120px\" ml=\"auto\" textAlign=\"right\"/>\n        ) }\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" w=\"100%\" whiteSpace=\"nowrap\">\n        { secondRow }\n      </Flex>\n    </LinkInternal>\n  );\n};\n\nexport default React.memo(TokenSelectItem);\n","import { Text, Box, Input, InputGroup, InputLeftElement, useColorModeValue, Flex, Link } from '@chakra-ui/react';\nimport { sumBy } from 'es-toolkit';\nimport type { ChangeEvent } from 'react';\nimport React from 'react';\n\nimport type { FormattedData } from './types';\nimport type { TokenType } from 'types/api/token';\n\nimport { getTokenTypeName } from 'lib/token/tokenTypes';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport type { Sort } from '../utils/tokenUtils';\nimport { sortTokenGroups, sortingFns } from '../utils/tokenUtils';\nimport TokenSelectItem from './TokenSelectItem';\n\ninterface Props {\n  searchTerm: string;\n  erc20sort: Sort;\n  erc1155sort: Sort;\n  erc404sort: Sort;\n  filteredData: FormattedData;\n  onInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  onSortClick: (event: React.SyntheticEvent) => void;\n}\n\nconst TokenSelectMenu = ({ erc20sort, erc1155sort, erc404sort, filteredData, onInputChange, onSortClick, searchTerm }: Props) => {\n  const searchIconColor = useColorModeValue('blackAlpha.600', 'whiteAlpha.600');\n\n  const hasFilteredResult = sumBy(Object.values(filteredData), ({ items }) => items.length) > 0;\n\n  return (\n    <>\n      <InputGroup size=\"xs\" mb={ 5 }>\n        <InputLeftElement >\n          <IconSvg name=\"search\" boxSize={ 4 } color={ searchIconColor }/>\n        </InputLeftElement>\n        <Input\n          paddingInlineStart=\"38px\"\n          placeholder=\"Search by token name\"\n          ml=\"1px\"\n          onChange={ onInputChange }\n          bgColor=\"dialog_bg\"\n        />\n      </InputGroup>\n      <Flex flexDir=\"column\" rowGap={ 6 }>\n        { Object.entries(filteredData).sort(sortTokenGroups).map(([ tokenType, tokenInfo ]) => {\n          if (tokenInfo.items.length === 0) {\n            return null;\n          }\n\n          const type = tokenType as TokenType;\n          const arrowTransform =\n            (type === 'ERC-1155' && erc1155sort === 'desc') ||\n            (type === 'ERC-404' && erc404sort === 'desc') ||\n            (type === 'ERC-20' && erc20sort === 'desc') ?\n              'rotate(90deg)' :\n              'rotate(-90deg)';\n          const sortDirection: Sort = (() => {\n            switch (type) {\n              case 'ERC-1155':\n                return erc1155sort;\n              case 'ERC-20':\n                return erc20sort;\n              default:\n                return 'desc';\n            }\n          })();\n          const hasSort =\n            (type === 'ERC-404' && tokenInfo.items.some(item => item.value)) ||\n            type === 'ERC-1155' ||\n            (type === 'ERC-20' && tokenInfo.items.some(({ usd }) => usd));\n          const numPrefix = tokenInfo.isOverflow ? '>' : '';\n\n          return (\n            <Box key={ type }>\n              <Flex justifyContent=\"space-between\">\n                <Text mb={ 3 } color=\"gray.500\" fontWeight={ 600 } fontSize=\"sm\">\n                  { getTokenTypeName(type) } tokens ({ numPrefix }{ tokenInfo.items.length })\n                </Text>\n                { hasSort && (\n                  <Link data-type={ type } onClick={ onSortClick } aria-label={ `Sort ${ getTokenTypeName(type) } tokens` }>\n                    <IconSvg name=\"arrows/east\" boxSize={ 5 } transform={ arrowTransform } transitionDuration=\"faster\"/>\n                  </Link>\n                ) }\n              </Flex>\n              { tokenInfo.items.sort(sortingFns[type](sortDirection)).map((data) =>\n                <TokenSelectItem key={ data.token.address + data.token_id } data={ data }/>) }\n            </Box>\n          );\n        }) }\n      </Flex>\n      { Boolean(searchTerm) && !hasFilteredResult && <Text fontSize=\"sm\">Could not find any matches.</Text> }\n    </>\n  );\n};\n\nexport default React.memo(TokenSelectMenu);\n","import { mapValues } from 'es-toolkit';\nimport type { ChangeEvent } from 'react';\nimport React from 'react';\n\nimport type { FormattedData } from './types';\n\nimport type { Sort } from '../utils/tokenUtils';\nimport { filterTokens } from '../utils/tokenUtils';\n\nexport default function useTokenSelect(data: FormattedData) {\n  const [ searchTerm, setSearchTerm ] = React.useState('');\n  const [ erc1155sort, setErc1155Sort ] = React.useState<Sort>('desc');\n  const [ erc404sort, setErc404Sort ] = React.useState<Sort>('desc');\n  const [ erc20sort, setErc20Sort ] = React.useState<Sort>('desc');\n\n  const onInputChange = React.useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  }, []);\n\n  const onSortClick = React.useCallback((event: React.SyntheticEvent) => {\n    const tokenType = (event.currentTarget as HTMLAnchorElement).getAttribute('data-type');\n    if (tokenType === 'ERC-1155') {\n      setErc1155Sort((prevValue) => prevValue === 'desc' ? 'asc' : 'desc');\n    }\n    if (tokenType === 'ERC-404') {\n      setErc404Sort((prevValue) => prevValue === 'desc' ? 'asc' : 'desc');\n    }\n    if (tokenType === 'ERC-20') {\n      setErc20Sort((prevValue) => prevValue === 'desc' ? 'asc' : 'desc');\n    }\n  }, []);\n\n  const filteredData = React.useMemo(() => {\n    return mapValues(data, ({ items, isOverflow }) => ({\n      isOverflow,\n      items: items.filter(filterTokens(searchTerm.toLowerCase())),\n    }));\n  }, [ data, searchTerm ]);\n\n  return {\n    searchTerm,\n    erc20sort,\n    erc1155sort,\n    erc404sort,\n    onInputChange,\n    onSortClick,\n    data,\n    filteredData,\n  };\n}\n","import { PopoverTrigger, PopoverContent, PopoverBody, useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormattedData } from './types';\n\nimport Popover from 'ui/shared/chakra/Popover';\n\nimport TokenSelectButton from './TokenSelectButton';\nimport TokenSelectMenu from './TokenSelectMenu';\nimport useTokenSelect from './useTokenSelect';\n\ninterface Props {\n  data: FormattedData;\n  isLoading: boolean;\n}\n\nconst TokenSelectDesktop = ({ data, isLoading }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const result = useTokenSelect(data);\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <TokenSelectButton isOpen={ isOpen } onClick={ onToggle } data={ result.data } isLoading={ isLoading }/>\n      </PopoverTrigger>\n      <PopoverContent w=\"355px\" maxH=\"450px\" overflowY=\"scroll\">\n        <PopoverBody px={ 4 } py={ 6 } boxShadow=\"2xl\" >\n          <TokenSelectMenu { ...result }/>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(TokenSelectDesktop);\n","import { useDisclosure, Modal, ModalContent, ModalCloseButton } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormattedData } from './types';\n\nimport TokenSelectButton from './TokenSelectButton';\nimport TokenSelectMenu from './TokenSelectMenu';\nimport useTokenSelect from './useTokenSelect';\n\ninterface Props {\n  data: FormattedData;\n  isLoading: boolean;\n}\n\nconst TokenSelectMobile = ({ data, isLoading }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n  const result = useTokenSelect(data);\n\n  return (\n    <>\n      <TokenSelectButton isOpen={ isOpen } onClick={ onToggle } data={ result.data } isLoading={ isLoading }/>\n      <Modal isOpen={ isOpen } onClose={ onClose } size=\"full\">\n        <ModalContent>\n          <ModalCloseButton/>\n          <TokenSelectMenu { ...result }/>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default React.memo(TokenSelectMobile);\n","import { Box, Flex, IconButton, Tooltip } from '@chakra-ui/react';\nimport { useQueryClient, useIsFetching } from '@tanstack/react-query';\nimport { sumBy } from 'es-toolkit';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { Address } from 'types/api/address';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport useFetchTokens from '../utils/useFetchTokens';\nimport TokenSelectDesktop from './TokenSelectDesktop';\nimport TokenSelectMobile from './TokenSelectMobile';\n\ninterface Props {\n  onClick?: () => void;\n}\n\nconst TokenSelect = ({ onClick }: Props) => {\n  const router = useRouter();\n  const isMobile = useIsMobile();\n  const queryClient = useQueryClient();\n\n  const addressHash = getQueryParamString(router.query.hash);\n  const addressResourceKey = getResourceKey('address', { pathParams: { hash: addressHash } });\n\n  const addressQueryData = queryClient.getQueryData<Address>(addressResourceKey);\n\n  const { data, isError, isPending } = useFetchTokens({ hash: addressQueryData?.hash });\n  const tokensResourceKey = getResourceKey('address_tokens', { pathParams: { hash: addressQueryData?.hash }, queryParams: { type: 'ERC-20' } });\n  const tokensIsFetching = useIsFetching({ queryKey: tokensResourceKey });\n\n  const handleIconButtonClick = React.useCallback(() => {\n    mixpanel.logEvent(mixpanel.EventTypes.PAGE_WIDGET, { Type: 'Tokens show all (icon)' });\n    onClick?.();\n  }, [ onClick ]);\n\n  if (isPending) {\n    return (\n      <Flex columnGap={ 3 }>\n        <Skeleton h={ 8 } w=\"150px\" borderRadius=\"base\"/>\n        <Skeleton h={ 8 } w={ 9 } borderRadius=\"base\"/>\n      </Flex>\n    );\n  }\n\n  const hasTokens = sumBy(Object.values(data), ({ items }) => items.length) > 0;\n  if (isError || !hasTokens) {\n    return <Box py=\"6px\">0</Box>;\n  }\n\n  return (\n    <Flex columnGap={ 3 } mt={{ base: 1, lg: 0 }}>\n      { isMobile ?\n        <TokenSelectMobile data={ data } isLoading={ tokensIsFetching === 1 }/> :\n        <TokenSelectDesktop data={ data } isLoading={ tokensIsFetching === 1 }/>\n      }\n      <Tooltip label=\"Show all tokens\">\n        <Box>\n          <NextLink href={{ pathname: '/address/[hash]', query: { hash: addressHash, tab: 'tokens' } }} passHref legacyBehavior>\n            <IconButton\n              aria-label=\"Show all tokens\"\n              variant=\"outline\"\n              size=\"sm\"\n              pl=\"6px\"\n              pr=\"6px\"\n              icon={ <IconSvg name=\"wallet\" boxSize={ 5 }/> }\n              as=\"a\"\n              onClick={ handleIconButtonClick }\n            />\n          </NextLink>\n        </Box>\n      </Tooltip>\n    </Flex>\n  );\n};\n\nexport default React.memo(TokenSelect);\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\n\nimport type { AddressCounters } from 'types/api/address';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { publicClient } from 'lib/web3/client';\nimport { ADDRESS_COUNTERS } from 'stubs/address';\nimport { GET_TRANSACTIONS_COUNT } from 'stubs/RPC';\n\nimport type { AddressQuery } from './useAddressQuery';\n\ntype RpcResponseType = [\n  number | null,\n];\n\nexport type AddressCountersQuery = UseQueryResult<AddressCounters, ResourceError<{ status: number }>> & {\n  isDegradedData: boolean;\n};\n\ninterface Params {\n  hash: string;\n  addressQuery: AddressQuery;\n}\n\nexport default function useAddressCountersQuery({ hash, addressQuery }: Params): AddressCountersQuery {\n  const enabled = Boolean(hash) && !addressQuery.isPlaceholderData;\n\n  const apiQuery = useApiQuery<'address_counters', { status: number }>('address_counters', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: enabled && !addressQuery.isDegradedData,\n      placeholderData: ADDRESS_COUNTERS,\n      refetchOnMount: false,\n    },\n  });\n\n  const rpcQuery = useQuery<RpcResponseType, unknown, AddressCounters | null>({\n    queryKey: [ 'RPC', 'address_counters', { hash } ],\n    queryFn: async() => {\n      if (!publicClient) {\n        throw new Error('No public RPC client');\n      }\n\n      const txCount = publicClient.getTransactionCount({ address: hash as `0x${ string }` }).catch(() => null);\n\n      return Promise.all([\n        txCount,\n      ]);\n    },\n    select: (response) => {\n      const [ txCount ] = response;\n      return {\n        transactions_count: txCount?.toString() ?? '0',\n        token_transfers_count: '0',\n        gas_usage_count: null,\n        validations_count: null,\n      };\n    },\n    placeholderData: [ GET_TRANSACTIONS_COUNT ],\n    enabled: enabled && (addressQuery.isDegradedData || apiQuery.isError),\n    retry: false,\n    refetchOnMount: false,\n  });\n\n  const isRpcQuery = Boolean((addressQuery.isDegradedData || apiQuery.isError) && rpcQuery.data && publicClient);\n  const query = isRpcQuery ? rpcQuery as UseQueryResult<AddressCounters, ResourceError<{ status: number }>> : apiQuery;\n\n  return {\n    ...query,\n    isDegradedData: isRpcQuery,\n  };\n}\n","import { Box, Text, Grid } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getNetworkValidationActionText from 'lib/networks/getNetworkValidationActionText';\nimport getNetworkValidatorTitle from 'lib/networks/getNetworkValidatorTitle';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport AddressCounterItem from 'ui/address/details/AddressCounterItem';\nimport ServiceDegradationWarning from 'ui/shared/alerts/ServiceDegradationWarning';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TxEntity from 'ui/shared/entities/tx/TxEntity';\n\nimport AddressAlternativeFormat from './details/AddressAlternativeFormat';\nimport AddressBalance from './details/AddressBalance';\nimport AddressImplementations from './details/AddressImplementations';\nimport AddressNameInfo from './details/AddressNameInfo';\nimport AddressNetWorth from './details/AddressNetWorth';\nimport AddressSaveOnGas from './details/AddressSaveOnGas';\nimport FilecoinActorTag from './filecoin/FilecoinActorTag';\nimport TokenSelect from './tokenSelect/TokenSelect';\nimport useAddressCountersQuery from './utils/useAddressCountersQuery';\nimport type { AddressQuery } from './utils/useAddressQuery';\n\ninterface Props {\n  addressQuery: AddressQuery;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst AddressDetails = ({ addressQuery, scrollRef }: Props) => {\n  const router = useRouter();\n\n  const addressHash = getQueryParamString(router.query.hash);\n\n  const countersQuery = useAddressCountersQuery({\n    hash: addressHash,\n    addressQuery,\n  });\n\n  const handleCounterItemClick = React.useCallback(() => {\n    window.setTimeout(() => {\n      // cannot do scroll instantly, have to wait a little\n      scrollRef?.current?.scrollIntoView({ behavior: 'smooth' });\n    }, 500);\n  }, [ scrollRef ]);\n\n  const error404Data = React.useMemo(() => ({\n    hash: addressHash || '',\n    is_contract: false,\n    implementations: null,\n    token: null,\n    watchlist_address_id: null,\n    watchlist_names: null,\n    creation_transaction_hash: null,\n    block_number_balance_updated_at: null,\n    name: null,\n    exchange_rate: null,\n    coin_balance: null,\n    has_tokens: true,\n    has_token_transfers: true,\n    has_validated_blocks: false,\n    filecoin: undefined,\n    creator_filecoin_robust_address: null,\n    creator_address_hash: null,\n  }), [ addressHash ]);\n\n  // error handling (except 404 codes)\n  if (addressQuery.isError) {\n    if (isCustomAppError(addressQuery.error)) {\n      const is404Error = addressQuery.isError && 'status' in addressQuery.error && addressQuery.error.status === 404;\n      if (!is404Error) {\n        throwOnResourceLoadError(addressQuery);\n      }\n    } else {\n      return <DataFetchAlert/>;\n    }\n  }\n\n  const data = addressQuery.isError ? error404Data : addressQuery.data;\n\n  if (!data) {\n    return null;\n  }\n\n  const creatorAddressHash = data.creator_address_hash;\n\n  return (\n    <>\n      { addressQuery.isDegradedData && <ServiceDegradationWarning isLoading={ addressQuery.isPlaceholderData } mb={ 6 }/> }\n      <Grid\n        columnGap={ 8 }\n        rowGap={{ base: 1, lg: 3 }}\n        templateColumns={{ base: 'minmax(0, 1fr)', lg: 'auto minmax(0, 1fr)' }} overflow=\"hidden\"\n      >\n        <AddressAlternativeFormat isLoading={ addressQuery.isPlaceholderData } addressHash={ addressHash }/>\n\n        { data.filecoin?.id && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"Short identifier of an address that may change with chain state updates\"\n            >\n              ID\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              <Text>{ data.filecoin.id }</Text>\n              <CopyToClipboard text={ data.filecoin.id }/>\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n\n        { data.filecoin?.actor_type && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"Identifies the purpose and behavior of the address on the Filecoin network\"\n            >\n              Actor\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              <FilecoinActorTag actorType={ data.filecoin.actor_type }/>\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n\n        { (data.filecoin?.actor_type === 'evm' || data.filecoin?.actor_type === 'ethaccount') && data?.filecoin?.robust && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"0x-style address to which the Filecoin address is assigned by the Ethereum Address Manager\"\n            >\n              Ethereum Address\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value flexWrap=\"nowrap\">\n              <AddressEntity\n                address={{ hash: data.hash }}\n                noIcon\n                noLink\n              />\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n\n        <AddressNameInfo data={ data } isLoading={ addressQuery.isPlaceholderData }/>\n\n        { data.is_contract && data.creation_transaction_hash && (creatorAddressHash) && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"Transaction and address of creation\"\n              isLoading={ addressQuery.isPlaceholderData }\n            >\n              Creator\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              <AddressEntity\n                address={{ hash: creatorAddressHash, filecoin: { robust: data.creator_filecoin_robust_address } }}\n                truncation=\"constant\"\n                noIcon\n              />\n              <Text whiteSpace=\"pre\"> at txn </Text>\n              <TxEntity hash={ data.creation_transaction_hash } truncation=\"constant\" noIcon noCopy={ false }/>\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n        { data.is_contract && data.implementations && data.implementations?.length > 0 && (\n          <AddressImplementations\n            data={ data.implementations }\n            isLoading={ addressQuery.isPlaceholderData }\n            proxyType={ data.proxy_type }\n          />\n        ) }\n\n        <AddressBalance data={ data } isLoading={ addressQuery.isPlaceholderData }/>\n\n        { data.has_tokens && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"All tokens in the account and total value\"\n            >\n              Tokens\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value py={ addressQuery.data ? 0 : undefined }>\n              { addressQuery.data ? <TokenSelect onClick={ handleCounterItemClick }/> : <Box>0</Box> }\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n        { (config.features.multichainButton.isEnabled || (data.exchange_rate && data.has_tokens)) && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"Total net worth in USD of all tokens for the address\"\n              isLoading={ addressQuery.isPlaceholderData }\n            >\n              Net worth\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value alignSelf=\"center\" py={ 0 }>\n              <AddressNetWorth addressData={ addressQuery.data } addressHash={ addressHash } isLoading={ addressQuery.isPlaceholderData }/>\n            </DetailsInfoItem.Value>\n          </>\n        )\n        }\n\n        <DetailsInfoItem.Label\n          hint=\"Number of transactions related to this address\"\n          isLoading={ addressQuery.isPlaceholderData || countersQuery.isPlaceholderData }\n        >\n          Transactions\n        </DetailsInfoItem.Label>\n        <DetailsInfoItem.Value>\n          { addressQuery.data ? (\n            <AddressCounterItem\n              prop=\"transactions_count\"\n              query={ countersQuery }\n              address={ data.hash }\n              onClick={ handleCounterItemClick }\n              isAddressQueryLoading={ addressQuery.isPlaceholderData }\n              isDegradedData={ addressQuery.isDegradedData }\n            />\n          ) :\n            0 }\n        </DetailsInfoItem.Value>\n\n        { data.has_token_transfers && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"Number of transfers to/from this address\"\n              isLoading={ addressQuery.isPlaceholderData || countersQuery.isPlaceholderData }\n            >\n              Transfers\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              { addressQuery.data ? (\n                <AddressCounterItem\n                  prop=\"token_transfers_count\"\n                  query={ countersQuery }\n                  address={ data.hash }\n                  onClick={ handleCounterItemClick }\n                  isAddressQueryLoading={ addressQuery.isPlaceholderData }\n                  isDegradedData={ addressQuery.isDegradedData }\n                />\n              ) :\n                0 }\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n\n        { countersQuery.data?.gas_usage_count && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"Gas used by the address\"\n              isLoading={ addressQuery.isPlaceholderData || countersQuery.isPlaceholderData }\n            >\n              Gas used\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              { addressQuery.data ? (\n                <AddressCounterItem\n                  prop=\"gas_usage_count\"\n                  query={ countersQuery }\n                  address={ data.hash }\n                  onClick={ handleCounterItemClick }\n                  isAddressQueryLoading={ addressQuery.isPlaceholderData }\n                  isDegradedData={ addressQuery.isDegradedData }\n                />\n              ) :\n                0 }\n              { !countersQuery.isPlaceholderData && countersQuery.data?.gas_usage_count && (\n                <AddressSaveOnGas\n                  gasUsed={ countersQuery.data.gas_usage_count }\n                  address={ data.hash }\n                />\n              ) }\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n\n        { data.has_validated_blocks && (\n          <>\n            <DetailsInfoItem.Label\n              hint={ `Number of blocks ${ getNetworkValidationActionText() } by this ${ getNetworkValidatorTitle() }` }\n              isLoading={ addressQuery.isPlaceholderData || countersQuery.isPlaceholderData }\n            >\n              { `Blocks ${ getNetworkValidationActionText() }` }\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              { addressQuery.data ? (\n                <AddressCounterItem\n                  prop=\"validations_count\"\n                  query={ countersQuery }\n                  address={ data.hash }\n                  onClick={ handleCounterItemClick }\n                  isAddressQueryLoading={ addressQuery.isPlaceholderData }\n                  isDegradedData={ addressQuery.isDegradedData }\n                />\n              ) :\n                0 }\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n\n        { data.block_number_balance_updated_at && (\n          <>\n            <DetailsInfoItem.Label\n              hint=\"Block number in which the address was updated\"\n              isLoading={ addressQuery.isPlaceholderData }\n            >\n              Last balance update\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              <BlockEntity\n                number={ data.block_number_balance_updated_at }\n                isLoading={ addressQuery.isPlaceholderData }\n              />\n            </DetailsInfoItem.Value>\n          </>\n        ) }\n      </Grid>\n    </>\n  );\n};\n\nexport default React.memo(AddressDetails);\n","import { Flex, Td, Tr, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressEpochRewardsItem } from 'types/api/address';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport EpochRewardTypeTag from 'ui/shared/EpochRewardTypeTag';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\n type Props = {\n   item: AddressEpochRewardsItem;\n   isLoading?: boolean;\n };\n\nconst AddressEpochRewardsTableItem = ({ item, isLoading }: Props) => {\n  const { valueStr } = getCurrencyValue({ value: item.amount, decimals: item.token.decimals });\n  return (\n    <Tr>\n      <Td verticalAlign=\"middle\">\n        <Flex alignItems=\"center\" gap={ 3 }>\n          <BlockEntity number={ item.block_number } isLoading={ isLoading } noIcon fontWeight={ 600 }/>\n          <Skeleton isLoaded={ !isLoading }>\n            <Text color=\"text_secondary\" fontWeight={ 600 }>{ `Epoch # ${ item.epoch_number }` }</Text>\n          </Skeleton>\n          <TimeAgoWithTooltip timestamp={ item.block_timestamp } isLoading={ isLoading } textColor=\"text_secondary\" fontWeight={ 400 }/>\n        </Flex>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <EpochRewardTypeTag type={ item.type } isLoading={ isLoading }/>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <AddressEntity address={ item.associated_account } isLoading={ isLoading } truncation=\"constant\"/>\n      </Td>\n      <Td verticalAlign=\"middle\" isNumeric>\n        <Skeleton isLoaded={ !isLoading } display=\"flex\" alignItems=\"center\" gap={ 2 } justifyContent=\"flex-end\">\n          { valueStr }\n          <TokenEntity token={ item.token } isLoading={ isLoading } onlySymbol width=\"auto\" noCopy/>\n        </Skeleton>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default AddressEpochRewardsTableItem;\n","import { Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressEpochRewardsItem } from 'types/api/address';\n\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport AddressEpochRewardsTableItem from './AddressEpochRewardsTableItem';\n\n type Props = {\n   items: Array<AddressEpochRewardsItem>;\n   isLoading?: boolean;\n   top: number;\n };\n\nconst AddressEpochRewardsTable = ({ items, isLoading, top }: Props) => {\n  return (\n    <Table minW=\"1000px\" style={{ tableLayout: 'auto' }}>\n      <Thead top={ top }>\n        <Tr>\n          <Th>Block</Th>\n          <Th>Reward type</Th>\n          <Th>Associated address</Th>\n          <Th isNumeric>Value</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { items.map((item, index) => {\n          return (\n            <AddressEpochRewardsTableItem\n              key={ item.block_hash + item.type + item.account.hash + item.associated_account.hash + (isLoading ? String(index) : '') }\n              item={ item }\n              isLoading={ isLoading }\n            />\n          );\n        }) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default AddressEpochRewardsTable;\n","import React from 'react';\n\nimport type { AddressEpochRewardsItem } from 'types/api/address';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport EpochRewardTypeTag from 'ui/shared/EpochRewardTypeTag';\nimport ListItemMobileGrid from 'ui/shared/ListItemMobile/ListItemMobileGrid';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = {\n  item: AddressEpochRewardsItem;\n  isLoading?: boolean;\n};\n\nconst AddressEpochRewardsListItem = ({ item, isLoading }: Props) => {\n  const { valueStr } = getCurrencyValue({ value: item.amount, accuracy: 2, decimals: item.token.decimals });\n  return (\n    <ListItemMobileGrid.Container gridTemplateColumns=\"100px auto\">\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Block</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <BlockEntity\n          number={ Number(item.block_number) }\n          isLoading={ isLoading }\n          noIcon\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Epoch #</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading }>\n          { item.epoch_number }\n        </Skeleton>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Age</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <TimeAgoWithTooltip\n          timestamp={ item.block_timestamp }\n          isLoading={ isLoading }\n          color=\"text_secondary\"\n          display=\"inline-block\"\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Reward type</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <EpochRewardTypeTag type={ item.type } isLoading={ isLoading }/>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Associated address</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <AddressEntity\n          address={ item.associated_account }\n          isLoading={ isLoading }\n        />\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Value</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"flex\" alignItems=\"center\" gap={ 2 }>\n          { valueStr }\n          <TokenEntity token={ item.token } isLoading={ isLoading } onlySymbol width=\"auto\" noCopy/>\n        </Skeleton>\n      </ListItemMobileGrid.Value>\n\n    </ListItemMobileGrid.Container>\n  );\n};\n\nexport default AddressEpochRewardsListItem;\n","import { Hide, Show } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { EPOCH_REWARD_ITEM } from 'stubs/address';\nimport { generateListStub } from 'stubs/utils';\nimport AddressEpochRewardsTable from 'ui/address/epochRewards/AddressEpochRewardsTable';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\n\nimport AddressCsvExportLink from './AddressCsvExportLink';\nimport AddressEpochRewardsListItem from './epochRewards/AddressEpochRewardsListItem';\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressEpochRewards = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const hash = getQueryParamString(router.query.hash);\n\n  const rewardsQuery = useQueryWithPages({\n    resourceName: 'address_epoch_rewards',\n    pathParams: {\n      hash,\n    },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled && Boolean(hash),\n      placeholderData: generateListStub<'address_epoch_rewards'>(EPOCH_REWARD_ITEM, 50, { next_page_params: {\n        amount: '1',\n        items_count: 50,\n        type: 'voter',\n        associated_account_address_hash: '1',\n        block_number: 10355938,\n      } }),\n    },\n  });\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const content = rewardsQuery.data?.items ? (\n    <>\n      <Hide below=\"lg\" ssr={ false }>\n        <AddressEpochRewardsTable\n          items={ rewardsQuery.data.items }\n          top={ rewardsQuery.pagination.isVisible ? ACTION_BAR_HEIGHT_DESKTOP : 0 }\n          isLoading={ rewardsQuery.isPlaceholderData }\n        />\n      </Hide>\n      <Show below=\"lg\" ssr={ false }>\n        { rewardsQuery.data.items.map((item, index) => (\n          <AddressEpochRewardsListItem\n            key={ item.block_hash + item.type + item.account.hash + item.associated_account.hash + (rewardsQuery.isPlaceholderData ? String(index) : '') }\n            item={ item }\n            isLoading={ rewardsQuery.isPlaceholderData }\n          />\n        )) }\n      </Show>\n    </>\n  ) : null;\n\n  const actionBar = rewardsQuery.pagination.isVisible ? (\n    <ActionBar mt={ -6 }>\n      <AddressCsvExportLink\n        address={ hash }\n        isLoading={ rewardsQuery.pagination.isLoading }\n        params={{ type: 'epoch-rewards' }}\n        ml={{ lg: 'auto' }}\n      />\n      <Pagination ml={{ base: 0, lg: 8 }} { ...rewardsQuery.pagination }/>\n    </ActionBar>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ rewardsQuery.isError }\n      items={ rewardsQuery.data?.items }\n      emptyText=\"There are no epoch rewards for this address.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default AddressEpochRewards;\n","import { Tr, Td, Box, Flex } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { InternalTransaction } from 'types/api/internalTransaction';\n\nimport config from 'configs/app';\nimport AddressFromTo from 'ui/shared/address/AddressFromTo';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport Tag from 'ui/shared/chakra/Tag';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TxEntity from 'ui/shared/entities/tx/TxEntity';\nimport TxStatus from 'ui/shared/statusTag/TxStatus';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\nimport { TX_INTERNALS_ITEMS } from 'ui/tx/internals/utils';\n\ntype Props = InternalTransaction & { currentAddress: string; isLoading?: boolean };\n\nconst AddressIntTxsTableItem = ({\n  type,\n  from,\n  to,\n  value,\n  success,\n  error,\n  created_contract: createdContract,\n  transaction_hash: txnHash,\n  block_number: blockNumber,\n  timestamp,\n  currentAddress,\n  isLoading,\n}: Props) => {\n  const typeTitle = TX_INTERNALS_ITEMS.find(({ id }) => id === type)?.title;\n  const toData = to ? to : createdContract;\n\n  return (\n    <Tr alignItems=\"top\">\n      <Td verticalAlign=\"middle\">\n        <Flex rowGap={ 3 } flexWrap=\"wrap\">\n          <TxEntity\n            hash={ txnHash }\n            isLoading={ isLoading }\n            noIcon\n            truncation=\"constant_long\"\n          />\n          <TimeAgoWithTooltip\n            timestamp={ timestamp }\n            enableIncrement\n            isLoading={ isLoading }\n            color=\"text_secondary\"\n            fontWeight=\"400\"\n            fontSize=\"sm\"\n          />\n        </Flex>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Flex rowGap={ 2 } flexWrap=\"wrap\">\n          { typeTitle && (\n            <Box w=\"126px\" display=\"inline-block\">\n              <Tag colorScheme=\"cyan\" mr={ 5 } isLoading={ isLoading }>{ typeTitle }</Tag>\n            </Box>\n          ) }\n          <TxStatus status={ success ? 'ok' : 'error' } errorText={ error } isLoading={ isLoading }/>\n        </Flex>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <BlockEntity\n          isLoading={ isLoading }\n          number={ blockNumber }\n          noIcon\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          fontWeight={ 500 }\n        />\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <AddressFromTo\n          from={ from }\n          to={ toData }\n          current={ currentAddress }\n          isLoading={ isLoading }\n        />\n      </Td>\n      <Td isNumeric verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\" minW={ 6 }>\n          { BigNumber(value).div(BigNumber(10 ** config.chain.currency.decimals)).toFormat() }\n        </Skeleton>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default React.memo(AddressIntTxsTableItem);\n","import { Table, Tbody, Tr, Th } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { InternalTransaction } from 'types/api/internalTransaction';\n\nimport { AddressHighlightProvider } from 'lib/contexts/addressHighlight';\nimport { currencyUnits } from 'lib/units';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport AddressIntTxsTableItem from './AddressIntTxsTableItem';\n\ninterface Props {\n  data: Array<InternalTransaction>;\n  currentAddress: string;\n  isLoading?: boolean;\n}\n\nconst AddressIntTxsTable = ({ data, currentAddress, isLoading }: Props) => {\n  return (\n    <AddressHighlightProvider>\n      <Table>\n        <Thead top={ 68 }>\n          <Tr>\n            <Th width=\"15%\">Parent txn hash</Th>\n            <Th width=\"15%\">Type</Th>\n            <Th width=\"10%\">Block</Th>\n            <Th width=\"40%\">From/To</Th>\n            <Th width=\"20%\" isNumeric>\n              Value { currencyUnits.ether }\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { data.map((item, index) => (\n            <AddressIntTxsTableItem\n              key={ item.transaction_hash + '_' + index }\n              { ...item }\n              currentAddress={ currentAddress }\n              isLoading={ isLoading }\n            />\n          )) }\n        </Tbody>\n      </Table>\n    </AddressHighlightProvider>\n\n  );\n};\n\nexport default AddressIntTxsTable;\n","import React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\n\nimport useIsInitialLoading from 'lib/hooks/useIsInitialLoading';\nimport PopoverFilterRadio from 'ui/shared/filters/PopoverFilterRadio';\n\nconst OPTIONS = [\n  { value: 'all', label: 'All' },\n  { value: 'from', label: 'Outgoing transactions' },\n  { value: 'to', label: 'Incoming transactions' },\n];\n\ninterface Props {\n  hasActiveFilter: boolean;\n  defaultFilter: AddressFromToFilter;\n  onFilterChange: (nextValue: string | Array<string>) => void;\n  isLoading?: boolean;\n}\n\nconst AddressTxsFilter = ({ onFilterChange, defaultFilter, hasActiveFilter, isLoading }: Props) => {\n  const isInitialLoading = useIsInitialLoading(isLoading);\n\n  return (\n    <PopoverFilterRadio\n      name=\"txs_filter\"\n      options={ OPTIONS }\n      onChange={ onFilterChange }\n      hasActiveFilter={ hasActiveFilter }\n      isLoading={ isInitialLoading }\n      defaultValue={ defaultFilter || OPTIONS[0].value }\n    />\n  );\n};\n\nexport default React.memo(AddressTxsFilter);\n","import { Flex, HStack } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { InternalTransaction } from 'types/api/internalTransaction';\n\nimport config from 'configs/app';\nimport { currencyUnits } from 'lib/units';\nimport AddressFromTo from 'ui/shared/address/AddressFromTo';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport Tag from 'ui/shared/chakra/Tag';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TxEntity from 'ui/shared/entities/tx/TxEntity';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\nimport TxStatus from 'ui/shared/statusTag/TxStatus';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\nimport { TX_INTERNALS_ITEMS } from 'ui/tx/internals/utils';\n\ntype Props = InternalTransaction & { currentAddress: string; isLoading?: boolean };\n\nconst TxInternalsListItem = ({\n  type,\n  from,\n  to,\n  value,\n  success,\n  error,\n  created_contract: createdContract,\n  transaction_hash: txnHash,\n  block_number: blockNumber,\n  timestamp,\n  currentAddress,\n  isLoading,\n}: Props) => {\n  const typeTitle = TX_INTERNALS_ITEMS.find(({ id }) => id === type)?.title;\n  const toData = to ? to : createdContract;\n\n  return (\n    <ListItemMobile rowGap={ 3 }>\n      <Flex columnGap={ 2 }>\n        { typeTitle && <Tag colorScheme=\"cyan\" isLoading={ isLoading }>{ typeTitle }</Tag> }\n        <TxStatus status={ success ? 'ok' : 'error' } errorText={ error } isLoading={ isLoading }/>\n      </Flex>\n      <Flex justifyContent=\"space-between\" width=\"100%\">\n        <TxEntity\n          hash={ txnHash }\n          isLoading={ isLoading }\n          truncation=\"constant_long\"\n        />\n        <TimeAgoWithTooltip\n          timestamp={ timestamp }\n          isLoading={ isLoading }\n          color=\"text_secondary\"\n          fontWeight=\"400\"\n          fontSize=\"sm\"\n        />\n      </Flex>\n      <HStack spacing={ 1 }>\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>Block</Skeleton>\n        <BlockEntity\n          isLoading={ isLoading }\n          number={ blockNumber }\n          noIcon\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n        />\n      </HStack>\n      <AddressFromTo\n        from={ from }\n        to={ toData }\n        current={ currentAddress }\n        isLoading={ isLoading }\n        w=\"100%\"\n      />\n      <HStack spacing={ 3 }>\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>Value { currencyUnits.ether }</Skeleton>\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" color=\"text_secondary\" minW={ 6 }>\n          <span>{ BigNumber(value).div(BigNumber(10 ** config.chain.currency.decimals)).toFormat() }</span>\n        </Skeleton>\n      </HStack>\n    </ListItemMobile>\n  );\n};\n\nexport default TxInternalsListItem;\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { InternalTransaction } from 'types/api/internalTransaction';\n\nimport AddressIntTxsListItem from 'ui/address/internals/AddressIntTxsListItem';\n\ntype Props = {\n  data: Array<InternalTransaction>;\n  currentAddress: string;\n  isLoading?: boolean;\n};\n\nconst AddressIntTxsList = ({ data, currentAddress, isLoading }: Props) => {\n  return (\n    <Box>\n      { data.map((item, index) => (\n        <AddressIntTxsListItem\n          key={ item.transaction_hash + '_' + index }\n          { ...item }\n          currentAddress={ currentAddress }\n          isLoading={ isLoading }\n        />\n      )) }\n    </Box>\n  );\n};\n\nexport default AddressIntTxsList;\n","import { Show, Hide } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\nimport { AddressFromToFilterValues } from 'types/api/address';\n\nimport getFilterValueFromQuery from 'lib/getFilterValueFromQuery';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport { apos } from 'lib/html-entities';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { INTERNAL_TX } from 'stubs/internalTx';\nimport { generateListStub } from 'stubs/utils';\nimport AddressIntTxsTable from 'ui/address/internals/AddressIntTxsTable';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\n\nimport AddressCsvExportLink from './AddressCsvExportLink';\nimport AddressTxsFilter from './AddressTxsFilter';\nimport AddressIntTxsList from './internals/AddressIntTxsList';\n\nconst getFilterValue = (getFilterValueFromQuery<AddressFromToFilter>).bind(null, AddressFromToFilterValues);\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\nconst AddressInternalTxs = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const [ filterValue, setFilterValue ] = React.useState<AddressFromToFilter>(getFilterValue(router.query.filter));\n\n  const hash = getQueryParamString(router.query.hash);\n\n  const { data, isPlaceholderData, isError, pagination, onFilterChange } = useQueryWithPages({\n    resourceName: 'address_internal_txs',\n    pathParams: { hash },\n    filters: { filter: filterValue },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'address_internal_txs'>(\n        INTERNAL_TX,\n        50,\n        {\n          next_page_params: {\n            block_number: 8987561,\n            index: 2,\n            items_count: 50,\n            transaction_index: 67,\n          },\n        },\n      ),\n    },\n  });\n\n  const handleFilterChange = React.useCallback((val: string | Array<string>) => {\n    const newVal = getFilterValue(val);\n    setFilterValue(newVal);\n    onFilterChange({ filter: newVal });\n  }, [ onFilterChange ]);\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const content = data?.items ? (\n    <>\n      <Show below=\"lg\" ssr={ false }>\n        <AddressIntTxsList data={ data.items } currentAddress={ hash } isLoading={ isPlaceholderData }/>\n      </Show>\n      <Hide below=\"lg\" ssr={ false }>\n        <AddressIntTxsTable data={ data.items } currentAddress={ hash } isLoading={ isPlaceholderData }/>\n      </Hide>\n    </>\n  ) : null ;\n\n  const actionBar = (\n    <ActionBar mt={ -6 } justifyContent=\"left\">\n      <AddressTxsFilter\n        defaultFilter={ filterValue }\n        onFilterChange={ handleFilterChange }\n        hasActiveFilter={ Boolean(filterValue) }\n        isLoading={ pagination.isLoading }\n      />\n      <AddressCsvExportLink\n        address={ hash }\n        isLoading={ pagination.isLoading }\n        params={{ type: 'internal-transactions', filterType: 'address', filterValue }}\n        ml={{ base: 2, lg: 'auto' }}\n      />\n      <Pagination ml={{ base: 'auto', lg: 8 }} { ...pagination }/>\n    </ActionBar>\n  );\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      filterProps={{ emptyFilteredText: `Couldn${ apos }t find any transaction that matches your query.`, hasActiveFilters: Boolean(filterValue) }}\n      emptyText=\"There are no internal transactions for this address.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default AddressInternalTxs;\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { Address } from 'types/api/address';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { retry } from 'lib/api/useQueryClientConfig';\nimport { SECOND } from 'lib/consts';\nimport { publicClient } from 'lib/web3/client';\nimport { ADDRESS_INFO } from 'stubs/address';\nimport { GET_BALANCE } from 'stubs/RPC';\n\ntype RpcResponseType = [\n    bigint | null,\n];\n\nexport type AddressQuery = UseQueryResult<Address, ResourceError<{ status: number }>> & {\n  isDegradedData: boolean;\n};\n\ninterface Params {\n  hash: string;\n  isEnabled?: boolean;\n}\n\nconst NO_RPC_FALLBACK_ERROR_CODES = [ 403 ];\n\nexport default function useAddressQuery({ hash, isEnabled = true }: Params): AddressQuery {\n  const [ isRefetchEnabled, setRefetchEnabled ] = React.useState(false);\n\n  const apiQuery = useApiQuery<'address', { status: number }>('address', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: isEnabled && Boolean(hash),\n      placeholderData: ADDRESS_INFO,\n      refetchOnMount: false,\n      retry: (failureCount, error) => {\n        if (isRefetchEnabled) {\n          return false;\n        }\n\n        return retry(failureCount, error);\n      },\n      refetchInterval: (): number | false => {\n        return isRefetchEnabled ? 15 * SECOND : false;\n      },\n    },\n  });\n\n  const rpcQuery = useQuery<RpcResponseType, unknown, Address | null>({\n    queryKey: [ 'RPC', 'address', { hash } ],\n    queryFn: async() => {\n      if (!publicClient) {\n        throw new Error('No public RPC client');\n      }\n\n      const balance = publicClient.getBalance({ address: hash as `0x${ string }` }).catch(() => null);\n\n      return Promise.all([\n        balance,\n      ]);\n    },\n    select: (response) => {\n      const [ balance ] = response;\n\n      if (!balance) {\n        return null;\n      }\n\n      return {\n        hash,\n        block_number_balance_updated_at: null,\n        coin_balance: balance.toString(),\n        creator_address_hash: null,\n        creation_transaction_hash: null,\n        exchange_rate: null,\n        ens_domain_name: null,\n        has_decompiled_code: false,\n        has_logs: false,\n        has_token_transfers: false,\n        has_tokens: false,\n        has_validated_blocks: false,\n        implementations: null,\n        is_contract: false,\n        is_verified: false,\n        name: null,\n        token: null,\n        watchlist_address_id: null,\n        private_tags: null,\n        public_tags: null,\n        watchlist_names: null,\n      };\n    },\n    placeholderData: [ GET_BALANCE ],\n    enabled: (apiQuery.isError || apiQuery.errorUpdateCount > 0) && !(apiQuery.error?.status && NO_RPC_FALLBACK_ERROR_CODES.includes(apiQuery.error?.status)),\n    retry: false,\n    refetchOnMount: false,\n  });\n\n  React.useEffect(() => {\n    if (apiQuery.isPlaceholderData || !publicClient) {\n      return;\n    }\n\n    if (apiQuery.isError && apiQuery.errorUpdateCount === 1) {\n      setRefetchEnabled(true);\n    } else if (!apiQuery.isError) {\n      setRefetchEnabled(false);\n    }\n  }, [ apiQuery.errorUpdateCount, apiQuery.isError, apiQuery.isPlaceholderData, apiQuery.error?.status ]);\n\n  React.useEffect(() => {\n    if (!rpcQuery.isPlaceholderData && !rpcQuery.data) {\n      setRefetchEnabled(false);\n    }\n  }, [ rpcQuery.data, rpcQuery.isPlaceholderData ]);\n\n  const isRpcQuery = Boolean(\n\n    (apiQuery.isError || apiQuery.isPlaceholderData) &&\n    !(apiQuery.error?.status && NO_RPC_FALLBACK_ERROR_CODES.includes(apiQuery.error?.status)) &&\n    !NO_RPC_FALLBACK_ERROR_CODES.includes(apiQuery.error?.status ?? 999) &&\n    apiQuery.errorUpdateCount > 0 &&\n    rpcQuery.data &&\n    publicClient,\n  );\n\n  const query = isRpcQuery ? rpcQuery as UseQueryResult<Address, ResourceError<{ status: number }>> : apiQuery;\n\n  return {\n    ...query,\n    isDegradedData: isRpcQuery,\n  };\n}\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { LOG } from 'stubs/log';\nimport { generateListStub } from 'stubs/utils';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport LogItem from 'ui/shared/logs/LogItem';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\n\nimport AddressCsvExportLink from './AddressCsvExportLink';\nimport useAddressQuery from './utils/useAddressQuery';\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressLogs = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const hash = getQueryParamString(router.query.hash);\n  const { data, isPlaceholderData, isError, pagination } = useQueryWithPages({\n    resourceName: 'address_logs',\n    pathParams: { hash },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'address_logs'>(LOG, 3, { next_page_params: {\n        block_number: 9005750,\n        index: 42,\n        items_count: 50,\n        transaction_index: 23,\n      } }),\n    },\n  });\n\n  const addressQuery = useAddressQuery({ hash });\n\n  const actionBar = (\n    <ActionBar mt={ -6 } showShadow justifyContent={{ base: 'space-between', lg: 'end' }}>\n      <AddressCsvExportLink\n        address={ hash }\n        isLoading={ pagination.isLoading }\n        params={{ type: 'logs' }}\n      />\n      <Pagination ml={{ base: 0, lg: 8 }} { ...pagination }/>\n    </ActionBar>\n  );\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const content = data?.items ? data.items.map((item, index) => (\n    <LogItem\n      key={ index }\n      { ...item }\n      type=\"address\"\n      isLoading={ isPlaceholderData }\n      defaultDataType={ addressQuery.data?.zilliqa?.is_scilla_contract ? 'UTF-8' : undefined }\n    />\n  )) : null;\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no logs for this address.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default AddressLogs;\n","import { Box, useColorModeValue, chakra, Grid } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport isBrowser from 'lib/isBrowser';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\nimport useAddressQuery from '../utils/useAddressQuery';\n\ntype TableViewProps = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  className?: string;\n  hash: string;\n  tableId: string;\n  tableName: string;\n};\n\ntype RecordViewProps = TableViewProps & {\n  recordId: string;\n  recordName: string;\n};\n\ntype BreadcrumbItemProps = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  text: string;\n  href: string;\n  isLast?: boolean;\n};\n\nconst BreadcrumbItem = ({ text, href, isLast, scrollRef }: BreadcrumbItemProps) => {\n  const iconColor = useColorModeValue('gray.300', 'gray.600');\n\n  const currentUrl = isBrowser() ? window.location.href : '';\n\n  const onLinkClick = React.useCallback(() => {\n    window.setTimeout(() => {\n      // cannot do scroll instantly, have to wait a little\n      scrollRef?.current?.scrollIntoView({ behavior: 'smooth' });\n    }, 500);\n  }, [ scrollRef ]);\n\n  if (isLast) {\n    return (\n      <Grid gap={ 2 } overflow=\"hidden\" templateColumns=\"auto 24px\" alignItems=\"center\">\n        <Box\n          overflow=\"hidden\"\n          whiteSpace=\"nowrap\"\n          textOverflow=\"ellipsis\"\n        >\n          { text }\n        </Box>\n        <CopyToClipboard text={ currentUrl } type=\"link\" mx={ 0 } color=\"text_secondary\"/>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid gap={ 2 } overflow=\"hidden\" templateColumns=\"auto 24px\" alignItems=\"center\">\n      <LinkInternal\n        href={ href }\n        onClick={ onLinkClick }\n        overflow=\"hidden\"\n        textOverflow=\"ellipsis\"\n        whiteSpace=\"nowrap\"\n      >\n        { text }\n      </LinkInternal>\n      { !isLast && <IconSvg name=\"arrows/east\" boxSize={ 6 } color={ iconColor }/> }\n    </Grid>\n  );\n};\n\nconst AddressMudBreadcrumbs = (props: TableViewProps | RecordViewProps) => {\n  const queryParams = { tab: 'mud', hash: props.hash };\n  const isMobile = useIsMobile();\n\n  const addressQuery = useAddressQuery({ hash: props.hash });\n\n  return (\n    <Box\n      display={ isMobile ? 'flex' : 'grid' }\n      flexWrap=\"wrap\"\n      gridTemplateColumns=\"20px auto auto auto\"\n      gap={ 2 }\n      alignItems=\"center\"\n      className={ props.className }\n      width=\"fit-content\"\n      fontSize=\"sm\"\n    >\n      <IconSvg name=\"MUD\" boxSize={ 5 } color={ addressQuery.data?.is_verified ? 'green.500' : 'text_secondary' }/>\n      <BreadcrumbItem\n        text=\"MUD World\"\n        href={ route({ pathname: '/address/[hash]', query: queryParams }) }\n        scrollRef={ props.scrollRef }\n      />\n      <BreadcrumbItem\n        text={ props.tableName }\n        href={ route({ pathname: '/address/[hash]', query: { ...queryParams, table_id: props.tableId } }) }\n        isLast={ !('recordId' in props) }\n        scrollRef={ props.scrollRef }\n      />\n      { ('recordId' in props) && (\n        <BreadcrumbItem\n          text={ props.recordName }\n          href={ route({ pathname: '/address/[hash]', query: { ...queryParams, table_id: props.tableId, record_id: props.recordId } }) }\n          isLast\n          scrollRef={ props.scrollRef }\n\n        />\n      ) }\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(AddressMudBreadcrumbs));\n","import capitalizeFirstLetter from 'lib/capitalizeFirstLetter';\n\nexport const SORT_SEQUENCE: Record<'key0' | 'key1', Array<'desc' | 'asc' | undefined>> = {\n  key0: [ 'desc', 'asc', undefined ],\n  key1: [ 'desc', 'asc', undefined ],\n};\n\nexport const getNameTypeText = (name: string, type: string) => {\n  return capitalizeFirstLetter(name) + ' (' + type + ')';\n};\n\nexport const getValueString = (value: string | Array<string>) => {\n  if (Array.isArray(value)) {\n    return value.join(', ');\n  }\n\n  return value.toString();\n};\n","import { Box, Td, Tr, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressMudRecord } from 'types/api/address';\n\nimport { getValueString } from './utils';\n\ntype Props = {\n  data?: AddressMudRecord;\n};\n\nconst AddressMudRecordValues = ({ data }: Props) => {\n  const valuesBgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  if (!data?.schema.value_names.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tr backgroundColor={ valuesBgColor } borderBottomStyle=\"hidden\" >\n        <Td fontWeight={ 600 } w=\"100px\" fontSize=\"sm\">Field</Td>\n        <Td fontWeight={ 600 } w=\"90px\" fontSize=\"sm\">Type</Td>\n        <Td fontWeight={ 600 } fontSize=\"sm\">Value</Td>\n      </Tr>\n      {\n        data?.schema.value_names.map((valName, index) => (\n          <Tr key={ valName } backgroundColor={ valuesBgColor } borderBottomStyle=\"hidden\">\n            <Td fontWeight={ 400 } w=\"100px\" py={ 0 } pb={ 4 } pr={ 0 }wordBreak=\"break-all\">{ valName }</Td>\n            <Td fontWeight={ 400 } w=\"90px\" py={ 0 } pb={ 4 } wordBreak=\"break-all\">{ data.schema.value_types[index] }</Td>\n            <Td fontWeight={ 400 } wordBreak=\"break-word\" py={ 0 } pb={ 4 }>\n              <Box>\n                { getValueString(data.record.decoded[valName]) }\n              </Box>\n            </Td>\n          </Tr>\n        ))\n      }\n    </>\n  );\n};\n\nexport default AddressMudRecordValues;\n","import { Box, Td, Tr, Flex, Text, Table, Show, Hide, Divider, VStack } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport dayjs from 'lib/date/dayjs';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport ContentLoader from 'ui/shared/ContentLoader';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\n\nimport AddressMudBreadcrumbs from './AddressMudBreadcrumbs';\nimport AddressMudRecordValues from './AddressMudRecordValues';\nimport { getValueString } from './utils';\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  isQueryEnabled?: boolean;\n  tableId: string;\n  recordId: string;\n};\n\nconst AddressMudRecord = ({ tableId, recordId, isQueryEnabled = true, scrollRef }: Props) => {\n  const router = useRouter();\n\n  const hash = getQueryParamString(router.query.hash);\n\n  const { data, isLoading, isError } = useApiQuery('address_mud_record', {\n    pathParams: { hash, table_id: tableId, record_id: recordId },\n    queryOptions: {\n      enabled: isQueryEnabled,\n    },\n  });\n\n  if (isLoading) {\n    return <ContentLoader/>;\n  }\n\n  if (isError) {\n    return <DataFetchAlert/>;\n  }\n\n  return (\n    <>\n      { data && (\n        <AddressMudBreadcrumbs\n          hash={ hash }\n          tableId={ tableId }\n          tableName={ data?.table.table_full_name }\n          recordId={ recordId }\n          recordName={ data.record.id }\n          mb={ 6 }\n          scrollRef={ scrollRef }\n        />\n      ) }\n      <Show above=\"lg\" ssr={ false }>\n        <Table borderRadius=\"8px\" style={{ tableLayout: 'auto' }} width=\"100%\" overflow=\"hidden\">\n          { data?.schema.key_names.length && data?.schema.key_names.map((keyName, index) => (\n            <Tr key={ keyName } borderBottomStyle={ index === data.schema.key_names.length - 1 ? 'hidden' : 'solid' }>\n              <Td fontWeight={ 600 } whiteSpace=\"nowrap\" fontSize=\"sm\">\n                { keyName } ({ data.schema.key_types[index] })\n              </Td>\n              <Td colSpan={ 2 } fontSize=\"sm\">\n                <Flex justifyContent=\"space-between\">\n                  <TruncatedValue value={ getValueString(data.record.decoded[keyName]) } mr={ 2 }/>\n                  { index === 0 && <Box color=\"text_secondary\">{ dayjs(data.record.timestamp).format('lll') }</Box> }\n                </Flex>\n              </Td>\n            </Tr>\n          )) }\n          <AddressMudRecordValues data={ data }/>\n        </Table>\n      </Show>\n      <Hide above=\"lg\" ssr={ false }>\n        <>\n          { data?.schema.key_names.length && data?.schema.key_names.map((keyName, index) => (\n            <VStack gap={ 1 } key={ keyName } alignItems=\"start\" fontSize=\"sm\">\n              <Divider/>\n              <Text fontWeight={ 600 } whiteSpace=\"nowrap\">\n                { keyName } ({ data.schema.key_types[index] })\n              </Text>\n              <Text wordBreak=\"break-word\">{ getValueString(data.record.decoded[keyName]) }</Text>\n              { index === 0 && <Box color=\"text_secondary\">{ dayjs(data.record.timestamp).format('lll') }</Box> }\n            </VStack>\n          )) }\n          <Table borderRadius=\"8px\" style={{ tableLayout: 'auto' }} width=\"100%\" mt={ 2 } overflow=\"hidden\">\n            <AddressMudRecordValues data={ data }/>\n          </Table>\n        </>\n      </Hide>\n    </>\n  );\n};\n\nexport default AddressMudRecord;\n","import type { Query } from 'nextjs-routes';\n\nimport getQueryParamString from 'lib/router/getQueryParamString';\n\nexport default function getSortParamsFromQuery<T>(query: Query, sortOptions: Record<string, Array<string | undefined>>) {\n  if (!query.sort || !query.order) {\n    return undefined;\n  }\n\n  const sortStr = getQueryParamString(query.sort);\n\n  if (!Object.keys(sortOptions).includes(sortStr)) {\n    return undefined;\n  }\n\n  const orderStr = getQueryParamString(query.order);\n\n  if (!sortOptions[sortStr].includes(orderStr)) {\n    return undefined;\n  }\n\n  return ({ sort: sortStr, order: orderStr } as T);\n}\n","import React from 'react';\n\nimport FilterInput from 'ui/shared/filters/FilterInput';\nimport TableColumnFilter from 'ui/shared/filters/TableColumnFilter';\n\ntype Props = {\n  value?: string;\n  handleFilterChange: (val: string) => void;\n  title: string;\n  columnName: string;\n  onClose?: () => void;\n};\n\nconst AddressMudRecordsKeyFilter = ({ value = '', handleFilterChange, columnName, title, onClose }: Props) => {\n  const [ filterValue, setFilterValue ] = React.useState<string>(value);\n\n  const onFilter = React.useCallback(() => {\n    handleFilterChange(filterValue);\n  }, [ handleFilterChange, filterValue ]);\n\n  return (\n    <TableColumnFilter\n      title={ title }\n      isFilled={ filterValue !== value }\n      onFilter={ onFilter }\n      onClose={ onClose }\n    >\n      <FilterInput\n        initialValue={ value }\n        size=\"xs\"\n        onChange={ setFilterValue }\n        placeholder={ columnName }\n      />\n    </TableColumnFilter>\n  );\n};\n\nexport default AddressMudRecordsKeyFilter;\n","import React from 'react';\n\nimport TableColumnFilterWrapper from 'ui/shared/filters/TableColumnFilterWrapper';\n\nimport AddressMudRecordsKeyFilterContent from './AddressMudRecordsKeyFilterContent';\n\ntype Props = {\n  value?: string;\n  handleFilterChange: (val: string) => void;\n  title: string;\n  columnName: string;\n  isLoading?: boolean;\n};\n\nconst AddressMudRecordsKeyFilter = ({ value = '', handleFilterChange, columnName, title, isLoading }: Props) => {\n  return (\n    <TableColumnFilterWrapper\n      columnName={ columnName }\n      isActive={ Boolean(value) }\n      isLoading={ isLoading }\n      w=\"350px\"\n    >\n      <AddressMudRecordsKeyFilterContent\n        value={ value }\n        handleFilterChange={ handleFilterChange }\n        title={ title }\n        columnName={ columnName }\n      />\n    </TableColumnFilterWrapper>\n  );\n};\n\nexport default AddressMudRecordsKeyFilter;\n","import type { StyleProps } from '@chakra-ui/react';\nimport { Box, Link, Table, Tbody, Td, Th, Tr, Flex, useColorModeValue, useBoolean, Tooltip } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { AddressMudRecords, AddressMudRecordsFilter, AddressMudRecordsSorting } from 'types/api/address';\n\nimport { route } from 'nextjs-routes';\n\nimport capitalizeFirstLetter from 'lib/capitalizeFirstLetter';\nimport dayjs from 'lib/date/dayjs';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport AddressMudRecordsKeyFilter from './AddressMudRecordsKeyFilter';\nimport { getNameTypeText, getValueString } from './utils';\n\nconst COL_MIN_WIDTH = 180;\nconst COL_MIN_WIDTH_MOBILE = 140;\nconst CUT_COL_WIDTH = 36;\nconst MIN_CUT_COUNT = 2;\n\ntype Props = {\n  data: AddressMudRecords;\n  top: number;\n  sorting?: AddressMudRecordsSorting;\n  toggleSorting: (key: AddressMudRecordsSorting['sort']) => void;\n  setFilters: React.Dispatch<React.SetStateAction<AddressMudRecordsFilter>>;\n  filters: AddressMudRecordsFilter;\n  toggleTableHasHorizontalScroll: () => void;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  hash: string;\n};\n\nconst AddressMudRecordsTable = ({\n  data,\n  top,\n  sorting,\n  toggleSorting,\n  filters,\n  setFilters,\n  toggleTableHasHorizontalScroll,\n  scrollRef,\n  hash,\n}: Props) => {\n  const totalColsCut = data.schema.key_names.length + data.schema.value_names.length;\n  const isMobile = useIsMobile(false);\n  const [ colsCutCount, setColsCutCount ] = React.useState<number>(isMobile ? MIN_CUT_COUNT : 0);\n  const [ isOpened, setIsOpened ] = useBoolean(false);\n  const [ hasCut, setHasCut ] = useBoolean(isMobile ? totalColsCut > MIN_CUT_COUNT : true);\n\n  const containerRef = React.useRef<HTMLTableElement>(null);\n  const tableRef = React.useRef<HTMLTableElement>(null);\n\n  const router = useRouter();\n\n  const toggleIsOpen = React.useCallback(() => {\n    isOpened && tableRef.current?.scroll({ left: 0 });\n    setIsOpened.toggle();\n    toggleTableHasHorizontalScroll();\n  }, [ setIsOpened, toggleTableHasHorizontalScroll, isOpened ]);\n\n  const onRecordClick = React.useCallback((e: React.MouseEvent) => {\n    if (e.metaKey || e.ctrlKey) {\n      // Allow opening in a new tab/window with right-click or ctrl/cmd+click\n      return;\n    }\n\n    e.preventDefault();\n\n    const recordId = e.currentTarget.getAttribute('data-id');\n    if (recordId) {\n      router.push(\n        { pathname: '/address/[hash]', query: { hash, tab: 'mud', table_id: data.table.table_id, record_id: recordId } },\n        undefined,\n        { shallow: true },\n      );\n    }\n    scrollRef?.current?.scrollIntoView();\n  }, [ router, scrollRef, hash, data.table.table_id ]);\n\n  const handleFilterChange = React.useCallback((field: keyof AddressMudRecordsFilter) => (val: string) => {\n    setFilters(prev => {\n      const newVal = { ...prev };\n      newVal[field] = val;\n      return newVal;\n    });\n  }, [ setFilters ]);\n\n  const onKeySortClick = React.useCallback(\n    (e: React.MouseEvent) => toggleSorting('key' + e.currentTarget.getAttribute('data-id') as AddressMudRecordsSorting['sort']),\n    [ toggleSorting ],\n  );\n\n  const keyBgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  React.useEffect(() => {\n    if (hasCut && !colsCutCount && containerRef.current) {\n      const count = Math.floor((containerRef.current.getBoundingClientRect().width - CUT_COL_WIDTH) / COL_MIN_WIDTH);\n      if (totalColsCut > MIN_CUT_COUNT && count - 1 < totalColsCut) {\n        setColsCutCount(count - 1);\n      } else {\n        setHasCut.off();\n      }\n    }\n  }, [ colsCutCount, data.schema, hasCut, setHasCut, totalColsCut ]);\n\n  const colW = isMobile ? COL_MIN_WIDTH_MOBILE : COL_MIN_WIDTH;\n\n  const keys = (isOpened || !hasCut) ? data.schema.key_names : data.schema.key_names.slice(0, colsCutCount);\n  const values = (isOpened || !hasCut) ? data.schema.value_names : data.schema.value_names.slice(0, colsCutCount - data.schema.key_names.length);\n  const colsCount = (isOpened || !hasCut) ? totalColsCut : colsCutCount;\n\n  const tdStyles: StyleProps = {\n    wordBreak: 'break-word',\n    whiteSpace: 'normal',\n    minW: `${ colW }px`,\n    w: `${ 100 / colsCount }%`,\n    verticalAlign: 'top',\n    lineHeight: '20px',\n  };\n\n  const hasHorizontalScroll = isMobile || isOpened;\n\n  if (hasCut && !colsCutCount) {\n    return <Box w=\"100%\" ref={ containerRef }></Box>;\n  }\n\n  const cutButton = (\n    <Th width={ `${ CUT_COL_WIDTH }px ` } verticalAlign=\"baseline\">\n      <Tooltip label={ isOpened ? 'Hide columns' : 'Show all columns' }>\n        <Link onClick={ toggleIsOpen } aria-label=\"show/hide columns\">...</Link>\n      </Tooltip>\n    </Th>\n  );\n\n  return (\n    // can't implement both horizontal table scroll and sticky header\n    <Box maxW=\"100%\" overflowX={ hasHorizontalScroll ? 'scroll' : 'unset' } whiteSpace=\"nowrap\" ref={ tableRef }>\n      <Table style={{ tableLayout: 'fixed' }}>\n        <Thead top={ hasHorizontalScroll ? 0 : top } display={ hasHorizontalScroll ? 'table' : 'table-header-group' } w=\"100%\">\n          <Tr >\n            { keys.map((keyName, index) => {\n              const text = getNameTypeText(keyName, data.schema.key_types[index]);\n              return (\n                <Th key={ keyName } { ...tdStyles }>\n                  { index < 2 ? (\n                    <Flex alignItems=\"center\">\n                      <Link\n                        onClick={ onKeySortClick }\n                        data-id={ index }\n                        display=\"flex\"\n                        alignItems=\"start\"\n                        lineHeight=\"20px\"\n                        mr={ 2 }\n                      >\n                        { sorting?.sort === `key${ index }` && sorting.order && (\n                          <Box minW=\"24px\" w=\"24px\" mr={ 2 }>\n                            <IconSvg\n                              name=\"arrows/east\"\n                              boxSize={ 5 }\n                              transform={ sorting.order === 'asc' ? 'rotate(-90deg)' : 'rotate(90deg)' }\n                            />\n                          </Box>\n                        ) }\n                        { text }\n                      </Link>\n                      <Box minW=\"20px\" w=\"20px\">\n                        <AddressMudRecordsKeyFilter\n                          value={ filters[index === 0 ? 'filter_key0' : 'filter_key1'] }\n                          title={ text }\n                          columnName={ keyName }\n                          handleFilterChange={ handleFilterChange(index === 0 ? 'filter_key0' : 'filter_key1') }\n                        />\n                      </Box>\n                    </Flex>\n                  ) : text }\n                </Th>\n              );\n            }) }\n            { values.map((valName, index) => (\n              <Th key={ valName } { ...tdStyles }>\n                { capitalizeFirstLetter(valName) } ({ data.schema.value_types[index] })\n              </Th>\n            )) }\n            { hasCut && !isOpened && cutButton }\n            <Th { ...tdStyles } w={ `${ colW }px` }>Modified</Th>\n            { hasCut && isOpened && cutButton }\n          </Tr>\n        </Thead>\n        <Tbody display={ hasHorizontalScroll ? 'table' : 'table-row-group' } w=\"100%\">\n          { data.items.map((item) => (\n            <Tr key={ item.id }>\n              { keys.map((keyName, index) => (\n                <Td key={ keyName } backgroundColor={ keyBgColor } { ...tdStyles }>\n                  { index === 0 ? (\n                    <LinkInternal\n                      onClick={ onRecordClick }\n                      data-id={ item.id }\n                      fontWeight={ 700 }\n                      href={ route({ pathname: '/address/[hash]', query: { hash, tab: 'mud', table_id: data.table.table_id, record_id: item.id } }) }\n                    >\n                      { getValueString(item.decoded[keyName]) }\n                    </LinkInternal>\n                  ) : getValueString(item.decoded[keyName]) }\n                  <CopyToClipboard text={ item.decoded[keyName] }/>\n                </Td>\n              )) }\n              { values.map((valName) =>\n                <Td key={ valName } { ...tdStyles }>{ getValueString(item.decoded[valName]) }</Td>) }\n              { hasCut && !isOpened && <Td width={ `${ CUT_COL_WIDTH }px ` }></Td> }\n              <Td { ...tdStyles } color=\"text_secondary\" w={ `${ colW }px` }>{ dayjs(item.timestamp).format('lll') }</Td>\n              { hasCut && isOpened && <Td width={ `${ CUT_COL_WIDTH }px ` }></Td> }\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n    </Box>\n  );\n};\n\nexport default AddressMudRecordsTable;\n","import { Box, HStack, Tag, TagCloseButton, chakra, useBoolean } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { AddressMudRecordsFilter, AddressMudRecordsSorting } from 'types/api/address';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport { apos, nbsp } from 'lib/html-entities';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport ContentLoader from 'ui/shared/ContentLoader';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport { getNextOrderValue } from 'ui/shared/sort/getNextSortValue';\nimport getSortParamsFromQuery from 'ui/shared/sort/getSortParamsFromQuery';\n\nimport AddressMudBreadcrumbs from './AddressMudBreadcrumbs';\nimport AddressMudRecordsTable from './AddressMudRecordsTable';\nimport { getNameTypeText, SORT_SEQUENCE } from './utils';\n\nconst BREADCRUMBS_HEIGHT = 60;\nconst FILTERS_HEIGHT = 44;\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  isQueryEnabled?: boolean;\n  tableId: string;\n};\n\ntype FilterKeys = keyof AddressMudRecordsFilter;\n\nconst AddressMudTable = ({ scrollRef, tableId, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const [ sorting, setSorting ] =\n    React.useState<AddressMudRecordsSorting | undefined>(getSortParamsFromQuery<AddressMudRecordsSorting>(router.query, SORT_SEQUENCE));\n  const [ filters, setFilters ] = React.useState<AddressMudRecordsFilter>({});\n  const isMobile = useIsMobile();\n  const [ tableHasHorizontalScroll, setTableHasHorizontalScroll ] = useBoolean(isMobile);\n\n  const hash = getQueryParamString(router.query.hash);\n\n  const { data, isLoading, isError, pagination, onSortingChange } = useQueryWithPages({\n    resourceName: 'address_mud_records',\n    pathParams: { hash, table_id: tableId },\n    filters,\n    sorting,\n    scrollRef,\n    options: {\n      // no placeholder data because the structure of a table is unpredictable\n      enabled: isQueryEnabled,\n    },\n  });\n\n  const toggleSorting = React.useCallback((val: AddressMudRecordsSorting['sort']) => {\n    const newSorting = { sort: val, order: getNextOrderValue(sorting?.sort === val ? sorting.order : undefined) };\n    setSorting(newSorting);\n    onSortingChange(newSorting);\n  }, [ onSortingChange, sorting ]);\n\n  const onRemoveFilterClick = React.useCallback((key: FilterKeys) => () => {\n    setFilters(prev => {\n      const newFilters = { ...prev };\n      delete newFilters[key];\n      return newFilters;\n    });\n  }, []);\n\n  const hasActiveFilters = Object.values(filters).some(Boolean);\n\n  const actionBarHeight = React.useMemo(() => {\n    const heightWithoutFilters = pagination.isVisible ? ACTION_BAR_HEIGHT_DESKTOP : BREADCRUMBS_HEIGHT;\n\n    return hasActiveFilters ? heightWithoutFilters + FILTERS_HEIGHT : heightWithoutFilters;\n  }, [ pagination.isVisible, hasActiveFilters ]);\n\n  if (isLoading) {\n    return <ContentLoader/>;\n  }\n\n  const filtersTags = hasActiveFilters ? (\n    <HStack gap={ 3 } mb={ 1 } flexWrap=\"wrap\">\n      { Object.entries(filters).map(([ key, value ]) => {\n        const index = key as FilterKeys === 'filter_key0' ? 0 : 1;\n        return (\n          <Tag display=\"inline-flex\" key={ key } maxW=\"360px\" colorScheme=\"blue\">\n            <chakra.span color=\"text_secondary\" >{\n              getNameTypeText(data?.schema.key_names[index] || '', data?.schema.key_types[index] || '') }\n            </chakra.span>\n            <chakra.span color=\"text\" overflow=\"hidden\" textOverflow=\"ellipsis\" whiteSpace=\"nowrap\">\n              { nbsp }\n              { value }\n            </chakra.span>\n            <TagCloseButton onClick={ onRemoveFilterClick(key as FilterKeys) }/>\n          </Tag>\n        );\n      }) }\n    </HStack>\n  ) : null;\n\n  const breadcrumbs = data ? (\n    <AddressMudBreadcrumbs\n      hash={ hash }\n      tableId={ tableId }\n      tableName={ data?.table.table_full_name }\n      scrollRef={ scrollRef }\n      mb={ hasActiveFilters ? 4 : 0 }\n    />\n  ) : null;\n\n  const actionBar = (!isMobile || hasActiveFilters || pagination.isVisible) && (\n    <ActionBar mt={ -6 } showShadow={ tableHasHorizontalScroll } justifyContent=\"space-between\" alignItems={ hasActiveFilters ? 'start' : 'center' }>\n      <Box>\n        { !isMobile && breadcrumbs }\n        { filtersTags }\n      </Box>\n      <Pagination ml={{ base: 0, lg: 8 }} { ...pagination }/>\n    </ActionBar>\n  );\n\n  const content = data?.items ? (\n    <AddressMudRecordsTable\n      data={ data }\n      top={ actionBarHeight }\n      sorting={ sorting }\n      toggleSorting={ toggleSorting }\n      setFilters={ setFilters }\n      filters={ filters }\n      toggleTableHasHorizontalScroll={ setTableHasHorizontalScroll.toggle }\n      scrollRef={ scrollRef }\n      hash={ hash }\n    />\n  ) : null;\n\n  const emptyText = (\n    <>\n      <chakra.span>There are no records for </chakra.span>\n      { data?.table.table_full_name ? <chakra.span fontWeight={ 600 }>{ data?.table.table_full_name }</chakra.span> : 'this table' }\n    </>\n  );\n\n  return (\n    <>\n      { isMobile && (\n        <Box mb={ 6 }>{ breadcrumbs }</Box>\n      ) }\n      <DataListDisplay\n        isError={ isError }\n        items={ data?.items }\n        emptyText={ emptyText }\n        filterProps={{\n          emptyFilteredText: `Couldn${ apos }t find records that match your filter query.`,\n          hasActiveFilters: Object.values(filters).some(Boolean),\n        }}\n        content={ content }\n        actionBar={ actionBar }\n        showActionBarIfEmpty={ !isMobile }\n        mt={ data?.items.length ? 0 : 2 }\n      />\n    </>\n  );\n};\n\nexport default AddressMudTable;\n","import { Divider, Text, useBoolean, Flex, Link, VStack, chakra, Box, Grid, GridItem } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { AddressMudTableItem } from 'types/api/address';\n\nimport { route } from 'nextjs-routes';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport Tag from 'ui/shared/chakra/Tag';\nimport HashStringShorten from 'ui/shared/HashStringShorten';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\n\ntype Props = {\n  item: AddressMudTableItem;\n  isLoading: boolean;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  hash: string;\n};\n\nconst AddressMudTablesListItem = ({ item, isLoading, scrollRef, hash }: Props) => {\n  const [ isOpened, setIsOpened ] = useBoolean(false);\n\n  const router = useRouter();\n\n  const onTableClick = React.useCallback((e: React.MouseEvent) => {\n    if (e.metaKey || e.ctrlKey) {\n      // Allow opening in a new tab/window with right-click or ctrl/cmd+click\n      return;\n    }\n\n    e.preventDefault();\n\n    const tableId = e.currentTarget.getAttribute('data-id');\n    if (tableId) {\n      router.push(\n        { pathname: '/address/[hash]', query: { hash, tab: 'mud', table_id: tableId } },\n        undefined,\n        { shallow: true },\n      );\n    }\n\n    scrollRef?.current?.scrollIntoView();\n  }, [ router, scrollRef, hash ]);\n\n  return (\n    <ListItemMobile rowGap={ 3 } fontSize=\"sm\" py={ 3 }>\n      <Flex w=\"100%\">\n        <Skeleton isLoaded={ !isLoading }>\n          <Link display=\"block\">\n            <IconSvg\n              name=\"arrows/east-mini\"\n              transform={ isOpened ? 'rotate(270deg)' : 'rotate(180deg)' }\n              boxSize={ 6 }\n              cursor=\"pointer\"\n              onClick={ setIsOpened.toggle }\n              transitionDuration=\"faster\"\n              aria-label=\"View schema\"\n            />\n          </Link>\n        </Skeleton>\n        <Box flexGrow=\"1\">\n          <Flex justifyContent=\"space-between\" height={ 6 } alignItems=\"center\" mb={ 3 }>\n            <Skeleton isLoaded={ !isLoading }>\n              <LinkInternal\n                onClick={ onTableClick }\n                data-id={ item.table.table_id }\n                fontWeight={ 500 }\n                href={ route({ pathname: '/address/[hash]', query: { hash, tab: 'mud', table_id: item.table.table_id } }) }\n              >\n                { item.table.table_full_name }\n              </LinkInternal>\n            </Skeleton>\n            <Skeleton isLoaded={ !isLoading } color=\"text_secondary\">\n              { item.table.table_type }\n            </Skeleton>\n          </Flex>\n          <Skeleton isLoaded={ !isLoading } color=\"text_secondary\">\n            <HashStringShorten hash={ item.table.table_id } type=\"long\"/>\n          </Skeleton>\n        </Box>\n      </Flex>\n\n      { isOpened && (\n        <Grid templateColumns=\"48px 1fr\" gap=\"8px 24px\" fontWeight={ 500 } w=\"100%\">\n          { Boolean(item.schema.key_names.length) && (\n            <>\n              <Text lineHeight=\"24px\">Key</Text>\n              <VStack gap={ 1 } alignItems=\"start\">\n                { item.schema.key_names.map((name, index) => (\n                  <Tag key={ name }>\n                    <chakra.span fontWeight={ 700 }>{ item.schema.key_types[index] }</chakra.span> { name }\n                  </Tag>\n                )) }\n              </VStack>\n            </>\n          ) }\n          <GridItem colSpan={ 2 }><Divider/></GridItem>\n          <Text lineHeight=\"24px\">Value</Text>\n          <VStack gap={ 1 } alignItems=\"start\">\n            { item.schema.value_names.map((name, index) => (\n              <Text key={ name }>\n                <chakra.span fontWeight={ 700 }>{ item.schema.value_types[index] }</chakra.span> { name }\n              </Text>\n            )) }\n          </VStack>\n        </Grid>\n      ) }\n    </ListItemMobile>\n  );\n};\n\nexport default React.memo(AddressMudTablesListItem);\n","import { Td, Tr, Text, useBoolean, Link, Table, VStack, chakra } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { AddressMudTableItem } from 'types/api/address';\n\nimport { route } from 'nextjs-routes';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport Tag from 'ui/shared/chakra/Tag';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ntype Props = {\n  item: AddressMudTableItem;\n  isLoading: boolean;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  hash: string;\n};\n\nconst AddressMudTablesTableItem = ({ item, isLoading, scrollRef, hash }: Props) => {\n  const [ isOpened, setIsOpened ] = useBoolean(false);\n\n  const router = useRouter();\n\n  const onTableClick = React.useCallback((e: React.MouseEvent) => {\n    if (e.metaKey || e.ctrlKey) {\n      // Allow opening in a new tab/window with right-click or ctrl/cmd+click\n      return;\n    }\n\n    e.preventDefault();\n\n    const tableId = e.currentTarget.getAttribute('data-id');\n    if (tableId) {\n      router.push(\n        { pathname: '/address/[hash]', query: { hash, tab: 'mud', table_id: tableId } },\n        undefined,\n        { shallow: true },\n      );\n    }\n    scrollRef?.current?.scrollIntoView();\n  }, [ router, scrollRef, hash ]);\n\n  return (\n    <>\n      <Tr borderBottomStyle={ isOpened ? 'hidden' : 'unset' }>\n        <Td verticalAlign=\"middle\">\n          <Skeleton isLoaded={ !isLoading }>\n            <Link display=\"block\">\n              <IconSvg\n                name=\"arrows/east-mini\"\n                transform={ isOpened ? 'rotate(270deg)' : 'rotate(180deg)' }\n                boxSize={ 6 }\n                cursor=\"pointer\"\n                onClick={ setIsOpened.toggle }\n                transitionDuration=\"faster\"\n                aria-label=\"View schema\"\n              />\n            </Link>\n          </Skeleton>\n        </Td>\n        <Td verticalAlign=\"middle\">\n          <Skeleton isLoaded={ !isLoading }>\n            <LinkInternal\n              href={ route({ pathname: '/address/[hash]', query: { hash, tab: 'mud', table_id: item.table.table_id } }) }\n              data-id={ item.table.table_id }\n              onClick={ onTableClick }\n              fontWeight={ 700 }\n            >\n              { item.table.table_full_name }\n            </LinkInternal>\n          </Skeleton>\n        </Td>\n        <Td verticalAlign=\"middle\">\n          <Skeleton isLoaded={ !isLoading }>\n            { item.table.table_id }\n          </Skeleton>\n        </Td>\n        <Td verticalAlign=\"middle\">\n          <Skeleton isLoaded={ !isLoading }>\n            { item.table.table_type }\n          </Skeleton>\n        </Td>\n      </Tr>\n      { isOpened && (\n        <Tr>\n          <Td pt={ 0 }></Td>\n          <Td colSpan={ 3 } pt={ 0 }>\n            <Table>\n              { Boolean(item.schema.key_names.length) && (\n                <Tr>\n                  <Td width=\"80px\" fontSize=\"sm\" fontWeight={ 600 } py={ 2 } pl={ 0 } verticalAlign=\"middle\">Key</Td>\n                  <Td py={ 2 }>\n                    <VStack gap={ 1 } alignItems=\"start\">\n                      { item.schema.key_names.map((name, index) => (\n                        <Tag key={ name }>\n                          <chakra.span fontWeight={ 700 }>{ item.schema.key_types[index] }</chakra.span> { name }\n                        </Tag>\n                      )) }\n                    </VStack>\n                  </Td>\n                </Tr>\n              ) }\n              <Tr borderBottomStyle=\"hidden\">\n                <Td width=\"80px\" fontSize=\"sm\" fontWeight={ 600 } py={ 2 } pl={ 0 } >Value</Td>\n                <Td fontSize=\"sm\" py={ 2 }>\n                  <VStack gap={ 1 } alignItems=\"start\">\n                    { item.schema.value_names.map((name, index) => (\n                      <Text key={ name }>\n                        <chakra.span fontWeight={ 700 }>{ item.schema.value_types[index] }</chakra.span> { name }\n                      </Text>\n                    )) }\n                  </VStack>\n                </Td>\n              </Tr>\n            </Table>\n          </Td>\n        </Tr>\n      ) }\n    </>\n  );\n};\n\nexport default React.memo(AddressMudTablesTableItem);\n","import { Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressMudTables } from 'types/api/address';\n\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport AddressMudTablesTableItem from './AddressMudTablesTableItem';\n\ntype Props = {\n  items: AddressMudTables['items'];\n  isLoading: boolean;\n  top: number;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  hash: string;\n};\n\n//sorry for the naming\nconst AddressMudTablesTable = ({ items, isLoading, top, scrollRef, hash }: Props) => {\n  return (\n    <Table style={{ tableLayout: 'auto' }}>\n      <Thead top={ top }>\n        <Tr>\n          <Th width=\"24px\"></Th>\n          <Th>Full name</Th>\n          <Th>Table ID</Th>\n          <Th>Type</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { items.map((item, index) => (\n          <AddressMudTablesTableItem\n            key={ item.table.table_id + (isLoading ? String(index) : '') }\n            item={ item }\n            isLoading={ isLoading }\n            scrollRef={ scrollRef }\n            hash={ hash }\n          />\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default AddressMudTablesTable;\n","import { Hide, Show } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useDebounce from 'lib/hooks/useDebounce';\nimport useIsInitialLoading from 'lib/hooks/useIsInitialLoading';\nimport { apos } from 'lib/html-entities';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { ADDRESS_MUD_TABLE_ITEM } from 'stubs/address';\nimport { generateListStub } from 'stubs/utils';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport FilterInput from 'ui/shared/filters/FilterInput';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\n\nimport AddressMudTablesListItem from './AddressMudTablesListItem';\nimport AddressMudTablesTable from './AddressMudTablesTable';\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressMudTables = ({ scrollRef, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n\n  const hash = getQueryParamString(router.query.hash);\n  const q = getQueryParamString(router.query.q);\n  const [ searchTerm, setSearchTerm ] = React.useState<string>(q || '');\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\n\n  const { data, isPlaceholderData, isError, pagination } = useQueryWithPages({\n    resourceName: 'address_mud_tables',\n    pathParams: { hash },\n    filters: { q: debouncedSearchTerm },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'address_mud_tables'>(ADDRESS_MUD_TABLE_ITEM, 3, { next_page_params: {\n        items_count: 50,\n        table_id: '1',\n      } }),\n    },\n  });\n\n  const isInitialLoading = useIsInitialLoading(isPlaceholderData);\n\n  const searchInput = (\n    <FilterInput\n      w={{ base: '100%', lg: '360px' }}\n      minW={{ base: 'auto', lg: '250px' }}\n      size=\"xs\"\n      onChange={ setSearchTerm }\n      placeholder=\"Search by name, namespace or table ID...\"\n      initialValue={ searchTerm }\n      isLoading={ isInitialLoading }\n    />\n  );\n\n  const actionBar = (\n    <ActionBar mt={ -6 } showShadow justifyContent=\"space-between\">\n      { searchInput }\n      <Pagination ml={{ base: 0, lg: 8 }} { ...pagination }/>\n    </ActionBar>\n  );\n\n  const content = data?.items ? (\n    <>\n      <Hide below=\"lg\" ssr={ false }>\n        <AddressMudTablesTable\n          items={ data.items }\n          isLoading={ isPlaceholderData }\n          top={ ACTION_BAR_HEIGHT_DESKTOP }\n          scrollRef={ scrollRef }\n          hash={ hash }\n        />\n      </Hide>\n      <Show below=\"lg\" ssr={ false }>\n        { data.items.map((item, index) => (\n          <AddressMudTablesListItem\n            key={ item.table.table_id + (isPlaceholderData ? String(index) : '') }\n            item={ item }\n            isLoading={ isPlaceholderData }\n            hash={ hash }\n          />\n        )) }\n      </Show>\n    </>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no tables for this address.\"\n      filterProps={{\n        emptyFilteredText: `Couldn${ apos }t find tables that match your filter query.`,\n        hasActiveFilters: Boolean(searchTerm),\n      }}\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default AddressMudTables;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useIsMounted from 'lib/hooks/useIsMounted';\n\nimport AddressMudRecord from './mud/AddressMudRecord';\nimport AddressMudTable from './mud/AddressMudTable';\nimport AddressMudTables from './mud/AddressMudTables';\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressMud = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const isMounted = useIsMounted();\n  const router = useRouter();\n  const tableId = router.query.table_id?.toString();\n  const recordId = router.query.record_id?.toString();\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  if (tableId && recordId) {\n    return <AddressMudRecord tableId={ tableId } recordId={ recordId } isQueryEnabled={ isQueryEnabled } scrollRef={ scrollRef }/>;\n  }\n\n  if (tableId) {\n    return <AddressMudTable tableId={ tableId } scrollRef={ scrollRef } isQueryEnabled={ isQueryEnabled }/>;\n  }\n\n  return <AddressMudTables scrollRef={ scrollRef } isQueryEnabled={ isQueryEnabled }/>;\n};\n\nexport default AddressMud;\n","import { Box, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n};\n\nconst NFTItemContainer = ({ children, className }: Props) => {\n  return (\n    <Box\n      w={{ base: '100%', lg: '210px' }}\n      border=\"1px solid\"\n      borderColor={ useColorModeValue('blackAlpha.100', 'whiteAlpha.200') }\n      borderRadius=\"12px\"\n      p=\"10px\"\n      fontSize=\"sm\"\n      fontWeight={ 500 }\n      lineHeight=\"20px\"\n      className={ className }\n    >\n      { children }\n    </Box>\n  );\n};\n\nexport default chakra(NFTItemContainer);\n","import { Tag, Flex, Text, Link, LightMode } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressNFT } from 'types/api/address';\n\nimport { route } from 'nextjs-routes';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport { getTokenTypeName } from 'lib/token/tokenTypes';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport NftEntity from 'ui/shared/entities/nft/NftEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport NftMedia from 'ui/shared/nft/NftMedia';\n\nimport NFTItemContainer from './NFTItemContainer';\n\ntype Props = AddressNFT & { isLoading: boolean; withTokenLink?: boolean };\n\nconst NFTItem = ({ token, value, isLoading, withTokenLink, ...tokenInstance }: Props) => {\n  const valueResult = token.decimals && value ? getCurrencyValue({ value, decimals: token.decimals, accuracy: 2 }).valueStr : value;\n  const tokenInstanceLink = tokenInstance.id ?\n    route({ pathname: '/token/[hash]/instance/[id]', query: { hash: token.address, id: tokenInstance.id } }) :\n    undefined;\n\n  return (\n    <NFTItemContainer position=\"relative\">\n      <Skeleton isLoaded={ !isLoading }>\n        <LightMode><Tag background=\"gray.50\" zIndex={ 1 } position=\"absolute\" top=\"18px\" right=\"18px\">{ getTokenTypeName(token.type) }</Tag></LightMode>\n      </Skeleton>\n      <Link href={ isLoading ? undefined : tokenInstanceLink }>\n        <NftMedia\n          mb=\"18px\"\n          data={ tokenInstance }\n          isLoading={ isLoading }\n          autoplayVideo={ false }\n        />\n      </Link>\n      <Flex justifyContent=\"space-between\" w=\"100%\" flexWrap=\"wrap\">\n        <Flex ml={ 1 } overflow=\"hidden\">\n          <Text whiteSpace=\"pre\" variant=\"secondary\">ID# </Text>\n          <NftEntity hash={ token.address } id={ tokenInstance.id } isLoading={ isLoading } noIcon/>\n        </Flex>\n        <Skeleton isLoaded={ !isLoading } overflow=\"hidden\" ml={ 1 }>\n          { valueResult && (\n            <Flex>\n              <Text variant=\"secondary\" whiteSpace=\"pre\">Qty </Text>\n              <Text overflow=\"hidden\" wordBreak=\"break-all\">{ valueResult }</Text>\n            </Flex>\n          ) }\n        </Skeleton>\n      </Flex>\n      { withTokenLink && (\n        <TokenEntity\n          mt={ 2 }\n          token={ token }\n          isLoading={ isLoading }\n          noCopy\n          noSymbol\n        />\n      ) }\n    </NFTItemContainer>\n  );\n};\n\nexport default NFTItem;\n","import { Box, Flex, Text, Grid, HStack } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport { apos } from 'lib/html-entities';\nimport ActionBar from 'ui/shared/ActionBar';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport NftFallback from 'ui/shared/nft/NftFallback';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport NFTItem from './NFTItem';\nimport NFTItemContainer from './NFTItemContainer';\n\ntype Props = {\n  collectionsQuery: QueryWithPagesResult<'address_collections'>;\n  address: string;\n  hasActiveFilters: boolean;\n};\n\nconst AddressCollections = ({ collectionsQuery, address, hasActiveFilters }: Props) => {\n  const isMobile = useIsMobile();\n\n  const { isError, isPlaceholderData, data, pagination } = collectionsQuery;\n\n  const actionBar = isMobile && pagination.isVisible && (\n    <ActionBar mt={ -6 }>\n      <Pagination ml=\"auto\" { ...pagination }/>\n    </ActionBar>\n  );\n\n  const content = data?.items ? data?.items.filter((item) => item.token_instances.length > 0).map((item, index) => {\n    const collectionUrl = route({\n      pathname: '/token/[hash]',\n      query: {\n        hash: item.token.address,\n        tab: 'inventory',\n        holder_address_hash: address,\n        scroll_to_tabs: 'true',\n      },\n    });\n    const hasOverload = Number(item.amount) > item.token_instances.length;\n    return (\n      <Box key={ item.token.address + index } mb={ 6 }>\n        <Flex mb={ 3 } flexWrap=\"wrap\" lineHeight=\"30px\">\n          <TokenEntity\n            width=\"auto\"\n            noSymbol\n            token={ item.token }\n            isLoading={ isPlaceholderData }\n            noCopy\n            fontWeight=\"600\"\n          />\n          <Skeleton isLoaded={ !isPlaceholderData } mr={ 3 }>\n            <Text variant=\"secondary\" whiteSpace=\"pre\">{ ` - ${ Number(item.amount).toLocaleString() } item${ Number(item.amount) > 1 ? 's' : '' }` }</Text>\n          </Skeleton>\n          <LinkInternal href={ collectionUrl } isLoading={ isPlaceholderData }>\n            <Skeleton isLoaded={ !isPlaceholderData }>View in collection</Skeleton>\n          </LinkInternal>\n        </Flex>\n        <Grid\n          w=\"100%\"\n          mb={ 6 }\n          columnGap={{ base: 3, lg: 6 }}\n          rowGap={{ base: 3, lg: 6 }}\n          gridTemplateColumns={{ base: 'repeat(2, calc((100% - 12px)/2))', lg: 'repeat(auto-fill, minmax(210px, 1fr))' }}\n        >\n          { item.token_instances.map((instance, index) => {\n            const key = item.token.address + '_' + (instance.id && !isPlaceholderData ? `id_${ instance.id }` : `index_${ index }`);\n\n            return (\n              <NFTItem\n                key={ key }\n                { ...instance }\n                token={ item.token }\n                isLoading={ isPlaceholderData }\n              />\n            );\n          }) }\n          { hasOverload && (\n            <LinkInternal display=\"flex\" href={ collectionUrl }>\n              <NFTItemContainer display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\" minH=\"248px\">\n                <HStack gap={ 2 } mb={ 3 }>\n                  <NftFallback bgColor=\"unset\" w=\"30px\" h=\"30px\" boxSize=\"30px\" p={ 0 }/>\n                  <NftFallback bgColor=\"unset\" w=\"30px\" h=\"30px\" boxSize=\"30px\" p={ 0 }/>\n                  <NftFallback bgColor=\"unset\" w=\"30px\" h=\"30px\" boxSize=\"30px\" p={ 0 }/>\n                </HStack>\n                View all NFTs\n              </NFTItemContainer>\n            </LinkInternal>\n          ) }\n        </Grid>\n      </Box>\n    );\n  }) : null;\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no tokens of selected type.\"\n      content={ content }\n      actionBar={ actionBar }\n      filterProps={{\n        emptyFilteredText: `Couldn${ apos }t find any token that matches your query.`,\n        hasActiveFilters,\n      }}\n    />\n  );\n};\n\nexport default AddressCollections;\n","import { Grid } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport { apos } from 'lib/html-entities';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport NFTItem from './NFTItem';\n\ntype Props = {\n  tokensQuery: QueryWithPagesResult<'address_nfts'>;\n  hasActiveFilters: boolean;\n};\n\nconst AddressNFTs = ({ tokensQuery, hasActiveFilters }: Props) => {\n  const isMobile = useIsMobile();\n\n  const { isError, isPlaceholderData, data, pagination } = tokensQuery;\n\n  const actionBar = isMobile && pagination.isVisible && (\n    <ActionBar mt={ -6 }>\n      <Pagination ml=\"auto\" { ...pagination }/>\n    </ActionBar>\n  );\n\n  const content = data?.items ? (\n    <Grid\n      w=\"100%\"\n      columnGap={{ base: 3, lg: 6 }}\n      rowGap={{ base: 3, lg: 6 }}\n      gridTemplateColumns={{ base: 'repeat(2, calc((100% - 12px)/2))', lg: 'repeat(auto-fill, minmax(210px, 1fr))' }}\n    >\n      { data.items.map((item, index) => {\n        const key = item.token.address + '_' + (item.id && !isPlaceholderData ? `id_${ item.id }` : `index_${ index }`);\n\n        return (\n          <NFTItem\n            key={ key }\n            { ...item }\n            isLoading={ isPlaceholderData }\n            withTokenLink\n          />\n        );\n      }) }\n    </Grid>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no tokens of selected type.\"\n      content={ content }\n      actionBar={ actionBar }\n      filterProps={{\n        emptyFilteredText: `Couldn${ apos }t find any token that matches your query.`,\n        hasActiveFilters,\n      }}\n    />\n  );\n};\n\nexport default AddressNFTs;\n","import { Flex, HStack } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressTokenBalance } from 'types/api/address';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport ListItemMobile from 'ui/shared/ListItemMobile/ListItemMobile';\n\ntype Props = AddressTokenBalance & { isLoading: boolean };\n\nconst ERC20TokensListItem = ({ token, value, isLoading }: Props) => {\n\n  const {\n    valueStr: tokenQuantity,\n    usd: tokenValue,\n  } = getCurrencyValue({ value: value, exchangeRate: token.exchange_rate, decimals: token.decimals, accuracy: 8, accuracyUsd: 2 });\n\n  return (\n    <ListItemMobile rowGap={ 2 }>\n      <Flex alignItems=\"center\" width=\"100%\">\n        <TokenEntity\n          token={ token }\n          isLoading={ isLoading }\n          noCopy\n          jointSymbol\n          fontWeight=\"700\"\n        />\n      </Flex>\n      <Flex alignItems=\"center\" pl={ 8 }>\n        <AddressEntity\n          address={{ hash: token.address }}\n          isLoading={ isLoading }\n          truncation=\"constant\"\n          noIcon\n        />\n        <AddressAddToWallet token={ token } ml={ 2 } isLoading={ isLoading }/>\n      </Flex>\n      { token.exchange_rate !== undefined && token.exchange_rate !== null && (\n        <HStack spacing={ 3 }>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>Price</Skeleton>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" color=\"text_secondary\">\n            <span>{ `$${ Number(token.exchange_rate).toLocaleString() }` }</span>\n          </Skeleton>\n        </HStack>\n      ) }\n      <HStack spacing={ 3 } alignItems=\"baseline\">\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>Quantity</Skeleton>\n        <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" color=\"text_secondary\" whiteSpace=\"pre-wrap\" wordBreak=\"break-word\">\n          <span>{ tokenQuantity }</span>\n        </Skeleton>\n      </HStack>\n      { tokenValue !== undefined && (\n        <HStack spacing={ 3 } alignItems=\"baseline\">\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" fontWeight={ 500 }>Value</Skeleton>\n          <Skeleton isLoaded={ !isLoading } fontSize=\"sm\" color=\"text_secondary\" whiteSpace=\"pre-wrap\" wordBreak=\"break-word\">\n            <span>${ tokenValue }</span>\n          </Skeleton>\n        </HStack>\n      ) }\n    </ListItemMobile>\n  );\n};\n\nexport default ERC20TokensListItem;\n","import { Tr, Td, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressTokenBalance } from 'types/api/address';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ntype Props = AddressTokenBalance & { isLoading: boolean };\n\nconst ERC20TokensTableItem = ({\n  token,\n  value,\n  isLoading,\n}: Props) => {\n\n  const {\n    valueStr: tokenQuantity,\n    usd: tokenValue,\n  } = getCurrencyValue({ value: value, exchangeRate: token.exchange_rate, decimals: token.decimals, accuracy: 8, accuracyUsd: 2 });\n\n  return (\n    <Tr\n      role=\"group\"\n    >\n      <Td verticalAlign=\"middle\">\n        <TokenEntity\n          token={ token }\n          isLoading={ isLoading }\n          noCopy\n          jointSymbol\n          fontWeight=\"700\"\n        />\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Flex alignItems=\"center\" width=\"150px\" justifyContent=\"space-between\">\n          <AddressEntity\n            address={{ hash: token.address }}\n            isLoading={ isLoading }\n            truncation=\"constant\"\n            noIcon\n          />\n          <AddressAddToWallet token={ token } ml={ 4 } isLoading={ isLoading } opacity=\"0\" _groupHover={{ opacity: 1 }}/>\n        </Flex>\n      </Td>\n      <Td isNumeric verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">\n          { token.exchange_rate && `$${ Number(token.exchange_rate).toLocaleString() }` }\n        </Skeleton>\n      </Td>\n      <Td isNumeric verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline\">\n          { tokenQuantity }\n        </Skeleton>\n      </Td>\n      <Td isNumeric verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline\">\n          { tokenValue && `$${ tokenValue }` }\n        </Skeleton>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default React.memo(ERC20TokensTableItem);\n","import { Table, Tbody, Tr, Th } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressTokenBalance } from 'types/api/address';\n\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport ERC20TokensTableItem from './ERC20TokensTableItem';\n\ninterface Props {\n  data: Array<AddressTokenBalance>;\n  top: number;\n  isLoading: boolean;\n}\n\nconst ERC20TokensTable = ({ data, top, isLoading }: Props) => {\n  return (\n    <Table>\n      <Thead top={ top }>\n        <Tr>\n          <Th width=\"30%\">Asset</Th>\n          <Th width=\"30%\">Contract address</Th>\n          <Th width=\"10%\" isNumeric>Price</Th>\n          <Th width=\"15%\" isNumeric>Quantity</Th>\n          <Th width=\"15%\" isNumeric>Value</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { data.map((item, index) => (\n          <ERC20TokensTableItem key={ item.token.address + (isLoading ? index : '') } { ...item } isLoading={ isLoading }/>\n        )) }\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default ERC20TokensTable;\n","import { Show, Hide } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport ActionBar from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport ERC20TokensListItem from './ERC20TokensListItem';\nimport ERC20TokensTable from './ERC20TokensTable';\n\ntype Props = {\n  tokensQuery: QueryWithPagesResult<'address_tokens'>;\n};\n\nconst ERC20Tokens = ({ tokensQuery }: Props) => {\n  const isMobile = useIsMobile();\n\n  const { isError, isPlaceholderData, data, pagination } = tokensQuery;\n\n  const actionBar = isMobile && pagination.isVisible && (\n    <ActionBar mt={ -6 }>\n      <Pagination ml=\"auto\" { ...pagination }/>\n    </ActionBar>\n  );\n\n  const content = data?.items ? (\n    <>\n      <Hide below=\"lg\" ssr={ false }><ERC20TokensTable data={ data.items } top={ pagination.isVisible ? 72 : 0 } isLoading={ isPlaceholderData }/></Hide>\n      <Show below=\"lg\" ssr={ false }>{ data.items.map((item, index) => (\n        <ERC20TokensListItem\n          key={ item.token.address + (isPlaceholderData ? index : '') }\n          { ...item }\n          isLoading={ isPlaceholderData }\n        />\n      )) }</Show></>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no tokens of selected type.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n\n};\n\nexport default ERC20Tokens;\n","import { Box, Flex, Text, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\ntype Props = {\n  name: string;\n  value: string;\n  icon: React.ReactNode;\n  valueSecondary?: string;\n  isLoading: boolean;\n};\n\nconst TokenBalancesItem = ({ name, icon, value, valueSecondary, isLoading }: Props) => {\n\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  return (\n    <Box px=\"12px\" py=\"10px\" bgColor={ bgColor } borderRadius=\"base\">\n      <Text variant=\"secondary\" fontSize=\"xs\" fontWeight={ 500 } mb={ 1 }>{ name }</Text>\n      <Flex alignItems=\"center\">\n        { icon }\n        <Skeleton isLoaded={ !isLoading } fontWeight=\"500\" whiteSpace=\"pre-wrap\" wordBreak=\"break-word\" display=\"flex\" ml={ 2 }>\n          { value }\n          { Boolean(valueSecondary) && <Text color=\"text_secondary\"> ({ valueSecondary })</Text> }\n        </Skeleton>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default React.memo(TokenBalancesItem);\n","import { Flex } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { ZERO } from 'lib/consts';\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport { currencyUnits } from 'lib/units';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport IconSvg from 'ui/shared/IconSvg';\nimport NativeTokenIcon from 'ui/shared/NativeTokenIcon';\n\nimport { getTokensTotalInfo } from '../utils/tokenUtils';\nimport useFetchTokens from '../utils/useFetchTokens';\nimport TokenBalancesItem from './TokenBalancesItem';\n\nconst TokenBalances = () => {\n  const router = useRouter();\n\n  const hash = router.query.hash?.toString();\n\n  const addressQuery = useApiQuery('address', {\n    pathParams: { hash },\n    queryOptions: { enabled: Boolean(hash), refetchOnMount: false },\n  });\n\n  const tokenQuery = useFetchTokens({ hash });\n\n  if (addressQuery.isError || tokenQuery.isError) {\n    return <DataFetchAlert/>;\n  }\n\n  const addressData = addressQuery.data;\n  const { valueStr: nativeValue, usdBn: nativeUsd } = getCurrencyValue({\n    value: addressData?.coin_balance || '0',\n    accuracy: 8,\n    accuracyUsd: 2,\n    exchangeRate: addressData?.exchange_rate,\n    decimals: String(config.chain.currency.decimals),\n  });\n\n  const tokensInfo = getTokensTotalInfo(tokenQuery.data);\n  const prefix = tokensInfo.isOverflow ? '>' : '';\n  const totalUsd = nativeUsd.plus(tokensInfo.usd);\n  const tokensNumText = tokensInfo.num > 0 ?\n    `${ prefix }${ tokensInfo.num } ${ tokensInfo.num > 1 ? 'tokens' : 'token' }` :\n    '0';\n\n  return (\n    <Flex columnGap={ 3 } rowGap={ 3 } mt={{ base: '6px', lg: 0 }} flexDirection={{ base: 'column', lg: 'row' }}>\n      <TokenBalancesItem\n        name=\"Net Worth\"\n        value={ addressData?.exchange_rate ? `${ prefix }$${ totalUsd.toFormat(2) }` : 'N/A' }\n        isLoading={ addressQuery.isPending || tokenQuery.isPending }\n        icon={ <IconSvg name=\"wallet\" boxSize=\"20px\" flexShrink={ 0 } color=\"text_secondary\"/> }\n      />\n      <TokenBalancesItem\n        name={ `${ currencyUnits.ether } Balance` }\n        value={ `${ nativeValue } ${ currencyUnits.ether }` }\n        valueSecondary={ !nativeUsd.eq(ZERO) ? `$${ nativeUsd.toFormat(2) }` : '' }\n        isLoading={ addressQuery.isPending || tokenQuery.isPending }\n        icon={ <NativeTokenIcon boxSize=\"20px\"/> }\n      />\n      <TokenBalancesItem\n        name=\"Tokens\"\n        value={ tokensNumText }\n        valueSecondary={ `${ prefix }$${ tokensInfo.usd.toFormat(2) }` }\n        isLoading={ addressQuery.isPending || tokenQuery.isPending }\n        icon={ <IconSvg name=\"tokens\" boxSize=\"20px\" flexShrink={ 0 } color=\"text_secondary\"/> }\n      />\n    </Flex>\n  );\n};\n\nexport default TokenBalances;\n","import { Box, HStack } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { NFTTokenType } from 'types/api/token';\nimport type { PaginationParams } from 'ui/shared/pagination/types';\n\nimport config from 'configs/app';\nimport { useAppContext } from 'lib/contexts/app';\nimport * as cookies from 'lib/cookies';\nimport getFilterValuesFromQuery from 'lib/getFilterValuesFromQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { NFT_TOKEN_TYPE_IDS } from 'lib/token/tokenTypes';\nimport { ADDRESS_TOKEN_BALANCE_ERC_20, ADDRESS_NFT_1155, ADDRESS_COLLECTION } from 'stubs/address';\nimport { generateListStub } from 'stubs/utils';\nimport PopoverFilter from 'ui/shared/filters/PopoverFilter';\nimport TokenTypeFilter from 'ui/shared/filters/TokenTypeFilter';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RadioButtonGroup from 'ui/shared/radioButtonGroup/RadioButtonGroup';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\n\nimport AddressCollections from './tokens/AddressCollections';\nimport AddressNFTs from './tokens/AddressNFTs';\nimport ERC20Tokens from './tokens/ERC20Tokens';\nimport TokenBalances from './tokens/TokenBalances';\n\ntype TNftDisplayType = 'collection' | 'list';\n\nconst TAB_LIST_PROPS = {\n  mt: 1,\n  mb: { base: 6, lg: 1 },\n  py: 5,\n  columnGap: 3,\n};\n\nconst TAB_LIST_PROPS_MOBILE = {\n  my: 8,\n  columnGap: 3,\n};\n\nconst getTokenFilterValue = (getFilterValuesFromQuery<NFTTokenType>).bind(null, NFT_TOKEN_TYPE_IDS);\n\ntype Props = {\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressTokens = ({ shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const isMobile = useIsMobile();\n  const isMounted = useIsMounted();\n\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  const displayTypeCookie = cookies.get(cookies.NAMES.ADDRESS_NFT_DISPLAY_TYPE, useAppContext().cookies);\n  const [ nftDisplayType, setNftDisplayType ] = React.useState<TNftDisplayType>(displayTypeCookie === 'list' ? 'list' : 'collection');\n  const [ tokenTypes, setTokenTypes ] = React.useState<Array<NFTTokenType> | undefined>(getTokenFilterValue(router.query.type) || []);\n\n  const tab = getQueryParamString(router.query.tab);\n  const hash = getQueryParamString(router.query.hash);\n\n  const erc20Query = useQueryWithPages({\n    resourceName: 'address_tokens',\n    pathParams: { hash },\n    filters: { type: 'ERC-20' },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled && (!tab || tab === 'tokens' || tab === 'tokens_erc20'),\n      refetchOnMount: false,\n      placeholderData: generateListStub<'address_tokens'>(ADDRESS_TOKEN_BALANCE_ERC_20, 10, { next_page_params: null }),\n    },\n  });\n\n  const collectionsQuery = useQueryWithPages({\n    resourceName: 'address_collections',\n    pathParams: { hash },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled && tab === 'tokens_nfts' && nftDisplayType === 'collection',\n      placeholderData: generateListStub<'address_collections'>(ADDRESS_COLLECTION, 10, { next_page_params: null }),\n    },\n    filters: { type: tokenTypes },\n  });\n\n  const nftsQuery = useQueryWithPages({\n    resourceName: 'address_nfts',\n    pathParams: { hash },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled && tab === 'tokens_nfts' && nftDisplayType === 'list',\n      placeholderData: generateListStub<'address_nfts'>(ADDRESS_NFT_1155, 10, { next_page_params: null }),\n    },\n    filters: { type: tokenTypes },\n  });\n\n  const handleNFTsDisplayTypeChange = React.useCallback((val: TNftDisplayType) => {\n    cookies.set(cookies.NAMES.ADDRESS_NFT_DISPLAY_TYPE, val);\n    setNftDisplayType(val);\n  }, []);\n\n  const handleTokenTypesChange = React.useCallback((value: Array<NFTTokenType>) => {\n    nftsQuery.onFilterChange({ type: value });\n    collectionsQuery.onFilterChange({ type: value });\n    setTokenTypes(value);\n  }, [ nftsQuery, collectionsQuery ]);\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const nftTypeFilter = (\n    <PopoverFilter contentProps={{ w: '200px' }} appliedFiltersNum={ tokenTypes?.length }>\n      <TokenTypeFilter<NFTTokenType> nftOnly onChange={ handleTokenTypesChange } defaultValue={ tokenTypes }/>\n    </PopoverFilter>\n  );\n\n  const hasActiveFilters = Boolean(tokenTypes?.length);\n\n  const tabs = [\n    { id: 'tokens_erc20', title: `${ config.chain.tokenStandard }-20`, component: <ERC20Tokens tokensQuery={ erc20Query }/> },\n    {\n      id: 'tokens_nfts',\n      title: 'NFTs',\n      component: nftDisplayType === 'list' ?\n        <AddressNFTs tokensQuery={ nftsQuery } hasActiveFilters={ hasActiveFilters }/> :\n        <AddressCollections collectionsQuery={ collectionsQuery } address={ hash } hasActiveFilters={ hasActiveFilters }/>,\n    },\n  ];\n\n  const nftDisplayTypeRadio = (\n    <RadioButtonGroup<TNftDisplayType>\n      onChange={ handleNFTsDisplayTypeChange }\n      defaultValue={ nftDisplayType }\n      name=\"type\"\n      options={ [\n        { title: 'By collection', value: 'collection', icon: 'collection', onlyIcon: isMobile },\n        { title: 'List', value: 'list', icon: 'apps', onlyIcon: isMobile },\n      ] }\n    />\n  );\n\n  let pagination: PaginationParams | undefined;\n\n  if (tab === 'tokens_nfts') {\n    pagination = nftDisplayType === 'list' ? nftsQuery.pagination : collectionsQuery.pagination;\n  } else {\n    pagination = erc20Query.pagination;\n  }\n\n  const hasNftData =\n    (!nftsQuery.isPlaceholderData && nftsQuery.data?.items.length) ||\n    (!collectionsQuery.isPlaceholderData && collectionsQuery.data?.items.length);\n\n  const isNftTab = tab !== 'tokens' && tab !== 'tokens_erc20';\n\n  const rightSlot = (\n    <>\n      <HStack spacing={ 3 }>\n        { isNftTab && (hasNftData || hasActiveFilters) && nftDisplayTypeRadio }\n        { isNftTab && (hasNftData || hasActiveFilters) && nftTypeFilter }\n      </HStack>\n      { pagination.isVisible && !isMobile && <Pagination { ...pagination }/> }\n    </>\n  );\n\n  return (\n    <>\n      <TokenBalances/>\n      { /* should stay before tabs to scroll up with pagination */ }\n      <Box ref={ scrollRef }></Box>\n      <RoutedTabs\n        tabs={ tabs }\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        size=\"sm\"\n        tabListProps={ isMobile ? TAB_LIST_PROPS_MOBILE : TAB_LIST_PROPS }\n        rightSlot={ rightSlot }\n        rightSlotProps={ tab !== 'tokens_erc20' && !isMobile ? { flexGrow: 1, display: 'flex', justifyContent: 'space-between', ml: 8 } : {} }\n        stickyEnabled={ !isMobile }\n      />\n    </>\n  );\n};\n\nexport default AddressTokens;\n","import { Flex, Hide, Show, Text } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport { AddressFromToFilterValues } from 'types/api/address';\nimport type { AddressFromToFilter, AddressTokenTransferResponse } from 'types/api/address';\nimport type { TokenType } from 'types/api/token';\nimport type { TokenTransfer } from 'types/api/tokenTransfer';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport getFilterValueFromQuery from 'lib/getFilterValueFromQuery';\nimport getFilterValuesFromQuery from 'lib/getFilterValuesFromQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport { apos } from 'lib/html-entities';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport { TOKEN_TYPE_IDS } from 'lib/token/tokenTypes';\nimport { getTokenTransfersStub } from 'stubs/token';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport * as TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport HashStringShorten from 'ui/shared/HashStringShorten';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport ResetIconButton from 'ui/shared/ResetIconButton';\nimport * as SocketNewItemsNotice from 'ui/shared/SocketNewItemsNotice';\nimport TokenTransferFilter from 'ui/shared/TokenTransfer/TokenTransferFilter';\nimport TokenTransferList from 'ui/shared/TokenTransfer/TokenTransferList';\nimport TokenTransferTable from 'ui/shared/TokenTransfer/TokenTransferTable';\n\nimport AddressCsvExportLink from './AddressCsvExportLink';\n\ntype Filters = {\n  type: Array<TokenType>;\n  filter: AddressFromToFilter | undefined;\n};\n\nconst getTokenFilterValue = (getFilterValuesFromQuery<TokenType>).bind(null, TOKEN_TYPE_IDS);\nconst getAddressFilterValue = (getFilterValueFromQuery<AddressFromToFilter>).bind(null, AddressFromToFilterValues);\n\nconst OVERLOAD_COUNT = 75;\n\nconst matchFilters = (filters: Filters, tokenTransfer: TokenTransfer, address?: string) => {\n  if (filters.filter) {\n    if (filters.filter === 'from' && tokenTransfer.from.hash !== address) {\n      return false;\n    }\n    if (filters.filter === 'to' && tokenTransfer.to.hash !== address) {\n      return false;\n    }\n  }\n  if (filters.type && filters.type.length) {\n    if (!tokenTransfer.token || !filters.type.includes(tokenTransfer.token.type)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n  // for tests only\n  overloadCount?: number;\n};\n\nconst AddressTokenTransfers = ({ scrollRef, overloadCount = OVERLOAD_COUNT, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const queryClient = useQueryClient();\n  const isMobile = useIsMobile();\n  const isMounted = useIsMounted();\n\n  const currentAddress = getQueryParamString(router.query.hash);\n\n  const [ socketAlert, setSocketAlert ] = React.useState('');\n  const [ newItemsCount, setNewItemsCount ] = React.useState(0);\n\n  const tokenFilter = getQueryParamString(router.query.token) || undefined;\n\n  const [ filters, setFilters ] = React.useState<Filters>(\n    {\n      type: getTokenFilterValue(router.query.type) || [],\n      filter: getAddressFilterValue(router.query.filter),\n    },\n  );\n\n  const { isError, isPlaceholderData, data, pagination, onFilterChange } = useQueryWithPages({\n    resourceName: 'address_token_transfers',\n    pathParams: { hash: currentAddress },\n    filters: tokenFilter ? { token: tokenFilter } : filters,\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: getTokenTransfersStub(undefined, {\n        block_number: 7793535,\n        index: 46,\n        items_count: 50,\n      }),\n    },\n  });\n\n  const handleTypeFilterChange = React.useCallback((nextValue: Array<TokenType>) => {\n    onFilterChange({ ...filters, type: nextValue });\n    setFilters((prevState) => ({ ...prevState, type: nextValue }));\n  }, [ filters, onFilterChange ]);\n\n  const handleAddressFilterChange = React.useCallback((nextValue: string) => {\n    const filterVal = getAddressFilterValue(nextValue);\n    onFilterChange({ ...filters, filter: filterVal });\n    setFilters((prevState) => ({ ...prevState, filter: filterVal }));\n  }, [ filters, onFilterChange ]);\n\n  const resetTokenFilter = React.useCallback(() => {\n    onFilterChange({});\n  }, [ onFilterChange ]);\n\n  const handleNewSocketMessage: SocketMessage.AddressTokenTransfer['handler'] = (payload) => {\n    setSocketAlert('');\n\n    const newItems: Array<TokenTransfer> = [];\n    let newCount = 0;\n\n    payload.token_transfers.forEach(transfer => {\n      if (data?.items && data.items.length + newItems.length >= overloadCount) {\n        if (matchFilters(filters, transfer, currentAddress)) {\n          newCount++;\n        }\n      } else {\n        if (matchFilters(filters, transfer, currentAddress)) {\n          newItems.push(transfer);\n        }\n      }\n    });\n\n    if (newCount > 0) {\n      setNewItemsCount(prev => prev + newCount);\n    }\n\n    if (newItems.length > 0) {\n      queryClient.setQueryData(\n        getResourceKey('address_token_transfers', { pathParams: { hash: currentAddress }, queryParams: { ...filters } }),\n        (prevData: AddressTokenTransferResponse | undefined) => {\n          if (!prevData) {\n            return;\n          }\n\n          return {\n            ...prevData,\n            items: [\n              ...newItems,\n              ...prevData.items,\n            ],\n          };\n        },\n      );\n    }\n\n  };\n\n  const handleSocketClose = React.useCallback(() => {\n    setSocketAlert('Connection is lost. Please refresh the page to load new token transfers.');\n  }, []);\n\n  const handleSocketError = React.useCallback(() => {\n    setSocketAlert('An error has occurred while fetching new token transfers. Please refresh the page.');\n  }, []);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ currentAddress.toLowerCase() }`,\n    onSocketClose: handleSocketClose,\n    onSocketError: handleSocketError,\n    isDisabled: pagination.page !== 1 || Boolean(tokenFilter),\n  });\n\n  useSocketMessage({\n    channel,\n    event: 'token_transfer',\n    handler: handleNewSocketMessage,\n  });\n\n  const tokenData = React.useMemo(() => ({\n    address: tokenFilter || '',\n    name: '',\n    icon_url: '',\n    symbol: '',\n    type: 'ERC-20' as const,\n  }), [ tokenFilter ]);\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const numActiveFilters = (filters.type?.length || 0) + (filters.filter ? 1 : 0);\n  const isActionBarHidden = !tokenFilter && !numActiveFilters && !data?.items.length && !currentAddress;\n\n  const content = data?.items ? (\n    <>\n      <Hide below=\"lg\" ssr={ false }>\n        <TokenTransferTable\n          data={ data?.items }\n          baseAddress={ currentAddress }\n          showTxInfo\n          top={ isActionBarHidden ? 0 : ACTION_BAR_HEIGHT_DESKTOP }\n          enableTimeIncrement\n          showSocketInfo={ pagination.page === 1 && !tokenFilter }\n          socketInfoAlert={ socketAlert }\n          socketInfoNum={ newItemsCount }\n          isLoading={ isPlaceholderData }\n        />\n      </Hide>\n      <Show below=\"lg\" ssr={ false }>\n        { pagination.page === 1 && !tokenFilter && (\n          <SocketNewItemsNotice.Mobile\n            url={ window.location.href }\n            num={ newItemsCount }\n            alert={ socketAlert }\n            type=\"token_transfer\"\n            isLoading={ isPlaceholderData }\n          />\n        ) }\n        <TokenTransferList\n          data={ data?.items }\n          baseAddress={ currentAddress }\n          showTxInfo\n          enableTimeIncrement\n          isLoading={ isPlaceholderData }\n        />\n      </Show>\n    </>\n  ) : null;\n\n  const tokenFilterComponent = tokenFilter && (\n    <Flex alignItems=\"center\" flexWrap=\"wrap\" mb={{ base: isActionBarHidden ? 3 : 6, lg: 0 }} mr={ 4 }>\n      <Text whiteSpace=\"nowrap\" mr={ 2 } py={ 1 }>Filtered by token</Text>\n      <Flex alignItems=\"center\" py={ 1 }>\n        <TokenEntity.Icon token={ tokenData } isLoading={ isPlaceholderData }/>\n        { isMobile ? <HashStringShorten hash={ tokenFilter }/> : tokenFilter }\n        <ResetIconButton onClick={ resetTokenFilter }/>\n      </Flex>\n    </Flex>\n  );\n\n  const actionBar = (\n    <>\n      { isMobile && tokenFilterComponent }\n      { !isActionBarHidden && (\n        <ActionBar mt={ -6 }>\n          { !isMobile && tokenFilterComponent }\n          { !tokenFilter && (\n            <TokenTransferFilter\n              defaultTypeFilters={ filters.type }\n              onTypeFilterChange={ handleTypeFilterChange }\n              appliedFiltersNum={ numActiveFilters }\n              withAddressFilter\n              onAddressFilterChange={ handleAddressFilterChange }\n              defaultAddressFilter={ filters.filter }\n              isLoading={ isPlaceholderData }\n            />\n          ) }\n          { currentAddress && (\n            <AddressCsvExportLink\n              address={ currentAddress }\n              params={{ type: 'token-transfers', filterType: 'address', filterValue: filters.filter }}\n              ml={{ base: 2, lg: 'auto' }}\n              isLoading={ isPlaceholderData }\n            />\n          ) }\n          <Pagination ml={{ base: 'auto', lg: 8 }} { ...pagination }/>\n        </ActionBar>\n      ) }\n    </>\n  );\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no token transfers.\"\n      filterProps={{\n        emptyFilteredText: `Couldn${ apos }t find any token transfer that matches your query.`,\n        hasActiveFilters: Boolean(numActiveFilters),\n      }}\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default AddressTokenTransfers;\n","import React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\nimport type { TransactionsSortingValue } from 'types/api/transaction';\n\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport getSortParamsFromValue from 'ui/shared/sort/getSortParamsFromValue';\n\nimport TxsContent from './TxsContent';\n\ntype Props = {\n\n  query: QueryWithPagesResult<'address_txs'>;\n  showBlockInfo?: boolean;\n  showSocketInfo?: boolean;\n  socketInfoAlert?: string;\n  socketInfoNum?: number;\n  currentAddress?: string;\n  filter?: React.ReactNode;\n  filterValue?: AddressFromToFilter;\n  enableTimeIncrement?: boolean;\n  top?: number;\n  sorting: TransactionsSortingValue | undefined;\n  setSort: (value?: TransactionsSortingValue) => void;\n};\n\nconst TxsWithAPISorting = ({\n  filter,\n  filterValue,\n  query,\n  showBlockInfo = true,\n  showSocketInfo = true,\n  socketInfoAlert,\n  socketInfoNum,\n  currentAddress,\n  enableTimeIncrement,\n  top,\n  sorting,\n  setSort,\n}: Props) => {\n\n  const handleSortChange = React.useCallback((value?: TransactionsSortingValue) => {\n    setSort(value);\n    query.onSortingChange(getSortParamsFromValue(value));\n  }, [ setSort, query ]);\n\n  return (\n    <TxsContent\n      filter={ filter }\n      filterValue={ filterValue }\n      showBlockInfo={ showBlockInfo }\n      showSocketInfo={ showSocketInfo }\n      socketInfoAlert={ socketInfoAlert }\n      socketInfoNum={ socketInfoNum }\n      currentAddress={ currentAddress }\n      enableTimeIncrement={ enableTimeIncrement }\n      top={ top }\n      items={ query.data?.items }\n      isPlaceholderData={ query.isPlaceholderData }\n      isError={ query.isError }\n      setSorting={ handleSortChange }\n      sort={ sorting }\n      query={ query }\n    />\n  );\n};\n\nexport default TxsWithAPISorting;\n","import { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { AddressFromToFilter, AddressTransactionsResponse } from 'types/api/address';\nimport { AddressFromToFilterValues } from 'types/api/address';\nimport type { Transaction, TransactionsSortingField, TransactionsSortingValue, TransactionsSorting } from 'types/api/transaction';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport getFilterValueFromQuery from 'lib/getFilterValueFromQuery';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport { TX } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport getSortParamsFromValue from 'ui/shared/sort/getSortParamsFromValue';\nimport getSortValueFromQuery from 'ui/shared/sort/getSortValueFromQuery';\nimport { sortTxsFromSocket } from 'ui/txs/sortTxs';\nimport TxsWithAPISorting from 'ui/txs/TxsWithAPISorting';\nimport { SORT_OPTIONS } from 'ui/txs/useTxsSort';\n\nimport AddressCsvExportLink from './AddressCsvExportLink';\nimport AddressTxsFilter from './AddressTxsFilter';\n\nconst OVERLOAD_COUNT = 75;\n\nconst getFilterValue = (getFilterValueFromQuery<AddressFromToFilter>).bind(null, AddressFromToFilterValues);\n\nconst matchFilter = (filterValue: AddressFromToFilter, transaction: Transaction, address?: string) => {\n  if (!filterValue) {\n    return true;\n  }\n\n  if (filterValue === 'from') {\n    return transaction.from.hash === address;\n  }\n\n  if (filterValue === 'to') {\n    return transaction.to?.hash === address;\n  }\n};\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n  // for tests only\n  overloadCount?: number;\n};\n\nconst AddressTxs = ({ scrollRef, overloadCount = OVERLOAD_COUNT, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const queryClient = useQueryClient();\n  const isMounted = useIsMounted();\n\n  const [ socketAlert, setSocketAlert ] = React.useState('');\n  const [ newItemsCount, setNewItemsCount ] = React.useState(0);\n  const [ sort, setSort ] = React.useState<TransactionsSortingValue | undefined>(getSortValueFromQuery<TransactionsSortingValue>(router.query, SORT_OPTIONS));\n\n  const isMobile = useIsMobile();\n  const currentAddress = getQueryParamString(router.query.hash);\n\n  const [ filterValue, setFilterValue ] = React.useState<AddressFromToFilter>(getFilterValue(router.query.filter));\n\n  const addressTxsQuery = useQueryWithPages({\n    resourceName: 'address_txs',\n    pathParams: { hash: currentAddress },\n    filters: { filter: filterValue },\n    sorting: getSortParamsFromValue<TransactionsSortingValue, TransactionsSortingField, TransactionsSorting['order']>(sort),\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'address_txs'>(TX, 50, { next_page_params: {\n        block_number: 9005713,\n        index: 5,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  const handleFilterChange = React.useCallback((val: string | Array<string>) => {\n\n    const newVal = getFilterValue(val);\n    setFilterValue(newVal);\n    addressTxsQuery.onFilterChange({ filter: newVal });\n  }, [ addressTxsQuery ]);\n\n  const handleNewSocketMessage: SocketMessage.AddressTxs['handler'] = React.useCallback((payload) => {\n    setSocketAlert('');\n\n    queryClient.setQueryData(\n      getResourceKey('address_txs', { pathParams: { hash: currentAddress }, queryParams: { filter: filterValue } }),\n      (prevData: AddressTransactionsResponse | undefined) => {\n        if (!prevData) {\n          return;\n        }\n\n        const newItems: Array<Transaction> = [];\n        let newCount = 0;\n\n        payload.transactions.forEach(tx => {\n          const currIndex = prevData.items.findIndex((item) => item.hash === tx.hash);\n\n          if (currIndex > -1) {\n            prevData.items[currIndex] = tx;\n          } else {\n            if (matchFilter(filterValue, tx, currentAddress)) {\n              if (newItems.length + prevData.items.length >= overloadCount) {\n                newCount++;\n              } else {\n                newItems.push(tx);\n              }\n            }\n          }\n        });\n\n        if (newCount > 0) {\n          setNewItemsCount(prev => prev + newCount);\n        }\n\n        return {\n          ...prevData,\n          items: [\n            ...newItems,\n            ...prevData.items,\n          ].sort(sortTxsFromSocket(sort)),\n        };\n      });\n  }, [ currentAddress, filterValue, overloadCount, queryClient, sort ]);\n\n  const handleSocketClose = React.useCallback(() => {\n    setSocketAlert('Connection is lost. Please refresh the page to load new transactions.');\n  }, []);\n\n  const handleSocketError = React.useCallback(() => {\n    setSocketAlert('An error has occurred while fetching new transactions. Please refresh the page.');\n  }, []);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ currentAddress?.toLowerCase() }`,\n    onSocketClose: handleSocketClose,\n    onSocketError: handleSocketError,\n    isDisabled: addressTxsQuery.pagination.page !== 1 || addressTxsQuery.isPlaceholderData,\n  });\n\n  useSocketMessage({\n    channel,\n    event: 'transaction',\n    handler: handleNewSocketMessage,\n  });\n\n  useSocketMessage({\n    channel,\n    event: 'pending_transaction',\n    handler: handleNewSocketMessage,\n  });\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const filter = (\n    <AddressTxsFilter\n      defaultFilter={ filterValue }\n      onFilterChange={ handleFilterChange }\n      hasActiveFilter={ Boolean(filterValue) }\n      isLoading={ addressTxsQuery.pagination.isLoading }\n    />\n  );\n\n  const csvExportLink = (\n    <AddressCsvExportLink\n      address={ currentAddress }\n      params={{ type: 'transactions', filterType: 'address', filterValue }}\n      ml=\"auto\"\n      isLoading={ addressTxsQuery.pagination.isLoading }\n    />\n  );\n\n  return (\n    <>\n      { !isMobile && (\n        <ActionBar mt={ -6 }>\n          { filter }\n          { currentAddress && csvExportLink }\n          <Pagination { ...addressTxsQuery.pagination } ml={ 8 }/>\n        </ActionBar>\n      ) }\n      <TxsWithAPISorting\n        filter={ filter }\n        filterValue={ filterValue }\n        query={ addressTxsQuery }\n        currentAddress={ typeof currentAddress === 'string' ? currentAddress : undefined }\n        enableTimeIncrement\n        showSocketInfo={ addressTxsQuery.pagination.page === 1 }\n        socketInfoAlert={ socketAlert }\n        socketInfoNum={ newItemsCount }\n        top={ ACTION_BAR_HEIGHT_DESKTOP }\n        sorting={ sort }\n        setSort={ setSort }\n      />\n    </>\n  );\n};\n\nexport default AddressTxs;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { USER_OPS_ITEM } from 'stubs/userOps';\nimport { generateListStub } from 'stubs/utils';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport UserOpsContent from 'ui/userOps/UserOpsContent';\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\n\nconst AddressUserOps = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const hash = getQueryParamString(router.query.hash);\n\n  const userOpsQuery = useQueryWithPages({\n    resourceName: 'user_ops',\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled && Boolean(hash),\n      placeholderData: generateListStub<'user_ops'>(USER_OPS_ITEM, 50, { next_page_params: {\n        page_token: '10355938,0x5956a847d8089e254e02e5111cad6992b99ceb9e5c2dc4343fd53002834c4dc6',\n        page_size: 50,\n      } }),\n    },\n    filters: { sender: hash },\n  });\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  return <UserOpsContent query={ userOpsQuery } showSender={ false }/>;\n};\n\nexport default AddressUserOps;\n","import { Show, Hide } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { generateListStub } from 'stubs/utils';\nimport { WITHDRAWAL } from 'stubs/withdrawals';\nimport ActionBar, { ACTION_BAR_HEIGHT_DESKTOP } from 'ui/shared/ActionBar';\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport BeaconChainWithdrawalsListItem from 'ui/withdrawals/beaconChain/BeaconChainWithdrawalsListItem';\nimport BeaconChainWithdrawalsTable from 'ui/withdrawals/beaconChain/BeaconChainWithdrawalsTable';\n\ntype Props = {\n  scrollRef?: React.RefObject<HTMLDivElement>;\n  shouldRender?: boolean;\n  isQueryEnabled?: boolean;\n};\nconst AddressWithdrawals = ({ scrollRef, shouldRender = true, isQueryEnabled = true }: Props) => {\n  const router = useRouter();\n  const isMounted = useIsMounted();\n\n  const hash = getQueryParamString(router.query.hash);\n\n  const { data, isPlaceholderData, isError, pagination } = useQueryWithPages({\n    resourceName: 'address_withdrawals',\n    pathParams: { hash },\n    scrollRef,\n    options: {\n      enabled: isQueryEnabled,\n      placeholderData: generateListStub<'address_withdrawals'>(WITHDRAWAL, 50, { next_page_params: {\n        index: 5,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  if (!isMounted || !shouldRender) {\n    return null;\n  }\n\n  const content = data?.items ? (\n    <>\n      <Show below=\"lg\" ssr={ false }>\n        { data.items.map((item, index) => (\n          <BeaconChainWithdrawalsListItem\n            key={ item.index + Number(isPlaceholderData ? index : '') }\n            item={ item }\n            view=\"address\"\n            isLoading={ isPlaceholderData }\n          />\n        )) }\n      </Show>\n      <Hide below=\"lg\" ssr={ false }>\n        <BeaconChainWithdrawalsTable\n          items={ data.items }\n          view=\"address\"\n          top={ pagination.isVisible ? ACTION_BAR_HEIGHT_DESKTOP : 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </Hide>\n    </>\n  ) : null ;\n\n  const actionBar = pagination.isVisible ? (\n    <ActionBar mt={ -6 }>\n      <Pagination ml=\"auto\" { ...pagination }/>\n    </ActionBar>\n  ) : null;\n\n  return (\n    <DataListDisplay\n      isError={ isError }\n      items={ data?.items }\n      emptyText=\"There are no withdrawals for this address.\"\n      content={ content }\n      actionBar={ actionBar }\n    />\n  );\n};\n\nexport default AddressWithdrawals;\n","import { chakra, Tooltip, IconButton, useDisclosure } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport usePreventFocusAfterModalClosing from 'lib/hooks/usePreventFocusAfterModalClosing';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport IconSvg from 'ui/shared/IconSvg';\nimport AuthGuard from 'ui/snippets/auth/AuthGuard';\nimport WatchlistAddModal from 'ui/watchlist/AddressModal/AddressModal';\nimport DeleteAddressModal from 'ui/watchlist/DeleteAddressModal';\n\ninterface Props {\n  className?: string;\n  hash: string;\n  watchListId: number | null | undefined;\n}\n\nconst AddressFavoriteButton = ({ className, hash, watchListId }: Props) => {\n  const addModalProps = useDisclosure();\n  const deleteModalProps = useDisclosure();\n  const queryClient = useQueryClient();\n  const router = useRouter();\n  const onFocusCapture = usePreventFocusAfterModalClosing();\n\n  const handleAddToFavorite = React.useCallback(() => {\n    watchListId ? deleteModalProps.onOpen() : addModalProps.onOpen();\n    !watchListId && mixpanel.logEvent(mixpanel.EventTypes.PAGE_WIDGET, { Type: 'Add to watchlist' });\n  }, [ watchListId, deleteModalProps, addModalProps ]);\n\n  const handleAddOrDeleteSuccess = React.useCallback(async() => {\n    const queryKey = getResourceKey('address', { pathParams: { hash: router.query.hash?.toString() } });\n    await queryClient.refetchQueries({ queryKey });\n    addModalProps.onClose();\n  }, [ addModalProps, queryClient, router.query.hash ]);\n\n  const handleAddModalClose = React.useCallback(() => {\n    addModalProps.onClose();\n  }, [ addModalProps ]);\n\n  const handleDeleteModalClose = React.useCallback(() => {\n    deleteModalProps.onClose();\n  }, [ deleteModalProps ]);\n\n  const formData = React.useMemo(() => {\n    if (typeof watchListId !== 'number') {\n      return { address_hash: hash };\n    }\n\n    return {\n      address_hash: hash,\n      id: watchListId,\n    };\n  }, [ hash, watchListId ]);\n\n  if (!config.features.account.isEnabled) {\n    return null;\n  }\n\n  return (\n    <>\n      <AuthGuard onAuthSuccess={ handleAddToFavorite }>\n        { ({ onClick }) => (\n          <Tooltip label={ `${ watchListId ? 'Remove address from Watch list' : 'Add address to Watch list' }` }>\n            <IconButton\n              isActive={ Boolean(watchListId) }\n              className={ className }\n              aria-label=\"edit\"\n              variant=\"outline\"\n              size=\"sm\"\n              pl=\"6px\"\n              pr=\"6px\"\n              flexShrink={ 0 }\n              onClick={ onClick }\n              icon={ <IconSvg name={ watchListId ? 'star_filled' : 'star_outline' } boxSize={ 5 }/> }\n              onFocusCapture={ onFocusCapture }\n            />\n          </Tooltip>\n        ) }\n      </AuthGuard>\n      <WatchlistAddModal\n        { ...addModalProps }\n        isAdd\n        onClose={ handleAddModalClose }\n        onSuccess={ handleAddOrDeleteSuccess }\n        data={ formData }\n      />\n      { formData.id && (\n        <DeleteAddressModal\n          { ...deleteModalProps }\n          onClose={ handleDeleteModalClose }\n          data={ formData }\n          onSuccess={ handleAddOrDeleteSuccess }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default chakra(AddressFavoriteButton);\n","import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Hide,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Show,\n  useDisclosure,\n  chakra,\n} from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { clamp } from 'es-toolkit';\nimport React from 'react';\n\nimport type * as bens from '@blockscout/bens-types';\n\nimport { route } from 'nextjs-routes';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport dayjs from 'lib/date/dayjs';\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport EnsEntity from 'ui/shared/entities/ens/EnsEntity';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport PopoverTriggerTooltip from 'ui/shared/PopoverTriggerTooltip';\n\ninterface Props {\n  query: UseQueryResult<bens.LookupAddressResponse, ResourceError<unknown>>;\n  addressHash: string;\n  mainDomainName: string | null | undefined;\n}\n\nconst DomainsGrid = ({ data }: { data: Array<bens.Domain> }) => {\n  return (\n    <Grid\n      templateColumns={{ base: `repeat(${ clamp(data.length, 1, 2) }, 1fr)`, lg: `repeat(${ clamp(data.length, 1, 3) }, 1fr)` }}\n      columnGap={ 8 }\n      rowGap={ 4 }\n      mt={ 2 }\n    >\n      { data.slice(0, 9).map((domain) => <EnsEntity key={ domain.id } domain={ domain.name } protocol={ domain.protocol } noCopy/>) }\n    </Grid>\n  );\n};\n\nconst AddressEnsDomains = ({ query, addressHash, mainDomainName }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const { data, isPending, isError } = query;\n\n  if (isError) {\n    return null;\n  }\n\n  if (isPending) {\n    return <Skeleton h={ 8 } w={{ base: '50px', xl: '120px' }} borderRadius=\"base\"/>;\n  }\n\n  if (data.items.length === 0) {\n    return null;\n  }\n\n  const mainDomain = data.items.find((domain) => mainDomainName && domain.name === mainDomainName);\n  const ownedDomains = data.items.filter((domain) => {\n    if (mainDomainName && domain.name === mainDomainName) {\n      return false;\n    }\n\n    // exclude resolved address\n    if (domain.resolved_address && domain.resolved_address.hash.toLowerCase() === addressHash.toLowerCase()) {\n      return false;\n    }\n\n    if (domain.owner && domain.owner.hash.toLowerCase() === addressHash.toLowerCase()) {\n      return true;\n    }\n\n    // include wrapped owner\n    if (domain.wrapped_owner?.hash.toLowerCase() === addressHash.toLowerCase()) {\n      return !domain.resolved_address || domain.resolved_address.hash.toLowerCase() !== addressHash.toLowerCase();\n    }\n\n    return false;\n  });\n  const resolvedDomains = data.items.filter((domain) =>\n    domain.resolved_address &&\n    domain.resolved_address.hash.toLowerCase() === addressHash.toLowerCase() &&\n    domain.name !== mainDomainName,\n  );\n\n  const totalRecords = data.items.length > 40 ? '40+' : data.items.length;\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <PopoverTriggerTooltip label=\"List of names resolved or owned by this address\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            onClick={ onToggle }\n            isActive={ isOpen }\n            aria-label=\"Address domains\"\n            fontWeight={ 500 }\n            px={ 2 }\n            h=\"32px\"\n            flexShrink={ 0 }\n          >\n            <IconSvg name=\"ENS_slim\" boxSize={ 5 }/>\n            <Show above=\"xl\">\n              <chakra.span ml={ 1 }>{ totalRecords } Domain{ data.items.length > 1 ? 's' : '' }</chakra.span>\n            </Show>\n            <Hide above=\"xl\">\n              <chakra.span ml={ 1 }>{ totalRecords }</chakra.span>\n            </Hide>\n          </Button>\n        </PopoverTriggerTooltip>\n      </PopoverTrigger>\n      <PopoverContent w={{ base: '100vw', lg: '500px' }}>\n        <PopoverBody px={ 6 } py={ 5 } fontSize=\"sm\" display=\"flex\" flexDir=\"column\" rowGap={ 5 } alignItems=\"flex-start\">\n          { mainDomain && (\n            <Box w=\"100%\">\n              <chakra.span color=\"text_secondary\" fontSize=\"xs\">Primary*</chakra.span>\n              <Flex alignItems=\"center\" fontSize=\"md\" mt={ 2 }>\n                <EnsEntity domain={ mainDomain.name } protocol={ mainDomain.protocol } fontWeight={ 600 } noCopy/>\n                { mainDomain.expiry_date &&\n                    <chakra.span color=\"text_secondary\" whiteSpace=\"pre\"> (expires { dayjs(mainDomain.expiry_date).fromNow() })</chakra.span> }\n              </Flex>\n            </Box>\n          ) }\n          { ownedDomains.length > 0 && (\n            <div>\n              <chakra.span color=\"text_secondary\" fontSize=\"xs\">Owned by this address</chakra.span>\n              <DomainsGrid data={ ownedDomains }/>\n            </div>\n          ) }\n          { resolvedDomains.length > 0 && (\n            <div>\n              <chakra.span color=\"text_secondary\" fontSize=\"xs\">Resolved to this address</chakra.span>\n              <DomainsGrid data={ resolvedDomains }/>\n            </div>\n          ) }\n          { (ownedDomains.length > 9 || resolvedDomains.length > 9) && (\n            <LinkInternal\n              href={ route({ pathname: '/name-domains', query: { owned_by: 'true', resolved_to: 'true', address: addressHash } }) }\n            >\n              <span> More results</span>\n              <chakra.span color=\"text_secondary\"> ({ totalRecords })</chakra.span>\n            </LinkInternal>\n          ) }\n          { mainDomain && (\n            <chakra.span fontSize=\"xs\" mt={ -1 }>\n              *A domain name is not necessarily held by a person popularly associated with the name\n            </chakra.span>\n          ) }\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(AddressEnsDomains);\n","import * as v from 'valibot';\n\nexport const SolidityScanIssueSeverityDistributionSchema = v.object({\n  critical: v.number(),\n  gas: v.number(),\n  high: v.number(),\n  informational: v.number(),\n  low: v.number(),\n  medium: v.number(),\n});\n\nexport const SolidityScanSchema = v.object({\n  scan_report: v.object({\n    contractname: v.string(),\n    scan_status: v.string(),\n    scan_summary: v.object({\n      score_v2: v.string(),\n      issue_severity_distribution: SolidityScanIssueSeverityDistributionSchema,\n    }),\n    scanner_reference_url: v.string(),\n  }),\n});\n\nexport type SolidityScanReport = v.InferOutput<typeof SolidityScanSchema>;\nexport type SolidityScanReportSeverityDistribution = v.InferOutput<typeof SolidityScanIssueSeverityDistributionSchema>;\n","import React from 'react';\nimport * as v from 'valibot';\n\nimport buildUrl from 'lib/api/buildUrl';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { SOLIDITY_SCAN_REPORT } from 'stubs/contract';\n\nimport { SolidityScanSchema } from './schema';\n\ninterface Params {\n  hash: string;\n}\n\nconst RESOURCE_NAME = 'contract_solidity_scan_report';\nconst ERROR_NAME = 'Invalid response schema';\n\nexport default function useFetchReport({ hash }: Params) {\n  const query = useApiQuery(RESOURCE_NAME, {\n    pathParams: { hash },\n    queryOptions: {\n      select: (response) => {\n        const parsedResponse = v.safeParse(SolidityScanSchema, response);\n\n        if (!parsedResponse.success) {\n          throw Error(ERROR_NAME);\n        }\n\n        return parsedResponse.output;\n      },\n      enabled: Boolean(hash),\n      placeholderData: SOLIDITY_SCAN_REPORT,\n      retry: 0,\n    },\n  });\n\n  const errorMessage = query.error && 'message' in query.error ? query.error.message : undefined;\n\n  React.useEffect(() => {\n    if (errorMessage === ERROR_NAME) {\n      fetch('/node-api/monitoring/invalid-api-schema', {\n        method: 'POST',\n        body: JSON.stringify({\n          resource: RESOURCE_NAME,\n          url: buildUrl(RESOURCE_NAME, { hash }, undefined, true),\n        }),\n      });\n    }\n  }, [ errorMessage, hash ]);\n\n  return query;\n}\n","import { Box, Text, Icon, PopoverTrigger, PopoverContent, PopoverBody, useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\n\n// This icon doesn't work properly when it is in the sprite\n// Probably because of the gradient\n// eslint-disable-next-line no-restricted-imports\nimport solidityScanIcon from 'icons/brands/solidity_scan.svg';\nimport useFetchReport from 'lib/solidityScan/useFetchReport';\nimport Popover from 'ui/shared/chakra/Popover';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport SolidityscanReportButton from 'ui/shared/solidityscanReport/SolidityscanReportButton';\nimport SolidityscanReportDetails from 'ui/shared/solidityscanReport/SolidityscanReportDetails';\nimport SolidityscanReportScore from 'ui/shared/solidityscanReport/SolidityscanReportScore';\n\ninterface Props {\n  hash: string;\n}\n\nconst SolidityscanReport = ({ hash }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const { data, isPlaceholderData, isError } = useFetchReport({ hash });\n\n  if (isError || !data) {\n    return null;\n  }\n\n  const score = Number(data.scan_report.scan_summary.score_v2);\n\n  if (!score) {\n    return null;\n  }\n\n  const vulnerabilities = data.scan_report.scan_summary.issue_severity_distribution;\n  const vulnerabilitiesCounts = vulnerabilities ? Object.values(vulnerabilities) : [];\n  const vulnerabilitiesCount = vulnerabilitiesCounts.reduce((acc, val) => acc + val, 0);\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <SolidityscanReportButton\n          score={ score }\n          isLoading={ isPlaceholderData }\n          onClick={ onToggle }\n          isActive={ isOpen }\n        />\n      </PopoverTrigger>\n      <PopoverContent w={{ base: '100vw', lg: '328px' }}>\n        <PopoverBody px=\"26px\" py=\"20px\" fontSize=\"sm\">\n          <Box mb={ 5 } lineHeight=\"25px\">\n            Contract analyzed for 240+ vulnerability patterns by\n            <Icon as={ solidityScanIcon } mr={ 1 } ml=\"6px\" w=\"23px\" h=\"20px\" display=\"inline-block\" verticalAlign=\"middle\"/>\n            <Text fontWeight={ 600 } display=\"inline-block\">SolidityScan</Text>\n          </Box>\n          <SolidityscanReportScore score={ score } mb={ 5 }/>\n          { vulnerabilities && vulnerabilitiesCount > 0 && (\n            <Box mb={ 5 }>\n              <Text py=\"7px\" variant=\"secondary\" fontSize=\"xs\" fontWeight={ 500 }>Vulnerabilities distribution</Text>\n              <SolidityscanReportDetails vulnerabilities={ vulnerabilities } vulnerabilitiesCount={ vulnerabilitiesCount }/>\n            </Box>\n          ) }\n          <LinkExternal href={ data.scan_report.scanner_reference_url }>View full report</LinkExternal>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(SolidityscanReport);\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport { fromBech32Address, isBech32Address } from 'lib/address/bech32';\n\nexport default function useCheckAddressFormat(hash: string) {\n  const router = useRouter();\n  const hasBech32Format = config.UI.views.address.hashFormat.availableFormats.includes('bech32') && isBech32Address(hash);\n  const [ isLoading, setIsLoading ] = React.useState(hasBech32Format);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      return;\n    }\n\n    const base16Hash = fromBech32Address(hash);\n    if (base16Hash !== hash) {\n      router.replace({ pathname: '/address/[hash]', query: { ...router.query, hash: base16Hash } });\n    } else {\n      setIsLoading(false);\n    }\n  }, [ hash, isLoading, router ]);\n\n  return isLoading;\n}\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\n\nconst DOMAIN_NAME_REGEXP = /.\\../;\n\nexport default function useCheckDomainNameParam(hashOrDomainName: string) {\n  const router = useRouter();\n  const maybeDomainName = DOMAIN_NAME_REGEXP.test(hashOrDomainName);\n  const isQueryEnabled = config.features.nameService.isEnabled && maybeDomainName;\n  const [ isLoading, setIsLoading ] = React.useState(isQueryEnabled);\n\n  const domainLookupQuery = useApiQuery('domains_lookup', {\n    pathParams: { chainId: config.chain.id },\n    queryParams: {\n      name: hashOrDomainName,\n      only_active: false,\n    },\n    queryOptions: {\n      enabled: isQueryEnabled,\n    },\n  });\n\n  React.useEffect(() => {\n    if (domainLookupQuery.isPending) {\n      return;\n    }\n\n    const firstDomainAddress = domainLookupQuery.data?.items[0]?.resolved_address?.hash;\n    if (firstDomainAddress) {\n      router.replace({ pathname: '/address/[hash]', query: { hash: firstDomainAddress } });\n    } else {\n      setIsLoading(false);\n    }\n  }, [ domainLookupQuery.isPending, domainLookupQuery.data, router ]);\n\n  React.useEffect(() => {\n    if (!maybeDomainName) {\n      setIsLoading(false);\n    }\n  }, [ maybeDomainName ]);\n\n  return isLoading;\n}\n","import { Box, Flex, HStack, useColorModeValue } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { EntityTag } from 'ui/shared/EntityTags/types';\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport config from 'configs/app';\nimport getCheckedSummedAddress from 'lib/address/getCheckedSummedAddress';\nimport useAddressMetadataInfoQuery from 'lib/address/useAddressMetadataInfoQuery';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport useAddressProfileApiQuery from 'lib/hooks/useAddressProfileApiQuery';\nimport useIsSafeAddress from 'lib/hooks/useIsSafeAddress';\nimport getNetworkValidationActionText from 'lib/networks/getNetworkValidationActionText';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport useFetchXStarScore from 'lib/xStarScore/useFetchXStarScore';\nimport { ADDRESS_TABS_COUNTERS } from 'stubs/address';\nimport { USER_OPS_ACCOUNT } from 'stubs/userOps';\nimport AddressAccountHistory from 'ui/address/AddressAccountHistory';\nimport AddressBlocksValidated from 'ui/address/AddressBlocksValidated';\nimport AddressCoinBalance from 'ui/address/AddressCoinBalance';\nimport AddressContract from 'ui/address/AddressContract';\nimport AddressDetails from 'ui/address/AddressDetails';\nimport AddressEpochRewards from 'ui/address/AddressEpochRewards';\nimport AddressInternalTxs from 'ui/address/AddressInternalTxs';\nimport AddressLogs from 'ui/address/AddressLogs';\nimport AddressMud from 'ui/address/AddressMud';\nimport AddressTokens from 'ui/address/AddressTokens';\nimport AddressTokenTransfers from 'ui/address/AddressTokenTransfers';\nimport AddressTxs from 'ui/address/AddressTxs';\nimport AddressUserOps from 'ui/address/AddressUserOps';\nimport AddressWithdrawals from 'ui/address/AddressWithdrawals';\nimport useContractTabs from 'ui/address/contract/useContractTabs';\nimport { CONTRACT_TAB_IDS } from 'ui/address/contract/utils';\nimport AddressFavoriteButton from 'ui/address/details/AddressFavoriteButton';\nimport AddressMetadataAlert from 'ui/address/details/AddressMetadataAlert';\nimport AddressQrCode from 'ui/address/details/AddressQrCode';\nimport AddressEnsDomains from 'ui/address/ensDomains/AddressEnsDomains';\nimport SolidityscanReport from 'ui/address/SolidityscanReport';\nimport useAddressQuery from 'ui/address/utils/useAddressQuery';\nimport useCheckAddressFormat from 'ui/address/utils/useCheckAddressFormat';\nimport useCheckDomainNameParam from 'ui/address/utils/useCheckDomainNameParam';\nimport AccountActionsMenu from 'ui/shared/AccountActionsMenu/AccountActionsMenu';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport EnsEntity from 'ui/shared/entities/ens/EnsEntity';\nimport EntityTags from 'ui/shared/EntityTags/EntityTags';\nimport formatUserTags from 'ui/shared/EntityTags/formatUserTags';\nimport sortEntityTags from 'ui/shared/EntityTags/sortEntityTags';\nimport IconSvg from 'ui/shared/IconSvg';\nimport NetworkExplorers from 'ui/shared/NetworkExplorers';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\n\nconst TOKEN_TABS = [ 'tokens_erc20', 'tokens_nfts', 'tokens_nfts_collection', 'tokens_nfts_list' ];\nconst PREDEFINED_TAG_PRIORITY = 100;\n\nconst txInterpretation = config.features.txInterpretation;\nconst addressProfileAPIFeature = config.features.addressProfileAPI;\nconst xScoreFeature = config.features.xStarScore;\n\nconst AddressPageContent = () => {\n  const router = useRouter();\n  const appProps = useAppContext();\n\n  const tabsScrollRef = React.useRef<HTMLDivElement>(null);\n  const hash = getQueryParamString(router.query.hash);\n\n  const checkDomainName = useCheckDomainNameParam(hash);\n  const checkAddressFormat = useCheckAddressFormat(hash);\n  const areQueriesEnabled = !checkDomainName && !checkAddressFormat;\n  const addressQuery = useAddressQuery({ hash, isEnabled: areQueriesEnabled });\n\n  const addressTabsCountersQuery = useApiQuery('address_tabs_counters', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: areQueriesEnabled && Boolean(hash),\n      placeholderData: ADDRESS_TABS_COUNTERS,\n    },\n  });\n\n  const userOpsAccountQuery = useApiQuery('user_ops_account', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: areQueriesEnabled && Boolean(hash) && config.features.userOps.isEnabled,\n      placeholderData: USER_OPS_ACCOUNT,\n    },\n  });\n\n  const mudTablesCountQuery = useApiQuery('address_mud_tables_count', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: config.features.mudFramework.isEnabled && areQueriesEnabled && Boolean(hash),\n      placeholderData: 10,\n    },\n  });\n\n  const addressesForMetadataQuery = React.useMemo(() => ([ hash ].filter(Boolean)), [ hash ]);\n  const addressMetadataQuery = useAddressMetadataInfoQuery(addressesForMetadataQuery, areQueriesEnabled);\n  const userPropfileApiQuery = useAddressProfileApiQuery(hash, addressProfileAPIFeature.isEnabled && areQueriesEnabled);\n\n  const addressEnsDomainsQuery = useApiQuery('addresses_lookup', {\n    pathParams: { chainId: config.chain.id },\n    queryParams: {\n      address: hash,\n      resolved_to: true,\n      owned_by: true,\n      only_active: true,\n      order: 'ASC',\n    },\n    queryOptions: {\n      enabled: Boolean(hash) && config.features.nameService.isEnabled,\n    },\n  });\n  const addressMainDomain = !addressQuery.isPlaceholderData ?\n    addressEnsDomainsQuery.data?.items.find((domain) => domain.name === addressQuery.data?.ens_domain_name) :\n    undefined;\n\n  const isLoading = addressQuery.isPlaceholderData;\n  const isTabsLoading =\n    isLoading ||\n    addressTabsCountersQuery.isPlaceholderData ||\n    (config.features.userOps.isEnabled && userOpsAccountQuery.isPlaceholderData) ||\n    (config.features.mudFramework.isEnabled && mudTablesCountQuery.isPlaceholderData);\n\n  const handleFetchedBytecodeMessage = React.useCallback(() => {\n    addressQuery.refetch();\n  }, [ addressQuery ]);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ hash?.toLowerCase() }`,\n    isDisabled: isTabsLoading || addressQuery.isDegradedData || Boolean(addressQuery.data?.is_contract),\n  });\n  useSocketMessage({\n    channel,\n    event: 'fetched_bytecode',\n    handler: handleFetchedBytecodeMessage,\n  });\n\n  const isSafeAddress = useIsSafeAddress(!addressQuery.isPlaceholderData && addressQuery.data?.is_contract ? hash : undefined);\n  const safeIconColor = useColorModeValue('black', 'white');\n\n  const xStarQuery = useFetchXStarScore({ hash });\n\n  const contractTabs = useContractTabs(\n    addressQuery.data,\n    config.features.mudFramework.isEnabled ? (mudTablesCountQuery.isPlaceholderData || addressQuery.isPlaceholderData) : addressQuery.isPlaceholderData,\n    Boolean(config.features.mudFramework.isEnabled && mudTablesCountQuery.data && mudTablesCountQuery.data > 0),\n  );\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => {\n    return [\n      config.features.mudFramework.isEnabled && mudTablesCountQuery.data && mudTablesCountQuery.data > 0 && {\n        id: 'mud',\n        title: 'MUD',\n        count: mudTablesCountQuery.data,\n        component: <AddressMud scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n      },\n      {\n        id: 'txs',\n        title: 'Transactions',\n        count: addressTabsCountersQuery.data?.transactions_count,\n        component: <AddressTxs scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n      },\n      txInterpretation.isEnabled && txInterpretation.provider === 'noves' ?\n        {\n          id: 'account_history',\n          title: 'Account history',\n          component: <AddressAccountHistory scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n        } :\n        undefined,\n      config.features.userOps.isEnabled && Boolean(userOpsAccountQuery.data?.total_ops) ?\n        {\n          id: 'user_ops',\n          title: 'User operations',\n          count: userOpsAccountQuery.data?.total_ops,\n          component: <AddressUserOps shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n        } :\n        undefined,\n      config.features.beaconChain.isEnabled && addressTabsCountersQuery.data?.withdrawals_count ?\n        {\n          id: 'withdrawals',\n          title: 'Withdrawals',\n          count: addressTabsCountersQuery.data?.withdrawals_count,\n          component: <AddressWithdrawals scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n        } :\n        undefined,\n      {\n        id: 'token_transfers',\n        title: 'Token transfers',\n        count: addressTabsCountersQuery.data?.token_transfers_count,\n        component: <AddressTokenTransfers scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n      },\n      {\n        id: 'tokens',\n        title: 'Tokens',\n        count: addressTabsCountersQuery.data?.token_balances_count,\n        component: <AddressTokens shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n        subTabs: TOKEN_TABS,\n      },\n      {\n        id: 'internal_txns',\n        title: 'Internal txns',\n        count: addressTabsCountersQuery.data?.internal_transactions_count,\n        component: <AddressInternalTxs scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n      },\n      addressTabsCountersQuery.data?.celo_election_rewards_count ? {\n        id: 'epoch_rewards',\n        title: 'Epoch rewards',\n        count: addressTabsCountersQuery.data?.celo_election_rewards_count,\n        component: <AddressEpochRewards scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n      } : undefined,\n      {\n        id: 'coin_balance_history',\n        title: 'Coin balance history',\n        component: <AddressCoinBalance shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n      },\n      addressTabsCountersQuery.data?.validations_count ?\n        {\n          id: 'blocks_validated',\n          title: `Blocks ${ getNetworkValidationActionText() }`,\n          count: addressTabsCountersQuery.data?.validations_count,\n          component: <AddressBlocksValidated scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n        } :\n        undefined,\n      addressTabsCountersQuery.data?.logs_count ?\n        {\n          id: 'logs',\n          title: 'Logs',\n          count: addressTabsCountersQuery.data?.logs_count,\n          component: <AddressLogs scrollRef={ tabsScrollRef } shouldRender={ !isTabsLoading } isQueryEnabled={ areQueriesEnabled }/>,\n        } :\n        undefined,\n\n      addressQuery.data?.is_contract ? {\n        id: 'contract',\n        title: () => {\n          const tabName = addressQuery.data.proxy_type === 'eip7702' ? 'Code' : 'Contract';\n\n          if (addressQuery.data.is_verified) {\n            return (\n              <>\n                <span>{ tabName }</span>\n                <IconSvg name=\"status/success\" boxSize=\"14px\" color=\"green.500\" ml={ 1 }/>\n              </>\n            );\n          }\n\n          return tabName;\n        },\n        component: (\n          <AddressContract\n            tabs={ contractTabs.tabs }\n            shouldRender={ !isTabsLoading }\n            isLoading={ contractTabs.isLoading }\n          />\n        ),\n        subTabs: CONTRACT_TAB_IDS,\n      } : undefined,\n    ].filter(Boolean);\n  }, [\n    addressQuery.data,\n    contractTabs,\n    addressTabsCountersQuery.data,\n    userOpsAccountQuery.data,\n    isTabsLoading,\n    areQueriesEnabled,\n    mudTablesCountQuery.data,\n  ]);\n\n  const usernameApiTag = userPropfileApiQuery.data?.user_profile?.username;\n\n  const tags: Array<EntityTag> = React.useMemo(() => {\n    return [\n      ...(addressQuery.data?.public_tags?.map((tag) => ({ slug: tag.label, name: tag.display_name, tagType: 'custom' as const, ordinal: -1 })) || []),\n      !addressQuery.data?.is_contract ? { slug: 'eoa', name: 'EOA', tagType: 'custom' as const, ordinal: PREDEFINED_TAG_PRIORITY } : undefined,\n      config.features.validators.isEnabled && addressQuery.data?.has_validated_blocks ?\n        { slug: 'validator', name: 'Validator', tagType: 'custom' as const, ordinal: PREDEFINED_TAG_PRIORITY } :\n        undefined,\n      addressQuery.data?.implementations?.length && addressQuery.data?.proxy_type !== 'eip7702' ?\n        { slug: 'proxy', name: 'Proxy', tagType: 'custom' as const, ordinal: PREDEFINED_TAG_PRIORITY } :\n        undefined,\n      addressQuery.data?.implementations?.length && addressQuery.data?.proxy_type === 'eip7702' ?\n        { slug: 'eip7702', name: 'EOA+code', tagType: 'custom' as const, ordinal: PREDEFINED_TAG_PRIORITY } :\n        undefined,\n      addressQuery.data?.token ? { slug: 'token', name: 'Token', tagType: 'custom' as const, ordinal: PREDEFINED_TAG_PRIORITY } : undefined,\n      isSafeAddress ? { slug: 'safe', name: 'Multisig: Safe', tagType: 'custom' as const, ordinal: -10 } : undefined,\n      addressProfileAPIFeature.isEnabled && usernameApiTag ? {\n        slug: 'username_api',\n        name: usernameApiTag,\n        tagType: 'custom' as const,\n        ordinal: 11,\n        meta: {\n          tagIcon: addressProfileAPIFeature.tagIcon,\n          bgColor: addressProfileAPIFeature.tagBgColor,\n          textColor: addressProfileAPIFeature.tagTextColor,\n          tagUrl: addressProfileAPIFeature.tagLinkTemplate ? addressProfileAPIFeature.tagLinkTemplate.replace('{username}', usernameApiTag) : undefined,\n        },\n      } : undefined,\n      config.features.userOps.isEnabled && userOpsAccountQuery.data ?\n        { slug: 'user_ops_acc', name: 'Smart contract wallet', tagType: 'custom' as const, ordinal: PREDEFINED_TAG_PRIORITY } :\n        undefined,\n      config.features.mudFramework.isEnabled && mudTablesCountQuery.data ?\n        { slug: 'mud', name: 'MUD World', tagType: 'custom' as const, ordinal: PREDEFINED_TAG_PRIORITY } :\n        undefined,\n      ...formatUserTags(addressQuery.data),\n      ...(addressMetadataQuery.data?.addresses?.[hash.toLowerCase()]?.tags.filter(tag => tag.tagType !== 'note') || []),\n      !addressQuery.data?.is_contract && xScoreFeature.isEnabled && xStarQuery.data?.data.level ?\n        {\n          slug: 'xstar',\n          name: `XHS ${ xStarQuery.data.data.level } level`,\n          tagType: 'custom' as const,\n          ordinal: 12,\n          meta: {\n            tooltipTitle: 'XStar humanity levels',\n            tooltipDescription:\n              'XStar looks for off-chain information about an address and interpret it as a XHS score. Different score means different humanity levels.',\n            tooltipUrl: xScoreFeature.url,\n          },\n        } :\n        undefined,\n    ].filter(Boolean).sort(sortEntityTags);\n  }, [\n    addressMetadataQuery.data,\n    addressQuery.data,\n    hash,\n    isSafeAddress,\n    userOpsAccountQuery.data,\n    mudTablesCountQuery.data,\n    usernameApiTag,\n    xStarQuery.data?.data,\n  ]);\n\n  const titleContentAfter = (\n    <EntityTags\n      tags={ tags }\n      isLoading={\n        isLoading ||\n        (config.features.userOps.isEnabled && userOpsAccountQuery.isPlaceholderData) ||\n        (config.features.addressMetadata.isEnabled && addressMetadataQuery.isPending) ||\n        (addressProfileAPIFeature.isEnabled && userPropfileApiQuery.isPending) ||\n        (xScoreFeature.isEnabled && xStarQuery.isPlaceholderData)\n      }\n    />\n  );\n\n  const content = (addressQuery.isError || addressQuery.isDegradedData) ?\n    null :\n    <RoutedTabs tabs={ tabs } tabListProps={{ mt: 6 }} isLoading={ isTabsLoading }/>;\n\n  const backLink = React.useMemo(() => {\n    if (appProps.referrer && appProps.referrer.includes('/accounts')) {\n      return {\n        label: 'Back to top accounts list',\n        url: appProps.referrer,\n      };\n    }\n\n    if (appProps.referrer && appProps.referrer.includes('/mud-worlds')) {\n      return {\n        label: 'Back to MUD worlds list',\n        url: appProps.referrer,\n      };\n    }\n\n    return;\n  }, [ appProps.referrer ]);\n\n  // API always returns hash in check-summed format except for addresses that are not in the database\n  // In this case it returns 404 with empty payload, so we calculate check-summed hash on the client\n  const checkSummedHash = React.useMemo(() => addressQuery.data?.hash ?? getCheckedSummedAddress(hash), [ hash, addressQuery.data?.hash ]);\n\n  const titleSecondRow = (\n    <Flex alignItems=\"center\" w=\"100%\" columnGap={ 2 } rowGap={ 2 } flexWrap={{ base: 'wrap', lg: 'nowrap' }}>\n      { addressQuery.data?.ens_domain_name && (\n        <EnsEntity\n          domain={ addressQuery.data?.ens_domain_name }\n          protocol={ !addressEnsDomainsQuery.isPending ? addressMainDomain?.protocol : null }\n          fontFamily=\"heading\"\n          fontSize=\"lg\"\n          fontWeight={ 500 }\n          mr={ 1 }\n          maxW=\"300px\"\n        />\n      ) }\n      <AddressEntity\n        address={{\n          ...addressQuery.data,\n          hash: checkSummedHash,\n          name: '',\n          ens_domain_name: '',\n          implementations: null,\n        }}\n        isLoading={ isLoading }\n        fontFamily=\"heading\"\n        fontSize=\"lg\"\n        fontWeight={ 500 }\n        noLink\n        isSafeAddress={ isSafeAddress }\n        icon={{ color: isSafeAddress ? safeIconColor : undefined }}\n        mr={ 4 }\n      />\n      { !isLoading && addressQuery.data?.is_contract && addressQuery.data.token &&\n        <AddressAddToWallet token={ addressQuery.data.token } variant=\"button\"/> }\n      { !isLoading && !addressQuery.data?.is_contract && config.features.account.isEnabled && (\n        <AddressFavoriteButton hash={ hash } watchListId={ addressQuery.data?.watchlist_address_id }/>\n      ) }\n      <AddressQrCode address={{ hash: addressQuery.data?.filecoin?.robust ?? checkSummedHash }} isLoading={ isLoading }/>\n      <AccountActionsMenu isLoading={ isLoading }/>\n      <HStack ml=\"auto\" gap={ 2 }/>\n      { !isLoading && addressQuery.data?.is_contract && addressQuery.data?.is_verified && config.UI.views.address.solidityscanEnabled &&\n        <SolidityscanReport hash={ hash }/> }\n      { !isLoading && addressEnsDomainsQuery.data && config.features.nameService.isEnabled &&\n        <AddressEnsDomains query={ addressEnsDomainsQuery } addressHash={ hash } mainDomainName={ addressQuery.data?.ens_domain_name }/> }\n      <NetworkExplorers type=\"address\" pathParam={ hash.toLowerCase() }/>\n    </Flex>\n  );\n\n  return (\n    <>\n      <PageTitle\n        title={ `${ addressQuery.data?.is_contract && addressQuery.data?.proxy_type !== 'eip7702' ? 'Contract' : 'Address' } details` }\n        backLink={ backLink }\n        contentAfter={ titleContentAfter }\n        secondRow={ titleSecondRow }\n        isLoading={ isLoading }\n      />\n      { !addressMetadataQuery.isPending &&\n        <AddressMetadataAlert tags={ addressMetadataQuery.data?.addresses?.[hash.toLowerCase()]?.tags } mt=\"-4px\" mb={ 6 }/> }\n      { config.features.metasuites.isEnabled && <Box display=\"none\" id=\"meta-suites__address\" data-ready={ !isLoading }/> }\n      <AddressDetails addressQuery={ addressQuery } scrollRef={ tabsScrollRef }/>\n      { /* should stay before tabs to scroll up with pagination */ }\n      <Box ref={ tabsScrollRef }></Box>\n      { content }\n    </>\n  );\n};\n\nexport default AddressPageContent;\n","import type { GetServerSideProps, NextPage } from 'next';\nimport React from 'react';\n\nimport type { Route } from 'nextjs-routes';\nimport type { Props } from 'nextjs/getServerSideProps';\nimport * as gSSP from 'nextjs/getServerSideProps';\nimport PageNextJs from 'nextjs/PageNextJs';\nimport detectBotRequest from 'nextjs/utils/detectBotRequest';\nimport fetchApi from 'nextjs/utils/fetchApi';\n\nimport config from 'configs/app';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport Address from 'ui/pages/Address';\n\nconst pathname: Route['pathname'] = '/address/[hash]';\n\nconst Page: NextPage<Props<typeof pathname>> = (props: Props<typeof pathname>) => {\n  return (\n    <PageNextJs pathname={ pathname } query={ props.query } apiData={ props.apiData }>\n      <Address/>\n    </PageNextJs>\n  );\n};\n\nexport default Page;\n\nexport const getServerSideProps: GetServerSideProps<Props<typeof pathname>> = async(ctx) => {\n  const baseResponse = await gSSP.base<typeof pathname>(ctx);\n\n  if (config.meta.og.enhancedDataEnabled && 'props' in baseResponse) {\n    const botInfo = detectBotRequest(ctx.req);\n\n    if (botInfo?.type === 'social_preview') {\n      const addressData = await fetchApi({\n        resource: 'address',\n        pathParams: { hash: getQueryParamString(ctx.query.hash) },\n        timeout: 1_000,\n      });\n\n      (await baseResponse.props).apiData = addressData && addressData.ens_domain_name ? {\n        domain_name: addressData.ens_domain_name,\n      } : null;\n    }\n  }\n\n  return baseResponse;\n};\n","import type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const WITHDRAWAL: WithdrawalsItem = {\n  amount: '12565723',\n  index: 3810697,\n  receiver: ADDRESS_PARAMS,\n  validator_index: 25987,\n  block_number: 9005713,\n  timestamp: '2023-05-12T19:29:12.000000Z',\n};\n","import type { Transaction } from 'types/api/transaction';\n\nimport type { UserTags, AddressImplementation, AddressParam, AddressFilecoinParams } from './addressParams';\nimport type { Block, EpochRewardsType } from './block';\nimport type { SmartContractProxyType } from './contract';\nimport type { InternalTransaction } from './internalTransaction';\nimport type { MudWorldSchema, MudWorldTable } from './mudWorlds';\nimport type { NFTTokenType, TokenInfo, TokenInstance, TokenType } from './token';\nimport type { TokenTransfer, TokenTransferPagination } from './tokenTransfer';\n\nexport interface Address extends UserTags {\n  block_number_balance_updated_at: number | null;\n  coin_balance: string | null;\n  creator_address_hash: string | null;\n  creator_filecoin_robust_address?: string | null;\n  creation_transaction_hash: string | null;\n  exchange_rate: string | null;\n  ens_domain_name: string | null;\n  filecoin?: AddressFilecoinParams;\n  zilliqa?: AddressZilliqaParams;\n  // TODO: if we are happy with tabs-counters method, should we delete has_something fields?\n  has_beacon_chain_withdrawals?: boolean;\n  has_decompiled_code: boolean;\n  has_logs: boolean;\n  has_token_transfers: boolean;\n  has_tokens: boolean;\n  has_validated_blocks: boolean;\n  hash: string;\n  implementations: Array<AddressImplementation> | null;\n  is_contract: boolean;\n  is_verified: boolean;\n  name: string | null;\n  token: TokenInfo | null;\n  watchlist_address_id: number | null;\n  proxy_type?: SmartContractProxyType | null;\n}\n\nexport interface AddressZilliqaParams {\n  is_scilla_contract: boolean;\n}\n\nexport interface AddressCounters {\n  transactions_count: string;\n  token_transfers_count: string;\n  gas_usage_count: string | null;\n  validations_count: string | null;\n}\n\nexport interface AddressTokenBalance {\n  token: TokenInfo;\n  token_id: string | null;\n  value: string;\n  token_instance: TokenInstance | null;\n}\n\nexport type AddressNFT = TokenInstance & {\n  token: TokenInfo;\n  token_type: Omit<TokenType, 'ERC-20'>;\n  value: string;\n};\n\nexport type AddressCollection = {\n  token: TokenInfo;\n  amount: string;\n  token_instances: Array<Omit<AddressNFT, 'token'>>;\n};\n\nexport interface AddressTokensResponse {\n  items: Array<AddressTokenBalance>;\n  next_page_params: {\n    items_count: number;\n    token_name: string | null;\n    token_type: TokenType;\n    value: number;\n    fiat_value: string | null;\n  } | null;\n}\n\nexport interface AddressNFTsResponse {\n  items: Array<AddressNFT>;\n  next_page_params: {\n    items_count: number;\n    token_id: string;\n    token_type: TokenType;\n    token_contract_address_hash: string;\n  } | null;\n}\n\nexport interface AddressCollectionsResponse {\n  items: Array<AddressCollection>;\n  next_page_params: {\n    token_contract_address_hash: string;\n    token_type: TokenType;\n  } | null;\n}\n\nexport interface AddressTokensBalancesSocketMessage {\n  overflow: boolean;\n  token_balances: Array<AddressTokenBalance>;\n}\n\nexport interface AddressTransactionsResponse {\n  items: Array<Transaction>;\n  next_page_params: {\n    block_number: number;\n    index: number;\n    items_count: number;\n  } | null;\n}\n\nexport const AddressFromToFilterValues = [ 'from', 'to' ] as const;\n\nexport type AddressFromToFilter = typeof AddressFromToFilterValues[number] | undefined;\n\nexport type AddressTxsFilters = {\n  filter: AddressFromToFilter;\n};\n\nexport interface AddressTokenTransferResponse {\n  items: Array<TokenTransfer>;\n  next_page_params: TokenTransferPagination | null;\n}\n\nexport type AddressTokenTransferFilters = {\n  filter?: AddressFromToFilter;\n  type?: Array<TokenType>;\n  token?: string;\n};\n\nexport type AddressTokensFilter = {\n  type: TokenType;\n};\n\nexport type AddressNFTTokensFilter = {\n  type: Array<NFTTokenType> | undefined;\n};\n\nexport interface AddressCoinBalanceHistoryItem {\n  block_number: number;\n  block_timestamp: string;\n  delta: string;\n  transaction_hash: string | null;\n  value: string;\n}\n\nexport interface AddressCoinBalanceHistoryResponse {\n  items: Array<AddressCoinBalanceHistoryItem>;\n  next_page_params: {\n    block_number: number;\n    items_count: number;\n  } | null;\n}\n\nexport type AddressCoinBalanceHistoryChart = {\n  items: Array<{\n    date: string;\n    value: string;\n  }>;\n  days: number;\n};\n\nexport interface AddressBlocksValidatedResponse {\n  items: Array<Block>;\n  next_page_params: {\n    block_number: number;\n    items_count: number;\n  };\n}\nexport interface AddressInternalTxsResponse {\n  items: Array<InternalTransaction>;\n  next_page_params: {\n    block_number: number;\n    index: number;\n    items_count: number;\n    transaction_index: number;\n  } | null;\n}\n\nexport type AddressWithdrawalsResponse = {\n  items: Array<AddressWithdrawalsItem>;\n  next_page_params: {\n    index: number;\n    items_count: number;\n  };\n};\n\nexport type AddressWithdrawalsItem = {\n  amount: string;\n  block_number: number;\n  index: number;\n  timestamp: string;\n  validator_index: number;\n};\n\nexport type AddressTabsCounters = {\n  internal_transactions_count: number | null;\n  logs_count: number | null;\n  token_balances_count: number | null;\n  token_transfers_count: number | null;\n  transactions_count: number | null;\n  validations_count: number | null;\n  withdrawals_count: number | null;\n  celo_election_rewards_count?: number | null;\n};\n\n// MUD framework\nexport type AddressMudTableItem = {\n  schema: MudWorldSchema;\n  table: MudWorldTable;\n};\n\nexport type AddressMudTables = {\n  items: Array<AddressMudTableItem>;\n  next_page_params: {\n    items_count: number;\n    table_id: string;\n  };\n};\n\nexport type AddressMudTablesFilter = {\n  q?: string;\n};\n\nexport type AddressMudRecords = {\n  items: Array<AddressMudRecordsItem>;\n  schema: MudWorldSchema;\n  table: MudWorldTable;\n  next_page_params: {\n    items_count: number;\n    key0: string;\n    key1: string;\n    key_bytes: string;\n  };\n};\n\nexport type AddressMudRecordsItem = {\n  decoded: Record<string, string | Array<string>>;\n  id: string;\n  is_deleted: boolean;\n  timestamp: string;\n};\n\nexport type AddressMudRecordsFilter = {\n  filter_key0?: string;\n  filter_key1?: string;\n};\n\nexport type AddressMudRecordsSorting = {\n  sort: 'key0' | 'key1';\n  order: 'asc' | 'desc' | undefined;\n};\n\nexport type AddressMudRecord = {\n  record: AddressMudRecordsItem;\n  schema: MudWorldSchema;\n  table: MudWorldTable;\n};\n\nexport type AddressEpochRewardsResponse = {\n  items: Array<AddressEpochRewardsItem>;\n  next_page_params: {\n    amount: string;\n    associated_account_address_hash: string;\n    block_number: number;\n    items_count: number;\n    type: EpochRewardsType;\n  } | null;\n};\n\nexport type AddressEpochRewardsItem = {\n  type: EpochRewardsType;\n  token: TokenInfo;\n  amount: string;\n  block_number: number;\n  block_hash: string;\n  block_timestamp: string;\n  account: AddressParam;\n  epoch_number: number;\n  associated_account: AddressParam;\n};\n\nexport type AddressXStarResponse = {\n  data: {\n    level: string | null;\n  };\n};\n","import {\n  Box,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\nimport { useMutation } from '@tanstack/react-query';\nimport React, { useCallback, useState } from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport FormSubmitAlert from 'ui/shared/FormSubmitAlert';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  renderContent: () => React.JSX.Element;\n  mutationFn: () => Promise<unknown>;\n  onSuccess: () => Promise<void>;\n};\n\nconst DeleteModal: React.FC<Props> = ({\n  isOpen,\n  onClose,\n  title,\n  renderContent,\n  mutationFn,\n  onSuccess,\n}) => {\n  const [ isAlertVisible, setAlertVisible ] = useState(false);\n\n  const onModalClose = useCallback(() => {\n    setAlertVisible(false);\n    onClose();\n  }, [ onClose, setAlertVisible ]);\n\n  const { mutate, isPending } = useMutation({\n    mutationFn,\n    onSuccess: async() => {\n      onSuccess();\n      onClose();\n    },\n    onError: () => {\n      setAlertVisible(true);\n    },\n  });\n\n  const onDeleteClick = useCallback(() => {\n    setAlertVisible(false);\n    mutate();\n  }, [ setAlertVisible, mutate ]);\n\n  const isMobile = useIsMobile();\n\n  return (\n    <Modal isOpen={ isOpen } onClose={ onModalClose } size={ isMobile ? 'full' : 'md' }>\n      <ModalOverlay/>\n      <ModalContent>\n        <ModalHeader fontWeight=\"500\" textStyle=\"h3\">{ title }</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody>\n          { isAlertVisible && <Box mb={ 4 }><FormSubmitAlert/></Box> }\n          { renderContent() }\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            size=\"lg\"\n            onClick={ onDeleteClick }\n            isLoading={ isPending }\n            // FIXME: chackra's button is disabled when isLoading\n            isDisabled={ false }\n          >\n            Delete\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import { Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { EpochRewardsType } from 'types/api/block';\n\nimport Tag from 'ui/shared/chakra/Tag';\n\ntype Props = {\n  type: EpochRewardsType;\n  isLoading?: boolean;\n};\n\nconst TYPE_TAGS: Record<EpochRewardsType, { text: string; label: string; color: string }> = {\n  group: {\n    text: 'Validator group rewards',\n    // eslint-disable-next-line max-len\n    label: 'Reward given to a validator group. The address being viewed is the group\\'s address; the associated address is the validator\\'s address on whose behalf the reward was paid.',\n    color: 'teal',\n  },\n  validator: {\n    text: 'Validator rewards',\n    label: 'Reward given to a validator. The address being viewed is the validator\\'s address; the associated address is the validator group\\'s address.',\n    color: 'purple',\n  },\n  delegated_payment: {\n    text: 'Delegated payments',\n    // eslint-disable-next-line max-len\n    label: 'Reward portion delegated by a validator to another address. The address being viewed is the beneficiary receiving the reward; the associated address is the validator who set the delegation.',\n    color: 'blue',\n  },\n  voter: {\n    text: 'Voting rewards',\n    label: 'Reward given to a voter. The address being viewed is the voter\\'s address; the associated address is the group address.',\n    color: 'yellow',\n  },\n};\n\nconst EpochRewardTypeTag = ({ type, isLoading }: Props) => {\n  const { text, label, color } = TYPE_TAGS[type];\n\n  return (\n    <Tooltip label={ label } maxW=\"322px\" textAlign=\"center\">\n      <Tag colorScheme={ color } isLoading={ isLoading }>\n        { text }\n      </Tag>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(EpochRewardTypeTag);\n","import { Image, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { HOMEPAGE_STATS } from 'stubs/stats';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport TokenLogoPlaceholder from './TokenLogoPlaceholder';\n\ntype Props = {\n  isLoading?: boolean;\n  className?: string;\n  type?: 'primary' | 'secondary';\n};\n\nconst NativeTokenIcon = ({ isLoading, className, type }: Props) => {\n  const statsQueryResult = useApiQuery('stats', {\n    queryOptions: {\n      refetchOnMount: false,\n      placeholderData: HOMEPAGE_STATS,\n    },\n  });\n\n  if (isLoading || statsQueryResult.isPlaceholderData) {\n    return <Skeleton borderRadius=\"base\" className={ className }/>;\n  }\n\n  const src = type === 'secondary' ? statsQueryResult.data?.secondary_coin_image : statsQueryResult.data?.coin_image;\n\n  return (\n    <Image\n      borderRadius=\"base\"\n      className={ className }\n      src={ src || '' }\n      alt={ `${ config.chain.currency.symbol } logo` }\n      fallback={ <TokenLogoPlaceholder borderRadius=\"base\" className={ className }/> }\n      fallbackStrategy={ src ? 'onError' : 'beforeLoadOrError' }\n    />\n  );\n};\n\nexport default chakra(NativeTokenIcon);\n","import { Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ntype Props = {\n  value: number;\n  isLoading?: boolean;\n};\n\nconst GasUsedToTargetRatio = ({ value, isLoading }: Props) => {\n  return (\n    <Tooltip label=\"% of Gas Target\">\n      <Skeleton color=\"text_secondary\" isLoaded={ !isLoading }>\n        <span>{ (value > 0 ? '+' : '') + value.toLocaleString(undefined, { maximumFractionDigits: 2 }) }%</span>\n      </Skeleton>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(GasUsedToTargetRatio);\n","import { chakra, Tooltip, Box, useColorModeValue } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport config from 'configs/app';\n\nimport GasUsedToTargetRatio from '../GasUsedToTargetRatio';\nimport TextSeparator from '../TextSeparator';\nimport Utilization from '../Utilization/Utilization';\n\nconst rollupFeature = config.features.rollup;\n\ninterface Props {\n  className?: string;\n  gasUsed?: string;\n  gasLimit: string;\n  gasTarget?: number;\n  isLoading?: boolean;\n}\n\nconst BlockGasUsed = ({ className, gasUsed, gasLimit, gasTarget, isLoading }: Props) => {\n  const hasGasUtilization =\n    gasUsed && gasUsed !== '0' &&\n    (!rollupFeature.isEnabled || rollupFeature.type === 'optimistic' || rollupFeature.type === 'shibarium');\n\n  const separatorColor = useColorModeValue('gray.200', 'gray.700');\n\n  if (!hasGasUtilization) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip label={ isLoading ? undefined : 'Gas Used %' }>\n        <Box>\n          <Utilization\n            colorScheme=\"gray\"\n            value={ BigNumber(gasUsed).dividedBy(BigNumber(gasLimit)).toNumber() }\n            isLoading={ isLoading }\n            className={ className }\n          />\n        </Box>\n      </Tooltip>\n      { gasTarget && (\n        <>\n          <TextSeparator color={ separatorColor } mx={ 1 }/>\n          <GasUsedToTargetRatio value={ gasTarget } isLoading={ isLoading }/>\n        </>\n      ) }\n    </>\n  );\n};\n\nexport default React.memo(chakra(BlockGasUsed));\n","import {\n  chakra,\n  Flex,\n  IconButton,\n  Tooltip,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport NextLink from 'next/link';\nimport React, { useRef } from 'react';\n\nimport type { TimeChartItem } from './types';\n\nimport { route, type Route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ChartMenu from './ChartMenu';\nimport ChartWidgetContent from './ChartWidgetContent';\nimport useZoom from './useZoom';\n\nexport type Props = {\n  items?: Array<TimeChartItem>;\n  title: string;\n  description?: string;\n  units?: string;\n  isLoading: boolean;\n  className?: string;\n  isError: boolean;\n  emptyText?: string;\n  noAnimation?: boolean;\n  href?: Route;\n};\n\nconst ChartWidget = ({\n  items,\n  title,\n  description,\n  isLoading,\n  className,\n  isError,\n  units,\n  emptyText,\n  noAnimation,\n  href,\n}: Props) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { zoomRange, handleZoom, handleZoomReset } = useZoom();\n\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  const hasItems = items && items.length > 2;\n\n  const content = (\n    <ChartWidgetContent\n      items={ items }\n      isError={ isError }\n      isLoading={ isLoading }\n      units={ units }\n      title={ title }\n      emptyText={ emptyText }\n      handleZoom={ handleZoom }\n      zoomRange={ zoomRange }\n      noAnimation={ noAnimation }\n    />\n  );\n\n  const chartHeader = (\n    <Flex\n      flexGrow={ 1 }\n      flexDir=\"column\"\n      alignItems=\"flex-start\"\n      cursor={ href ? 'pointer' : 'default' }\n      _hover={ href ? { color: 'link_hovered' } : {} }\n    >\n      <Skeleton\n        isLoaded={ !isLoading }\n        fontWeight={ 600 }\n        size={{ base: 'xs', lg: 'sm' }}\n      >\n\n        <span>{ title }</span>\n      </Skeleton>\n\n      { description && (\n        <Skeleton\n          isLoaded={ !isLoading }\n          color=\"text_secondary\"\n          fontSize=\"xs\"\n          mt={ 1 }\n\n        >\n          <span>{ description }</span>\n        </Skeleton>\n      ) }\n    </Flex>\n  );\n\n  return (\n    <Flex\n      height=\"100%\"\n      ref={ ref }\n      flexDir=\"column\"\n      padding={{ base: 3, lg: 4 }}\n      borderRadius=\"lg\"\n      border=\"1px\"\n      borderColor={ borderColor }\n      className={ className }\n    >\n      <Flex columnGap={ 6 } mb={ 2 } alignItems=\"flex-start\">\n        { href ? (\n          <NextLink href={ href } passHref legacyBehavior >\n            { chartHeader }\n          </NextLink>\n        ) : chartHeader }\n        <Flex ml=\"auto\" columnGap={ 2 }>\n          <Tooltip label=\"Reset zoom\">\n            <IconButton\n              hidden={ !zoomRange }\n              aria-label=\"Reset zoom\"\n              colorScheme=\"blue\"\n              w={ 9 }\n              h={ 8 }\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={ handleZoomReset }\n              icon={ <IconSvg name=\"repeat\" w={ 4 } h={ 4 }/> }\n            />\n          </Tooltip>\n\n          { hasItems && (\n            <ChartMenu\n              items={ items }\n              title={ title }\n              description={ description }\n              chartUrl={ href ? config.app.baseUrl + route(href) : undefined }\n              isLoading={ isLoading }\n              chartRef={ ref }\n              units={ units }\n              handleZoom={ handleZoom }\n              handleZoomReset={ handleZoomReset }\n              zoomRange={ zoomRange }\n            />\n          ) }\n        </Flex>\n      </Flex>\n\n      { content }\n    </Flex>\n  );\n};\n\nexport default React.memo(chakra(ChartWidget));\n","import React from 'react';\n\nimport type { SelectOption } from 'ui/shared/select/types';\n\nimport FilterButton from 'ui/shared/filters/FilterButton';\nimport Select from 'ui/shared/select/Select';\ninterface Props {\n  name: string;\n  options: Array<SelectOption>;\n  hasActiveFilter: boolean;\n  defaultValue?: string;\n  isLoading?: boolean;\n  onChange: (nextValue: string) => void;\n}\n\nconst PopoverFilterRadio = ({ name, hasActiveFilter, options, isLoading, onChange, defaultValue }: Props) => {\n  return (\n    <Select\n      options={ options }\n      name={ name }\n      defaultValue={ defaultValue }\n      onChange={ onChange }\n    >\n      { ({ isOpen, onToggle }) => (\n        <FilterButton\n          isActive={ isOpen }\n          onClick={ onToggle }\n          appliedFiltersNum={ hasActiveFilter ? 1 : 0 }\n          isLoading={ isLoading }\n        />\n      ) }\n    </Select>\n  );\n};\n\nexport default React.memo(PopoverFilterRadio);\n","import {\n  chakra,\n  Flex,\n  Text,\n  Link,\n  Button,\n} from '@chakra-ui/react';\nimport React from 'react';\n\ntype Props = {\n  title: string;\n  isFilled?: boolean;\n  isTouched?: boolean;\n  hasReset?: boolean;\n  onFilter: () => void;\n  onReset?: () => void;\n  onClose?: () => void;\n  children: React.ReactNode;\n};\n\nconst TableColumnFilter = ({ title, isFilled, isTouched, hasReset, onFilter, onReset, onClose, children }: Props) => {\n  const onFilterClick = React.useCallback(() => {\n    onClose && onClose();\n    onFilter();\n  }, [ onClose, onFilter ]);\n  return (\n    <>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"text_secondary\" fontWeight=\"600\">{ title }</Text>\n        { hasReset && (\n          <Link\n            onClick={ onReset }\n            cursor={ isFilled ? 'pointer' : 'unset' }\n            opacity={ isFilled ? 1 : 0.2 }\n            _hover={{\n              color: isFilled ? 'link_hovered' : 'none',\n            }}\n          >\n            Reset\n          </Link>\n        ) }\n      </Flex>\n      { children }\n      <Button\n        isDisabled={ !isTouched }\n        onClick={ onFilterClick }\n        w=\"fit-content\"\n      >\n        Filter\n      </Button>\n    </>\n  );\n};\n\nexport default chakra(TableColumnFilter);\n","import {\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  useDisclosure,\n  chakra,\n  Portal,\n  Button,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  columnName: string;\n  isActive?: boolean;\n  isLoading?: boolean;\n  className?: string;\n  children: React.ReactNode;\n  value?: string;\n}\n\nconst TableColumnFilterWrapper = ({ columnName, isActive, className, children, isLoading, value }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const content = React.Children.only(children) as React.ReactElement & {\n    ref?: React.Ref<React.ReactNode>;\n  };\n\n  const modifiedContent = React.cloneElement(\n    content,\n    { onClose },\n  );\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy lazyBehavior=\"unmount\">\n      <PopoverTrigger>\n        <Button\n          onClick={ onToggle }\n          aria-label={ `filter by ${ columnName }` }\n          variant=\"ghost\"\n          h=\"20px\"\n          isActive={ Boolean(value) || isActive }\n          isDisabled={ isLoading }\n          borderRadius=\"4px\"\n          color=\"text_secondary\"\n          fontSize=\"sm\"\n          fontWeight={ 500 }\n          leftIcon={ <IconSvg name=\"filter\" w=\"19px\" h=\"19px\"/> }\n          padding={ 0 }\n          sx={{\n            'span:only-child': {\n              mx: 0,\n            },\n            'span:not(:only-child)': {\n              mr: '2px',\n            },\n          }}\n        >\n          { Boolean(value) && <chakra.span>{ value }</chakra.span> }\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent className={ className }>\n          <PopoverBody px={ 4 } py={ 6 } display=\"flex\" flexDir=\"column\" rowGap={ 3 }>\n            { modifiedContent }\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default chakra(TableColumnFilterWrapper);\n","import { Button, Spinner, Tooltip, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport usePreventFocusAfterModalClosing from 'lib/hooks/usePreventFocusAfterModalClosing';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport useScoreLevelAndColor from './useScoreLevelAndColor';\n\ninterface Props {\n  score: number;\n  isLoading?: boolean;\n  onlyIcon?: boolean;\n  onClick?: () => void;\n  label?: string | React.ReactElement;\n  isActive: boolean;\n  className?: string;\n}\n\nconst SolidityscanReportButton = (\n  { score, isLoading, onlyIcon, onClick, label = 'Security score', isActive, className }: Props,\n  ref: React.ForwardedRef<HTMLButtonElement>,\n) => {\n  const { scoreColor } = useScoreLevelAndColor(score);\n  const colorLoading = useColorModeValue('gray.300', 'gray.600');\n  const isMobile = useIsMobile();\n  const onFocusCapture = usePreventFocusAfterModalClosing();\n\n  return (\n    <Tooltip label={ label } isDisabled={ isMobile } openDelay={ 100 } textAlign=\"center\">\n      <Button\n        className={ className }\n        ref={ ref }\n        color={ isLoading ? colorLoading : scoreColor }\n        size=\"sm\"\n        variant=\"outline\"\n        colorScheme=\"gray\"\n        onClick={ onClick }\n        isActive={ isActive }\n        aria-label=\"SolidityScan score\"\n        fontWeight={ 500 }\n        px=\"6px\"\n        flexShrink={ 0 }\n        columnGap={ 1 }\n        isDisabled={ isLoading }\n        _disabled={{\n          opacity: 1,\n          _hover: {\n            color: colorLoading,\n          },\n        }}\n        onFocusCapture={ onFocusCapture }\n      >\n        <IconSvg name={ score < 80 ? 'score/score-not-ok' : 'score/score-ok' } boxSize={ 5 }/>\n        { isLoading && <Spinner size=\"sm\"/> }\n        { !isLoading && (onlyIcon ? null : score) }\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default chakra(React.forwardRef(SolidityscanReportButton));\n","import { Box, Flex, Text, Grid, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { SolidityScanReportSeverityDistribution } from 'lib/solidityScan/schema';\n\ntype DistributionItem = {\n  id: keyof SolidityScanReportSeverityDistribution;\n  name: string;\n  color: string;\n};\n\nconst DISTRIBUTION_ITEMS: Array<DistributionItem> = [\n  { id: 'critical', name: 'Critical', color: '#891F11' },\n  { id: 'high', name: 'High', color: '#EC672C' },\n  { id: 'medium', name: 'Medium', color: '#FBE74D' },\n  { id: 'low', name: 'Low', color: '#68C88E' },\n  { id: 'informational', name: 'Informational', color: '#A3AEBE' },\n  { id: 'gas', name: 'Gas', color: '#A47585' },\n];\n\ninterface Props {\n  vulnerabilities: SolidityScanReportSeverityDistribution;\n  vulnerabilitiesCount: number;\n}\n\ntype ItemProps = {\n  item: DistributionItem;\n  vulnerabilities: SolidityScanReportSeverityDistribution;\n  vulnerabilitiesCount: number;\n};\n\nconst SolidityScanReportItem = ({ item, vulnerabilities, vulnerabilitiesCount }: ItemProps) => {\n  const bgBar = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const yetAnotherGrayColor = useColorModeValue('gray.400', 'gray.500');\n  const vulnerability = vulnerabilities[item.id];\n\n  if (vulnerability === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box w={ 3 } h={ 3 } bg={ item.color } borderRadius=\"6px\" mr={ 2 }></Box>\n      <Flex justifyContent=\"space-between\" mr={ 3 }>\n        <Text>{ item.name }</Text>\n        <Text color={ vulnerability > 0 ? 'text' : yetAnotherGrayColor }>{ vulnerabilities[item.id] }</Text>\n      </Flex>\n      <Box bg={ bgBar } h=\"10px\" borderRadius=\"8px\">\n        <Box bg={ item.color } w={ vulnerability / vulnerabilitiesCount } h=\"10px\" borderRadius=\"8px\"/>\n      </Box>\n    </>\n  );\n};\n\nconst SolidityscanReportDetails = ({ vulnerabilities, vulnerabilitiesCount }: Props) => {\n  return (\n    <Grid templateColumns=\"20px 1fr 100px\" alignItems=\"center\" rowGap={ 2 }>\n      { DISTRIBUTION_ITEMS.map(item => (\n        <SolidityScanReportItem item={ item } key={ item.id } vulnerabilities={ vulnerabilities } vulnerabilitiesCount={ vulnerabilitiesCount }/>\n      )) }\n    </Grid>\n  );\n};\n\nexport default chakra(SolidityscanReportDetails);\n","import { Box, Flex, Text, chakra, Center, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport useScoreLevelAndColor from './useScoreLevelAndColor';\n\ninterface Props {\n  className?: string;\n  score: number;\n}\n\nconst SolidityscanReportScore = ({ className, score }: Props) => {\n  const { scoreLevel, scoreColor } = useScoreLevelAndColor(score);\n\n  const chartGrayColor = useColorModeValue('gray.100', 'gray.700');\n  const yetAnotherGrayColor = useColorModeValue('gray.400', 'gray.500');\n  const popoverBgColor = useColorModeValue('white', 'gray.900');\n\n  return (\n    <Flex className={ className } alignItems=\"center\">\n      <Box\n        w={ 12 }\n        h={ 12 }\n        bgGradient={ `conic-gradient(${ scoreColor } 0, ${ scoreColor } ${ score }%, ${ chartGrayColor } 0, ${ chartGrayColor } 100%)` }\n        borderRadius=\"24px\"\n        position=\"relative\"\n        mr={ 3 }\n      >\n        <Center position=\"absolute\" w=\"38px\" h=\"38px\" top=\"5px\" right=\"5px\" bg={ popoverBgColor } borderRadius=\"20px\">\n          <IconSvg name={ score < 80 ? 'score/score-not-ok' : 'score/score-ok' } boxSize={ 5 } color={ scoreColor }/>\n        </Center>\n      </Box>\n      <Box>\n        <Flex>\n          <Text color={ scoreColor } fontSize=\"lg\" fontWeight={ 500 }>{ score }</Text>\n          <Text color={ yetAnotherGrayColor } fontSize=\"lg\" fontWeight={ 500 } whiteSpace=\"pre\"> / 100</Text>\n        </Flex>\n        <Text color={ scoreColor } fontWeight={ 500 }>Security score is { scoreLevel }</Text>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default chakra(SolidityscanReportScore);\n","import { useColorModeValue } from '@chakra-ui/react';\n\nexport default function useScoreLevelAndColor(score: number) {\n  const greatScoreColor = useColorModeValue('green.600', 'green.400');\n  const averageScoreColor = useColorModeValue('purple.600', 'purple.400');\n  const lowScoreColor = useColorModeValue('red.600', 'red.400');\n\n  let scoreColor;\n  let scoreLevel;\n  if (score >= 80) {\n    scoreColor = greatScoreColor;\n    scoreLevel = 'GREAT';\n  } else if (score >= 30) {\n    scoreColor = averageScoreColor;\n    scoreLevel = 'AVERAGE';\n  } else {\n    scoreColor = lowScoreColor;\n    scoreLevel = 'LOW';\n  }\n  return { scoreColor, scoreLevel };\n}\n","export default function getSortParamsFromValue<SortValue extends string, SortField extends string, SortOrder extends string>(val?: SortValue) {\n  if (!val) {\n    return undefined;\n  }\n\n  const sortingChunks = val.split('-') as [ SortField, SortOrder ];\n  return { sort: sortingChunks[0], order: sortingChunks[1] };\n}\n","import type { SelectOption } from 'ui/shared/select/types';\n\nimport type { Query } from 'nextjs-routes';\n\nexport default function getSortValueFromQuery<SortValue extends string>(query: Query, sortOptions: Array<SelectOption<SortValue>>) {\n  if (!query.sort || !query.order) {\n    return undefined;\n  }\n\n  const str = query.sort + '-' + query.order;\n  if (sortOptions.map(option => option.value).includes(str as SortValue)) {\n    return str as SortValue;\n  }\n}\n","import { Grid, GridItem } from '@chakra-ui/react';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport FormFieldCheckbox from 'ui/shared/forms/fields/FormFieldCheckbox';\n\nimport type { Inputs as FormFields } from './AddressForm';\n\nconst tokenStandardName = config.chain.tokenStandard;\n\nconst NOTIFICATIONS = [ 'native', 'ERC-20', 'ERC-721', 'ERC-404' ] as const;\nconst NOTIFICATIONS_NAMES = [\n  config.chain.currency.symbol,\n  `${ tokenStandardName }-20`,\n  `${ tokenStandardName }-721, ${ tokenStandardName }-1155 (NFT)`,\n  `${ tokenStandardName }-404` ];\n\nexport default function AddressFormNotifications() {\n  return (\n    <Grid templateColumns={{ base: 'repeat(2, max-content)', lg: 'repeat(3, max-content)' }} gap={{ base: '10px 24px', lg: '20px 24px' }}>\n      { NOTIFICATIONS.map((notification, index: number) => {\n        const incomingFieldName = `notification_settings.${ notification }.incoming` as const;\n        const outgoingFieldName = `notification_settings.${ notification }.outcoming` as const;\n        return (\n          <React.Fragment key={ notification }>\n            <GridItem\n              gridColumnStart={{ base: 1, lg: 1 }}\n              gridColumnEnd={{ base: 3, lg: 1 }}\n              _notFirst={{\n                mt: { base: 3, lg: 0 },\n              }}\n            >\n              { NOTIFICATIONS_NAMES[index] }\n            </GridItem>\n            <GridItem>\n              <FormFieldCheckbox<FormFields, typeof incomingFieldName>\n                name={ incomingFieldName }\n                label=\"Incoming\"\n              />\n            </GridItem>\n            <GridItem>\n              <FormFieldCheckbox<FormFields, typeof outgoingFieldName>\n                name={ outgoingFieldName }\n                label=\"Outgoing\"\n              />\n            </GridItem>\n          </React.Fragment>\n        );\n      }) }\n    </Grid>\n  );\n}\n","import {\n  Alert,\n  Box,\n  Button,\n  Text,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { useMutation } from '@tanstack/react-query';\nimport React, { useState } from 'react';\nimport type { SubmitHandler } from 'react-hook-form';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport type { WatchlistAddress, WatchlistErrors } from 'types/api/account';\n\nimport type { ResourceErrorAccount } from 'lib/api/resources';\nimport useApiFetch from 'lib/api/useApiFetch';\nimport getErrorMessage from 'lib/getErrorMessage';\nimport FormFieldAddress from 'ui/shared/forms/fields/FormFieldAddress';\nimport FormFieldCheckbox from 'ui/shared/forms/fields/FormFieldCheckbox';\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\nimport AuthModal from 'ui/snippets/auth/AuthModal';\nimport useProfileQuery from 'ui/snippets/auth/useProfileQuery';\n\nimport AddressFormNotifications from './AddressFormNotifications';\n\n// does it depend on the network?\nconst NOTIFICATIONS = [ 'native', 'ERC-20', 'ERC-721', 'ERC-404' ] as const;\n\nconst TAG_MAX_LENGTH = 35;\n\ntype Props = {\n  data?: Partial<WatchlistAddress>;\n  onSuccess: () => Promise<void>;\n  setAlertVisible: (isAlertVisible: boolean) => void;\n  isAdd: boolean;\n};\n\nexport type Inputs = {\n  address: string;\n  tag: string;\n  notification: boolean;\n  notification_settings: {\n    'native': {\n      outcoming: boolean;\n      incoming: boolean;\n    };\n    'ERC-721': {\n      outcoming: boolean;\n      incoming: boolean;\n    };\n    'ERC-20': {\n      outcoming: boolean;\n      incoming: boolean;\n    };\n    'ERC-404': {\n      outcoming: boolean;\n      incoming: boolean;\n    };\n  };\n};\n\nconst AddressForm: React.FC<Props> = ({ data, onSuccess, setAlertVisible, isAdd }) => {\n  const [ pending, setPending ] = useState(false);\n\n  const profileQuery = useProfileQuery();\n  const userWithoutEmail = profileQuery.data && !profileQuery.data.email;\n  const authModal = useDisclosure();\n\n  let notificationsDefault = {} as Inputs['notification_settings'];\n  if (!data?.notification_settings) {\n    NOTIFICATIONS.forEach(n => notificationsDefault[n] = { incoming: !userWithoutEmail, outcoming: !userWithoutEmail });\n  } else {\n    notificationsDefault = data.notification_settings;\n  }\n\n  const formApi = useForm<Inputs>({\n    defaultValues: {\n      address: data?.address_hash || '',\n      tag: data?.name || '',\n      notification: data?.notification_methods ? data.notification_methods.email : !userWithoutEmail,\n      notification_settings: notificationsDefault,\n    },\n    mode: 'onTouched',\n  });\n\n  const apiFetch = useApiFetch();\n\n  function updateWatchlist(formData: Inputs) {\n    const body = {\n      name: formData?.tag,\n      address_hash: formData?.address,\n      notification_settings: formData.notification_settings,\n      notification_methods: {\n        email: formData.notification,\n      },\n    };\n    if (!isAdd && data) {\n      // edit address\n      return apiFetch('watchlist', {\n        pathParams: { id: data?.id ? String(data.id) : '' },\n        fetchParams: { method: 'PUT', body },\n      });\n\n    } else {\n      // add address\n      return apiFetch('watchlist', { fetchParams: { method: 'POST', body } });\n    }\n  }\n\n  const { mutateAsync } = useMutation({\n    mutationFn: updateWatchlist,\n    onSuccess: async() => {\n      await onSuccess();\n      setPending(false);\n    },\n    onError: (error: ResourceErrorAccount<WatchlistErrors>) => {\n      setPending(false);\n      const errorMap = error.payload?.errors;\n      if (errorMap?.address_hash || errorMap?.name) {\n        errorMap?.address_hash && formApi.setError('address', { type: 'custom', message: getErrorMessage(errorMap, 'address_hash') });\n        errorMap?.name && formApi.setError('tag', { type: 'custom', message: getErrorMessage(errorMap, 'name') });\n      } else if (errorMap?.watchlist_id) {\n        formApi.setError('address', { type: 'custom', message: getErrorMessage(errorMap, 'watchlist_id') });\n      } else {\n        setAlertVisible(true);\n      }\n    },\n  });\n\n  const onSubmit: SubmitHandler<Inputs> = async(formData) => {\n    setAlertVisible(false);\n    setPending(true);\n    await mutateAsync(formData);\n  };\n\n  return (\n    <FormProvider { ...formApi }>\n      <form noValidate onSubmit={ formApi.handleSubmit(onSubmit) }>\n        <FormFieldAddress<Inputs>\n          name=\"address\"\n          isRequired\n          bgColor=\"dialog_bg\"\n          mb={ 5 }\n        />\n        <FormFieldText<Inputs>\n          name=\"tag\"\n          placeholder=\"Private tag (max 35 characters)\"\n          isRequired\n          rules={{\n            maxLength: TAG_MAX_LENGTH,\n          }}\n          bgColor=\"dialog_bg\"\n          mb={ 8 }\n        />\n        { userWithoutEmail ? (\n          <>\n            <Alert\n              status=\"info\"\n              colorScheme=\"gray\"\n              display=\"flex\"\n              flexDirection={{ base: 'column', md: 'row' }}\n              alignItems={{ base: 'flex-start', lg: 'center' }}\n              columnGap={ 2 }\n              rowGap={ 2 }\n              w=\"fit-content\"\n            >\n              To receive notifications you need to add an email to your profile.\n              <Button variant=\"outline\" size=\"sm\" onClick={ authModal.onOpen }>Add email</Button>\n            </Alert>\n            { authModal.isOpen && <AuthModal initialScreen={{ type: 'email', isAuth: true }} onClose={ authModal.onClose }/> }\n          </>\n        ) : (\n          <>\n            <Text variant=\"secondary\" fontSize=\"sm\" marginBottom={ 5 }>\n              Please select what types of notifications you will receive\n            </Text>\n            <Box marginBottom={ 8 }>\n              <AddressFormNotifications/>\n            </Box>\n            <Text variant=\"secondary\" fontSize=\"sm\" marginBottom={{ base: '10px', lg: 5 }}>Notification methods</Text>\n            <FormFieldCheckbox<Inputs, 'notification'>\n              name=\"notification\"\n              label=\"Email notifications\"\n            />\n          </>\n        ) }\n        <Box marginTop={ 8 }>\n          <Button\n            size=\"lg\"\n            type=\"submit\"\n            isLoading={ pending }\n            isDisabled={ !formApi.formState.isDirty }\n          >\n            { !isAdd ? 'Save changes' : 'Add address' }\n          </Button>\n        </Box>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default AddressForm;\n","import React, { useCallback, useState } from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport FormModal from 'ui/shared/FormModal';\n\nimport AddressForm from './AddressForm';\n\ntype Props = {\n  isAdd: boolean;\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => Promise<void>;\n  data?: Partial<WatchlistAddress>;\n};\n\nconst AddressModal: React.FC<Props> = ({ isOpen, onClose, onSuccess, data, isAdd }) => {\n  const title = !isAdd ? 'Edit watch list address' : 'New address to watch list';\n  const text = isAdd ? 'An email notification can be sent to you when an address on your watch list sends or receives any transactions.' : '';\n\n  const [ isAlertVisible, setAlertVisible ] = useState(false);\n\n  const renderForm = useCallback(() => {\n    return <AddressForm data={ data } onSuccess={ onSuccess } setAlertVisible={ setAlertVisible } isAdd={ isAdd }/>;\n  }, [ data, isAdd, onSuccess ]);\n\n  return (\n    <FormModal<WatchlistAddress>\n      isOpen={ isOpen }\n      onClose={ onClose }\n      title={ title }\n      text={ text }\n      renderForm={ renderForm }\n      isAlertVisible={ isAlertVisible }\n      setAlertVisible={ setAlertVisible }\n    />\n  );\n};\n\nexport default AddressModal;\n","import { Text } from '@chakra-ui/react';\nimport React, { useCallback } from 'react';\n\nimport type { WatchlistAddress } from 'types/api/account';\n\nimport useApiFetch from 'lib/api/useApiFetch';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport DeleteModal from 'ui/shared/DeleteModal';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess: () => Promise<void>;\n  data: Pick<WatchlistAddress, 'address_hash' | 'id'>;\n};\n\nconst DeleteAddressModal: React.FC<Props> = ({ isOpen, onClose, onSuccess, data }) => {\n  const isMobile = useIsMobile();\n  const apiFetch = useApiFetch();\n\n  const mutationFn = useCallback(() => {\n    return apiFetch('watchlist', {\n      pathParams: { id: String(data.id) },\n      fetchParams: { method: 'DELETE' },\n    });\n  }, [ data?.id, apiFetch ]);\n\n  const address = data?.address_hash;\n\n  const renderModalContent = useCallback(() => {\n    const addressString = isMobile ? [ address.slice(0, 4), address.slice(-4) ].join('...') : address;\n    return (\n      <Text>Address <Text fontWeight=\"700\" as=\"span\"> { addressString || 'address' }</Text> will be deleted</Text>\n    );\n  }, [ address, isMobile ]);\n\n  return (\n    <DeleteModal\n      isOpen={ isOpen }\n      onClose={ onClose }\n      title=\"Remove address from watch list\"\n      renderContent={ renderModalContent }\n      mutationFn={ mutationFn }\n      onSuccess={ onSuccess }\n    />\n  );\n};\n\nexport default DeleteAddressModal;\n","import React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport config from 'configs/app';\nimport { currencyUnits } from 'lib/units';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport ListItemMobileGrid from 'ui/shared/ListItemMobile/ListItemMobileGrid';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\nconst feature = config.features.beaconChain;\n\ntype Props = ({\n  item: WithdrawalsItem;\n  view: 'list';\n} | {\n  item: AddressWithdrawalsItem;\n  view: 'address';\n} | {\n  item: BlockWithdrawalsItem;\n  view: 'block';\n}) & { isLoading?: boolean };\n\nconst BeaconChainWithdrawalsListItem = ({ item, isLoading, view }: Props) => {\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <ListItemMobileGrid.Container gridTemplateColumns=\"100px auto\">\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Validator index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.validator_index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      { view !== 'block' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Block</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <BlockEntity\n              number={ item.block_number }\n              isLoading={ isLoading }\n              fontSize=\"sm\"\n              lineHeight={ 5 }\n            />\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n      { view !== 'address' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>To</ListItemMobileGrid.Label><ListItemMobileGrid.Value>\n            <AddressEntity\n              address={ item.receiver }\n              isLoading={ isLoading }\n              truncation=\"constant\"\n            />\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n      { view !== 'block' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Age</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <TimeAgoWithTooltip\n              timestamp={ item.timestamp }\n              isLoading={ isLoading }\n              display=\"inline-block\"\n            />\n          </ListItemMobileGrid.Value>\n\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Value</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <CurrencyValue value={ item.amount } currency={ currencyUnits.ether } isLoading={ isLoading }/>\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n    </ListItemMobileGrid.Container>\n  );\n};\n\nexport default BeaconChainWithdrawalsListItem;\n","import { Td, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = ({\n  item: WithdrawalsItem;\n  view: 'list';\n} | {\n  item: AddressWithdrawalsItem;\n  view: 'address';\n} | {\n  item: BlockWithdrawalsItem;\n  view: 'block';\n}) & { isLoading?: boolean };\n\nconst BeaconChainWithdrawalsTableItem = ({ item, view, isLoading }: Props) => {\n  return (\n    <Tr>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.index }</Skeleton>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.validator_index }</Skeleton>\n      </Td>\n      { view !== 'block' && (\n        <Td verticalAlign=\"middle\">\n          <BlockEntity\n            number={ item.block_number }\n            isLoading={ isLoading }\n            fontSize=\"sm\"\n            lineHeight={ 5 }\n            noIcon\n          />\n        </Td>\n      ) }\n      { view !== 'address' && (\n        <Td verticalAlign=\"middle\">\n          <AddressEntity\n            address={ item.receiver }\n            isLoading={ isLoading }\n            truncation=\"constant\"\n          />\n        </Td>\n      ) }\n      { view !== 'block' && (\n        <Td verticalAlign=\"middle\" pr={ 12 }>\n          <TimeAgoWithTooltip\n            timestamp={ item.timestamp }\n            isLoading={ isLoading }\n            color=\"text_secondary\"\n            display=\"inline-block\"\n          />\n        </Td>\n      ) }\n      <Td verticalAlign=\"middle\">\n        <CurrencyValue value={ item.amount } isLoading={ isLoading }/>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default BeaconChainWithdrawalsTableItem;\n","import { Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport config from 'configs/app';\nimport useLazyRenderedList from 'lib/hooks/useLazyRenderedList';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport BeaconChainWithdrawalsTableItem from './BeaconChainWithdrawalsTableItem';\n\nconst feature = config.features.beaconChain;\n\n type Props = {\n   top: number;\n   isLoading?: boolean;\n } & ({\n   items: Array<WithdrawalsItem>;\n   view: 'list';\n } | {\n   items: Array<AddressWithdrawalsItem>;\n   view: 'address';\n } | {\n   items: Array<BlockWithdrawalsItem>;\n   view: 'block';\n });\n\nconst BeaconChainWithdrawalsTable = ({ items, isLoading, top, view }: Props) => {\n  const { cutRef, renderedItemsNum } = useLazyRenderedList(items, !isLoading);\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <Table style={{ tableLayout: 'auto' }} minW=\"950px\">\n      <Thead top={ top }>\n        <Tr>\n          <Th minW=\"140px\">Index</Th>\n          <Th minW=\"200px\">Validator index</Th>\n          { view !== 'block' && <Th w=\"25%\">Block</Th> }\n          { view !== 'address' && <Th w=\"25%\">To</Th> }\n          { view !== 'block' && <Th w=\"25%\">Age</Th> }\n          <Th w=\"25%\">{ `Value ${ feature.currency.symbol }` }</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { view === 'list' && (items as Array<WithdrawalsItem>).slice(0, renderedItemsNum).map((item, index) => (\n          <BeaconChainWithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"list\" isLoading={ isLoading }/>\n        )) }\n        { view === 'address' && (items as Array<AddressWithdrawalsItem>).slice(0, renderedItemsNum).map((item, index) => (\n          <BeaconChainWithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"address\" isLoading={ isLoading }/>\n        )) }\n        { view === 'block' && (items as Array<BlockWithdrawalsItem>).slice(0, renderedItemsNum).map((item, index) => (\n          <BeaconChainWithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"block\" isLoading={ isLoading }/>\n        )) }\n        <tr ref={ cutRef }/>\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default BeaconChainWithdrawalsTable;\n"],"names":["getBlockTotalReward","block","totalReward","rewards","map","reward","BigNumber","reduce","result","item","plus","ZERO","div","WEI","getFilterValue","filterValues","val","includes","usePreventFocusAfterModalClosing","React","e","stopPropagation","getNetworkValidationActionText","config","chain","verificationType","feature","features","addressProfileAPI","AddressInfoSchema","v","user_profile","username","safe","RESOURCE_NAME","ERROR_NAME","parsedDescription","useMemo","AddressAccountHistoryTableItem","description","props","tx","classificationData","endsWith","substring","length","Tr","Td","px","py","fontSize","TimeAgoWithTooltip","timestamp","rawTransactionData","isLoading","isPlaceholderData","color","borderRadius","flexShrink","Skeleton","isLoaded","Box","display","IconSvg","name","height","width","mr","_dark","LinkInternal","href","transactionHash","fontWeight","whiteSpace","wordBreak","NovesFromTo","txData","currentAddress","AddressAccountHistoryListItem","ListItemMobile","rowGap","w","Flex","justifyContent","columnGap","Text","maxW","OPTIONS","value","label","AccountHistoryFilter","onFilterChange","defaultFilter","hasActiveFilter","isInitialLoading","useIsInitialLoading","PopoverFilterRadio","options","onChange","defaultValue","bind","NovesHistoryFilterValues","scrollRef","AddressAccountHistory","shouldRender","router","useRouter","isMounted","useIsMounted","getQueryParamString","query","hash","toLowerCase","filterValue","setFilterValue","filter","data","isError","pagination","useQueryWithPages","resourceName","pathParams","address","enabled","isQueryEnabled","placeholderData","generateListStub","NOVES_TRANSLATE","hasNextPage","pageNumber","pageSize","handleFilterChange","newVal","actionBar","ActionBar","mt","pb","base","md","Boolean","Pagination","ml","lg","filteredData","items","i","getFromToValue","content","position","Hide","above","ssr","Show","Table","TheadSticky","top","Th","Tbody","maxWidth","DataListDisplay","emptyText","filterProps","hasActiveFilters","emptyFilteredText","AddressBlocksValidatedListItem","isAnimated","BlockEntity","number","noIcon","enableIncrement","page","span","transaction_count","gas_used","toFormat","BlockGasUsed","gasUsed","gasLimit","gas_limit","UI","views","hiddenFields","total_reward","rollup","isEnabled","currencyUnits","ether","toFixed","AddressBlocksValidatedTableItem","lineHeight","alignItems","flexBasis","isNumeric","AddressBlocksValidated","socketAlert","setSocketAlert","newItemsCount","setNewItemsCount","queryClient","useQueryClient","addressHash","String","BLOCK","next_page_params","block_number","items_count","handleSocketError","handleNewSocketMessage","setQueryData","getResourceKey","prevData","OVERLOAD_COUNT","prev","payload","channel","useSocketChannel","topic","onSocketClose","onSocketError","isDisabled","useSocketMessage","event","handler","below","style","tableLayout","Thead","isVisible","ACTION_BAR_HEIGHT_DESKTOP","SocketNewItemsNotice","url","window","location","num","alert","type","index","chakra","SocketAlert","className","Alert","status","Link","document","AddressCoinBalanceChart","isPending","useApiQuery","date","Date","currency","decimals","toNumber","ChartWidget","title","h","units","days","deltaBn","delta","AddressCoinBalanceListItem","isPositiveDelta","gte","dp","Stat","flexGrow","StatHelpText","mb","StatArrow","as","transaction_hash","TxEntity","block_timestamp","pr","AddressCoinBalanceHistory","AddressCoinBalanceTableItem","AddressCoinBalance","coinBalanceQuery","ADDRESS_COIN_BALANCE","coin_balance","ref","PROP_TO_TAB","transactions_count","token_transfers_count","validations_count","AddressCounterItem","prop","onClick","isAddressQueryLoading","isDegradedData","undefined","Number","toLocaleString","route","pathname","tab","AddressAlternativeFormat","settingsContext","useSettingsContext","hashFormat","availableFormats","addressFormat","BECH_32_SEPARATOR","bech32Prefix","hint","altHash","toBech32Address","DetailsInfoItem","AddressEntity","noLink","noAltHash","AddressBalance","lastBlockNumber","setLastBlockNumber","block_number_balance_updated_at","updateData","balance","exchangeRate","blockNumber","queryKey","exchange_rate","handleNewBalanceMessage","handleNewCoinBalanceMessage","alignSelf","flexWrap","NativeTokenIcon","boxSize","CurrencyValue","accuracyUsd","accuracy","AddressImplementations","proxyType","hasManyItems","hasScroll","setHasScroll","text","gradientHeight","onScrollVisibilityChange","maxH","filecoin","robust","filecoin_robust_address","is_contract","AddressNameInfo","token","TokenEntity","noCopy","sumBnReducer","TOKEN_GROUPS_ORDER","sortTokenGroups","groupA","groupB","indexOf","sortErc1155or404Tokens","dataA","dataB","sort","sortingFns","sortErc20Tokens","usd","gt","sortErc721Tokens","searchTerm","multipliedBy","Object","values","usdValueReducer","isOverflow","some","tokenBalanceItemIdentityFactory","match","token_id","token_instance","id","useFetchTokens","erc20query","queryParams","queryOptions","refetchOnMount","erc721query","erc1155query","erc404query","updateTokensData","currentItem","updatedData","token_balances","find","extraItems","socketItem","concat","handleTokenBalancesErc20Message","handleTokenBalancesErc721Message","handleTokenBalancesErc1155Message","handleTokenBalancesErc404Message","calculateUsdValue","AddressMultichainButton","hasSingleProvider","buttonIcon","Image","src","logoUrl","alt","overflow","buttonContent","capitalize","Tooltip","linkProps","variant","portfolioUrlString","urlTemplate","replace","portfolioUrl","URL","searchParams","append","dappId","toString","LinkExternal","error","multichainFeature","multichainButton","addressData","AddressNetWorth","has_tokens","usdBn","nativeUsd","getCurrencyValue","getTokensTotalInfo","totalUsd","onMultichainClick","mixpanel","BUTTON_CLICK","Content","Source","multichainItems","providers","TextSeparator","mx","gap","saveOnGas","responseSchema","percent","AddressSaveOnGas","gasUsedNumber","useQuery","queryFn","response","fetch","apiUrlTemplate","json","select","parsedResponse","success","Error","output","errorMessage","message","method","body","JSON","stringify","resource","Math","round","maximumFractionDigits","ACTOR_TYPES","account","cron","datacap","eam","ethaccount","evm","init","market","miner","multisig","paych","placeholder","power","system","verifreg","actorType","FilecoinActorTag","Tag","colorScheme","TokenSelectButton","isOpen","skeletonBgColor","useColorModeValue","prefix","handleClick","PAGE_WIDGET","Type","Button","size","isActive","aria-label","textOverflow","space","transform","transitionDuration","left","bgColor","TokenSelectItem","secondRow","tokenDecimals","dividedBy","symbol","TruncatedValue","valueStr","flexDir","borderColor","borderBottomWidth","_hover","noSymbol","minW","textAlign","TokenSelectMenu","erc20sort","erc1155sort","erc404sort","onInputChange","onSortClick","searchIconColor","hasFilteredResult","sumBy","InputGroup","InputLeftElement","Input","paddingInlineStart","entries","tokenType","tokenInfo","arrowTransform","sortDirection","hasSort","numPrefix","getTokenTypeName","data-type","useTokenSelect","setSearchTerm","setErc1155Sort","setErc404Sort","setErc20Sort","target","currentTarget","getAttribute","prevValue","mapValues","filterTokens","TokenSelectDesktop","onToggle","onClose","useDisclosure","Popover","placement","isLazy","PopoverTrigger","PopoverContent","overflowY","PopoverBody","boxShadow","TokenSelectMobile","Modal","ModalContent","ModalCloseButton","TokenSelect","isMobile","useIsMobile","addressResourceKey","addressQueryData","getQueryData","tokensResourceKey","tokensIsFetching","useIsFetching","handleIconButtonClick","hasTokens","NextLink","passHref","legacyBehavior","IconButton","pl","icon","AddressDetails","countersQuery","addressQuery","useAddressCountersQuery","apiQuery","ADDRESS_COUNTERS","rpcQuery","publicClient","Promise","all","getTransactionCount","catch","txCount","gas_usage_count","GET_TRANSACTIONS_COUNT","retry","isRpcQuery","handleCounterItemClick","setTimeout","current","scrollIntoView","behavior","error404Data","implementations","watchlist_address_id","watchlist_names","creation_transaction_hash","has_token_transfers","has_validated_blocks","creator_filecoin_robust_address","creator_address_hash","isCustomAppError","DataFetchAlert","throwOnResourceLoadError","creatorAddressHash","ServiceDegradationWarning","Grid","templateColumns","CopyToClipboard","actor_type","truncation","proxy_type","getNetworkValidatorTitle","amount","AddressEpochRewardsTableItem","verticalAlign","epoch_number","textColor","EpochRewardTypeTag","associated_account","onlySymbol","AddressEpochRewardsTable","block_hash","AddressEpochRewardsListItem","ListItemMobileGrid","Container","gridTemplateColumns","Label","Value","rewardsQuery","AddressEpochRewards","EPOCH_REWARD_ITEM","associated_account_address_hash","AddressCsvExportLink","params","TX_INTERNALS_ITEMS","from","AddressIntTxsTableItem","to","created_contract","createdContract","txnHash","typeTitle","TxStatus","errorText","AddressFromTo","toData","AddressIntTxsTable","AddressHighlightProvider","AddressTxsFilter","TxInternalsListItem","HStack","spacing","AddressIntTxsList","AddressIntTxsListItem","AddressFromToFilterValues","AddressInternalTxs","filters","INTERNAL_TX","transaction_index","filterType","apos","NO_RPC_FALLBACK_ERROR_CODES","useAddressQuery","isRefetchEnabled","setRefetchEnabled","ADDRESS_INFO","failureCount","refetchInterval","SECOND","getBalance","ens_domain_name","has_decompiled_code","has_logs","is_verified","private_tags","public_tags","GET_BALANCE","errorUpdateCount","AddressLogs","LOG","showShadow","LogItem","defaultDataType","zilliqa","is_scilla_contract","BreadcrumbItem","isLast","iconColor","currentUrl","isBrowser","onLinkClick","AddressMudBreadcrumbs","tableName","table_id","tableId","recordName","record_id","recordId","SORT_SEQUENCE","key0","key1","capitalizeFirstLetter","getValueString","isArray","join","valuesBgColor","AddressMudRecordValues","value_names","backgroundColor","borderBottomStyle","schema","valName","value_types","record","decoded","AddressMudRecord","ContentLoader","table","key_names","keyName","key_types","colSpan","dayjs","format","VStack","Divider","AddressMudRecordsKeyFilter","columnName","onFilter","TableColumnFilter","isFilled","FilterInput","initialValue","TableColumnFilterWrapper","AddressMudRecordsKeyFilterContent","AddressMudRecordsTable","sorting","toggleSorting","setFilters","toggleTableHasHorizontalScroll","totalColsCut","colsCutCount","setColsCutCount","isOpened","setIsOpened","MIN_CUT_COUNT","useBoolean","hasCut","setHasCut","containerRef","tableRef","toggleIsOpen","scroll","toggle","onRecordClick","metaKey","ctrlKey","preventDefault","push","shallow","field","onKeySortClick","keyBgColor","count","floor","getBoundingClientRect","CUT_COL_WIDTH","COL_MIN_WIDTH","off","colW","keys","COL_MIN_WIDTH_MOBILE","slice","colsCount","tdStyles","hasHorizontalScroll","cutButton","overflowX","getNameTypeText","data-id","order","AddressMudTable","setSorting","getSortParamsFromQuery","sortOptions","sortStr","orderStr","tableHasHorizontalScroll","setTableHasHorizontalScroll","onSortingChange","newSorting","getNextOrderValue","onRemoveFilterClick","newFilters","key","actionBarHeight","heightWithoutFilters","BREADCRUMBS_HEIGHT","filtersTags","nbsp","TagCloseButton","breadcrumbs","table_full_name","showActionBarIfEmpty","onTableClick","cursor","table_type","HashStringShorten","GridItem","pt","AddressMudTablesTable","AddressMudTablesTableItem","AddressMudTables","q","debouncedSearchTerm","useDebounce","ADDRESS_MUD_TABLE_ITEM","searchInput","AddressMudTablesListItem","AddressMud","children","border","p","withTokenLink","tokenInstance","valueResult","tokenInstanceLink","NFTItemContainer","LightMode","background","zIndex","right","NftMedia","autoplayVideo","NftEntity","collectionsQuery","AddressCollections","token_instances","collectionUrl","holder_address_hash","scroll_to_tabs","hasOverload","instance","NFTItem","flexDirection","minH","NftFallback","tokensQuery","AddressNFTs","ERC20TokensListItem","tokenQuantity","tokenValue","jointSymbol","AddressAddToWallet","ERC20TokensTableItem","role","opacity","_groupHover","ERC20TokensTable","ERC20Tokens","TokenBalancesItem","valueSecondary","TokenBalances","tokenQuery","nativeValue","tokensInfo","tokensNumText","eq","TAB_LIST_PROPS","TAB_LIST_PROPS_MOBILE","my","getTokenFilterValue","NFT_TOKEN_TYPE_IDS","nftsQuery","AddressTokens","displayTypeCookie","cookies","ADDRESS_NFT_DISPLAY_TYPE","useAppContext","nftDisplayType","setNftDisplayType","tokenTypes","setTokenTypes","erc20Query","ADDRESS_TOKEN_BALANCE_ERC_20","ADDRESS_COLLECTION","ADDRESS_NFT_1155","handleNFTsDisplayTypeChange","handleTokenTypesChange","nftTypeFilter","PopoverFilter","contentProps","appliedFiltersNum","TokenTypeFilter","nftOnly","tabs","tokenStandard","component","nftDisplayTypeRadio","RadioButtonGroup","onlyIcon","hasNftData","isNftTab","rightSlot","RoutedTabs","tabListProps","rightSlotProps","stickyEnabled","TOKEN_TYPE_IDS","getAddressFilterValue","matchFilters","tokenTransfer","AddressTokenTransfers","overloadCount","tokenFilter","getTokenTransfersStub","handleTypeFilterChange","nextValue","prevState","handleAddressFilterChange","filterVal","resetTokenFilter","handleSocketClose","newItems","newCount","token_transfers","forEach","transfer","tokenData","icon_url","numActiveFilters","isActionBarHidden","TokenTransferTable","baseAddress","showTxInfo","enableTimeIncrement","showSocketInfo","socketInfoAlert","socketInfoNum","TokenTransferList","tokenFilterComponent","ResetIconButton","TokenTransferFilter","defaultTypeFilters","onTypeFilterChange","withAddressFilter","onAddressFilterChange","defaultAddressFilter","TxsWithAPISorting","showBlockInfo","setSort","handleSortChange","getSortParamsFromValue","TxsContent","matchFilter","transaction","AddressTxs","getSortValueFromQuery","SORT_OPTIONS","addressTxsQuery","TX","transactions","currIndex","findIndex","sortTxsFromSocket","csvExportLink","AddressUserOps","userOpsQuery","USER_OPS_ITEM","page_token","page_size","sender","UserOpsContent","showSender","AddressWithdrawals","WITHDRAWAL","BeaconChainWithdrawalsListItem","view","BeaconChainWithdrawalsTable","AddressFavoriteButton","watchListId","addModalProps","deleteModalProps","onFocusCapture","handleAddToFavorite","onOpen","handleAddOrDeleteSuccess","refetchQueries","handleAddModalClose","handleDeleteModalClose","formData","address_hash","AuthGuard","onAuthSuccess","WatchlistAddModal","isAdd","onSuccess","DeleteAddressModal","DomainsGrid","clamp","EnsEntity","domain","protocol","AddressEnsDomains","mainDomainName","xl","mainDomain","ownedDomains","resolved_address","owner","wrapped_owner","resolvedDomains","totalRecords","PopoverTriggerTooltip","expiry_date","fromNow","owned_by","resolved_to","SolidityScanIssueSeverityDistributionSchema","critical","gas","high","informational","low","medium","scan_report","contractname","scan_status","scan_summary","score_v2","issue_severity_distribution","scanner_reference_url","SolidityscanReport","useFetchReport","SolidityScanSchema","SOLIDITY_SCAN_REPORT","buildUrl","score","vulnerabilities","vulnerabilitiesCount","vulnerabilitiesCounts","acc","SolidityscanReportButton","Icon","solidityScanIcon","SolidityscanReportScore","SolidityscanReportDetails","DOMAIN_NAME_REGEXP","TOKEN_TABS","txInterpretation","addressProfileAPIFeature","xScoreFeature","xStarScore","AddressPageContent","addressEnsDomainsQuery","userPropfileApiQuery","xStarQuery","addressMetadataQuery","appProps","tabsScrollRef","checkDomainName","useCheckDomainNameParam","maybeDomainName","test","hashOrDomainName","nameService","setIsLoading","domainLookupQuery","chainId","only_active","firstDomainAddress","checkAddressFormat","useCheckAddressFormat","hasBech32Format","isBech32Address","base16Hash","fromBech32Address","areQueriesEnabled","addressTabsCountersQuery","ADDRESS_TABS_COUNTERS","userOpsAccountQuery","userOps","USER_OPS_ACCOUNT","mudTablesCountQuery","mudFramework","addressesForMetadataQuery","useAddressMetadataInfoQuery","useAddressProfileApiQuery","useFetch","reject","addressMainDomain","isTabsLoading","handleFetchedBytecodeMessage","refetch","isSafeAddress","useIsSafeAddress","apiUrl","safeIconColor","useFetchXStarScore","level","contractTabs","useContractTabs","provider","total_ops","beaconChain","withdrawals_count","token_balances_count","subTabs","internal_transactions_count","celo_election_rewards_count","logs_count","tabName","AddressContract","CONTRACT_TAB_IDS","usernameApiTag","tags","slug","tag","display_name","tagType","ordinal","PREDEFINED_TAG_PRIORITY","validators","meta","tagIcon","tagBgColor","tagTextColor","tagUrl","tagLinkTemplate","formatUserTags","addresses","tooltipTitle","tooltipDescription","tooltipUrl","sortEntityTags","titleContentAfter","EntityTags","addressMetadata","backLink","referrer","checkSummedHash","getCheckedSummedAddress","getAddress","titleSecondRow","fontFamily","AddressQrCode","AccountActionsMenu","solidityscanEnabled","NetworkExplorers","pathParam","PageTitle","contentAfter","AddressMetadataAlert","metasuites","data-ready","Page","PageNextJs","apiData","Address","receiver","ADDRESS_PARAMS","validator_index","DeleteModal","renderContent","mutationFn","isAlertVisible","setAlertVisible","useState","onModalClose","useCallback","mutate","useMutation","onError","onDeleteClick","ModalOverlay","ModalHeader","textStyle","ModalBody","FormSubmitAlert","ModalFooter","TYPE_TAGS","group","validator","delegated_payment","voter","statsQueryResult","HOMEPAGE_STATS","secondary_coin_image","coin_image","fallback","TokenLogoPlaceholder","fallbackStrategy","GasUsedToTargetRatio","rollupFeature","gasTarget","hasGasUtilization","separatorColor","Utilization","noAnimation","useRef","zoomRange","handleZoom","handleZoomReset","useZoom","hasItems","ChartWidgetContent","chartHeader","padding","hidden","ChartMenu","chartUrl","app","baseUrl","chartRef","Select","FilterButton","isTouched","hasReset","onReset","onFilterClick","only","modifiedContent","lazyBehavior","leftIcon","sx","Portal","scoreColor","useScoreLevelAndColor","colorLoading","openDelay","_disabled","Spinner","DISTRIBUTION_ITEMS","SolidityScanReportItem","bgBar","yetAnotherGrayColor","vulnerability","bg","scoreLevel","chartGrayColor","popoverBgColor","bgGradient","Center","greatScoreColor","averageScoreColor","lowScoreColor","sortingChunks","split","str","option","tokenStandardName","NOTIFICATIONS","NOTIFICATIONS_NAMES","AddressFormNotifications","notification","incomingFieldName","outgoingFieldName","gridColumnStart","gridColumnEnd","_notFirst","FormFieldCheckbox","AddressForm","pending","setPending","profileQuery","useProfileQuery","userWithoutEmail","email","authModal","notificationsDefault","notification_settings","n","incoming","outcoming","formApi","useForm","defaultValues","notification_methods","mode","apiFetch","useApiFetch","mutateAsync","updateWatchlist","fetchParams","errorMap","errors","setError","getErrorMessage","watchlist_id","onSubmit","FormProvider","form","noValidate","handleSubmit","FormFieldAddress","isRequired","FormFieldText","rules","maxLength","TAG_MAX_LENGTH","AuthModal","initialScreen","isAuth","marginBottom","marginTop","formState","isDirty","AddressModal","renderForm","FormModal","renderModalContent","addressString","BeaconChainWithdrawalsTableItem","cutRef","renderedItemsNum","useLazyRenderedList","tr"],"sourceRoot":"","ignoreList":[]}