{"version":3,"file":"static/chunks/2340-409e5d5a9e671c7f.js","mappings":"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,sBACA,kBACA,CAAO,CACP,KACA,SAAgC,SAAG,aAAe,4BAA8B,CAChF,EAEA,CACA,cACA,MAAyB,SAAG,CACxB,GAAM,KACV,CACA,cACA,oBACA,OAAe,oCAAwC,CACvD,KACA,SAAgC,SAAG,SAAW,+BAAuC,CACrF,EAEA,CACA,cACA,oBAAU,oBAAsC,EAEhD,YAAwD,SAAG,CACvD,GAAM,KACV,CACA,OACA,eACA,oBACA,wBACA,aACA,CAAO,CACP,SAAgC,SAAG,CAVnC,MAUmC,CAAa,KAAS,CACzD,GACA,IACA,uECvBA,GACA,sBACA,oBACA,wBACA,oBACA,kBACA,YACA,EACA,GACA,iBACA,sBACA,oBACA,oBACA,mBACA,EACA,EAAgB,QAAS,EACzB,MACA,UACA,oBACA,uBACA,CAAG,CACH,IACA,UACA,mBACA,oBACA,CACA,CAAC,EACD,EAA+B,QAAS,EACxC,MACA,SACA,CAAG,CACH,IACA,SACA,CACA,CAAC,EACD,EAA6B,QAAS,EACtC,MACA,wBACA,CAAG,CACH,IACA,qBACA,CACA,CAAC,EACD,EAAe,OAAU,eACzB,MAAgB,OAAuB,GACvC,GAAwB,WACxB,EAAiB,QAAmB,eACpC,EAAmB,QAAgB,IACnC,CACA,mBACA,YACA,WACA,YACA,WACA,OAA2B,SAAG,CAAC,EAAY,EAAI,EAC/C,MAD2C,IAC3C,EACA,yCACA,WACA,aACA,KACA,CAAI,EACJ,IACA,mCACA,8BAEA,QACA,sCACA,GAAe,QAAO,gBAEtB,IACA,QACA,gBACA,mBACA,gBACA,eACA,CAAI,CAAE,MAAW,EACjB,KACA,aACA,YACA,UACA,CAAG,EACH,EAAwB,SFvGxB,GACA,SAAoD,cAAQ,IAC5D,MAA4C,cAAQ,KAKpD,OAJA,QACA,MACA,MAEA,CACA,EE+FgD,aAChD,EAAqB,aAAO,CAC5B,MACA,iCAAsE,GAA0B,eAAe,GAAwB,iBAAmB,GAAW,cAArK,OACA,WACA,QACA,UACA,CAAK,CACL,kCAEA,EAAqB,kBAAY,IACjC,QACA,kCACA,sBACG,EACH,MAAyB,UAAI,CACzB,GAAM,OACV,CACA,OAAe,oBAAoC,CACnD,UAAiB,QAAE,sBACnB,OACA,UACwB,SAAG,CAC3B,QACA,CACA,mCACA,YAGwB,SAAG,CACjB,GAAM,MAChB,CACA,OAAqB,kBAAqC,CAC1D,qCACA,OACA,UACA,GAEA,GAAoC,SAAG,CAC7B,GAAM,MAChB,CACA,mCACA,OACA,OACA,cACA,WACa,CACb,UACA,GAEA,EAGA,CAAC,EACD,8ICtJA,EAAW,OAAU,eACrB,MAAiB,QAAc,WAC/B,CAAU,kBAAqB,CAAE,OAAgB,IACjD,MAAyB,SAAG,CACxB,GAAM,MACV,CACA,MACA,UAAiB,QAAE,4BACnB,KACA,OACA,uBACA,KAEA,EAEA,CAAC,EACD,sGCnBA,EAAqB,OAAM,SAC3B,UAAa,GAAmB,CAC/B,EACD,+BACA,MAA0B,OAAM,UAChC,UAAa,GAAmB,CAC/B,EACD,8EGTA,kBACA,WACA,SAEA,iBACA,cACA,WACA,eACA,GAAoB,SAAS,CFZ7B,EACA,iBACA,aACA,aACA,QAEA,cACA,wDAEA,CACA,EEE6B,GAC7B,WAAuC,OAAM,OAG7C,QAEA,CACA,QACA,CACA,aACA,cACA,2BDvBA,ECwBA,EDvBA,KCuBuB,EDvBvB,GADA,ECwB4B,EDvB5B,IACA,KAEA,YCqBA,CACA,WACA,cACA,SAEA,QACA,CACA,SACA,oBACA,gBAgBA,OACA,gBACA,SAEA,QACA,YAAwB,WAAqB,KAC7C,WACA,SAEA,iBAEA,WACA,EAEA,CACA,EA/BA,OAQA,QALA,EADA,2BACA,KAGA,UAEA,CACA,cACA,SAEA,QACA,CACA,CACA,iDCjDA,cACA,SACA,WACA,SACA,SAEA,QACA,KACA,KACA,KAKA,IAJA,uBACA,WACA,KAEA,MACA,WACA,EACA,gBAEA,UAEA,MACA,KAGA,KAGA,EACA,iBACA,IAEA,SACA,KACA,UACA,MAGA,KAIA,SACA,KACA,IACA,UACA,OAGA,QACA,IACA,UACA,MAIA,KAGA,GACA,CAIA,OAHA,GACA,UAEA,CACA","sources":["webpack://_N_E/./lib/capitalizeFirstLetter.ts","webpack://_N_E/./node_modules/@chakra-ui/hooks/dist/chunk-5AOLTBA4.mjs","webpack://_N_E/./ui/contractVerification/ContractVerificationFormRow.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldAddress.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldLicenseType.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldMethod.tsx","webpack://_N_E/./ui/contractVerification/ContractVerificationMethod.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldConstructorArgs.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldAutodetectArgs.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldCode.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldCompiler.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldEvmVersion.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldIsYul.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldLibraryItem.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldLibraries.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldName.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldOptimization.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationFlattenSourceCode.tsx","webpack://_N_E/./ui/shared/forms/components/FieldError.tsx","webpack://_N_E/./ui/shared/forms/inputs/file/utils.ts","webpack://_N_E/./ui/shared/forms/inputs/file/DragAndDropArea.tsx","webpack://_N_E/./ui/shared/forms/inputs/file/FileInput.tsx","webpack://_N_E/./ui/shared/forms/inputs/file/FileSnippet.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldSources.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationMultiPartFile.tsx","webpack://_N_E/./ui/contractVerification/ContractVerificationFormCodeSnippet.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationSolidityFoundry.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationSolidityHardhat.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldContractIndex.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationSourcify.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldZkCompiler.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationStandardInput.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldCommit.tsx","webpack://_N_E/./ui/contractVerification/fields/ContractVerificationFieldGitHubRepo.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationStylusGitHubRepo.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationVyperContract.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationVyperMultiPartFile.tsx","webpack://_N_E/./ui/contractVerification/methods/ContractVerificationVyperStandardInput.tsx","webpack://_N_E/./ui/contractVerification/ContractVerificationForm.tsx","webpack://_N_E/./ui/contractVerification/useFormConfigQuery.tsx","webpack://_N_E/./ui/shared/DataFetchAlert.tsx","webpack://_N_E/./ui/shared/Page/PageTitle.tsx","webpack://_N_E/./ui/shared/forms/fields/FormFieldAddress.tsx","webpack://_N_E/./ui/shared/forms/inputs/select/utils.ts","webpack://_N_E/./ui/shared/forms/inputs/select/FancySelect.tsx","webpack://_N_E/./ui/shared/forms/fields/FormFieldFancySelect.tsx","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/@chakra-ui/checkbox/dist/chunk-6XFPBTDN.mjs","webpack://_N_E/./node_modules/@chakra-ui/checkbox/dist/chunk-OW24QTOM.mjs","webpack://_N_E/./node_modules/@chakra-ui/checkbox/dist/chunk-DFEUIRKX.mjs","webpack://_N_E/./node_modules/@chakra-ui/checkbox/dist/chunk-VFYM6BU6.mjs","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-MVNZWEQB.mjs","webpack://_N_E/./node_modules/@chakra-ui/visually-hidden/dist/chunk-74U3PXFJ.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/compat/_internal/isDeepKey.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/compat/_internal/toKey.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/compat/object/get.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/compat/util/toPath.mjs"],"sourcesContent":["export default function capitalizeFirstLetter(text: string) {\n  if (!text || !text.length) {\n    return '';\n  }\n\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n","// src/use-update-effect.ts\nimport { useEffect, useRef } from \"react\";\nvar useUpdateEffect = (effect, deps) => {\n  const renderCycleRef = useRef(false);\n  const effectCycleRef = useRef(false);\n  useEffect(() => {\n    const isMounted = renderCycleRef.current;\n    const shouldRun = isMounted && effectCycleRef.current;\n    if (shouldRun) {\n      return effect();\n    }\n    effectCycleRef.current = true;\n  }, deps);\n  useEffect(() => {\n    renderCycleRef.current = true;\n    return () => {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\n\nexport {\n  useUpdateEffect\n};\n","import { chakra, GridItem } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\n\ninterface Props {\n  children: [React.JSX.Element, React.JSX.Element | null] | (React.JSX.Element | null);\n  className?: string;\n}\n\nconst ContractVerificationFormRow = ({ children, className }: Props) => {\n  const isMobile = useIsMobile();\n\n  const firstChildren = Array.isArray(children) ? children[0] : children;\n  const secondChildren = Array.isArray(children) ? children[1] : null;\n\n  return (\n    <>\n      <GridItem className={ className } _notFirst={{ mt: { base: 3, lg: 0 } }}>{ firstChildren }</GridItem>\n      { isMobile && !secondChildren ? null : <GridItem fontSize=\"sm\" className={ className } color=\"text_secondary\">{ secondChildren }</GridItem> }\n    </>\n  );\n};\n\nexport default React.memo(chakra(ContractVerificationFormRow));\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldAddress from 'ui/shared/forms/fields/FormFieldAddress';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  isReadOnly?: boolean;\n}\n\nconst ContractVerificationFieldAddress = ({ isReadOnly }: Props) => {\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <chakra.span fontWeight={ 500 } fontSize=\"lg\" fontFamily=\"heading\">\n          Contract address to verify\n        </chakra.span>\n      </ContractVerificationFormRow>\n      <ContractVerificationFormRow>\n        <FormFieldAddress<FormFields>\n          name=\"address\"\n          isRequired\n          placeholder=\"Smart contract / Address (0x...)\"\n          isReadOnly={ isReadOnly }\n          size={{ base: 'md', lg: 'lg' }}\n        />\n      </ContractVerificationFormRow>\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldAddress);\n","import React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport { CONTRACT_LICENSES } from 'lib/contracts/licenses';\nimport FormFieldFancySelect from 'ui/shared/forms/fields/FormFieldFancySelect';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst options = CONTRACT_LICENSES.map(({ label, title, type }) => ({ label: `${ title } (${ label })`, value: type }));\n\nconst ContractVerificationFieldLicenseType = () => {\n\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldFancySelect<FormFields, 'license_type'>\n        name=\"license_type\"\n        placeholder=\"Contract license\"\n        options={ options }\n      />\n      <span>\n        For best practices, all contract source code holders, publishers and authors are encouraged to also\n        specify the accompanying license for their verified contract source code provided.\n      </span>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldLicenseType);\n","import {\n  Link,\n  chakra,\n  PopoverTrigger,\n  Portal,\n  PopoverContent,\n  PopoverArrow,\n  PopoverBody,\n  useColorModeValue,\n  DarkMode,\n  ListItem,\n  OrderedList,\n  Box,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationMethod, SmartContractVerificationConfig } from 'types/client/contract';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Popover from 'ui/shared/chakra/Popover';\nimport FormFieldFancySelect from 'ui/shared/forms/fields/FormFieldFancySelect';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport { METHOD_LABELS } from '../utils';\n\ninterface Props {\n  methods: SmartContractVerificationConfig['verification_options'];\n}\n\nconst ContractVerificationFieldMethod = ({ methods }: Props) => {\n  const tooltipBg = useColorModeValue('gray.700', 'gray.900');\n  const isMobile = useIsMobile();\n\n  const options = React.useMemo(() => methods.map((method) => ({\n    value: method,\n    label: METHOD_LABELS[method],\n  })), [ methods ]);\n\n  const renderPopoverListItem = React.useCallback((method: SmartContractVerificationMethod) => {\n    switch (method) {\n      case 'flattened-code':\n        return <ListItem key={ method }>Verification through a single file.</ListItem>;\n      case 'multi-part':\n        return <ListItem key={ method }>Verification of multi-part Solidity files.</ListItem>;\n      case 'sourcify':\n        return <ListItem key={ method }>Verification through <Link href=\"https://sourcify.dev/\" target=\"_blank\">Sourcify</Link>.</ListItem>;\n      case 'standard-input':\n        return (\n          <ListItem key={ method }>\n            <span>Verification using </span>\n            <Link\n              href=\"https://docs.soliditylang.org/en/latest/using-the-compiler.html#input-description\"\n              target=\"_blank\"\n            >\n              Standard input JSON\n            </Link>\n            <span> file.</span>\n          </ListItem>\n        );\n      case 'vyper-code':\n        return <ListItem key={ method }>Verification of Vyper contract.</ListItem>;\n      case 'vyper-multi-part':\n        return <ListItem key={ method }>Verification of multi-part Vyper files.</ListItem>;\n      case 'vyper-standard-input':\n        return (\n          <ListItem key={ method }>\n            <span>Verification of Vyper contract using </span>\n            <Link\n              href=\"https://docs.vyperlang.org/en/stable/compiling-a-contract.html#compiler-input-and-output-json-description\"\n              target=\"_blank\"\n            >\n              Standard input JSON\n            </Link>\n            <span> file.</span>\n          </ListItem>\n        );\n      case 'solidity-hardhat':\n        return <ListItem key={ method }>Verification through Hardhat plugin.</ListItem>;\n      case 'solidity-foundry':\n        return <ListItem key={ method }>Verification through Foundry.</ListItem>;\n      case 'stylus-github-repository':\n        return <ListItem key={ method }>Verification of Stylus contract via GitHub repository.</ListItem>;\n    }\n  }, []);\n\n  return (\n    <>\n      <Box mt={{ base: 10, lg: 6 }} gridColumn={{ lg: '1 / 3' }}>\n        <chakra.span fontWeight={ 500 } fontSize=\"lg\" fontFamily=\"heading\">\n          Currently, Blockscout supports { methods.length } contract verification methods\n        </chakra.span>\n        <Popover trigger=\"hover\" isLazy placement={ isMobile ? 'bottom-end' : 'right-start' } offset={ [ -8, 8 ] }>\n          <PopoverTrigger>\n            <chakra.span display=\"inline-block\" ml={ 1 } cursor=\"pointer\" verticalAlign=\"middle\" h=\"22px\">\n              <IconSvg name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }}/>\n            </chakra.span>\n          </PopoverTrigger>\n          <Portal>\n            <PopoverContent bgColor={ tooltipBg } w={{ base: '300px', lg: '380px' }}>\n              <PopoverArrow bgColor={ tooltipBg }/>\n              <PopoverBody color=\"white\">\n                <DarkMode>\n                  <span>Currently, Blockscout supports { methods.length } methods:</span>\n                  <OrderedList>\n                    { methods.map(renderPopoverListItem) }\n                  </OrderedList>\n                </DarkMode>\n              </PopoverBody>\n            </PopoverContent>\n          </Portal>\n        </Popover>\n      </Box>\n      <FormFieldFancySelect<FormFields, 'method'>\n        name=\"method\"\n        placeholder=\"Verification method (compiler type)\"\n        options={ options }\n        isRequired\n        isAsync={ false }\n        isReadOnly={ options.length === 1 }\n      />\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldMethod);\n","import { Grid, Text } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  title: string;\n  children: React.ReactNode;\n  disableScroll?: boolean;\n}\n\nconst ContractVerificationMethod = ({ title, children, disableScroll }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    !disableScroll && ref.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [ disableScroll ]);\n\n  return (\n    <section ref={ ref }>\n      <Text fontWeight={ 500 } fontSize=\"lg\" fontFamily=\"heading\" mt={ 12 } mb={ 5 }>{ title }</Text>\n      <Grid columnGap=\"30px\" rowGap={{ base: 2, lg: 5 }} templateColumns={{ base: '1fr', lg: 'minmax(0, 680px) minmax(0, 340px)' }}>\n        { children }\n      </Grid>\n    </section>\n  );\n};\n\nexport default React.memo(ContractVerificationMethod);\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst ContractVerificationFieldConstructorArgs = () => {\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldText<FormFields>\n        name=\"constructor_args\"\n        isRequired\n        rules={{ maxLength: 255 }}\n        placeholder=\"ABI-encoded Constructor Arguments\"\n        size={{ base: 'md', lg: 'lg' }}\n        asComponent=\"Textarea\"\n      />\n      <>\n        <span>Add arguments in </span>\n        <Link href=\"https://solidity.readthedocs.io/en/develop/abi-spec.html\" target=\"_blank\">ABI hex encoded form</Link>\n        <span> if required by the contract. Constructor arguments are written right to left, and will be found at the end of the input created bytecode.</span>\n        <span> They may also be </span>\n        <Link href=\"https://abi.hashex.org/\" target=\"_blank\">parsed here</Link>\n        <span>.</span>\n      </>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldConstructorArgs);\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldCheckbox from 'ui/shared/forms/fields/FormFieldCheckbox';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport ContractVerificationFieldConstructorArgs from './ContractVerificationFieldConstructorArgs';\n\nconst ContractVerificationFieldAutodetectArgs = () => {\n  const [ isOn, setIsOn ] = React.useState(true);\n  const { resetField } = useFormContext<FormFields>();\n\n  const handleCheckboxChange = React.useCallback(() => {\n    !isOn && resetField('constructor_args');\n    setIsOn(prev => !prev);\n  }, [ isOn, resetField ]);\n\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <FormFieldCheckbox<FormFields, 'autodetect_constructor_args'>\n          name=\"autodetect_constructor_args\"\n          label=\"Try to fetch constructor arguments automatically\"\n          onChange={ handleCheckboxChange }\n        />\n      </ContractVerificationFormRow>\n      { !isOn && <ContractVerificationFieldConstructorArgs/> }\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldAutodetectArgs);\n","import React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  isVyper?: boolean;\n}\n\nconst ContractVerificationFieldCode = ({ isVyper }: Props) => {\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldText<FormFields>\n        name=\"code\"\n        isRequired\n        placeholder=\"Contract code\"\n        size={{ base: 'md', lg: 'lg' }}\n        asComponent=\"Textarea\"\n      />\n      { isVyper ? null : (\n        <span>If your code utilizes a library or inherits dependencies, we recommend using other verification methods instead.</span>\n      ) }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldCode);\n","import { chakra, Checkbox, Code } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport FormFieldFancySelect from 'ui/shared/forms/fields/FormFieldFancySelect';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst OPTIONS_LIMIT = 50;\n\ninterface Props {\n  isVyper?: boolean;\n  isStylus?: boolean;\n}\n\nconst ContractVerificationFieldCompiler = ({ isVyper, isStylus }: Props) => {\n  const [ isNightly, setIsNightly ] = React.useState(false);\n  const { formState, getValues, resetField } = useFormContext<FormFields>();\n  const queryClient = useQueryClient();\n  const config = queryClient.getQueryData<SmartContractVerificationConfig>(getResourceKey('contract_verification_config'));\n\n  const handleCheckboxChange = React.useCallback(() => {\n    if (isNightly) {\n      const field = getValues('compiler');\n      field?.value.includes('nightly') && resetField('compiler', { defaultValue: null });\n    }\n    setIsNightly(prev => !prev);\n  }, [ getValues, isNightly, resetField ]);\n\n  const options = React.useMemo(() => {\n    const versions = (() => {\n      if (isStylus) {\n        return config?.stylus_compiler_versions;\n      }\n      if (isVyper) {\n        return config?.vyper_compiler_versions;\n      }\n      return config?.solidity_compiler_versions;\n    })();\n\n    return versions?.map((option) => ({ label: option, value: option })) || [];\n  }, [ isStylus, isVyper, config?.solidity_compiler_versions, config?.stylus_compiler_versions, config?.vyper_compiler_versions ]);\n\n  const loadOptions = React.useCallback(async(inputValue: string) => {\n    return options\n      .filter(({ label }) => !inputValue || label.toLowerCase().includes(inputValue.toLowerCase()))\n      .filter(({ label }) => isNightly ? true : !label.includes('nightly'))\n      .slice(0, OPTIONS_LIMIT);\n  }, [ isNightly, options ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <>\n        { !isVyper && !isStylus && (\n          <Checkbox\n            size=\"lg\"\n            mb={ 2 }\n            onChange={ handleCheckboxChange }\n            isDisabled={ formState.isSubmitting }\n          >\n            Include nightly builds\n          </Checkbox>\n        ) }\n        <FormFieldFancySelect<FormFields, 'compiler'>\n          name=\"compiler\"\n          placeholder=\"Compiler (enter version or use the dropdown)\"\n          loadOptions={ loadOptions }\n          defaultOptions\n          placeholderIcon={ <IconSvg name=\"search\"/> }\n          isRequired\n          isAsync\n        />\n      </>\n      { isVyper || isStylus ? null : (\n        <chakra.div mt={{ base: 0, lg: 8 }}>\n          <span >The compiler version is specified in </span>\n          <Code color=\"text_secondary\">pragma solidity X.X.X</Code>\n          <span>. Use the compiler version rather than the nightly build. If using the Solidity compiler, run </span>\n          <Code color=\"text_secondary\">solc —version</Code>\n          <span> to check.</span>\n        </chakra.div>\n      ) }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldCompiler);\n","import { Link } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport FormFieldFancySelect from 'ui/shared/forms/fields/FormFieldFancySelect';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  isVyper?: boolean;\n}\n\nconst ContractVerificationFieldEvmVersion = ({ isVyper }: Props) => {\n  const queryClient = useQueryClient();\n  const config = queryClient.getQueryData<SmartContractVerificationConfig>(getResourceKey('contract_verification_config'));\n\n  const options = React.useMemo(() => (\n    (isVyper ? config?.vyper_evm_versions : config?.solidity_evm_versions)?.map((option) => ({ label: option, value: option })) || []\n  ), [ config?.solidity_evm_versions, config?.vyper_evm_versions, isVyper ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldFancySelect<FormFields, 'evm_version'>\n        name=\"evm_version\"\n        placeholder=\"EVM Version\"\n        options={ options }\n        isRequired\n      />\n      <>\n        <span>The EVM version the contract is written for. If the bytecode does not match the version, we try to verify using the latest EVM version. </span>\n        <Link\n          href={ isVyper ?\n            'https://docs.vyperlang.org/en/stable/compiling-a-contract.html#target-options' :\n            'https://docs.soliditylang.org/en/latest/using-the-compiler.html#target-options'\n          }\n          target=\"_blank\"\n        >\n          EVM version details\n        </Link>\n      </>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldEvmVersion);\n","import React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldCheckbox from 'ui/shared/forms/fields/FormFieldCheckbox';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst ContractVerificationFieldIsYul = () => {\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldCheckbox<FormFields, 'is_yul'>\n        name=\"is_yul\"\n        label=\"Is Yul contract\"\n      />\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldIsYul);\n","import { Flex, IconButton, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldAddress from 'ui/shared/forms/fields/FormFieldAddress';\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst LIMIT = 10;\n\ninterface Props {\n  index: number;\n  fieldsLength: number;\n  onAddFieldClick: (index: number) => void;\n  onRemoveFieldClick: (index: number) => void;\n  isDisabled?: boolean;\n}\n\nconst ContractVerificationFieldLibraryItem = ({ index, fieldsLength, onAddFieldClick, onRemoveFieldClick, isDisabled }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const handleAddButtonClick = React.useCallback(() => {\n    onAddFieldClick(index);\n  }, [ index, onAddFieldClick ]);\n\n  const handleRemoveButtonClick = React.useCallback(() => {\n    onRemoveFieldClick(index);\n  }, [ index, onRemoveFieldClick ]);\n\n  React.useEffect(() => {\n    ref.current?.scrollIntoView({ behavior: 'smooth' });\n  }, []);\n\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" ref={ ref } mt={ index !== 0 ? 6 : 0 }>\n          <Text variant=\"secondary\" fontSize=\"sm\">Contract library { index + 1 }</Text>\n          <Flex columnGap={ 5 }>\n            { fieldsLength > 1 && (\n              <IconButton\n                aria-label=\"delete\"\n                variant=\"outline\"\n                w=\"30px\"\n                h=\"30px\"\n                onClick={ handleRemoveButtonClick }\n                icon={ <IconSvg name=\"minus\" w=\"20px\" h=\"20px\"/> }\n                isDisabled={ isDisabled }\n              />\n            ) }\n            { fieldsLength < LIMIT && (\n              <IconButton\n                aria-label=\"add\"\n                variant=\"outline\"\n                w=\"30px\"\n                h=\"30px\"\n                onClick={ handleAddButtonClick }\n                icon={ <IconSvg name=\"plus\" w=\"20px\" h=\"20px\"/> }\n                isDisabled={ isDisabled }\n              />\n            ) }\n          </Flex>\n        </Flex>\n      </ContractVerificationFormRow>\n      <ContractVerificationFormRow>\n        <FormFieldText<FormFields, `libraries.${ number }.name`>\n          name={ `libraries.${ index }.name` }\n          isRequired\n          rules={{ maxLength: 255 }}\n          placeholder=\"Library name (.sol file)\"\n          size={{ base: 'md', lg: 'lg' }}\n        />\n        { index === 0 ? (\n          <>\n            A library name called in the .sol file. Multiple libraries (up to 10) may be added for each contract.\n          </>\n        ) : null }\n      </ContractVerificationFormRow>\n      <ContractVerificationFormRow>\n        <FormFieldAddress<FormFields, `libraries.${ number }.address`>\n          name={ `libraries.${ index }.address` }\n          isRequired\n          placeholder=\"Library address (0x...)\"\n          size={{ base: 'md', lg: 'lg' }}\n        />\n        { index === 0 ? (\n          <>\n            The 0x library address. This can be found in the generated json file or Truffle output (if using truffle).\n          </>\n        ) : null }\n      </ContractVerificationFormRow>\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldLibraryItem);\n","import { Checkbox, useUpdateEffect } from '@chakra-ui/react';\nimport React from 'react';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport ContractVerificationFieldLibraryItem from './ContractVerificationFieldLibraryItem';\n\nconst ContractVerificationFieldLibraries = () => {\n  const { formState, control, getValues } = useFormContext<FormFields>();\n  const { fields, append, remove, insert } = useFieldArray({\n    name: 'libraries',\n    control,\n  });\n  const [ isEnabled, setIsEnabled ] = React.useState(fields.length > 0);\n\n  const value = getValues('libraries');\n\n  useUpdateEffect(() => {\n    if (!value || value.length === 0) {\n      setIsEnabled(false);\n    }\n  }, [ value ]);\n\n  const handleCheckboxChange = React.useCallback(() => {\n    if (!isEnabled) {\n      append({ name: '', address: '' });\n    } else {\n      remove();\n    }\n    setIsEnabled(prev => !prev);\n  }, [ append, isEnabled, remove ]);\n\n  const handleAddFieldClick = React.useCallback((index: number) => {\n    insert(index + 1, { name: '', address: '' });\n  }, [ insert ]);\n\n  const handleRemoveFieldClick = React.useCallback((index: number) => {\n    remove(index);\n  }, [ remove ]);\n\n  return (\n    <>\n      <ContractVerificationFormRow>\n        <Checkbox\n          size=\"lg\"\n          onChange={ handleCheckboxChange }\n          mt={ 9 }\n          isDisabled={ formState.isSubmitting }\n        >\n          Add contract libraries\n        </Checkbox>\n      </ContractVerificationFormRow>\n      { fields.map((field, index) => (\n        <ContractVerificationFieldLibraryItem\n          key={ field.id }\n          index={ index }\n          fieldsLength={ fields.length }\n          onAddFieldClick={ handleAddFieldClick }\n          onRemoveFieldClick={ handleRemoveFieldClick }\n          isDisabled={ formState.isSubmitting }\n        />\n      )) }\n    </>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldLibraries);\n","import { chakra, Code } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ninterface Props {\n  hint?: string;\n}\n\nconst ContractVerificationFieldName = ({ hint }: Props) => {\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldText<FormFields>\n        name=\"name\"\n        isRequired\n        placeholder=\"Contract name\"\n        size={{ base: 'md', lg: 'lg' }}\n        rules={{ maxLength: 255 }}\n      />\n      { hint ? <span>{ hint }</span> : (\n        <>\n          <span>Must match the name specified in the code. For example, in </span>\n          <Code color=\"text_secondary\">{ `contract MyContract {..}` }</Code>\n          <span>. <chakra.span fontWeight={ 600 }>MyContract</chakra.span> is the contract name.</span>\n        </>\n      ) }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldName);\n","import { Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldCheckbox from 'ui/shared/forms/fields/FormFieldCheckbox';\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst ContractVerificationFieldOptimization = () => {\n  const [ isEnabled, setIsEnabled ] = React.useState(true);\n\n  const handleCheckboxChange = React.useCallback(() => {\n    setIsEnabled(prev => !prev);\n  }, []);\n\n  return (\n    <ContractVerificationFormRow>\n      <Flex columnGap={ 5 } h={{ base: 'auto', lg: '32px' }}>\n        <FormFieldCheckbox<FormFields, 'is_optimization_enabled'>\n          name=\"is_optimization_enabled\"\n          label=\"Optimization enabled\"\n          onChange={ handleCheckboxChange }\n          flexShrink={ 0 }\n        />\n        { isEnabled && (\n          <FormFieldText<FormFields, 'optimization_runs'>\n            name=\"optimization_runs\"\n            isRequired\n            placeholder=\"Optimization runs\"\n            type=\"number\"\n            size=\"xs\"\n            minW=\"100px\"\n            maxW=\"200px\"\n            flexShrink={ 1 }\n          />\n        ) }\n      </Flex>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldOptimization);\n","import React from 'react';\n\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldAutodetectArgs from '../fields/ContractVerificationFieldAutodetectArgs';\nimport ContractVerificationFieldCode from '../fields/ContractVerificationFieldCode';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldIsYul from '../fields/ContractVerificationFieldIsYul';\nimport ContractVerificationFieldLibraries from '../fields/ContractVerificationFieldLibraries';\nimport ContractVerificationFieldName from '../fields/ContractVerificationFieldName';\nimport ContractVerificationFieldOptimization from '../fields/ContractVerificationFieldOptimization';\n\nconst ContractVerificationFlattenSourceCode = ({ config }: { config: SmartContractVerificationConfig }) => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (flattened source code)\">\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldName/> }\n      { config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldIsYul/> }\n      <ContractVerificationFieldCompiler/>\n      <ContractVerificationFieldEvmVersion/>\n      <ContractVerificationFieldOptimization/>\n      <ContractVerificationFieldCode/>\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldAutodetectArgs/> }\n      <ContractVerificationFieldLibraries/>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationFlattenSourceCode);\n","import { Box, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  message: string;\n  className?: string;\n}\n\nconst FieldError = ({ message, className }: Props) => {\n  return <Box className={ className } color=\"error\" fontSize=\"sm\" mt={ 2 } wordBreak=\"break-word\">{ message }</Box>;\n};\n\nexport default chakra(FieldError);\n","import stripLeadingSlash from 'lib/stripLeadingSlash';\n\n// Function to get all files in drop directory\nexport async function getAllFileEntries(dataTransferItemList: DataTransferItemList): Promise<Array<FileSystemFileEntry>> {\n  const fileEntries: Array<FileSystemFileEntry> = [];\n\n  // Use BFS to traverse entire directory/file structure\n  const queue: Array<FileSystemFileEntry | FileSystemDirectoryEntry> = [];\n\n  // Unfortunately dataTransferItemList is not iterable i.e. no forEach\n  for (let i = 0; i < dataTransferItemList.length; i++) {\n    // Note webkitGetAsEntry a non-standard feature and may change\n    // Usage is necessary for handling directories\n    // + typescript types are kinda wrong - https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\n    const item = dataTransferItemList[i].webkitGetAsEntry() as FileSystemFileEntry | FileSystemDirectoryEntry | null;\n    item && queue.push(item);\n  }\n\n  while (queue.length > 0) {\n    const entry = queue.shift();\n    if (entry?.isFile) {\n      fileEntries.push(entry as FileSystemFileEntry);\n    } else if (entry?.isDirectory && 'createReader' in entry) {\n      queue.push(...await readAllDirectoryEntries(entry.createReader()));\n    }\n  }\n  return fileEntries;\n}\n\n// Get all the entries (files or sub-directories) in a directory\n// by calling readEntries until it returns empty array\nasync function readAllDirectoryEntries(directoryReader: FileSystemDirectoryReader) {\n  const entries: Array<FileSystemFileEntry> = [];\n  let readEntries = await readEntriesPromise(directoryReader);\n\n  while (readEntries && readEntries.length > 0) {\n    entries.push(...readEntries);\n    readEntries = await readEntriesPromise(directoryReader);\n  }\n  return entries;\n}\n\n// Wrap readEntries in a promise to make working with readEntries easier\n// readEntries will return only some of the entries in a directory\n// e.g. Chrome returns at most 100 entries at a time\nasync function readEntriesPromise(directoryReader: FileSystemDirectoryReader): Promise<Array<FileSystemFileEntry> | undefined> {\n  try {\n    return await new Promise((resolve, reject) => {\n      directoryReader.readEntries(\n        (fileEntry) => {\n          resolve(fileEntry as Array<FileSystemFileEntry>);\n        },\n        reject,\n      );\n    });\n  } catch (err) {}\n}\n\nexport function convertFileEntryToFile(entry: FileSystemFileEntry, fullFilePath?: boolean): Promise<File> {\n  return new Promise((resolve) => {\n    entry.file(async(file: File) => {\n      const newFile = fullFilePath ?\n        new File([ file ], stripLeadingSlash(entry.fullPath), { lastModified: file.lastModified, type: file.type }) :\n        file;\n      resolve(newFile);\n    });\n  });\n}\n","import { chakra, Center, useColorModeValue } from '@chakra-ui/react';\nimport type { DragEvent } from 'react';\nimport React from 'react';\n\nimport { getAllFileEntries, convertFileEntryToFile } from './utils';\n\ninterface Props {\n  children: React.ReactNode;\n  onDrop: (files: Array<File>) => void;\n  className?: string;\n  isDisabled?: boolean;\n  fullFilePath?: boolean;\n}\n\nconst DragAndDropArea = ({ onDrop, children, className, isDisabled, fullFilePath }: Props) => {\n  const [ isDragOver, setIsDragOver ] = React.useState(false);\n\n  const handleDrop = React.useCallback(async(event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    if (isDisabled) {\n      return;\n    }\n\n    const fileEntries = await getAllFileEntries(event.dataTransfer.items);\n    const files = await Promise.all(fileEntries.map((fileEntry) => convertFileEntryToFile(fileEntry, fullFilePath)));\n\n    onDrop(files);\n    setIsDragOver(false);\n  }, [ isDisabled, onDrop, fullFilePath ]);\n\n  const handleDragOver = React.useCallback((event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n  }, []);\n\n  const handleDragEnter = React.useCallback((event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = React.useCallback((event: DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleClick = React.useCallback((event: React.MouseEvent) => {\n    if (isDisabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, [ isDisabled ]);\n\n  const disabledBorderColor = useColorModeValue('blackAlpha.200', 'whiteAlpha.200');\n  const borderColor = isDragOver ? 'link_hovered' : 'link';\n\n  return (\n    <Center\n      className={ className }\n      w=\"100%\"\n      minH=\"120px\"\n      borderWidth=\"2px\"\n      borderColor={ isDisabled ? disabledBorderColor : borderColor }\n      _hover={{\n        borderColor: isDisabled ? disabledBorderColor : 'link_hovered',\n      }}\n      borderRadius=\"base\"\n      borderStyle=\"dashed\"\n      cursor=\"pointer\"\n      textAlign=\"center\"\n      onClick={ handleClick }\n      onDrop={ handleDrop }\n      onDragOver={ handleDragOver }\n      onDragEnter={ handleDragEnter }\n      onDragLeave={ handleDragLeave }\n    >\n      { children }\n    </Center>\n  );\n};\n\nexport default React.memo(chakra(DragAndDropArea));\n","import { InputGroup, VisuallyHiddenInput } from '@chakra-ui/react';\nimport type { ChangeEvent } from 'react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldValues, Path } from 'react-hook-form';\n\ninterface InjectedProps {\n  onChange: (files: Array<File>) => void;\n}\n\ninterface Props<V extends FieldValues, N extends Path<V>> {\n  children: React.ReactNode | ((props: InjectedProps) => React.ReactNode);\n  field: ControllerRenderProps<V, N>;\n  accept?: string;\n  multiple?: boolean;\n}\n\nconst FileInput = <Values extends FieldValues, Names extends Path<Values>>({ children, accept, multiple, field }: Props<Values, Names>) => {\n  const ref = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (!multiple && field.value?.length === 0 && ref.current?.value) {\n      ref.current.value = '';\n    }\n  }, [ field.value?.length, multiple ]);\n\n  const onChange = React.useCallback((files: Array<File>) => {\n    field.onChange([ ...(field.value || []), ...files ]);\n  }, [ field ]);\n\n  const handleInputChange = React.useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const fileList = event.target.files;\n    if (!fileList) {\n      return;\n    }\n\n    const files = Array.from(fileList);\n    onChange(files);\n    field.onBlur();\n  }, [ onChange, field ]);\n\n  const handleClick = React.useCallback(() => {\n    ref.current?.click();\n  }, []);\n\n  const handleInputBlur = React.useCallback(() => {\n    field.onBlur();\n  }, [ field ]);\n\n  const injectedProps = React.useMemo(() => ({\n    onChange,\n  }), [ onChange ]);\n\n  const content = typeof children === 'function' ? children(injectedProps) : children;\n\n  return (\n    <InputGroup onClick={ handleClick } onBlur={ handleInputBlur }>\n      <VisuallyHiddenInput\n        type=\"file\"\n        onChange={ handleInputChange }\n        ref={ ref }\n        accept={ accept }\n        multiple={ multiple }\n        name={ field.name }\n      />\n      { content }\n    </InputGroup>\n  );\n};\n\nexport default FileInput;\n","import { Box, Flex, Text, useColorModeValue, IconButton, chakra, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { IconName } from 'ui/shared/IconSvg';\nimport IconSvg from 'ui/shared/IconSvg';\n\nconst FILE_ICONS: Record<string, IconName> = {\n  '.json': 'files/json',\n  '.sol': 'files/sol',\n  '.yul': 'files/yul',\n};\n\nfunction getFileExtension(fileName: string) {\n  const chunks = fileName.split('.');\n  if (chunks.length === 1) {\n    return '';\n  }\n\n  return '.' + chunks[chunks.length - 1];\n}\n\ninterface Props {\n  file: File;\n  className?: string;\n  index?: number;\n  onRemove?: (index?: number) => void;\n  isDisabled?: boolean;\n  error?: string;\n}\n\nconst FileSnippet = ({ file, className, index, onRemove, isDisabled, error }: Props) => {\n  const handleRemove = React.useCallback((event: React.MouseEvent) => {\n    event.stopPropagation();\n    onRemove?.(index);\n  }, [ index, onRemove ]);\n\n  const handleErrorHintIconClick = React.useCallback((event: React.MouseEvent) => {\n    event.stopPropagation();\n\n  }, []);\n\n  const fileExtension = getFileExtension(file.name);\n  const fileIcon = FILE_ICONS[fileExtension] || 'files/placeholder';\n  const iconColor = useColorModeValue('gray.600', 'gray.400');\n\n  return (\n    <Flex\n      maxW=\"300px\"\n      overflow=\"hidden\"\n      className={ className }\n      alignItems=\"center\"\n      textAlign=\"left\"\n    >\n      <IconSvg\n        name={ fileIcon }\n        boxSize=\"74px\"\n        color={ error ? 'error' : iconColor }\n        mr={ 2 }\n        borderWidth=\"2px\"\n        borderRadius=\"md\"\n        borderColor={ useColorModeValue('blackAlpha.100', 'whiteAlpha.200') }\n        p={ 3 }\n      />\n      <Box maxW=\"calc(100% - 58px - 24px)\">\n        <Flex alignItems=\"center\">\n          <Text\n            fontWeight={ 600 }\n            overflow=\"hidden\"\n            textOverflow=\"ellipsis\"\n            whiteSpace=\"nowrap\"\n            color={ error ? 'error' : 'initial' }\n          >\n            { file.name }\n          </Text>\n          { Boolean(error) && (\n            <Tooltip\n              label={ error }\n              placement=\"top\"\n              maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }}\n            >\n              <Box cursor=\"pointer\" display=\"inherit\" onClick={ handleErrorHintIconClick } ml={ 1 }>\n                <IconSvg name=\"info\" boxSize={ 5 } color=\"error\"/>\n              </Box>\n            </Tooltip>\n          ) }\n          <IconButton\n            aria-label=\"remove\"\n            icon={ <IconSvg name=\"cross\" boxSize={ 6 }/> }\n            boxSize={ 6 }\n            variant=\"simple\"\n            display=\"inline-block\"\n            flexShrink={ 0 }\n            ml=\"auto\"\n            onClick={ handleRemove }\n            isDisabled={ isDisabled }\n            alignSelf=\"flex-start\"\n          />\n        </Flex>\n        <Text variant=\"secondary\" mt={ 1 }>\n          { file.size.toLocaleString(undefined, { notation: 'compact', maximumFractionDigits: 2, unit: 'byte', unitDisplay: 'narrow', style: 'unit' }) }\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default React.memo(chakra(FileSnippet));\n","import { Text, Button, Box, Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport type { ControllerRenderProps, FieldPathValue, ValidateResult } from 'react-hook-form';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport { Mb } from 'lib/consts';\nimport FieldError from 'ui/shared/forms/components/FieldError';\nimport DragAndDropArea from 'ui/shared/forms/inputs/file/DragAndDropArea';\nimport FileInput from 'ui/shared/forms/inputs/file/FileInput';\nimport FileSnippet from 'ui/shared/forms/inputs/file/FileSnippet';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\ntype FileTypes = '.sol' | '.yul' | '.json' | '.vy';\n\ninterface Props {\n  name?: 'sources' | 'interfaces';\n  fileTypes: Array<FileTypes>;\n  fullFilePath?: boolean;\n  multiple?: boolean;\n  required?: boolean;\n  title: string;\n  hint: string | React.ReactNode;\n}\n\nconst ContractVerificationFieldSources = ({ fileTypes, multiple, required, title, hint, name = 'sources', fullFilePath }: Props) => {\n  const { setValue, getValues, control, formState, clearErrors } = useFormContext<FormFields>();\n\n  const error = (() => {\n    if (name === 'sources' && 'sources' in formState.errors) {\n      return formState.errors.sources;\n    }\n\n    if (name === 'interfaces' && 'interfaces' in formState.errors) {\n      return formState.errors.interfaces;\n    }\n  })();\n  const commonError = !error?.type?.startsWith('file_') ? error : undefined;\n  const fileError = error?.type?.startsWith('file_') ? error : undefined;\n\n  const handleFileRemove = React.useCallback((index?: number) => {\n    if (index === undefined) {\n      return;\n    }\n\n    const value = getValues(name).slice();\n    value.splice(index, 1);\n    setValue(name, value);\n    clearErrors(name);\n\n  }, [ getValues, name, setValue, clearErrors ]);\n\n  const renderUploadButton = React.useCallback(() => {\n    return (\n      <div>\n        <Text fontWeight={ 500 } color=\"text_secondary\" mb={ 3 }>{ title }</Text>\n        <Button size=\"sm\" variant=\"outline\">\n          Drop file{ multiple ? 's' : '' } or click here\n        </Button>\n      </div>\n    );\n  }, [ multiple, title ]);\n\n  const renderFiles = React.useCallback((files: Array<File>) => {\n    const errorList = fileError?.message?.split(';');\n\n    return (\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(0, 1fr) minmax(0, 1fr)' }}\n        columnGap={ 3 }\n        rowGap={ 3 }\n        w=\"100%\"\n      >\n        { files.map((file, index) => (\n          <Box key={ file.name + file.lastModified + index }>\n            <FileSnippet\n              file={ file }\n              maxW=\"initial\"\n              onRemove={ handleFileRemove }\n              index={ index }\n              isDisabled={ formState.isSubmitting }\n              error={ errorList?.[index] }\n            />\n          </Box>\n        )) }\n      </Box>\n    );\n  }, [ formState.isSubmitting, handleFileRemove, fileError ]);\n\n  const renderControl = React.useCallback(({ field }: { field: ControllerRenderProps<FormFields, typeof name> }) => {\n    const hasValue = field.value && field.value.length > 0;\n\n    const errorElement = (() => {\n      if (commonError?.type === 'required') {\n        return <FieldError message=\"Field is required\"/>;\n      }\n\n      if (commonError?.message) {\n        return <FieldError message={ commonError.message }/>;\n      }\n\n      return null;\n    })();\n\n    return (\n      <>\n        <FileInput<FormFields, typeof name> accept={ fileTypes.join(',') } multiple={ multiple } field={ field }>\n          { ({ onChange }) => (\n            <Flex\n              flexDir=\"column\"\n              alignItems=\"flex-start\"\n              rowGap={ 2 }\n              w=\"100%\"\n            >\n              <DragAndDropArea onDrop={ onChange } fullFilePath={ fullFilePath } p={{ base: 3, lg: 6 }} isDisabled={ formState.isSubmitting }>\n                { hasValue ? renderFiles(field.value) : renderUploadButton() }\n              </DragAndDropArea>\n            </Flex>\n          ) }\n        </FileInput>\n        { errorElement }\n      </>\n    );\n  }, [ fileTypes, multiple, commonError, formState.isSubmitting, renderFiles, renderUploadButton, fullFilePath ]);\n\n  const validateFileType = React.useCallback(async(value: FieldPathValue<FormFields, typeof name>): Promise<ValidateResult> => {\n    if (Array.isArray(value)) {\n      const errorText = `Wrong file type. Allowed files types are ${ fileTypes.join(',') }.`;\n      const errors = value.map(({ name }) => fileTypes.some((ext) => name.endsWith(ext)) ? '' : errorText);\n      if (errors.some((item) => item !== '')) {\n        return errors.join(';');\n      }\n    }\n    return true;\n  }, [ fileTypes ]);\n\n  const validateFileSize = React.useCallback(async(value: FieldPathValue<FormFields, typeof name>): Promise<ValidateResult> => {\n    if (Array.isArray(value)) {\n      const FILE_SIZE_LIMIT = 20 * Mb;\n      const errors = value.map(({ size }) => size > FILE_SIZE_LIMIT ? 'File is too big. Maximum size is 20 Mb.' : '');\n      if (errors.some((item) => item !== '')) {\n        return errors.join(';');\n      }\n    }\n    return true;\n  }, []);\n\n  const validateQuantity = React.useCallback(async(value: FieldPathValue<FormFields, typeof name>): Promise<ValidateResult> => {\n    if (!multiple && Array.isArray(value) && value.length > 1) {\n      return 'You can upload only one file';\n    }\n\n    return true;\n  }, [ multiple ]);\n\n  const rules = React.useMemo(() => ({\n    required,\n    validate: {\n      file_type: validateFileType,\n      file_size: validateFileSize,\n      quantity: validateQuantity,\n    },\n  }), [ validateFileSize, validateFileType, validateQuantity, required ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <Controller\n        name={ name }\n        control={ control }\n        render={ renderControl }\n        rules={ rules }\n      />\n      { hint ? <span>{ hint }</span> : null }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldSources);\n","import React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldLibraries from '../fields/ContractVerificationFieldLibraries';\nimport ContractVerificationFieldOptimization from '../fields/ContractVerificationFieldOptimization';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst FILE_TYPES = [ '.sol' as const, '.yul' as const ];\n\nconst ContractVerificationMultiPartFile = () => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (multi-part files)\">\n      <ContractVerificationFieldCompiler/>\n      <ContractVerificationFieldEvmVersion/>\n      <ContractVerificationFieldOptimization/>\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        multiple\n        fullFilePath\n        required\n        title=\"Sources *.sol or *.yul files\"\n        hint=\"Upload all Solidity or Yul contract source files.\"\n      />\n      <ContractVerificationFieldLibraries/>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationMultiPartFile);\n","import { Code } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  code: string;\n}\n\nconst ContractVerificationFormCodeSnippet = ({ code }: Props) => {\n  return (\n    <Code whiteSpace=\"pre-wrap\" wordBreak=\"break-all\" p={ 2 } borderRadius=\"base\">\n      { code }\n    </Code>\n  );\n};\n\nexport default React.memo(ContractVerificationFormCodeSnippet);\n","import { Box, Flex, Link } from '@chakra-ui/react';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport config from 'configs/app';\n\nimport ContractVerificationFormCodeSnippet from '../ContractVerificationFormCodeSnippet';\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport ContractVerificationMethod from '../ContractVerificationMethod';\n\nconst ContractVerificationSolidityFoundry = () => {\n  const { watch } = useFormContext<FormFields>();\n  const address = watch('address');\n\n  const codeSnippet = `forge verify-contract \\\\\n  --rpc-url ${ config.chain.rpcUrls[0] || `${ config.api.endpoint }/api/eth-rpc` } \\\\\n  --verifier blockscout \\\\\n  --verifier-url '${ config.api.endpoint }/api/' \\\\\n  ${ address || '<address>' } \\\\\n  [contractFile]:[contractName]`;\n\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Foundry\">\n      <ContractVerificationFormRow>\n        <Flex flexDir=\"column\">\n          <ContractVerificationFormCodeSnippet code={ codeSnippet }/>\n        </Flex>\n        <Box whiteSpace=\"pre-wrap\">\n          <span>Full tutorial about contract verification via Foundry on Blockscout is available </span>\n          <Link href=\"https://docs.blockscout.com/for-users/verifying-a-smart-contract/foundry-verification\" target=\"_blank\">\n            here\n          </Link>\n        </Box>\n      </ContractVerificationFormRow>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationSolidityFoundry);\n","import { Box, Flex, Link } from '@chakra-ui/react';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport config from 'configs/app';\n\nimport ContractVerificationFormCodeSnippet from '../ContractVerificationFormCodeSnippet';\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport ContractVerificationMethod from '../ContractVerificationMethod';\n\nconst ContractVerificationSolidityHardhat = ({ config: formConfig }: { config: SmartContractVerificationConfig }) => {\n  const chainNameSlug = config.chain.name?.toLowerCase().split(' ').join('-');\n  const { watch } = useFormContext<FormFields>();\n  const address = watch('address');\n\n  const latestSolidityVersion = formConfig.solidity_compiler_versions.find((version) => !version.includes('nightly'))?.split('+')[0];\n\n  const firstCodeSnippet = `const config: HardhatUserConfig = {\n  solidity: \"${ latestSolidityVersion || '0.8.24' }\", // replace if necessary\n  networks: {\n    '${ chainNameSlug }': {\n      url: '${ config.chain.rpcUrls[0] || `${ config.api.endpoint }/api/eth-rpc` }'\n    },\n  },\n  etherscan: {\n    apiKey: {\n      '${ chainNameSlug }': 'empty'\n    },\n    customChains: [\n      {\n        network: \"${ chainNameSlug }\",\n        chainId: ${ config.chain.id },\n        urls: {\n          apiURL: \"${ config.api.endpoint }/api\",\n          browserURL: \"${ config.app.baseUrl }\"\n        }\n      }\n    ]\n  }\n};`;\n\n  const secondCodeSnippet = `npx hardhat verify \\\\\n  --network ${ chainNameSlug } \\\\\n  ${ address || '<address>' } \\\\\n  [...constructorArgs]`;\n\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity Hardhat plugin\">\n      <ContractVerificationFormRow>\n        <Flex flexDir=\"column\" rowGap={ 3 }>\n          <ContractVerificationFormCodeSnippet code={ firstCodeSnippet }/>\n          <ContractVerificationFormCodeSnippet code={ secondCodeSnippet }/>\n        </Flex>\n        <Box whiteSpace=\"pre-wrap\">\n          <span>Full tutorial about contract verification via Hardhat on Blockscout is available </span>\n          <Link href=\"https://docs.blockscout.com/for-users/verifying-a-smart-contract/hardhat-verification-plugin\" target=\"_blank\">\n            here\n          </Link>\n        </Box>\n      </ContractVerificationFormRow>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationSolidityHardhat);\n","import { useUpdateEffect } from '@chakra-ui/react';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\nimport type { Option } from 'ui/shared/forms/inputs/select/types';\n\nimport FormFieldFancySelect from 'ui/shared/forms/fields/FormFieldFancySelect';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst SOURCIFY_ERROR_REGEXP = /\\(([^()]*)\\)/;\n\nconst ContractVerificationFieldContractIndex = () => {\n  const [ options, setOptions ] = React.useState<Array<Option>>([]);\n  const { formState, watch } = useFormContext<FormFields>();\n\n  const sources = watch('sources');\n  const sourcesError = 'sources' in formState.errors ? formState.errors.sources?.message : undefined;\n\n  useUpdateEffect(() => {\n    if (!sourcesError) {\n      return;\n    }\n\n    const matchResult = sourcesError.match(SOURCIFY_ERROR_REGEXP);\n    const parsedMethods = matchResult?.[1].split(',');\n    if (!Array.isArray(parsedMethods) || parsedMethods.length === 0) {\n      return;\n    }\n\n    const newOptions = parsedMethods.map((option, index) => ({ label: option, value: String(index + 1) }));\n    setOptions(newOptions);\n  }, [ sourcesError ]);\n\n  useUpdateEffect(() => {\n    setOptions([]);\n  }, [ sources ]);\n\n  if (options.length === 0) {\n    return null;\n  }\n\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldFancySelect<FormFields, 'contract_index'>\n        name=\"contract_index\"\n        placeholder=\"Contract name\"\n        options={ options }\n        isRequired\n        isAsync={ false }\n      />\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldContractIndex);\n","import React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldContractIndex from '../fields/ContractVerificationFieldContractIndex';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst FILE_TYPES = [ '.json' as const, '.sol' as const ];\n\nconst ContractVerificationSourcify = () => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (Sourcify)\">\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        multiple\n        required\n        title=\"Sources and Metadata JSON\"\n        hint=\"Upload all Solidity contract source files and JSON metadata file(s) created during contract compilation.\"\n      />\n      <ContractVerificationFieldContractIndex/>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationSourcify);\n","import { Box, Link } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { FormFields } from '../types';\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport FormFieldFancySelect from 'ui/shared/forms/fields/FormFieldFancySelect';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\n\nconst OPTIONS_LIMIT = 50;\n\nconst ContractVerificationFieldZkCompiler = () => {\n  const queryClient = useQueryClient();\n  const config = queryClient.getQueryData<SmartContractVerificationConfig>(getResourceKey('contract_verification_config'));\n\n  const options = React.useMemo(() => (\n    config?.zk_compiler_versions?.map((option) => ({ label: option, value: option })) || []\n  ), [ config?.zk_compiler_versions ]);\n\n  const loadOptions = React.useCallback(async(inputValue: string) => {\n    return options\n      .filter(({ label }) => !inputValue || label.toLowerCase().includes(inputValue.toLowerCase()))\n      .slice(0, OPTIONS_LIMIT);\n  }, [ options ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldFancySelect<FormFields, 'zk_compiler'>\n        name=\"zk_compiler\"\n        placeholder=\"ZK compiler (enter version or use the dropdown)\"\n        placeholderIcon={ <IconSvg name=\"search\"/> }\n        loadOptions={ loadOptions }\n        defaultOptions\n        isRequired\n        isAsync\n      />\n      <Box>\n        <Link isExternal href=\"https://docs.zksync.io/zk-stack/components/compiler/specification#glossary\">zksolc</Link>\n        <span> compiler version.</span>\n      </Box>\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldZkCompiler);\n","import React from 'react';\n\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport config from 'configs/app';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldAutodetectArgs from '../fields/ContractVerificationFieldAutodetectArgs';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldName from '../fields/ContractVerificationFieldName';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\nimport ContractVerificationFieldZkCompiler from '../fields/ContractVerificationFieldZkCompiler';\n\nconst FILE_TYPES = [ '.json' as const ];\nconst rollupFeature = config.features.rollup;\n\nconst ContractVerificationStandardInput = ({ config }: { config: SmartContractVerificationConfig }) => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Solidity (standard JSON input) \" disableScroll={ config.verification_options.length === 1 }>\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldName/> }\n      <ContractVerificationFieldCompiler/>\n      { rollupFeature.isEnabled && rollupFeature.type === 'zkSync' && <ContractVerificationFieldZkCompiler/> }\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        title=\"Standard Input JSON\"\n        hint=\"Upload the standard input JSON file created during contract compilation.\"\n        required\n      />\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldAutodetectArgs/> }\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationStandardInput);\n","import { chakra, Code, Link } from '@chakra-ui/react';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport delay from 'lib/delay';\nimport useFetch from 'lib/hooks/useFetch';\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport { getGitHubOwnerAndRepo } from '../utils';\n\nconst COMMIT_HASH_PATTERN = /^([a-f0-9]{40}|[a-f0-9]{7})$/;\n\ninterface Props {\n  latestCommitHash: string | undefined;\n}\n\nconst ContractVerificationFieldCommit = ({ latestCommitHash }: Props) => {\n  const hashErrorRef = React.useRef<string | undefined>(undefined);\n  const fetch = useFetch();\n  const { getValues, trigger, setValue, getFieldState } = useFormContext<FormFields>();\n\n  const handleUseLatestCommitClick = React.useCallback(() => {\n    if (latestCommitHash) {\n      setValue('commit_hash', latestCommitHash);\n      trigger('commit_hash');\n    }\n  }, [ setValue, trigger, latestCommitHash ]);\n\n  const handleBlur = React.useCallback(async() => {\n    await delay(100); // have to wait to properly trigger subsequent validation\n    const repositoryUrlValue = getValues('repository_url');\n    const repositoryUrlState = getFieldState('repository_url');\n\n    if (!repositoryUrlValue || repositoryUrlState.invalid) {\n      return;\n    }\n\n    const { error } = getFieldState('commit_hash');\n\n    if (error && error.type !== 'commitHash') {\n      return;\n    }\n\n    const commitHash = getValues('commit_hash');\n\n    if (!commitHash) {\n      hashErrorRef.current = undefined;\n      trigger('commit_hash');\n      return;\n    }\n\n    const gitHubData = getGitHubOwnerAndRepo(repositoryUrlValue);\n\n    if (gitHubData) {\n      try {\n        const response = await fetch<{ sha?: string }, unknown>(\n          `https://api.github.com/repos/${ gitHubData.owner }/${ gitHubData.repo }/commits/${ commitHash }`,\n        );\n\n        if ('sha' in response) {\n          hashErrorRef.current = undefined;\n          trigger('commit_hash');\n          return;\n        }\n      } catch (error) {}\n    }\n\n    hashErrorRef.current = 'Commit hash not found in the repository';\n    trigger('commit_hash');\n  }, [ fetch, getValues, trigger, getFieldState ]);\n\n  React.useEffect(() => {\n    if (latestCommitHash) {\n      // revalidate field every time the latest commit hash changes\n      // because the repository url field has changed\n      handleBlur();\n    }\n  }, [ handleBlur, latestCommitHash ]);\n\n  const commitHashValidator = React.useCallback(() => {\n    return hashErrorRef.current ? hashErrorRef.current : true;\n  }, []);\n\n  const rules = React.useMemo(() => {\n    return {\n      validate: {\n        commitHash: commitHashValidator,\n      },\n      pattern: COMMIT_HASH_PATTERN,\n    };\n  }, [ commitHashValidator ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldText<FormFields>\n        name=\"commit_hash\"\n        placeholder=\"Commit hash\"\n        isRequired\n        size={{ base: 'md', lg: 'lg' }}\n        onBlur={ handleBlur }\n        rules={ rules }\n      />\n      { latestCommitHash && (\n        <chakra.div>\n          <span >We have found the latest commit hash for the repository: </span>\n          <Code color=\"text_secondary\">{ latestCommitHash.slice(0, 7) }</Code>\n          <span>. If you want to use it, </span>\n          <Link onClick={ handleUseLatestCommitClick }>click here</Link>\n          <span>.</span>\n        </chakra.div>\n      ) }\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldCommit);\n","import { get } from 'es-toolkit/compat';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport type { FormFields } from '../types';\n\nimport delay from 'lib/delay';\nimport useFetch from 'lib/hooks/useFetch';\nimport FormFieldUrl from 'ui/shared/forms/fields/FormFieldUrl';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport { getGitHubOwnerAndRepo } from '../utils';\n\ninterface Props {\n  onCommitHashChange: (commitHash?: string) => void;\n}\n\nconst ContractVerificationFieldGitHubRepo = ({ onCommitHashChange }: Props) => {\n  const repoErrorRef = React.useRef<string | undefined>(undefined);\n  const fetch = useFetch();\n  const { getValues, trigger, getFieldState } = useFormContext<FormFields>();\n\n  const handleBlur = React.useCallback(async() => {\n    await delay(100); // have to wait to properly trigger subsequent validation\n    const repositoryUrl = getValues('repository_url');\n    const { error } = getFieldState('repository_url');\n\n    if (error && error.type !== 'repoUrl') {\n      return;\n    }\n\n    if (!repositoryUrl) {\n      repoErrorRef.current = undefined;\n      trigger('repository_url');\n      onCommitHashChange();\n      return;\n    }\n\n    const gitHubData = getGitHubOwnerAndRepo(repositoryUrl);\n\n    if (gitHubData && gitHubData.rest.length === 0 && !gitHubData.url.search && !gitHubData.url.hash) {\n      try {\n        const response = await fetch(`https://api.github.com/repos/${ gitHubData.owner }/${ gitHubData.repo }/commits?per_page=1`);\n        repoErrorRef.current = undefined;\n        trigger('repository_url');\n        onCommitHashChange(get(response, '[0].sha'));\n        return;\n      } catch (error) {\n        repoErrorRef.current = 'GitHub repository not found';\n      }\n    } else {\n      repoErrorRef.current = 'Invalid GitHub repository URL';\n    }\n\n    trigger('repository_url');\n    onCommitHashChange();\n  }, [ fetch, getValues, getFieldState, onCommitHashChange, trigger ]);\n\n  const repoUrlValidator = React.useCallback(() => {\n    return repoErrorRef.current ? repoErrorRef.current : true;\n  }, []);\n\n  const rules = React.useMemo(() => {\n    return {\n      validate: {\n        repoUrl: repoUrlValidator,\n      },\n    };\n  }, [ repoUrlValidator ]);\n\n  return (\n    <ContractVerificationFormRow>\n      <FormFieldUrl<FormFields>\n        name=\"repository_url\"\n        placeholder=\"GitHub repository URL\"\n        isRequired\n        size={{ base: 'md', lg: 'lg' }}\n        onBlur={ handleBlur }\n        rules={ rules }\n      />\n    </ContractVerificationFormRow>\n  );\n};\n\nexport default React.memo(ContractVerificationFieldGitHubRepo);\n","import React from 'react';\n\nimport type { FormFields } from '../types';\n\nimport FormFieldText from 'ui/shared/forms/fields/FormFieldText';\n\nimport ContractVerificationFormRow from '../ContractVerificationFormRow';\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCommit from '../fields/ContractVerificationFieldCommit';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldGitHubRepo from '../fields/ContractVerificationFieldGitHubRepo';\n\nconst ContractVerificationStylusGitHubRepo = () => {\n  const [ latestCommitHash, setLatestCommitHash ] = React.useState<string | undefined>(undefined);\n\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Stylus (GitHub repository) \">\n      <ContractVerificationFieldCompiler isStylus/>\n      <ContractVerificationFieldGitHubRepo onCommitHashChange={ setLatestCommitHash }/>\n      <ContractVerificationFieldCommit latestCommitHash={ latestCommitHash }/>\n\n      <ContractVerificationFormRow>\n        <FormFieldText<FormFields>\n          name=\"path_prefix\"\n          placeholder=\"Path prefix\"\n          size={{ base: 'md', lg: 'lg' }}\n        />\n        <span>\n          The crate should be located in the root directory. If it is not the case, please specify the relative path from\n          the root to the crate directory.\n        </span>\n      </ContractVerificationFormRow>\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationStylusGitHubRepo);\n","import React from 'react';\n\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCode from '../fields/ContractVerificationFieldCode';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldConstructorArgs from '../fields/ContractVerificationFieldConstructorArgs';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldName from '../fields/ContractVerificationFieldName';\n\nconst ContractVerificationVyperContract = ({ config }: { config: SmartContractVerificationConfig }) => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Vyper (contract)\">\n      <ContractVerificationFieldName hint=\"The contract name is the name assigned to the verified contract in Blockscout.\"/>\n      <ContractVerificationFieldCompiler isVyper/>\n      { config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldEvmVersion isVyper/> }\n      <ContractVerificationFieldCode isVyper/>\n      { !config?.is_rust_verifier_microservice_enabled && <ContractVerificationFieldConstructorArgs/> }\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationVyperContract);\n","import { Link } from '@chakra-ui/react';\nimport React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldEvmVersion from '../fields/ContractVerificationFieldEvmVersion';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst MAIN_SOURCES_TYPES = [ '.vy' as const ];\nconst INTERFACE_TYPES = [ '.vy' as const, '.json' as const ];\n\nconst ContractVerificationVyperMultiPartFile = () => {\n\n  const interfacesHint = (\n    <>\n      <span>Add any </span>\n      <Link href=\"https://docs.vyperlang.org/en/stable/interfaces.html\" target=\"_blank\">required interfaces</Link>\n      <span> for the main compiled contract.</span>\n    </>\n  );\n\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Vyper (multi-part files)\">\n      <ContractVerificationFieldCompiler isVyper/>\n      <ContractVerificationFieldEvmVersion isVyper/>\n      <ContractVerificationFieldSources\n        name=\"sources\"\n        fileTypes={ MAIN_SOURCES_TYPES }\n        title=\"Upload main *.vy source\"\n        hint={ `\n          Primary compiled Vyper contract. \n          Only add the main contract here whose bytecode has been deployed, all other files can be uploaded to the interfaces box below.\n        ` }\n        required\n      />\n      <ContractVerificationFieldSources\n        name=\"interfaces\"\n        fileTypes={ INTERFACE_TYPES }\n        multiple\n        fullFilePath\n        title=\"Interfaces (.vy or .json)\"\n        hint={ interfacesHint }\n      />\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationVyperMultiPartFile);\n","import React from 'react';\n\nimport ContractVerificationMethod from '../ContractVerificationMethod';\nimport ContractVerificationFieldCompiler from '../fields/ContractVerificationFieldCompiler';\nimport ContractVerificationFieldSources from '../fields/ContractVerificationFieldSources';\n\nconst FILE_TYPES = [ '.json' as const ];\n\nconst ContractVerificationVyperStandardInput = () => {\n  return (\n    <ContractVerificationMethod title=\"Contract verification via Vyper (standard JSON input) \">\n      <ContractVerificationFieldCompiler isVyper/>\n      <ContractVerificationFieldSources\n        fileTypes={ FILE_TYPES }\n        title=\"Standard Input JSON\"\n        hint=\"Upload the standard input JSON file created during contract compilation.\"\n        required\n      />\n    </ContractVerificationMethod>\n  );\n};\n\nexport default React.memo(ContractVerificationVyperStandardInput);\n","import { Button, Grid, Text, chakra, useUpdateEffect } from '@chakra-ui/react';\nimport React from 'react';\nimport type { SubmitHandler } from 'react-hook-form';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport type { FormFields } from './types';\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { SmartContract, SmartContractVerificationMethodApi } from 'types/api/contract';\nimport type { SmartContractVerificationConfig } from 'types/client/contract';\n\nimport { route } from 'nextjs-routes';\n\nimport useApiFetch from 'lib/api/useApiFetch';\nimport capitalizeFirstLetter from 'lib/capitalizeFirstLetter';\nimport delay from 'lib/delay';\nimport getErrorObjStatusCode from 'lib/errors/getErrorObjStatusCode';\nimport useToast from 'lib/hooks/useToast';\nimport * as mixpanel from 'lib/mixpanel/index';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\n\nimport ContractVerificationFieldAddress from './fields/ContractVerificationFieldAddress';\nimport ContractVerificationFieldLicenseType from './fields/ContractVerificationFieldLicenseType';\nimport ContractVerificationFieldMethod from './fields/ContractVerificationFieldMethod';\nimport ContractVerificationFlattenSourceCode from './methods/ContractVerificationFlattenSourceCode';\nimport ContractVerificationMultiPartFile from './methods/ContractVerificationMultiPartFile';\nimport ContractVerificationSolidityFoundry from './methods/ContractVerificationSolidityFoundry';\nimport ContractVerificationSolidityHardhat from './methods/ContractVerificationSolidityHardhat';\nimport ContractVerificationSourcify from './methods/ContractVerificationSourcify';\nimport ContractVerificationStandardInput from './methods/ContractVerificationStandardInput';\nimport ContractVerificationStylusGitHubRepo from './methods/ContractVerificationStylusGitHubRepo';\nimport ContractVerificationVyperContract from './methods/ContractVerificationVyperContract';\nimport ContractVerificationVyperMultiPartFile from './methods/ContractVerificationVyperMultiPartFile';\nimport ContractVerificationVyperStandardInput from './methods/ContractVerificationVyperStandardInput';\nimport { prepareRequestBody, formatSocketErrors, getDefaultValues, METHOD_LABELS } from './utils';\n\ninterface Props {\n  method?: SmartContractVerificationMethodApi;\n  config: SmartContractVerificationConfig;\n  hash?: string;\n}\n\nconst ContractVerificationForm = ({ method: methodFromQuery, config, hash }: Props) => {\n  const formApi = useForm<FormFields>({\n    mode: 'onBlur',\n    defaultValues: getDefaultValues(methodFromQuery, config, hash, null),\n  });\n  const { handleSubmit, watch, formState, setError, reset, getFieldState, getValues, clearErrors } = formApi;\n  const submitPromiseResolver = React.useRef<(value: unknown) => void>();\n  const methodNameRef = React.useRef<string>();\n\n  const apiFetch = useApiFetch();\n  const toast = useToast();\n\n  const onFormSubmit: SubmitHandler<FormFields> = React.useCallback(async(data) => {\n    const body = prepareRequestBody(data);\n\n    if (!hash) {\n      try {\n        const response = await apiFetch<'contract', SmartContract>('contract', {\n          pathParams: { hash: data.address.toLowerCase() },\n        });\n\n        const isVerifiedContract = 'is_verified' in response && response?.is_verified && !response.is_partially_verified;\n        if (isVerifiedContract) {\n          setError('address', { message: 'Contract has already been verified' });\n          return Promise.resolve();\n        }\n      } catch (error) {\n        const statusCode = getErrorObjStatusCode(error);\n        const message = statusCode === 404 ? 'Address is not a smart contract' : 'Something went wrong';\n        setError('address', { message });\n        return Promise.resolve();\n      }\n    }\n\n    try {\n      await apiFetch('contract_verification_via', {\n        pathParams: { method: data.method.value, hash: data.address.toLowerCase() },\n        fetchParams: {\n          method: 'POST',\n          body,\n        },\n      });\n    } catch (error) {\n      return;\n    }\n\n    return new Promise((resolve) => {\n      submitPromiseResolver.current = resolve;\n    });\n  }, [ apiFetch, hash, setError ]);\n\n  const handleFormChange = React.useCallback(() => {\n    clearErrors('root');\n  }, [ clearErrors ]);\n\n  const address = watch('address');\n  const addressState = getFieldState('address');\n\n  const handleNewSocketMessage: SocketMessage.ContractVerification['handler'] = React.useCallback(async(payload) => {\n    if (payload.status === 'error') {\n      const errors = formatSocketErrors(payload.errors);\n\n      const existingErrors = errors.filter(Boolean).filter(([ field ]) => getValues(field));\n      if (existingErrors.length) {\n        existingErrors.forEach(([ field, error ]) => setError(field, error));\n      } else {\n        const globalErrors = Object.entries(payload.errors).map(([ , value ]) => value.join(', '));\n        const rootError = capitalizeFirstLetter(globalErrors.join('\\n\\n'));\n        setError('root', { message: rootError });\n      }\n\n      await delay(100); // have to wait a little bit, otherwise isSubmitting status will not be updated\n      submitPromiseResolver.current?.(null);\n      return;\n    }\n\n    toast({\n      position: 'top-right',\n      title: 'Success',\n      description: 'Contract is successfully verified.',\n      status: 'success',\n      variant: 'subtle',\n      isClosable: true,\n    });\n\n    mixpanel.logEvent(\n      mixpanel.EventTypes.CONTRACT_VERIFICATION,\n      { Status: 'Finished', Method: methodNameRef.current || '' },\n      { send_immediately: true },\n    );\n\n    window.location.assign(route({ pathname: '/address/[hash]', query: { hash: address, tab: 'contract' } }));\n  }, [ setError, toast, address, getValues ]);\n\n  const handleSocketError = React.useCallback(() => {\n    if (!formState.isSubmitting) {\n      return;\n    }\n\n    submitPromiseResolver.current?.(null);\n\n    const toastId = 'socket-error';\n    !toast.isActive(toastId) && toast({\n      id: toastId,\n      position: 'top-right',\n      title: 'Error',\n      description: 'There was an error with socket connection. Try again later.',\n      status: 'error',\n      variant: 'subtle',\n      isClosable: true,\n    });\n  // callback should not change when form is submitted\n  // otherwise it will resubscribe to channel, but we don't want that since in that case we might miss verification result message\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ toast ]);\n\n  const channel = useSocketChannel({\n    topic: `addresses:${ address?.toLowerCase() }`,\n    onSocketClose: handleSocketError,\n    onSocketError: handleSocketError,\n    isDisabled: !address || Boolean(address && addressState.error),\n  });\n  useSocketMessage({\n    channel,\n    event: 'verification_result',\n    handler: handleNewSocketMessage,\n  });\n\n  const methods = React.useMemo(() => {\n    return {\n      'flattened-code': <ContractVerificationFlattenSourceCode config={ config }/>,\n      'standard-input': <ContractVerificationStandardInput config={ config }/>,\n      sourcify: <ContractVerificationSourcify/>,\n      'multi-part': <ContractVerificationMultiPartFile/>,\n      'vyper-code': <ContractVerificationVyperContract config={ config }/>,\n      'vyper-multi-part': <ContractVerificationVyperMultiPartFile/>,\n      'vyper-standard-input': <ContractVerificationVyperStandardInput/>,\n      'solidity-hardhat': <ContractVerificationSolidityHardhat config={ config }/>,\n      'solidity-foundry': <ContractVerificationSolidityFoundry/>,\n      'stylus-github-repository': <ContractVerificationStylusGitHubRepo/>,\n    };\n  }, [ config ]);\n  const method = watch('method');\n  const licenseType = watch('license_type');\n  const content = methods[method?.value] || null;\n  const methodValue = method?.value;\n\n  useUpdateEffect(() => {\n    if (methodValue) {\n      reset(getDefaultValues(methodValue, config, hash || address, licenseType));\n\n      const methodName = METHOD_LABELS[methodValue];\n      mixpanel.logEvent(mixpanel.EventTypes.CONTRACT_VERIFICATION, { Status: 'Method selected', Method: methodName });\n      methodNameRef.current = methodName;\n    }\n  // !!! should run only when method is changed\n  }, [ methodValue ]);\n\n  return (\n    <FormProvider { ...formApi }>\n      <chakra.form\n        noValidate\n        onSubmit={ handleSubmit(onFormSubmit) }\n        onChange={ handleFormChange }\n      >\n        <Grid as=\"section\" columnGap=\"30px\" rowGap={{ base: 2, lg: 5 }} templateColumns={{ base: '1fr', lg: 'minmax(auto, 680px) minmax(0, 340px)' }}>\n          { !hash && <ContractVerificationFieldAddress/> }\n          <ContractVerificationFieldLicenseType/>\n          <ContractVerificationFieldMethod methods={ config.verification_options }/>\n        </Grid>\n        { content }\n        { formState.errors.root?.message && <Text color=\"error\"mt={ 4 } fontSize=\"sm\" whiteSpace=\"pre-wrap\">{ formState.errors.root.message }</Text> }\n        { Boolean(method) && method.value !== 'solidity-hardhat' && method.value !== 'solidity-foundry' && (\n          <Button\n            variant=\"solid\"\n            size=\"lg\"\n            type=\"submit\"\n            mt={ 12 }\n            isLoading={ formState.isSubmitting }\n            loadingText=\"Verify & publish\"\n          >\n            Verify & publish\n          </Button>\n        ) }\n      </chakra.form>\n    </FormProvider>\n  );\n};\n\nexport default React.memo(ContractVerificationForm);\n","import config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\n\nimport { isValidVerificationMethod, sortVerificationMethods } from './utils';\n\nexport default function useFormConfigQuery(enabled: boolean) {\n  return useApiQuery('contract_verification_config', {\n    queryOptions: {\n      select: (data) => {\n        return {\n          ...data,\n          verification_options: [\n            ...data.verification_options,\n            ...config.UI.views.address.extraVerificationMethods,\n          ].filter(isValidVerificationMethod).sort(sortVerificationMethods),\n        };\n      },\n      enabled,\n    },\n  });\n}\n","import { Alert, AlertDescription, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nconst DataFetchAlert = ({ className }: { className?: string }) => {\n  return (\n    <Alert status=\"warning\" width=\"fit-content\" className={ className }>\n      <AlertDescription>\n        Something went wrong. Try refreshing the page or come back later.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default chakra(DataFetchAlert);\n","import { Heading, Flex, Tooltip, Link, chakra, useDisclosure } from '@chakra-ui/react';\nimport { debounce } from 'es-toolkit';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ntype BackLinkProp = { label: string; url: string } | { label: string; onClick: () => void };\n\ntype Props = {\n  title: string;\n  className?: string;\n  backLink?: BackLinkProp;\n  beforeTitle?: React.ReactNode;\n  afterTitle?: React.ReactNode;\n  contentAfter?: React.ReactNode;\n  secondRow?: React.ReactNode;\n  isLoading?: boolean;\n  withTextAd?: boolean;\n};\n\nconst TEXT_MAX_LINES = 1;\n\nconst BackLink = (props: BackLinkProp & { isLoading?: boolean }) => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.isLoading) {\n    return (\n      <Skeleton\n        boxSize={ 6 }\n        display=\"inline-block\"\n        flexShrink={ 0 }\n        borderRadius=\"base\"\n        mr={ 3 }\n        my={ 2 }\n        verticalAlign=\"text-bottom\"\n        isLoaded={ !props.isLoading }\n      />\n    );\n  }\n\n  const icon = <IconSvg name=\"arrows/east\" boxSize={ 6 } transform=\"rotate(180deg)\" margin=\"auto\" color=\"gray.400\" flexShrink={ 0 }/>;\n\n  if ('url' in props) {\n    return (\n      <Tooltip label={ props.label }>\n        <LinkInternal display=\"inline-flex\" href={ props.url } h=\"40px\" mr={ 3 }>\n          { icon }\n        </LinkInternal>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ props.label }>\n      <Link display=\"inline-flex\" onClick={ props.onClick } h=\"40px\" mr={ 3 }>\n        { icon }\n      </Link>\n    </Tooltip>\n  );\n};\n\nconst PageTitle = ({ title, contentAfter, backLink, className, isLoading, afterTitle, beforeTitle, secondRow }: Props) => {\n  const tooltip = useDisclosure();\n  const isMobile = useIsMobile();\n  const [ isTextTruncated, setIsTextTruncated ] = React.useState(false);\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const updatedTruncateState = React.useCallback(() => {\n    if (!headingRef.current || !textRef.current) {\n      return;\n    }\n\n    const headingRect = headingRef.current.getBoundingClientRect();\n    const textRect = textRef.current.getBoundingClientRect();\n    if ((TEXT_MAX_LINES + 1) * headingRect.height <= textRect.height) {\n      setIsTextTruncated(true);\n    } else {\n      setIsTextTruncated(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      updatedTruncateState();\n    }\n  }, [ isLoading, updatedTruncateState ]);\n\n  React.useEffect(() => {\n    const handleResize = debounce(updatedTruncateState, 1000);\n    window.addEventListener('resize', handleResize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ updatedTruncateState ]);\n\n  return (\n    <Flex className={ className } flexDir=\"column\" rowGap={ 3 } mb={ 6 }>\n      <Flex\n        flexDir=\"row\"\n        flexWrap=\"wrap\"\n        rowGap={ 3 }\n        columnGap={ 3 }\n        alignItems=\"center\"\n      >\n        <Flex h={{ base: 'auto', lg: isLoading ? 10 : 'auto' }} maxW=\"100%\" alignItems=\"center\">\n          { backLink && <BackLink { ...backLink } isLoading={ isLoading }/> }\n          { beforeTitle }\n          <Skeleton\n            isLoaded={ !isLoading }\n            overflow=\"hidden\"\n          >\n            <Tooltip\n              label={ title }\n              isOpen={ tooltip.isOpen }\n              onClose={ tooltip.onClose }\n              maxW={{ base: 'calc(100vw - 32px)', lg: '500px' }}\n              closeOnScroll={ isMobile ? true : false }\n              isDisabled={ !isTextTruncated }\n            >\n              <Heading\n                ref={ headingRef }\n                as=\"h1\"\n                size=\"lg\"\n                whiteSpace=\"normal\"\n                wordBreak=\"break-all\"\n                style={{\n                  WebkitLineClamp: TEXT_MAX_LINES,\n                  WebkitBoxOrient: 'vertical',\n                  display: '-webkit-box',\n                }}\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                onMouseEnter={ tooltip.onOpen }\n                onMouseLeave={ tooltip.onClose }\n                onClick={ isMobile ? tooltip.onToggle : undefined }\n              >\n                <span ref={ textRef }>\n                  { title }\n                </span>\n              </Heading>\n            </Tooltip>\n          </Skeleton>\n          { afterTitle }\n        </Flex>\n        { contentAfter }\n      </Flex>\n      { secondRow && (\n        <Skeleton isLoaded={ !isLoading } alignItems=\"center\" minH={ 10 } overflow=\"hidden\" display=\"flex\" _empty={{ display: 'none' }}>\n          { secondRow }\n        </Skeleton>\n      ) }\n    </Flex>\n  );\n};\n\nexport default chakra(PageTitle);\n","import type { ChakraProps } from '@chakra-ui/react';\nimport React from 'react';\nimport type { FieldValues, Path } from 'react-hook-form';\n\nimport type { FormFieldPropsBase } from './types';\nimport type { PartialBy } from 'types/utils';\n\nimport { addressValidator } from '../validators/address';\nimport FormFieldText from './FormFieldText';\n\nconst FormFieldAddress = <FormFields extends FieldValues>(\n  props: PartialBy<FormFieldPropsBase<FormFields>, 'placeholder'>,\n) => {\n  const rules = React.useMemo(\n    () => ({\n      ...props.rules,\n      validate: {\n        ...props.rules?.validate,\n        address: addressValidator,\n      },\n    }),\n    [ props.rules ],\n  );\n\n  return (\n    <FormFieldText\n      { ...props }\n      placeholder={ props.placeholder || 'Address (0x...)' }\n      rules={ rules }\n    />\n  );\n};\n\nexport type WrappedComponent = <\n  FormFields extends FieldValues,\n  Name extends Path<FormFields> = Path<FormFields>,\n>(props: PartialBy<FormFieldPropsBase<FormFields, Name>, 'placeholder'> & ChakraProps) => React.JSX.Element;\n\nexport default React.memo(FormFieldAddress) as WrappedComponent;\n","import type { ColorMode } from '@chakra-ui/react';\nimport type { Size, ChakraStylesConfig } from 'chakra-react-select';\n\nimport type { Option } from './types';\n\nimport theme from 'theme/theme';\nimport getFormStyles from 'theme/utils/getFormStyles';\n\nfunction getValueContainerStyles(size?: Size) {\n  switch (size) {\n    case 'sm':\n    case 'md': {\n      return {\n        paddingLeft: 4,\n      };\n    }\n    case 'lg': {\n      return {\n        paddingLeft: 6,\n      };\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\nfunction getSingleValueStyles(size?: Size) {\n  switch (size) {\n    case 'sm':\n    case 'md': {\n      return {\n        top: '26px',\n      };\n    }\n    case 'lg': {\n      return {\n        top: '38px',\n      };\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\nconst getChakraStyles: (colorMode: ColorMode) => ChakraStylesConfig<Option> = (colorMode) => {\n  const formColor = getFormStyles({ colorMode, colorScheme: 'blue', theme });\n\n  return {\n    control: (provided, state) => ({\n      ...provided,\n      borderColor: state.hasValue ? formColor.input.filled.borderColor : formColor.input.empty.borderColor,\n    }),\n    inputContainer: (provided) => ({\n      ...provided,\n      py: 0,\n      mx: 0,\n    }),\n    valueContainer: (provided, state) => ({\n      ...provided,\n      ...getValueContainerStyles(state.selectProps.size),\n      py: 0,\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n      mx: 0,\n      transform: 'none',\n      ...getSingleValueStyles(state.selectProps.size),\n    }),\n  };\n};\n\nexport { getChakraStyles };\n","import { FormControl, useToken, useColorMode } from '@chakra-ui/react';\nimport type { CSSObjectWithLabel, GroupBase, SingleValue, MultiValue, AsyncProps, Props as SelectProps } from 'chakra-react-select';\nimport { Select, AsyncSelect } from 'chakra-react-select';\nimport React from 'react';\nimport type { FieldError, FieldErrorsImpl, Merge } from 'react-hook-form';\n\nimport type { Option } from './types';\n\nimport FormInputPlaceholder from 'ui/shared/forms/inputs/FormInputPlaceholder';\nimport { getChakraStyles } from 'ui/shared/forms/inputs/select/utils';\n\ninterface CommonProps {\n  error?: Merge<FieldError, FieldErrorsImpl<Option>> | undefined;\n  placeholderIcon?: React.ReactNode;\n}\n\ninterface RegularSelectProps extends SelectProps<Option, boolean, GroupBase<Option>>, CommonProps {\n  isAsync?: false;\n  onChange: (newValue: SingleValue<Option> | MultiValue<Option>) => void;\n}\n\ninterface AsyncSelectProps extends AsyncProps<Option, boolean, GroupBase<Option>>, CommonProps {\n  isAsync: true;\n  onChange: (newValue: SingleValue<Option> | MultiValue<Option>) => void;\n}\n\nexport type Props = RegularSelectProps | AsyncSelectProps;\n\nconst FancySelect = (props: Props, ref: React.LegacyRef<HTMLDivElement>) => {\n  const menuZIndex = useToken('zIndices', 'dropdown');\n  const { colorMode } = useColorMode();\n\n  const styles = React.useMemo(() => ({\n    menuPortal: (provided: CSSObjectWithLabel) => ({ ...provided, zIndex: menuZIndex }),\n  }), [ menuZIndex ]);\n\n  const chakraStyles = React.useMemo(() => getChakraStyles(colorMode), [ colorMode ]);\n\n  const SelectComponent = props.isAsync ? AsyncSelect : Select;\n\n  return (\n    <FormControl\n      variant=\"floating\"\n      size={ props.size || 'md' }\n      isRequired={ props.isRequired }\n      ref={ ref }\n      { ...(props.error ? { 'aria-invalid': true } : {}) }\n      { ...(props.isDisabled ? { 'aria-disabled': true } : {}) }\n      { ...(props.value ? { 'data-active': true } : {}) }\n    >\n      <SelectComponent\n        { ...props }\n        size={ props.size || 'md' }\n        menuPortalTarget={ window.document.body }\n        placeholder=\"\"\n        styles={ styles }\n        chakraStyles={ chakraStyles }\n        isInvalid={ Boolean(props.error) }\n        useBasicStyles\n      />\n      <FormInputPlaceholder\n        text={ typeof props.placeholder === 'string' ? props.placeholder : '' }\n        icon={ props.placeholderIcon }\n        error={ props.error }\n        isFancy\n      />\n    </FormControl>\n  );\n};\n\nexport default React.memo(React.forwardRef(FancySelect));\n","import React from 'react';\nimport type { Path, FieldValues } from 'react-hook-form';\nimport { useController, useFormContext } from 'react-hook-form';\n\nimport type { FormFieldPropsBase } from './types';\n\n// import type { Option } from 'ui/shared/forms/inputs/select/types';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport type { Props as FancySelectProps } from 'ui/shared/forms/inputs/select/FancySelect';\nimport FancySelect from 'ui/shared/forms/inputs/select/FancySelect';\n\n// FIXME: Try to get this to work to add more constraints to the props type\n// this type only works for plain objects, not for nested objects or arrays (e.g. ui/publicTags/submit/types.ts:FormFields)\n// type SelectField<O> = { [K in keyof O]: NonNullable<O[K]> extends Option ? K : never }[keyof O];\n\ntype Props<\n  FormFields extends FieldValues,\n  Name extends Path<FormFields>,\n> = Omit<FormFieldPropsBase<FormFields, Name>, 'bgColor' | 'size'> & Partial<FancySelectProps> & {\n  size?: 'md' | 'lg';\n};\n\nconst FormFieldFancySelect = <\n  FormFields extends FieldValues,\n  Name extends Path<FormFields>,\n>(props: Props<FormFields, Name>) => {\n  const isMobile = useIsMobile();\n  const defaultSize = isMobile ? 'md' : 'lg';\n\n  const { control } = useFormContext<FormFields>();\n  const { field, fieldState, formState } = useController<FormFields, typeof props.name>({\n    control,\n    name: props.name,\n    rules: { ...props.rules, required: props.isRequired },\n  });\n\n  const isDisabled = formState.isSubmitting;\n\n  return (\n    <FancySelect\n      { ...field }\n      { ...props }\n      size={ props.size || defaultSize }\n      error={ fieldState.error }\n      isDisabled={ isDisabled }\n    />\n  );\n};\n\nexport default React.memo(FormFieldFancySelect) as typeof FormFieldFancySelect;\n","module.exports = require('./dist/shared/lib/head')\n","// src/checkbox-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\nexport {\n  CheckboxGroupProvider,\n  useCheckboxGroupContext\n};\n","// src/use-initial-animation-state.tsx\nimport { useState } from \"react\";\nfunction useInitialAnimationState(isChecked) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n  return shouldAnimate;\n}\n\nexport {\n  useInitialAnimationState\n};\n","// src/checkbox-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 12 10\",\n      style: {\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16\n      },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"polyline\", { points: \"1.5 6 4.5 9 10.5 1\" })\n    }\n  );\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 24 24\",\n      style: { stroke: \"currentColor\", strokeWidth: 4 },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" })\n    }\n  );\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /* @__PURE__ */ jsx(BaseIcon, { ...rest })\n    }\n  ) : null;\n}\n\nexport {\n  CheckboxIcon\n};\n","import {\n  useInitialAnimationState\n} from \"./chunk-OW24QTOM.mjs\";\nimport {\n  useCheckboxGroupContext\n} from \"./chunk-6XFPBTDN.mjs\";\nimport {\n  CheckboxIcon\n} from \"./chunk-DFEUIRKX.mjs\";\nimport {\n  useCheckbox\n} from \"./chunk-HPA3SDH4.mjs\";\n\n// src/checkbox.tsx\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const shouldAnimate = useInitialAnimationState(state.isChecked);\n  const iconStyles = useMemo(\n    () => ({\n      animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon\n    }),\n    [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]\n  );\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      __css: { ...rootStyles, ...styles.container },\n      className: cx(\"chakra-checkbox\", className),\n      ...getRootProps(),\n      children: [\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            className: \"chakra-checkbox__input\",\n            ...getInputProps(inputProps, ref)\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            __css: { ...controlStyles, ...styles.control },\n            className: \"chakra-checkbox__control\",\n            ...getCheckboxProps(),\n            children: clonedIcon\n          }\n        ),\n        children && /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            className: \"chakra-checkbox__label\",\n            ...getLabelProps(),\n            __css: {\n              marginStart: spacing,\n              ...styles.label\n            },\n            children\n          }\n        )\n      ]\n    }\n  );\n});\nCheckbox.displayName = \"Checkbox\";\n\nexport {\n  Checkbox\n};\n","// src/code.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Code = forwardRef(function Code2(props, ref) {\n  const styles = useStyleConfig(\"Code\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.code,\n    {\n      ref,\n      className: cx(\"chakra-code\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        ...styles\n      }\n    }\n  );\n});\nCode.displayName = \"Code\";\n\nexport {\n  Code\n};\n","import {\n  visuallyHiddenStyle\n} from \"./chunk-RSUMUOHR.mjs\";\n\n// src/visually-hidden.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar VisuallyHidden = chakra(\"span\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHidden.displayName = \"VisuallyHidden\";\nvar VisuallyHiddenInput = chakra(\"input\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHiddenInput.displayName = \"VisuallyHiddenInput\";\nvar visually_hidden_default = VisuallyHidden;\n\nexport {\n  VisuallyHidden,\n  VisuallyHiddenInput,\n  visually_hidden_default\n};\n","function isDeepKey(key) {\n    switch (typeof key) {\n        case 'number':\n        case 'symbol': {\n            return false;\n        }\n        case 'string': {\n            return key.includes('.') || key.includes('[') || key.includes(']');\n        }\n    }\n}\n\nexport { isDeepKey };\n","function toKey(value) {\n    if (Object.is(value, -0)) {\n        return '-0';\n    }\n    return value.toString();\n}\n\nexport { toKey };\n","import { isDeepKey } from '../_internal/isDeepKey.mjs';\nimport { toKey } from '../_internal/toKey.mjs';\nimport { toPath } from '../util/toPath.mjs';\n\nfunction get(object, path, defaultValue) {\n    if (object == null) {\n        return defaultValue;\n    }\n    switch (typeof path) {\n        case 'string': {\n            const result = object[path];\n            if (result === undefined) {\n                if (isDeepKey(path)) {\n                    return get(object, toPath(path), defaultValue);\n                }\n                else {\n                    return defaultValue;\n                }\n            }\n            return result;\n        }\n        case 'number':\n        case 'symbol': {\n            if (typeof path === 'number') {\n                path = toKey(path);\n            }\n            const result = object[path];\n            if (result === undefined) {\n                return defaultValue;\n            }\n            return result;\n        }\n        default: {\n            if (Array.isArray(path)) {\n                return getWithPath(object, path, defaultValue);\n            }\n            if (Object.is(path?.valueOf(), -0)) {\n                path = '-0';\n            }\n            else {\n                path = String(path);\n            }\n            const result = object[path];\n            if (result === undefined) {\n                return defaultValue;\n            }\n            return result;\n        }\n    }\n}\nfunction getWithPath(object, path, defaultValue) {\n    if (path.length === 0) {\n        return defaultValue;\n    }\n    let current = object;\n    for (let index = 0; index < path.length; index++) {\n        if (current == null) {\n            return defaultValue;\n        }\n        current = current[path[index]];\n    }\n    if (current === undefined) {\n        return defaultValue;\n    }\n    return current;\n}\n\nexport { get };\n","function toPath(deepKey) {\n    const result = [];\n    const length = deepKey.length;\n    if (length === 0) {\n        return result;\n    }\n    let index = 0;\n    let key = '';\n    let quoteChar = '';\n    let bracket = false;\n    if (deepKey.charCodeAt(0) === 46) {\n        result.push('');\n        index++;\n    }\n    while (index < length) {\n        const char = deepKey[index];\n        if (quoteChar) {\n            if (char === '\\\\' && index + 1 < length) {\n                index++;\n                key += deepKey[index];\n            }\n            else if (char === quoteChar) {\n                quoteChar = '';\n            }\n            else {\n                key += char;\n            }\n        }\n        else if (bracket) {\n            if (char === '\"' || char === \"'\") {\n                quoteChar = char;\n            }\n            else if (char === ']') {\n                bracket = false;\n                result.push(key);\n                key = '';\n            }\n            else {\n                key += char;\n            }\n        }\n        else {\n            if (char === '[') {\n                bracket = true;\n                if (key) {\n                    result.push(key);\n                    key = '';\n                }\n            }\n            else if (char === '.') {\n                if (key) {\n                    result.push(key);\n                    key = '';\n                }\n            }\n            else {\n                key += char;\n            }\n        }\n        index++;\n    }\n    if (key) {\n        result.push(key);\n    }\n    return result;\n}\n\nexport { toPath };\n"],"names":["capitalizeFirstLetter","text","length","charAt","toUpperCase","slice","React","chakra","children","className","isMobile","useIsMobile","firstChildren","Array","isArray","secondChildren","GridItem","_notFirst","mt","base","lg","fontSize","color","isReadOnly","ContractVerificationFormRow","span","fontWeight","fontFamily","FormFieldAddress","name","isRequired","placeholder","size","options","CONTRACT_LICENSES","map","label","title","type","value","ContractVerificationFieldLicenseType","FormFieldFancySelect","methods","tooltipBg","useColorModeValue","ContractVerificationFieldMethod","method","METHOD_LABELS","renderPopoverListItem","ListItem","Link","href","target","Box","gridColumn","Popover","trigger","isLazy","placement","offset","PopoverTrigger","display","ml","cursor","verticalAlign","h","IconSvg","boxSize","_hover","Portal","PopoverContent","bgColor","w","PopoverArrow","PopoverBody","DarkMode","OrderedList","isAsync","ContractVerificationMethod","disableScroll","ref","current","scrollIntoView","behavior","section","Text","mb","Grid","columnGap","rowGap","templateColumns","ContractVerificationFieldConstructorArgs","FormFieldText","rules","maxLength","asComponent","ContractVerificationFieldAutodetectArgs","isOn","setIsOn","resetField","useFormContext","handleCheckboxChange","prev","FormFieldCheckbox","onChange","isVyper","isStylus","isNightly","ContractVerificationFieldCompiler","setIsNightly","formState","getValues","config","useQueryClient","getQueryData","getResourceKey","field","includes","defaultValue","versions","stylus_compiler_versions","vyper_compiler_versions","solidity_compiler_versions","option","loadOptions","inputValue","filter","toLowerCase","OPTIONS_LIMIT","Checkbox","isDisabled","isSubmitting","defaultOptions","placeholderIcon","div","Code","ContractVerificationFieldEvmVersion","vyper_evm_versions","solidity_evm_versions","ContractVerificationFieldIsYul","index","fieldsLength","ContractVerificationFieldLibraryItem","onAddFieldClick","onRemoveFieldClick","handleAddButtonClick","handleRemoveButtonClick","Flex","alignItems","justifyContent","variant","IconButton","aria-label","onClick","icon","LIMIT","control","ContractVerificationFieldLibraries","fields","append","remove","insert","useFieldArray","isEnabled","setIsEnabled","useUpdateEffect","address","handleAddFieldClick","handleRemoveFieldClick","id","hint","ContractVerificationFieldName","ContractVerificationFieldOptimization","flexShrink","minW","maxW","ContractVerificationFlattenSourceCode","is_rust_verifier_microservice_enabled","ContractVerificationFieldCode","FieldError","message","wordBreak","getAllFileEntries","dataTransferItemList","fileEntries","queue","i","item","webkitGetAsEntry","push","entry","shift","isFile","isDirectory","readAllDirectoryEntries","createReader","directoryReader","entries","readEntries","readEntriesPromise","Promise","resolve","reject","fileEntry","err","onDrop","DragAndDropArea","fullFilePath","isDragOver","setIsDragOver","handleDrop","event","preventDefault","dataTransfer","items","files","all","convertFileEntryToFile","file","newFile","stripLeadingSlash","fullPath","lastModified","handleDragOver","handleDragEnter","handleDragLeave","handleClick","stopPropagation","disabledBorderColor","Center","minH","borderWidth","borderColor","borderRadius","borderStyle","textAlign","onDragOver","onDragEnter","onDragLeave","FileInput","accept","multiple","handleInputChange","fileList","from","onBlur","click","handleInputBlur","injectedProps","content","InputGroup","VisuallyHiddenInput","FILE_ICONS","FileSnippet","onRemove","error","handleRemove","handleErrorHintIconClick","fileIcon","fileName","chunks","split","iconColor","overflow","mr","p","textOverflow","whiteSpace","Boolean","Tooltip","alignSelf","toLocaleString","undefined","notation","maximumFractionDigits","unit","unitDisplay","style","fileTypes","ContractVerificationFieldSources","required","setValue","clearErrors","errors","sources","interfaces","commonError","startsWith","fileError","handleFileRemove","splice","renderUploadButton","Button","renderFiles","errorList","gridTemplateColumns","renderControl","hasValue","errorElement","join","flexDir","validateFileType","errorText","some","ext","endsWith","validateFileSize","FILE_SIZE_LIMIT","Mb","validateQuantity","validate","file_type","file_size","quantity","Controller","render","FILE_TYPES","ContractVerificationMultiPartFile","code","watch","ContractVerificationSolidityFoundry","codeSnippet","chain","rpcUrls","api","endpoint","ContractVerificationFormCodeSnippet","formConfig","chainNameSlug","ContractVerificationSolidityHardhat","latestSolidityVersion","find","version","firstCodeSnippet","app","baseUrl","secondCodeSnippet","SOURCIFY_ERROR_REGEXP","setOptions","ContractVerificationFieldContractIndex","sourcesError","matchResult","match","parsedMethods","newOptions","String","ContractVerificationSourcify","zk_compiler_versions","isExternal","rollupFeature","features","rollup","ContractVerificationStandardInput","verification_options","ContractVerificationFieldZkCompiler","COMMIT_HASH_PATTERN","latestCommitHash","hashErrorRef","fetch","useFetch","getFieldState","handleUseLatestCommitClick","handleBlur","delay","repositoryUrlValue","repositoryUrlState","invalid","commitHash","gitHubData","getGitHubOwnerAndRepo","response","owner","repo","commitHashValidator","pattern","onCommitHashChange","repoErrorRef","repositoryUrl","rest","url","search","hash","get","repoUrlValidator","repoUrl","FormFieldUrl","setLatestCommitHash","ContractVerificationStylusGitHubRepo","ContractVerificationFieldGitHubRepo","ContractVerificationFieldCommit","ContractVerificationVyperContract","MAIN_SOURCES_TYPES","INTERFACE_TYPES","interfacesHint","ContractVerificationVyperMultiPartFile","ContractVerificationVyperStandardInput","methodFromQuery","ContractVerificationForm","formApi","useForm","mode","defaultValues","getDefaultValues","handleSubmit","setError","reset","submitPromiseResolver","methodNameRef","apiFetch","useApiFetch","toast","useToast","onFormSubmit","data","body","prepareRequestBody","pathParams","isVerifiedContract","is_verified","is_partially_verified","statusCode","getErrorObjStatusCode","fetchParams","handleFormChange","addressState","handleNewSocketMessage","payload","status","existingErrors","formatSocketErrors","forEach","globalErrors","Object","rootError","position","description","isClosable","mixpanel","CONTRACT_VERIFICATION","Status","Method","send_immediately","window","location","assign","route","pathname","query","tab","handleSocketError","toastId","isActive","channel","useSocketChannel","topic","onSocketClose","onSocketError","useSocketMessage","handler","sourcify","licenseType","methodValue","methodName","FormProvider","form","noValidate","onSubmit","as","ContractVerificationFieldAddress","root","isLoading","loadingText","useFormConfigQuery","enabled","useApiQuery","queryOptions","select","UI","views","extraVerificationMethods","isValidVerificationMethod","sort","sortVerificationMethods","DataFetchAlert","Alert","width","AlertDescription","BackLink","props","Skeleton","my","isLoaded","transform","margin","LinkInternal","PageTitle","contentAfter","backLink","afterTitle","beforeTitle","secondRow","tooltip","useDisclosure","isTextTruncated","setIsTextTruncated","headingRef","textRef","updatedTruncateState","headingRect","getBoundingClientRect","textRect","TEXT_MAX_LINES","height","handleResize","debounce","addEventListener","cleanup","removeEventListener","flexWrap","isOpen","onClose","closeOnScroll","Heading","WebkitLineClamp","WebkitBoxOrient","onMouseEnter","onOpen","onMouseLeave","onToggle","_empty","addressValidator","getChakraStyles","formColor","getFormStyles","colorMode","colorScheme","theme","provided","state","input","filled","empty","inputContainer","py","mx","valueContainer","getValueContainerStyles","paddingLeft","selectProps","singleValue","getSingleValueStyles","top","menuZIndex","FancySelect","useToken","useColorMode","styles","menuPortal","zIndex","chakraStyles","SelectComponent","AsyncSelect","Select","FormControl","menuPortalTarget","document","isInvalid","useBasicStyles","FormInputPlaceholder","isFancy","fieldState","useController","defaultSize"],"sourceRoot":"","ignoreList":[1,46,47,48,49,50,51,52,53,54,55,56]}