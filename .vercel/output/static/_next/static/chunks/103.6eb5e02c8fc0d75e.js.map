{"version":3,"file":"static/chunks/103.6eb5e02c8fc0d75e.js","mappings":"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","sources":["webpack://_N_E/./stubs/zkSyncL2.ts","webpack://_N_E/./types/api/zkSyncL2.ts","webpack://_N_E/./ui/txnBatches/zkSyncL2/ZkSyncL2TxnBatchDetails.tsx","webpack://_N_E/./ui/pages/ZkSyncL2TxnBatch.tsx","webpack://_N_E/./ui/shared/AppError/isCustomAppError.ts","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/DetailsInfoItemDivider.tsx","webpack://_N_E/./ui/shared/DetailsTimestamp.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/PrevNext.tsx","webpack://_N_E/./ui/shared/Tabs/RoutedTabs.tsx","webpack://_N_E/./ui/shared/Tabs/TabsSkeleton.tsx","webpack://_N_E/./ui/shared/Tabs/useTabIndexFromQuery.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationStep.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationSteps.tsx","webpack://_N_E/./ui/txnBatches/zkSyncL2/ZkSyncL2TxnBatchHashesInfo.tsx","webpack://_N_E/./ui/txs/TxsWithFrontendSorting.tsx","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-DZU5YH7Z.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-OLSEFBIG.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-R3K6W4OF.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-VVU6AIWW.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-5XCGGO7V.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-QUJ23J4G.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-ROBJ47HJ.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","webpack://_N_E/./node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/array/chunk.mjs"],"sourcesContent":["import type { ZkSyncBatch, ZkSyncBatchesItem } from 'types/api/zkSyncL2';\n\nimport { TX_HASH } from './tx';\n\nexport const ZKSYNC_L2_TXN_BATCHES_ITEM: ZkSyncBatchesItem = {\n  commit_transaction_hash: TX_HASH,\n  commit_transaction_timestamp: '2022-03-17T19:33:04.519145Z',\n  execute_transaction_hash: TX_HASH,\n  execute_transaction_timestamp: '2022-03-17T20:49:48.856345Z',\n  number: 8002,\n  prove_transaction_hash: TX_HASH,\n  prove_transaction_timestamp: '2022-03-17T20:49:48.772442Z',\n  status: 'Executed on L1',\n  timestamp: '2022-03-17T17:00:11.000000Z',\n  transaction_count: 1215,\n};\n\nexport const ZKSYNC_L2_TXN_BATCH: ZkSyncBatch = {\n  ...ZKSYNC_L2_TXN_BATCHES_ITEM,\n  start_block: 1245209,\n  end_block: 1245490,\n  l1_gas_price: '4173068062',\n  l1_transaction_count: 0,\n  l2_fair_gas_price: '100000000',\n  l2_transaction_count: 287,\n  root_hash: '0x108c635b94f941fcabcb85500daec2f6be4f0747dff649b1cdd9dd7a7a264792',\n};\n","import type { Transaction } from './transaction';\n\nexport const ZKSYNC_L2_TX_BATCH_STATUSES = [\n  'Processed on L2' as const,\n  'Sealed on L2' as const,\n  'Sent to L1' as const,\n  'Validated on L1' as const,\n  'Executed on L1' as const,\n];\n\nexport type ZkSyncBatchStatus = typeof ZKSYNC_L2_TX_BATCH_STATUSES[number];\n\nexport interface ZkSyncBatchesItem {\n  commit_transaction_hash: string | null;\n  commit_transaction_timestamp: string | null;\n  execute_transaction_hash: string | null;\n  execute_transaction_timestamp: string | null;\n  number: number;\n  prove_transaction_hash: string | null;\n  prove_transaction_timestamp: string | null;\n  status: ZkSyncBatchStatus;\n  timestamp: string;\n  transaction_count: number;\n}\n\nexport type ZkSyncBatchesResponse = {\n  items: Array<ZkSyncBatchesItem>;\n  next_page_params: {\n    number: number;\n    items_count: number;\n  } | null;\n};\n\nexport interface ZkSyncBatch extends Omit<ZkSyncBatchesItem, 'transaction_count'> {\n  start_block: number;\n  end_block: number;\n  l1_gas_price: string;\n  l1_transaction_count: number;\n  l2_fair_gas_price: string;\n  l2_transaction_count: number;\n  root_hash: string;\n}\n\nexport type ZkSyncBatchTxs = {\n  items: Array<Transaction>;\n  next_page_params: {\n    batch_number: string;\n    block_number: number;\n    index: number;\n    items_count: number;\n  } | null;\n};\n","import { Grid, GridItem, Link, Text } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport BigNumber from 'bignumber.js';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { scroller, Element } from 'react-scroll';\n\nimport { ZKSYNC_L2_TX_BATCH_STATUSES, type ZkSyncBatch } from 'types/api/zkSyncL2';\n\nimport { route } from 'nextjs-routes';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport { WEI, WEI_IN_GWEI } from 'lib/consts';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport { currencyUnits } from 'lib/units';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport PrevNext from 'ui/shared/PrevNext';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\nimport VerificationSteps from 'ui/shared/verificationSteps/VerificationSteps';\n\nimport ZkSyncL2TxnBatchHashesInfo from './ZkSyncL2TxnBatchHashesInfo';\n\ninterface Props {\n  query: UseQueryResult<ZkSyncBatch, ResourceError>;\n}\n\nconst ZkSyncL2TxnBatchDetails = ({ query }: Props) => {\n  const router = useRouter();\n  const [ isExpanded, setIsExpanded ] = React.useState(false);\n\n  const { data, isPlaceholderData, isError, error } = query;\n\n  const handlePrevNextClick = React.useCallback((direction: 'prev' | 'next') => {\n    if (!data) {\n      return;\n    }\n\n    const increment = direction === 'next' ? +1 : -1;\n    const nextId = String(data.number + increment);\n\n    router.push({ pathname: '/batches/[number]', query: { number: nextId } }, undefined);\n  }, [ data, router ]);\n\n  const handleCutClick = React.useCallback(() => {\n    setIsExpanded((flag) => !flag);\n    scroller.scrollTo('ZkSyncL2TxnBatchDetails__cutLink', {\n      duration: 500,\n      smooth: true,\n    });\n  }, []);\n\n  if (isError) {\n    if (isCustomAppError(error)) {\n      throwOnResourceLoadError({ isError, error });\n    }\n\n    return <DataFetchAlert/>;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const txNum = data.l2_transaction_count + data.l1_transaction_count;\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem.Label\n        hint=\"Batch number indicates the length of batches produced by grouping L2 blocks to be proven on Ethereum.\"\n        isLoading={ isPlaceholderData }\n      >\n        Txn batch number\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.number }\n        </Skeleton>\n        <PrevNext\n          ml={ 6 }\n          onClick={ handlePrevNextClick }\n          prevLabel=\"View previous txn batch\"\n          nextLabel=\"View next txn batch\"\n          isPrevDisabled={ data.number === 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Status is the short interpretation of the batch lifecycle\"\n        isLoading={ isPlaceholderData }\n      >\n        Status\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <VerificationSteps steps={ ZKSYNC_L2_TX_BATCH_STATUSES.slice(1) } currentStep={ data.status } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Date and time at which batch is produced\"\n        isLoading={ isPlaceholderData }\n      >\n        Timestamp\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.timestamp ? <DetailsTimestamp timestamp={ data.timestamp } isLoading={ isPlaceholderData }/> : 'Undefined' }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Number of transactions inside the batch.\"\n        isLoading={ isPlaceholderData }\n      >\n        Transactions\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/batches/[number]', query: { number: data.number.toString(), tab: 'txs' } }) }>\n            { txNum } transaction{ txNum === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItemDivider/>\n\n      <ZkSyncL2TxnBatchHashesInfo isLoading={ isPlaceholderData } data={ data }/>\n\n      <GridItem colSpan={{ base: undefined, lg: 2 }}>\n        <Element name=\"ZkSyncL2TxnBatchDetails__cutLink\">\n          <Skeleton isLoaded={ !isPlaceholderData } mt={ 6 } display=\"inline-block\">\n            <Link\n              display=\"inline-block\"\n              fontSize=\"sm\"\n              textDecorationLine=\"underline\"\n              textDecorationStyle=\"dashed\"\n              onClick={ handleCutClick }\n            >\n              { isExpanded ? 'Hide details' : 'View details' }\n            </Link>\n          </Skeleton>\n        </Element>\n      </GridItem>\n\n      { isExpanded && (\n        <>\n          <GridItem colSpan={{ base: undefined, lg: 2 }} mt={{ base: 1, lg: 4 }}/>\n\n          <DetailsInfoItem.Label\n            hint=\"L1 batch root is a hash that summarizes batch data and submitted to the L1\"\n          >\n            Root hash\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value\n            flexWrap=\"nowrap\"\n            alignSelf=\"flex-start\"\n          >\n            <TruncatedValue value={ data.root_hash }/>\n            <CopyToClipboard text={ data.root_hash }/>\n          </DetailsInfoItem.Value>\n\n          <DetailsInfoItem.Label\n            hint=\"Gas price for the batch settlement transaction on L1\"\n          >\n            L1 gas price\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Text mr={ 1 }>{ BigNumber(data.l1_gas_price).dividedBy(WEI).toFixed() } { currencyUnits.ether }</Text>\n            <Text variant=\"secondary\">({ BigNumber(data.l1_gas_price).dividedBy(WEI_IN_GWEI).toFixed() } { currencyUnits.gwei })</Text>\n          </DetailsInfoItem.Value>\n\n          <DetailsInfoItem.Label\n            hint='The gas price below which the \"baseFee\" of the batch should not fall'\n          >\n            L2 fair gas price\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Text mr={ 1 }>{ BigNumber(data.l2_fair_gas_price).dividedBy(WEI).toFixed() } { currencyUnits.ether }</Text>\n            <Text variant=\"secondary\">({ BigNumber(data.l2_fair_gas_price).dividedBy(WEI_IN_GWEI).toFixed() } { currencyUnits.gwei })</Text>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n    </Grid>\n  );\n};\n\nexport default ZkSyncL2TxnBatchDetails;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnAbsentParamError from 'lib/errors/throwOnAbsentParamError';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { TX } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport { ZKSYNC_L2_TXN_BATCH } from 'stubs/zkSyncL2';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport ZkSyncL2TxnBatchDetails from 'ui/txnBatches/zkSyncL2/ZkSyncL2TxnBatchDetails';\nimport TxsWithFrontendSorting from 'ui/txs/TxsWithFrontendSorting';\n\nconst TAB_LIST_PROPS = {\n  marginBottom: 0,\n  py: 5,\n  marginTop: -5,\n};\n\nconst TABS_HEIGHT = 80;\n\nconst ZkSyncL2TxnBatch = () => {\n  const router = useRouter();\n  const appProps = useAppContext();\n  const number = getQueryParamString(router.query.number);\n  const tab = getQueryParamString(router.query.tab);\n  const isMobile = useIsMobile();\n\n  const batchQuery = useApiQuery('zksync_l2_txn_batch', {\n    pathParams: { number },\n    queryOptions: {\n      enabled: Boolean(number),\n      placeholderData: ZKSYNC_L2_TXN_BATCH,\n    },\n  });\n\n  const batchTxsQuery = useQueryWithPages({\n    resourceName: 'zksync_l2_txn_batch_txs',\n    pathParams: { number },\n    options: {\n      enabled: Boolean(!batchQuery.isPlaceholderData && batchQuery.data?.number && tab === 'txs'),\n      placeholderData: generateListStub<'zksync_l2_txn_batch_txs'>(TX, 50, { next_page_params: {\n        batch_number: '8122',\n        block_number: 1338932,\n        index: 0,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  throwOnAbsentParamError(number);\n  throwOnResourceLoadError(batchQuery);\n\n  const hasPagination = !isMobile && batchTxsQuery.pagination.isVisible && tab === 'txs';\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => ([\n    { id: 'index', title: 'Details', component: <ZkSyncL2TxnBatchDetails query={ batchQuery }/> },\n    {\n      id: 'txs',\n      title: 'Transactions',\n      component: <TxsWithFrontendSorting query={ batchTxsQuery } showSocketInfo={ false } top={ hasPagination ? TABS_HEIGHT : 0 }/>,\n    },\n  ].filter(Boolean)), [ batchQuery, batchTxsQuery, hasPagination ]);\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.endsWith('/batches');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to txn batches list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  return (\n    <>\n      <PageTitle\n        title={ `Txn batch #${ number }` }\n        backLink={ backLink }\n      />\n      { batchQuery.isPlaceholderData ?\n        <TabsSkeleton tabs={ tabs }/> : (\n          <RoutedTabs\n            tabs={ tabs }\n            tabListProps={ isMobile ? undefined : TAB_LIST_PROPS }\n            rightSlot={ hasPagination ? <Pagination { ...(batchTxsQuery.pagination) }/> : null }\n            stickyEnabled={ hasPagination }\n          />\n        ) }\n    </>\n  );\n};\n\nexport default ZkSyncL2TxnBatch;\n","import type { ResourceError } from 'lib/api/resources';\n\n// status codes when custom error screen should be shown\nconst CUSTOM_STATUS_CODES = [ 403, 404, 422, 429 ];\n\nexport default function isCustomAppError(error: ResourceError<unknown>) {\n  return CUSTOM_STATUS_CODES.includes(error.status);\n}\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import type { ResponsiveValue } from '@chakra-ui/react';\nimport { GridItem, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  id?: string;\n  colSpan?: ResponsiveValue<number | 'auto'>;\n}\n\nconst DetailsInfoItemDivider = ({ className, id, colSpan }: Props) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      colSpan={ colSpan || { base: undefined, lg: 2 } }\n      mt={{ base: 2, lg: 3 }}\n      mb={{ base: 0, lg: 3 }}\n      borderBottom=\"1px solid\"\n      borderColor=\"divider\"\n    />\n  );\n};\n\nexport default chakra(DetailsInfoItemDivider);\n","import React from 'react';\n\nimport dayjs from 'lib/date/dayjs';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\ntype Props = {\n  // should be string, will be fixed on the back-end\n  timestamp: string | number;\n  isLoading?: boolean;\n};\n\nconst DetailsTimestamp = ({ timestamp, isLoading }: Props) => {\n  return (\n    <>\n      <IconSvg name=\"clock\" boxSize={ 5 } color=\"gray.500\" isLoading={ isLoading }/>\n      <Skeleton isLoaded={ !isLoading } ml={ 2 }>\n        { dayjs(timestamp).fromNow() }\n      </Skeleton>\n      <TextSeparator color=\"gray.500\"/>\n      <Skeleton isLoaded={ !isLoading } whiteSpace=\"normal\">\n        { dayjs(timestamp).format('llll') }\n      </Skeleton>\n    </>\n  );\n};\n\nexport default DetailsTimestamp;\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import { Box, IconButton, chakra, Tooltip, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: (direction: 'prev' | 'next') => void;\n  prevLabel?: string;\n  nextLabel?: string;\n  isPrevDisabled?: boolean;\n  isNextDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst PrevNext = ({ className, onClick, prevLabel, nextLabel, isPrevDisabled, isNextDisabled, isLoading }: Props) => {\n  const handelPrevClick = React.useCallback(() => {\n    onClick('prev');\n  }, [ onClick ]);\n\n  const handelNextClick = React.useCallback(() => {\n    onClick('next');\n  }, [ onClick ]);\n\n  if (isLoading) {\n    return (\n      <Flex columnGap=\"10px\" className={ className }>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n      </Flex>\n    );\n  }\n\n  return (\n    <Box className={ className } display=\"flex\">\n      <Tooltip label={ prevLabel }>\n        <IconButton\n          aria-label=\"prev\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 }/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          onClick={ handelPrevClick }\n          isDisabled={ isPrevDisabled }\n        />\n      </Tooltip>\n      <Tooltip label={ nextLabel }>\n        <IconButton\n          aria-label=\"next\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 } transform=\"rotate(180deg)\"/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          ml=\"10px\"\n          onClick={ handelNextClick }\n          isDisabled={ isNextDisabled }\n        />\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default chakra(PrevNext);\n","import type { ChakraProps, ThemingProps } from '@chakra-ui/react';\nimport { chakra } from '@chakra-ui/react';\nimport { pickBy } from 'es-toolkit';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef } from 'react';\n\nimport type { RoutedTab } from './types';\n\nimport TabsWithScroll from './TabsWithScroll';\nimport useTabIndexFromQuery from './useTabIndexFromQuery';\n\ninterface Props extends ThemingProps<'Tabs'> {\n  tabs: Array<RoutedTab>;\n  tabListProps?: ChakraProps | (({ isSticky, activeTabIndex }: { isSticky: boolean; activeTabIndex: number }) => ChakraProps);\n  rightSlot?: React.ReactNode;\n  rightSlotProps?: ChakraProps;\n  leftSlot?: React.ReactNode;\n  leftSlotProps?: ChakraProps;\n  stickyEnabled?: boolean;\n  className?: string;\n  onTabChange?: (index: number) => void;\n  isLoading?: boolean;\n}\n\nconst RoutedTabs = ({\n  tabs,\n  tabListProps,\n  rightSlot,\n  rightSlotProps,\n  leftSlot,\n  leftSlotProps,\n  stickyEnabled,\n  className,\n  onTabChange,\n  isLoading,\n  ...themeProps\n}: Props) => {\n  const router = useRouter();\n  const tabIndex = useTabIndexFromQuery(tabs);\n  const tabsRef = useRef<HTMLDivElement>(null);\n\n  const handleTabChange = React.useCallback((index: number) => {\n    const nextTab = tabs[index];\n\n    const queryForPathname = pickBy(router.query, (value, key) => router.pathname.includes(`[${ key }]`));\n    const tabId = Array.isArray(nextTab.id) ? nextTab.id[0] : nextTab.id;\n    router.push(\n      { pathname: router.pathname, query: { ...queryForPathname, tab: tabId } },\n      undefined,\n      { shallow: true },\n    );\n\n    onTabChange?.(index);\n  }, [ tabs, router, onTabChange ]);\n\n  useEffect(() => {\n    if (router.query.scroll_to_tabs) {\n      tabsRef?.current?.scrollIntoView(true);\n      delete router.query.scroll_to_tabs;\n      router.push(\n        {\n          pathname: router.pathname,\n          query: router.query,\n        },\n        undefined,\n        { shallow: true },\n      );\n    }\n  // replicate componentDidMount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TabsWithScroll\n      tabs={ tabs }\n      tabListProps={ tabListProps }\n      leftSlot={ leftSlot }\n      leftSlotProps={ leftSlotProps }\n      rightSlot={ rightSlot }\n      rightSlotProps={ rightSlotProps }\n      stickyEnabled={ stickyEnabled }\n      onTabChange={ handleTabChange }\n      defaultTabIndex={ tabIndex }\n      isLoading={ isLoading }\n      { ...themeProps }\n    />\n  );\n};\n\nexport default React.memo(chakra(RoutedTabs));\n","import { Flex, chakra, Box, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { RoutedTab } from '../Tabs/types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport useTabIndexFromQuery from 'ui/shared/Tabs/useTabIndexFromQuery';\n\ntype TabSize = 'sm' | 'md';\n\nconst SkeletonTabText = ({ size, title }: { size: TabSize; title: RoutedTab['title'] }) => (\n  <Skeleton\n    borderRadius=\"base\"\n    borderWidth={ size === 'sm' ? '2px' : 0 }\n    fontWeight={ 600 }\n    mx={ size === 'sm' ? 3 : 4 }\n    flexShrink={ 0 }\n  >\n    { typeof title === 'string' ? title : title() }\n  </Skeleton>\n);\n\ninterface Props {\n  className?: string;\n  tabs: Array<RoutedTab>;\n  size?: 'sm' | 'md';\n}\n\nconst TabsSkeleton = ({ className, tabs, size = 'md' }: Props) => {\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const tabIndex = useTabIndexFromQuery(tabs || []);\n\n  if (tabs.length === 1) {\n    return null;\n  }\n\n  return (\n    <Flex className={ className } my={ 8 } alignItems=\"center\" overflow=\"hidden\">\n      { tabs.slice(0, tabIndex).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n      { tabs.slice(tabIndex, tabIndex + 1).map(({ title, id }) => (\n        <Box key={ id.toString() } bgColor={ bgColor } py={ size === 'sm' ? 1 : 2 } borderRadius=\"base\" flexShrink={ 0 }>\n          <SkeletonTabText\n            key={ id.toString() }\n            title={ title }\n            size={ size }\n          />\n        </Box>\n      )) }\n      { tabs.slice(tabIndex + 1).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n    </Flex>\n  );\n};\n\nexport default chakra(TabsSkeleton);\n","import { useRouter } from 'next/router';\n\nimport type { RoutedTab } from './types';\n\nimport getQueryParamString from 'lib/router/getQueryParamString';\n\nexport default function useTabIndexFromQuery(tabs: Array<RoutedTab>) {\n  const router = useRouter();\n  const tabFromQuery = getQueryParamString(router.query.tab);\n\n  if (!tabFromQuery) {\n    return 0;\n  }\n\n  const tabIndex = tabs.findIndex(({ id, subTabs }) => {\n    if (Array.isArray(id)) {\n      return id.includes(tabFromQuery);\n    }\n\n    return id === tabFromQuery || subTabs?.some((id) => id === tabFromQuery);\n  });\n\n  if (tabIndex < 0) {\n    return 0;\n  }\n\n  return tabIndex;\n}\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/tx/[hash]',\n    query: { hash: props.hash },\n  });\n\n  return <TxEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(TxEntityL1);\n","import { HStack, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype Props = {\n  step: Step;\n  isLast: boolean;\n  isPassed: boolean;\n  isPending?: boolean;\n};\n\nconst VerificationStep = ({ step, isLast, isPassed, isPending }: Props) => {\n  let stepColor = 'text_secondary';\n  if (isPending) {\n    stepColor = 'yellow.500';\n  } else if (isPassed) {\n    stepColor = 'green.500';\n  }\n\n  return (\n    <HStack gap={ 2 } color={ stepColor }>\n      <IconSvg name={ isPassed ? 'verification-steps/finalized' : 'verification-steps/unfinalized' } boxSize={ 5 }/>\n      <Box color={ stepColor }>{ typeof step === 'string' ? step : step.content }</Box>\n      { !isLast && <IconSvg name=\"arrows/east\" boxSize={ 5 }/> }\n    </HStack>\n  );\n};\n\nexport default VerificationStep;\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport VerificationStep from './VerificationStep';\n\nexport interface Props {\n  currentStep: string;\n  currentStepPending?: boolean;\n  steps: Array<Step>;\n  isLoading?: boolean;\n  rightSlot?: React.ReactNode;\n  className?: string;\n}\n\nconst VerificationSteps = ({ currentStep, currentStepPending, steps, isLoading, rightSlot, className }: Props) => {\n  const currentStepIndex = steps.findIndex((step) => {\n    const label = typeof step === 'string' ? step : step.label;\n    return label === currentStep;\n  });\n\n  return (\n    <Skeleton\n      className={ className }\n      isLoaded={ !isLoading }\n      display=\"flex\"\n      gap={ 2 }\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n    >\n      { steps.map((step, index) => (\n        <VerificationStep\n          key={ index }\n          step={ step }\n          isLast={ index === steps.length - 1 && !rightSlot }\n          isPassed={ index <= currentStepIndex }\n          isPending={ index === currentStepIndex && currentStepPending }\n        />\n      )) }\n      { rightSlot }\n    </Skeleton>\n  );\n};\n\nexport default chakra(VerificationSteps);\n","import { Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { ZkSyncBatch } from 'types/api/zkSyncL2';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\n\ninterface Props {\n  isLoading: boolean;\n  data: Pick<\n    ZkSyncBatch,\n  'commit_transaction_hash' |\n  'commit_transaction_timestamp' |\n  'prove_transaction_hash' |\n  'prove_transaction_timestamp' |\n  'execute_transaction_hash' |\n  'execute_transaction_timestamp'\n  >;\n}\n\nconst ZkSyncL2TxnBatchHashesInfo = ({ isLoading, data }: Props) => {\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint=\"Hash of L1 tx on which the batch was committed\"\n        isLoading={ isLoading }\n      >\n        Commit tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexDir=\"column\"\n        alignItems=\"flex-start\"\n      >\n        { data.commit_transaction_hash ? (\n          <>\n            <TxEntityL1\n              isLoading={ isLoading }\n              hash={ data.commit_transaction_hash }\n              maxW=\"100%\"\n              noCopy={ false }\n            />\n            { data.commit_transaction_timestamp && (\n              <Flex alignItems=\"center\" flexWrap=\"wrap\" rowGap={ 3 }>\n                <DetailsTimestamp timestamp={ data.commit_transaction_timestamp } isLoading={ isLoading }/>\n              </Flex>\n            ) }\n          </>\n        ) : <Skeleton isLoaded={ !isLoading }>Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Hash of L1 tx on which the batch was proven\"\n        isLoading={ isLoading }\n      >\n        Prove tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexDir=\"column\"\n        alignItems=\"flex-start\"\n      >\n        { data.prove_transaction_hash ? (\n          <>\n            <TxEntityL1\n              isLoading={ isLoading }\n              hash={ data.prove_transaction_hash }\n              maxW=\"100%\"\n              noCopy={ false }\n            />\n            { data.prove_transaction_timestamp && (\n              <Flex alignItems=\"center\" flexWrap=\"wrap\" rowGap={ 3 }>\n                <DetailsTimestamp timestamp={ data.prove_transaction_timestamp } isLoading={ isLoading }/>\n              </Flex>\n            ) }\n          </>\n        ) : <Skeleton isLoaded={ !isLoading }>Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Hash of L1 tx on which the batch was executed and finalized\"\n        isLoading={ isLoading }\n      >\n        Execute tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexDir=\"column\"\n        alignItems=\"flex-start\"\n      >\n        { data.execute_transaction_hash ? (\n          <>\n            <TxEntityL1\n              isLoading={ isLoading }\n              hash={ data.execute_transaction_hash }\n              maxW=\"100%\"\n              noCopy={ false }\n            />\n            { data.execute_transaction_timestamp && (\n              <Flex alignItems=\"center\" flexWrap=\"wrap\" rowGap={ 3 }>\n                <DetailsTimestamp timestamp={ data.execute_transaction_timestamp } isLoading={ isLoading }/>\n              </Flex>\n            ) }\n          </>\n        ) : <Skeleton isLoaded={ !isLoading }>Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default React.memo(ZkSyncL2TxnBatchHashesInfo);\n","import React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\n\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport TxsContent from './TxsContent';\nimport useTxsSort from './useTxsSort';\n\ntype Props = {\n  // eslint-disable-next-line max-len\n  query: QueryWithPagesResult<'txs_validated' | 'txs_pending'> | QueryWithPagesResult<'txs_watchlist'> | QueryWithPagesResult<'block_txs'> | QueryWithPagesResult<'zkevm_l2_txn_batch_txs'>;\n  showBlockInfo?: boolean;\n  showSocketInfo?: boolean;\n  socketInfoAlert?: string;\n  socketInfoNum?: number;\n  currentAddress?: string;\n  filter?: React.ReactNode;\n  filterValue?: AddressFromToFilter;\n  enableTimeIncrement?: boolean;\n  top?: number;\n};\n\nconst TxsWithFrontendSorting = ({\n  filter,\n  filterValue,\n  query,\n  showBlockInfo = true,\n  showSocketInfo = true,\n  socketInfoAlert,\n  socketInfoNum,\n  currentAddress,\n  enableTimeIncrement,\n  top,\n}: Props) => {\n  const { data, isPlaceholderData, isError, setSortByValue, sorting } = useTxsSort(query);\n\n  return (\n    <TxsContent\n      filter={ filter }\n      filterValue={ filterValue }\n      showBlockInfo={ showBlockInfo }\n      showSocketInfo={ showSocketInfo }\n      socketInfoAlert={ socketInfoAlert }\n      socketInfoNum={ socketInfoNum }\n      currentAddress={ currentAddress }\n      enableTimeIncrement={ enableTimeIncrement }\n      top={ top }\n      items={ data?.items }\n      isPlaceholderData={ isPlaceholderData }\n      isError={ isError }\n      setSorting={ setSortByValue }\n      sort={ sorting }\n      query={ query }\n    />\n  );\n};\n\nexport default TxsWithFrontendSorting;\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\nexport {\n  Visibility\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/show.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, ssr, children });\n}\nShow.displayName = \"Show\";\n\nexport {\n  Show\n};\n","// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a, _b;\n  return (_b = (_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) != null ? _b : value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\nexport {\n  useQuery\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/hide.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, hide: true, ssr, children });\n}\nHide.displayName = \"Hide\";\n\nexport {\n  Hide\n};\n","import {\n  useRadioGroupContext\n} from \"./chunk-QUJ23J4G.mjs\";\n\n// src/use-radio.ts\nimport { useFormControlContext } from \"@chakra-ui/form-control\";\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../visually-hidden/src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/use-radio.ts\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useState, useId } from \"react\";\nfunction useRadio(props = {}) {\n  const {\n    defaultChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled: isDisabledProp,\n    isReadOnly: isReadOnlyProp,\n    isRequired: isRequiredProp,\n    onChange,\n    isInvalid: isInvalidProp,\n    name,\n    value,\n    id: idProp,\n    \"data-radiogroup\": dataRadioGroup,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props;\n  const uuid = `radio-${useId()}`;\n  const formControl = useFormControlContext();\n  const group = useRadioGroupContext();\n  const isWithinRadioGroup = !!group || !!dataRadioGroup;\n  const isWithinFormControl = !!formControl;\n  let id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;\n  id = idProp != null ? idProp : id;\n  const isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;\n  const isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;\n  const isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;\n  const isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovering] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isCheckedState, setChecked] = useState(Boolean(defaultChecked));\n  const isControlled = typeof isCheckedProp !== \"undefined\";\n  const isChecked = isControlled ? isCheckedProp : isCheckedState;\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        setChecked(event.target.checked);\n      }\n      onChange == null ? void 0 : onChange(event);\n    },\n    [isControlled, isDisabled, isReadOnly, onChange]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, () => setActive(true)),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(\n        props2.onMouseEnter,\n        () => setHovering(true)\n      ),\n      onMouseLeave: callAllHandlers(\n        props2.onMouseLeave,\n        () => setHovering(false)\n      )\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      isFocusVisible\n    ]\n  );\n  const { onFocus, onBlur } = formControl != null ? formControl : {};\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const trulyDisabled = isDisabled && !isFocusable;\n      return {\n        ...props2,\n        id,\n        ref,\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          onBlur,\n          props2.onBlur,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          onFocus,\n          props2.onFocus,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        required: isRequired,\n        \"aria-invalid\": ariaAttr(isInvalid),\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        \"aria-required\": ariaAttr(isRequired),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-describedby\": ariaDescribedBy,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      isDisabled,\n      isFocusable,\n      id,\n      name,\n      value,\n      handleChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n      isReadOnly,\n      isRequired,\n      isInvalid,\n      ariaDescribedBy\n    ]\n  );\n  const getLabelProps = (props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const getRootProps = (props2, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getCheckboxProps: getRadioProps,\n    getRadioProps,\n    getInputProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport {\n  useRadio\n};\n","import {\n  useRadioGroup\n} from \"./chunk-ROBJ47HJ.mjs\";\n\n// src/radio-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nvar RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const { value, onChange, getRootProps, name, htmlProps } = useRadioGroup(rest);\n  const group = useMemo(\n    () => ({\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    }),\n    [\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    ]\n  );\n  return /* @__PURE__ */ jsx(RadioGroupProvider, { value: group, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    }\n  ) });\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nexport {\n  useRadioGroupContext,\n  RadioGroup\n};\n","// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport {\n  useRadioGroup\n};\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n","function chunk(arr, size) {\n    if (!Number.isInteger(size) || size <= 0) {\n        throw new Error('Size must be an integer greater than zero.');\n    }\n    const chunkLength = Math.ceil(arr.length / size);\n    const result = Array(chunkLength);\n    for (let index = 0; index < chunkLength; index++) {\n        const start = index * size;\n        const end = start + size;\n        result[index] = arr.slice(start, end);\n    }\n    return result;\n}\n\nexport { chunk };\n"],"names":["ZKSYNC_L2_TXN_BATCHES_ITEM","commit_transaction_hash","TX_HASH","commit_transaction_timestamp","execute_transaction_hash","execute_transaction_timestamp","number","prove_transaction_hash","prove_transaction_timestamp","status","timestamp","transaction_count","ZKSYNC_L2_TXN_BATCH","start_block","end_block","l1_gas_price","l1_transaction_count","l2_fair_gas_price","l2_transaction_count","root_hash","ZKSYNC_L2_TX_BATCH_STATUSES","query","router","useRouter","ZkSyncL2TxnBatchDetails","isExpanded","setIsExpanded","React","data","isPlaceholderData","isError","error","handlePrevNextClick","nextId","String","increment","direction","push","pathname","undefined","handleCutClick","flag","scroller","scrollTo","duration","smooth","isCustomAppError","throwOnResourceLoadError","DataFetchAlert","txNum","Grid","columnGap","rowGap","base","lg","templateColumns","overflow","DetailsInfoItem","hint","isLoading","Skeleton","isLoaded","PrevNext","ml","onClick","prevLabel","nextLabel","isPrevDisabled","VerificationSteps","steps","slice","currentStep","DetailsTimestamp","LinkInternal","href","route","toString","tab","DetailsInfoItemDivider","ZkSyncL2TxnBatchHashesInfo","GridItem","colSpan","Element","name","mt","display","Link","fontSize","textDecorationLine","textDecorationStyle","flexWrap","alignSelf","TruncatedValue","value","CopyToClipboard","text","Text","mr","BigNumber","dividedBy","WEI","toFixed","currencyUnits","ether","variant","WEI_IN_GWEI","gwei","TAB_LIST_PROPS","marginBottom","py","marginTop","batchQuery","ZkSyncL2TxnBatch","appProps","useAppContext","getQueryParamString","isMobile","useIsMobile","useApiQuery","pathParams","queryOptions","enabled","Boolean","placeholderData","batchTxsQuery","useQueryWithPages","resourceName","options","generateListStub","TX","next_page_params","batch_number","block_number","index","items_count","throwOnAbsentParamError","hasPagination","pagination","isVisible","tabs","id","title","component","TxsWithFrontendSorting","showSocketInfo","top","filter","TABS_HEIGHT","backLink","hasGoBackLink","referrer","endsWith","label","url","PageTitle","TabsSkeleton","RoutedTabs","tabListProps","rightSlot","Pagination","stickyEnabled","CUSTOM_STATUS_CODES","includes","chakra","className","ContainerWithScrollY","gradientHeight","children","onScrollVisibilityChange","ref","hasScroll","setHasScroll","current","scrollHeight","clientHeight","gradientEndColor","useColorModeValue","Flex","flexDirection","overflowY","_after","position","content","bottom","left","right","height","bgGradient","pr","pb","LabelScrollText","fontWeight","align","Label","type","lineHeight","_notFirst","alignItems","HintPopover","my","Hint","Value","pl","whiteSpace","ValueWithScroll","mb","borderBottom","borderColor","IconSvg","boxSize","color","dayjs","fromNow","TextSeparator","format","popoverProps","popoverContentProps","popoverBodyProps","bgColor","borderRadius","Popover","trigger","isLazy","placement","PopoverTrigger","_hover","cursor","Portal","PopoverContent","maxW","PopoverArrow","PopoverBody","px","DarkMode","isNextDisabled","handelPrevClick","handelNextClick","Box","Tooltip","IconButton","aria-label","icon","h","colorScheme","isDisabled","transform","rightSlotProps","leftSlot","leftSlotProps","onTabChange","themeProps","tabIndex","useTabIndexFromQuery","tabsRef","useRef","handleTabChange","nextTab","queryForPathname","pickBy","key","tabId","Array","isArray","shallow","useEffect","scroll_to_tabs","scrollIntoView","TabsWithScroll","defaultTabIndex","SkeletonTabText","size","borderWidth","mx","flexShrink","length","map","tabFromQuery","findIndex","subTabs","some","rollupFeature","config","features","rollup","TxEntityL1","props","isEnabled","defaultHref","L1BaseUrl","hash","TxEntity","isExternal","step","isLast","isPassed","isPending","VerificationStep","stepColor","HStack","gap","currentStepPending","currentStepIndex","flexDir","noCopy","filterValue","showBlockInfo","socketInfoAlert","socketInfoNum","currentAddress","enableTimeIncrement","setSortByValue","sorting","useTxsSort","TxsContent","items","setSorting","sort"],"sourceRoot":"","ignoreList":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}