{"version":3,"file":"static/chunks/8035.86a1201197c95cbf.js","mappings":"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ACjC,gBAAyB,QAAQ,IACjC,gBAAyB,QAAQ,IACjC,qBACA,OACA,CACA,CAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EA2BA,OACA,MAXA,CACA,YACA,YACA,YACA,WACA,YACA,aACA,aACA,YACA,EAGA,mBACA,gBACA,gBACA,cA9BA,KAAoC,YACpC,KACA,MACA,YAAiB,QAAe,kBAChC,gBAAqB,QAAQ,IAC7B,eAAoB,QAAQ,IAC5B,eAAoB,QAAQ,GAC5B,EAAG,CAwBH,aAvBA,cACA,KACA,MACA,gBAAqB,QAAQ,IAC7B,eAAoB,QAAQ,IAC5B,eAAoB,QAAQ,GAC5B,GAkBA,WACA,CACA,CACA,cACA,mBACA,mBACA,6HC7MA,MAAiD,OAAa,EAC9D,yBACA,SACA,CAAC,EACD,EAAiB,OAAU,SAC3B,IACA,cACA,OACA,UACA,WACA,YACA,aACA,cACA,KACA,CAAI,EACJ,OAAU,gDAAiD,CAAE,MAAa,IAC1E,EAAgB,aAAO,CACvB,MACA,OACA,OACA,WACA,cACA,QACA,UACA,aACA,aACA,EAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,MAAyB,SAAG,IAAuB,iBAAwC,SAAG,CAC1F,GAAM,KACV,CACA,UACA,UAAiB,QAAE,yBACnB,UACA,EACA,CAAK,CACL,CAAC,EACD,kGCrDA,eAAiC,EACjC,IACA,WACA,QACA,eACA,OACA,aACA,cACA,WACA,KACA,CAAI,EACJ,MAAiC,cAAQ,QACzC,aACA,QACA,EAAc,YAAM,OACpB,EAAgB,iBAAW,MAC3B,gBACA,MACA,OACA,qCACA,kBACA,GAEA,MACA,UACA,MACA,CACA,yBACA,wBACA,mBACA,CAAG,KACH,EAAe,WAAK,GACpB,WAAgC,EAAK,EACrC,OACA,EAAmB,iBAAW,CAC9B,IACA,MAtCA,GAAkB,QAAQ,CAsC1B,IAtCqC,QAAQ,WAsC7C,iBACA,GACA,KAEA,qBACA,CAAK,CACL,OA0BA,OACA,aAzBuB,iBAAW,CAClC,KAAgB,YAChB,KACA,IAAW,QAAS,MACpB,iBACA,EAAK,CACL,IAoBA,cAlBwB,iBAAW,CACnC,KAAgB,WAChB,8BACA,OACA,KACA,MACA,OACA,+BACA,YACA,IACA,CAAS,CACT,oBACA,CACA,CAAK,CACL,WAKA,OACA,MACA,QACA,WACA,QACA,WACA,aACA,cACA,WACA,CACA","sources":["webpack://_N_E/./lib/blob/guessDataType.ts","webpack://_N_E/./lib/blob/index.ts","webpack://_N_E/./lib/blob/removeNonSignificantZeroBytes.ts","webpack://_N_E/./lib/bytesToBase64.ts","webpack://_N_E/./lib/downloadBlob.ts","webpack://_N_E/./lib/hexToBase64.ts","webpack://_N_E/./lib/hexToUtf8.ts","webpack://_N_E/./stubs/addressParams.ts","webpack://_N_E/./stubs/blobs.ts","webpack://_N_E/./stubs/tx.ts","webpack://_N_E/./ui/blob/BlobDataImage.tsx","webpack://_N_E/./ui/blob/BlobData.tsx","webpack://_N_E/./ui/blob/BlobInfo.tsx","webpack://_N_E/./ui/pages/Blob.tsx","webpack://_N_E/./ui/shared/AppError/isCustomAppError.ts","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DataFetchAlert.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/DetailsInfoItemDivider.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/Page/PageTitle.tsx","webpack://_N_E/./ui/shared/RawDataSnippet.tsx","webpack://_N_E/./ui/shared/select/SelectButton.tsx","webpack://_N_E/./ui/shared/select/SelectOption.tsx","webpack://_N_E/./ui/shared/select/SelectContent.tsx","webpack://_N_E/./ui/shared/select/Select.tsx","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-5XCGGO7V.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-QUJ23J4G.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-ROBJ47HJ.mjs"],"sourcesContent":["import filetype from 'magic-bytes.js';\n\nimport hexToBytes from 'lib/hexToBytes';\n\nimport removeNonSignificantZeroBytes from './removeNonSignificantZeroBytes';\n\nexport default function guessDataType(data: string) {\n  const bytes = hexToBytes(data);\n  const filteredBytes = removeNonSignificantZeroBytes(bytes);\n\n  return filetype(filteredBytes)[0];\n}\n","export { default as guessDataType } from './guessDataType';\n","export default function removeNonSignificantZeroBytes(bytes: Uint8Array) {\n  return shouldRemoveBytes(bytes) ? bytes.filter((item, index) => index % 32) : bytes;\n}\n\n// check if every 0, 32, 64, etc byte is 0 in the provided array\nfunction shouldRemoveBytes(bytes: Uint8Array) {\n  let result = true;\n\n  for (let index = 0; index < bytes.length; index += 32) {\n    const element = bytes[index];\n    if (element === 0) {\n      continue;\n    } else {\n      result = false;\n      break;\n    }\n  }\n\n  return result;\n}\n","export default function bytesToBase64(bytes: Uint8Array) {\n  let binary = '';\n  for (const byte of bytes) {\n    binary += String.fromCharCode(byte);\n  }\n\n  const base64String = btoa(binary);\n\n  return base64String;\n}\n","export default function downloadBlob(blob: Blob, filename: string) {\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  link.click();\n\n  link.remove();\n  URL.revokeObjectURL(url);\n}\n","import bytesToBase64 from './bytesToBase64';\nimport hexToBytes from './hexToBytes';\n\nexport default function hexToBase64(hex: string) {\n  const bytes = hexToBytes(hex);\n\n  return bytesToBase64(bytes);\n}\n","import hexToBytes from 'lib/hexToBytes';\n\nexport default function hexToUtf8(hex: string) {\n  const utf8decoder = new TextDecoder();\n  const bytes = hexToBytes(hex);\n\n  return utf8decoder.decode(bytes);\n}\n","import type { AddressParam } from 'types/api/addressParams';\n\nexport const ADDRESS_HASH = '0x2B51Ae4412F79c3c1cB12AA40Ea4ECEb4e80511a';\n\nexport const ADDRESS_PARAMS: AddressParam = {\n  hash: ADDRESS_HASH,\n  implementations: null,\n  is_contract: false,\n  is_verified: null,\n  name: null,\n  private_tags: [],\n  public_tags: [],\n  watchlist_names: [],\n  ens_domain_name: null,\n};\n","import type { Blob, TxBlob } from 'types/api/blobs';\n\nimport { TX_HASH } from './tx';\n\nconst BLOB_HASH = '0x0137cd898a9aaa92bbe94999d2a98241f5eabc829d9354160061789963f85995';\nconst BLOB_PROOF = '0x82683d5d6e58a76f2a607b8712cad113621d46cb86a6bcfcffb1e274a70c7308b3243c6075ee22d904fecf8d4c147c6f';\n\nexport const TX_BLOB: TxBlob = {\n  blob_data: '0x010203040506070809101112',\n  hash: BLOB_HASH,\n  kzg_commitment: BLOB_PROOF,\n  kzg_proof: BLOB_PROOF,\n};\n\nexport const BLOB: Blob = {\n  ...TX_BLOB,\n  transaction_hashes: [\n    { block_consensus: true, transaction_hash: TX_HASH },\n  ],\n};\n","import type { RawTracesResponse } from 'types/api/rawTrace';\nimport type { Transaction, TransactionsStats } from 'types/api/transaction';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const TX_HASH = '0x3ed9d81e7c1001bdda1caa1dc62c0acbbe3d2c671cdc20dc1e65efdaa4186967';\n\nexport const TX: Transaction = {\n  timestamp: '2022-11-11T11:11:11.000000Z',\n  fee: {\n    type: 'actual',\n    value: '2100000000000000',\n  },\n  gas_limit: '21000',\n  block_number: 9004925,\n  status: 'ok',\n  method: 'placeholder',\n  confirmations: 71,\n  type: 0,\n  exchange_rate: '1828.71',\n  to: ADDRESS_PARAMS,\n  transaction_burnt_fee: null,\n  max_fee_per_gas: null,\n  result: 'success',\n  hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  gas_price: '100000000000',\n  priority_fee: null,\n  base_fee_per_gas: '24',\n  from: ADDRESS_PARAMS,\n  token_transfers: null,\n  transaction_types: [\n    'coin_transfer',\n  ],\n  gas_used: '21000',\n  created_contract: null,\n  position: 0,\n  nonce: 295929,\n  has_error_in_internal_transactions: false,\n  actions: [],\n  decoded_input: null,\n  token_transfers_overflow: false,\n  raw_input: '0x',\n  value: '42000420000000000000',\n  max_priority_fee_per_gas: null,\n  revert_reason: null,\n  confirmation_duration: [\n    0,\n    14545,\n  ],\n  transaction_tag: null,\n};\n\nexport const TX_ZKEVM_L2: Transaction = {\n  ...TX,\n  zkevm_batch_number: 12345,\n  zkevm_sequence_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  zkevm_status: 'Confirmed by Sequencer',\n  zkevm_verify_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n};\n\nexport const TX_RAW_TRACE: RawTracesResponse = [];\n\nexport const TXS_STATS: TransactionsStats = {\n  pending_transactions_count: '4200',\n  transaction_fees_avg_24h: '22342870314428',\n  transaction_fees_sum_24h: '22184012506492688277',\n  transactions_count_24h: '992890',\n};\n","import { Image, Center, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  src: string;\n}\n\nconst BlobDataImage = ({ src }: Props) => {\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  return (\n    <Center\n      bgColor={ bgColor }\n      p={ 4 }\n      minH=\"200px\"\n      w=\"100%\"\n      borderRadius=\"md\"\n    >\n      <Image\n        src={ src }\n        objectFit=\"contain\"\n        maxW=\"100%\"\n        maxH=\"100%\"\n        objectPosition=\"center\"\n        alt=\"Blob image representation\"\n      />\n    </Center>\n  );\n};\n\nexport default React.memo(BlobDataImage);\n","import { Flex, GridItem, Button } from '@chakra-ui/react';\nimport React from 'react';\n\nimport * as blobUtils from 'lib/blob';\nimport removeNonSignificantZeroBytes from 'lib/blob/removeNonSignificantZeroBytes';\nimport bytesToBase64 from 'lib/bytesToBase64';\nimport downloadBlob from 'lib/downloadBlob';\nimport hexToBase64 from 'lib/hexToBase64';\nimport hexToBytes from 'lib/hexToBytes';\nimport hexToUtf8 from 'lib/hexToUtf8';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport RawDataSnippet from 'ui/shared/RawDataSnippet';\nimport Select from 'ui/shared/select/Select';\n\nimport BlobDataImage from './BlobDataImage';\n\nconst FORMATS = [\n  { label: 'Image', value: 'Image' as const },\n  { label: 'Raw', value: 'Raw' as const },\n  { label: 'UTF-8', value: 'UTF-8' as const },\n  { label: 'Base64', value: 'Base64' as const },\n];\n\ntype Format = typeof FORMATS[number]['value'];\n\ninterface Props {\n  data: string;\n  hash: string;\n  isLoading?: boolean;\n}\n\nconst BlobData = ({ data, isLoading, hash }: Props) => {\n  const [ format, setFormat ] = React.useState<Format>('Raw');\n\n  const guessedType = React.useMemo(() => {\n    if (isLoading) {\n      return;\n    }\n    return blobUtils.guessDataType(data);\n  }, [ data, isLoading ]);\n\n  const isImage = guessedType?.mime?.startsWith('image/');\n  const formats = isImage ? FORMATS : FORMATS.filter((format) => format.value !== 'Image');\n\n  React.useEffect(() => {\n    if (isImage) {\n      setFormat('Image');\n    }\n  }, [ isImage ]);\n\n  const handleDownloadButtonClick = React.useCallback(() => {\n    const fileBlob = (() => {\n      switch (format) {\n        case 'Image': {\n          const bytes = hexToBytes(data);\n          const filteredBytes = removeNonSignificantZeroBytes(bytes);\n          return new Blob([ filteredBytes ], { type: guessedType?.mime });\n        }\n        case 'UTF-8': {\n          return new Blob([ hexToUtf8(data) ], { type: guessedType?.mime ?? 'text/plain' });\n        }\n        case 'Base64': {\n          return new Blob([ hexToBase64(data) ], { type: 'application/octet-stream' });\n        }\n        case 'Raw': {\n          return new Blob([ data ], { type: 'application/octet-stream' });\n        }\n      }\n    })();\n    const fileName = `blob_${ hash }`;\n\n    downloadBlob(fileBlob, fileName);\n  }, [ data, format, guessedType, hash ]);\n\n  const content = (() => {\n    switch (format) {\n      case 'Image': {\n        if (!guessedType?.mime?.startsWith('image/')) {\n          return <RawDataSnippet data=\"Not an image\" showCopy={ false } isLoading={ isLoading }/>;\n        }\n\n        const bytes = hexToBytes(data);\n        const filteredBytes = removeNonSignificantZeroBytes(bytes);\n        const base64 = bytesToBase64(filteredBytes);\n\n        const imgSrc = `data:${ guessedType.mime };base64,${ base64 }`;\n\n        return <BlobDataImage src={ imgSrc }/>;\n      }\n      case 'UTF-8':\n        return <RawDataSnippet data={ hexToUtf8(data) } showCopy={ false } isLoading={ isLoading } contentProps={{ wordBreak: 'break-word' }}/>;\n      case 'Base64':\n        return <RawDataSnippet data={ hexToBase64(data) } showCopy={ false } isLoading={ isLoading }/>;\n      case 'Raw':\n        return <RawDataSnippet data={ data } showCopy={ false } isLoading={ isLoading }/>;\n      default:\n        return <span/>;\n    }\n  })();\n\n  return (\n    <GridItem colSpan={{ base: undefined, lg: 2 }} mt={{ base: 3, lg: 2 }}>\n      <Flex alignItems=\"center\" mb={ 3 }>\n        <Skeleton fontWeight={{ base: 700, lg: 500 }} isLoaded={ !isLoading }>\n          Blob data\n        </Skeleton>\n        <Skeleton ml={ 5 } isLoaded={ !isLoading }>\n          <Select\n            options={ formats }\n            name=\"format\"\n            defaultValue={ format }\n            onChange={ setFormat }\n            isLoading={ isLoading }\n            w=\"95px\"\n          />\n        </Skeleton>\n        <Skeleton ml=\"auto\" mr={ 3 } isLoaded={ !isLoading }>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={ handleDownloadButtonClick }\n          >\n            Download\n          </Button>\n        </Skeleton>\n        <CopyToClipboard text={ data } isLoading={ isLoading }/>\n      </Flex>\n      { content }\n    </GridItem>\n  );\n};\n\nexport default React.memo(BlobData);\n","import { Alert, Grid, GridItem } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Blob } from 'types/api/blobs';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport TxEntity from 'ui/shared/entities/tx/TxEntity';\n\nimport BlobData from './BlobData';\n\ninterface Props {\n  data: Blob;\n  isLoading?: boolean;\n}\n\nconst BlobInfo = ({ data, isLoading }: Props) => {\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={ 3 }\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: '216px minmax(728px, auto)' }}\n    >\n      { !data.blob_data && (\n        <GridItem colSpan={{ base: undefined, lg: 2 }} mb={ 3 }>\n          <Skeleton isLoaded={ !isLoading }>\n            <Alert status=\"warning\">This blob is not yet indexed</Alert>\n          </Skeleton>\n        </GridItem>\n      ) }\n\n      { data.kzg_proof && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Zero knowledge proof. Allows for quick verification of commitment\"\n            isLoading={ isLoading }\n          >\n            Proof\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !isLoading } overflow=\"hidden\" whiteSpace=\"pre-wrap\" wordBreak=\"break-all\" lineHeight={ 6 } my=\"-2px\">\n              { data.kzg_proof }\n              <CopyToClipboard text={ data.kzg_proof } isLoading={ isLoading }/>\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { data.kzg_commitment && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Commitment to the data in the blob\"\n            isLoading={ isLoading }\n          >\n            Commitment\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !isLoading } overflow=\"hidden\" whiteSpace=\"pre-wrap\" wordBreak=\"break-all\" lineHeight={ 6 } my=\"-2px\">\n              { data.kzg_commitment }\n              <CopyToClipboard text={ data.kzg_commitment } isLoading={ isLoading }/>\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { data.blob_data && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Blob size in bytes\"\n            isLoading={ isLoading }\n          >\n            Size, bytes\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !isLoading } overflow=\"hidden\" whiteSpace=\"pre-wrap\" wordBreak=\"break-all\">\n              { (data.blob_data.replace('0x', '').length / 2).toLocaleString() }\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { data.blob_data && <DetailsInfoItemDivider/> }\n\n      { data.transaction_hashes[0] && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Hash of the transaction with this blob\"\n            isLoading={ isLoading }\n          >\n            Transaction hash\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <TxEntity hash={ data.transaction_hashes[0].transaction_hash } isLoading={ isLoading } noIcon noCopy={ false }/>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { data.blob_data && (\n        <>\n          <DetailsInfoItemDivider/>\n          <BlobData data={ data.blob_data } hash={ data.hash } isLoading={ isLoading }/>\n        </>\n      ) }\n    </Grid>\n  );\n};\n\nexport default React.memo(BlobInfo);\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { BLOB } from 'stubs/blobs';\nimport BlobInfo from 'ui/blob/BlobInfo';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport BlobEntity from 'ui/shared/entities/blob/BlobEntity';\nimport PageTitle from 'ui/shared/Page/PageTitle';\n\nconst BlobPageContent = () => {\n  const router = useRouter();\n  const hash = getQueryParamString(router.query.hash);\n\n  const { data, isPlaceholderData, isError, error } = useApiQuery('blob', {\n    pathParams: { hash },\n    queryOptions: {\n      placeholderData: BLOB,\n      refetchOnMount: false,\n    },\n  });\n\n  const content = (() => {\n    if (isError) {\n      if (isCustomAppError(error)) {\n        throwOnResourceLoadError({ resource: 'blob', error, isError: true });\n      }\n\n      return <DataFetchAlert/>;\n    }\n\n    if (!data) {\n      return null;\n    }\n\n    return <BlobInfo data={ data } isLoading={ isPlaceholderData }/>;\n  })();\n\n  const titleSecondRow = (\n    <BlobEntity hash={ hash } noLink fontWeight={ 500 } fontFamily=\"heading\"/>\n  );\n\n  return (\n    <>\n      <PageTitle\n        title=\"Blob details\"\n        secondRow={ titleSecondRow }\n      />\n      { content }\n    </>\n  );\n};\n\nexport default BlobPageContent;\n","import type { ResourceError } from 'lib/api/resources';\n\n// status codes when custom error screen should be shown\nconst CUSTOM_STATUS_CODES = [ 403, 404, 422, 429 ];\n\nexport default function isCustomAppError(error: ResourceError<unknown>) {\n  return CUSTOM_STATUS_CODES.includes(error.status);\n}\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { Alert, AlertDescription, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nconst DataFetchAlert = ({ className }: { className?: string }) => {\n  return (\n    <Alert status=\"warning\" width=\"fit-content\" className={ className }>\n      <AlertDescription>\n        Something went wrong. Try refreshing the page or come back later.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default chakra(DataFetchAlert);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import type { ResponsiveValue } from '@chakra-ui/react';\nimport { GridItem, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  id?: string;\n  colSpan?: ResponsiveValue<number | 'auto'>;\n}\n\nconst DetailsInfoItemDivider = ({ className, id, colSpan }: Props) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      colSpan={ colSpan || { base: undefined, lg: 2 } }\n      mt={{ base: 2, lg: 3 }}\n      mb={{ base: 0, lg: 3 }}\n      borderBottom=\"1px solid\"\n      borderColor=\"divider\"\n    />\n  );\n};\n\nexport default chakra(DetailsInfoItemDivider);\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import { Heading, Flex, Tooltip, Link, chakra, useDisclosure } from '@chakra-ui/react';\nimport { debounce } from 'es-toolkit';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ntype BackLinkProp = { label: string; url: string } | { label: string; onClick: () => void };\n\ntype Props = {\n  title: string;\n  className?: string;\n  backLink?: BackLinkProp;\n  beforeTitle?: React.ReactNode;\n  afterTitle?: React.ReactNode;\n  contentAfter?: React.ReactNode;\n  secondRow?: React.ReactNode;\n  isLoading?: boolean;\n  withTextAd?: boolean;\n};\n\nconst TEXT_MAX_LINES = 1;\n\nconst BackLink = (props: BackLinkProp & { isLoading?: boolean }) => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.isLoading) {\n    return (\n      <Skeleton\n        boxSize={ 6 }\n        display=\"inline-block\"\n        flexShrink={ 0 }\n        borderRadius=\"base\"\n        mr={ 3 }\n        my={ 2 }\n        verticalAlign=\"text-bottom\"\n        isLoaded={ !props.isLoading }\n      />\n    );\n  }\n\n  const icon = <IconSvg name=\"arrows/east\" boxSize={ 6 } transform=\"rotate(180deg)\" margin=\"auto\" color=\"gray.400\" flexShrink={ 0 }/>;\n\n  if ('url' in props) {\n    return (\n      <Tooltip label={ props.label }>\n        <LinkInternal display=\"inline-flex\" href={ props.url } h=\"40px\" mr={ 3 }>\n          { icon }\n        </LinkInternal>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ props.label }>\n      <Link display=\"inline-flex\" onClick={ props.onClick } h=\"40px\" mr={ 3 }>\n        { icon }\n      </Link>\n    </Tooltip>\n  );\n};\n\nconst PageTitle = ({ title, contentAfter, backLink, className, isLoading, afterTitle, beforeTitle, secondRow }: Props) => {\n  const tooltip = useDisclosure();\n  const isMobile = useIsMobile();\n  const [ isTextTruncated, setIsTextTruncated ] = React.useState(false);\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const updatedTruncateState = React.useCallback(() => {\n    if (!headingRef.current || !textRef.current) {\n      return;\n    }\n\n    const headingRect = headingRef.current.getBoundingClientRect();\n    const textRect = textRef.current.getBoundingClientRect();\n    if ((TEXT_MAX_LINES + 1) * headingRect.height <= textRect.height) {\n      setIsTextTruncated(true);\n    } else {\n      setIsTextTruncated(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      updatedTruncateState();\n    }\n  }, [ isLoading, updatedTruncateState ]);\n\n  React.useEffect(() => {\n    const handleResize = debounce(updatedTruncateState, 1000);\n    window.addEventListener('resize', handleResize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ updatedTruncateState ]);\n\n  return (\n    <Flex className={ className } flexDir=\"column\" rowGap={ 3 } mb={ 6 }>\n      <Flex\n        flexDir=\"row\"\n        flexWrap=\"wrap\"\n        rowGap={ 3 }\n        columnGap={ 3 }\n        alignItems=\"center\"\n      >\n        <Flex h={{ base: 'auto', lg: isLoading ? 10 : 'auto' }} maxW=\"100%\" alignItems=\"center\">\n          { backLink && <BackLink { ...backLink } isLoading={ isLoading }/> }\n          { beforeTitle }\n          <Skeleton\n            isLoaded={ !isLoading }\n            overflow=\"hidden\"\n          >\n            <Tooltip\n              label={ title }\n              isOpen={ tooltip.isOpen }\n              onClose={ tooltip.onClose }\n              maxW={{ base: 'calc(100vw - 32px)', lg: '500px' }}\n              closeOnScroll={ isMobile ? true : false }\n              isDisabled={ !isTextTruncated }\n            >\n              <Heading\n                ref={ headingRef }\n                as=\"h1\"\n                size=\"lg\"\n                whiteSpace=\"normal\"\n                wordBreak=\"break-all\"\n                style={{\n                  WebkitLineClamp: TEXT_MAX_LINES,\n                  WebkitBoxOrient: 'vertical',\n                  display: '-webkit-box',\n                }}\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                onMouseEnter={ tooltip.onOpen }\n                onMouseLeave={ tooltip.onClose }\n                onClick={ isMobile ? tooltip.onToggle : undefined }\n              >\n                <span ref={ textRef }>\n                  { title }\n                </span>\n              </Heading>\n            </Tooltip>\n          </Skeleton>\n          { afterTitle }\n        </Flex>\n        { contentAfter }\n      </Flex>\n      { secondRow && (\n        <Skeleton isLoaded={ !isLoading } alignItems=\"center\" minH={ 10 } overflow=\"hidden\" display=\"flex\" _empty={{ display: 'none' }}>\n          { secondRow }\n        </Skeleton>\n      ) }\n    </Flex>\n  );\n};\n\nexport default chakra(PageTitle);\n","import type { ChakraProps } from '@chakra-ui/react';\nimport { Box, Flex, chakra, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport CopyToClipboard from './CopyToClipboard';\n\ninterface Props {\n  data: React.ReactNode;\n  title?: string;\n  className?: string;\n  rightSlot?: React.ReactNode;\n  beforeSlot?: React.ReactNode;\n  textareaMaxHeight?: string;\n  textareaMinHeight?: string;\n  showCopy?: boolean;\n  isLoading?: boolean;\n  contentProps?: ChakraProps;\n}\n\nconst RawDataSnippet = ({\n  data,\n  className,\n  title,\n  rightSlot,\n  beforeSlot,\n  textareaMaxHeight,\n  textareaMinHeight,\n  showCopy = true,\n  isLoading,\n  contentProps,\n}: Props) => {\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1362573\n  // there is a problem with scrollbar color in chromium\n  // so blackAlpha.50 here is replaced with #f5f5f6\n  // and whiteAlpha.50 is replaced with #1a1b1b\n  // const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const bgColor = useColorModeValue('#f5f5f6', '#1a1b1b');\n  return (\n    <Box className={ className } as=\"section\" title={ title }>\n      { (title || rightSlot || showCopy) && (\n        <Flex justifyContent={ title ? 'space-between' : 'flex-end' } alignItems=\"center\" mb={ 3 }>\n          { title && <Skeleton fontWeight={ 500 } isLoaded={ !isLoading }>{ title }</Skeleton> }\n          { rightSlot }\n          { typeof data === 'string' && showCopy && <CopyToClipboard text={ data } isLoading={ isLoading }/> }\n        </Flex>\n      ) }\n      { beforeSlot }\n      <Skeleton\n        p={ 4 }\n        bgColor={ isLoading ? 'inherit' : bgColor }\n        maxH={ textareaMaxHeight || '400px' }\n        minH={ textareaMinHeight || (isLoading ? '200px' : undefined) }\n        fontSize=\"sm\"\n        borderRadius=\"md\"\n        wordBreak=\"break-all\"\n        whiteSpace=\"pre-wrap\"\n        overflowX=\"hidden\"\n        overflowY=\"auto\"\n        isLoaded={ !isLoading }\n        { ...contentProps }\n      >\n        { data }\n      </Skeleton>\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(RawDataSnippet));\n","import { Box, Button } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: () => void;\n  isOpen: boolean;\n  isLoading?: boolean;\n  label: string;\n}\n\nconst SelectButton = ({ className, onClick, isOpen, isLoading, label }: Props, ref: React.Ref<HTMLButtonElement>) => {\n\n  if (isLoading) {\n    return <Skeleton className={ className } h={ 8 } borderRadius=\"base\" flexShrink={ 0 }/>;\n  }\n\n  return (\n    <Button\n      ref={ ref }\n      className={ className }\n      variant=\"outline\"\n      size=\"sm\"\n      colorScheme=\"gray\"\n      fontWeight=\"500\"\n      lineHeight={ 5 }\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      columnGap={ 1 }\n      onClick={ onClick }\n      isActive={ isOpen }\n      pl={ 2 }\n      pr={ 1 }\n      py={ 1 }\n      flexShrink={ 0 }\n    >\n      <Box maxW=\"calc(100% - 20px)\" overflow=\"hidden\" textOverflow=\"ellipsis\">{ label }</Box>\n      <IconSvg name=\"arrows/east-mini\" boxSize={ 5 } transform={ isOpen ? 'rotate(90deg)' : 'rotate(-90deg)' } flexShrink={ 0 }/>\n    </Button>\n  );\n};\n\nexport default React.forwardRef(SelectButton);\n","import type { UseRadioProps } from '@chakra-ui/react';\nimport { Box, useRadio, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport IconSvg from '../IconSvg';\n\ninterface Props extends UseRadioProps {\n  children: React.ReactNode;\n}\n\nconst SelectOption = (props: Props) => {\n  const { getInputProps, getRadioProps } = useRadio(props);\n\n  const input = getInputProps();\n  const checkbox = getRadioProps();\n  const bgColorHover = useColorModeValue('blue.50', 'whiteAlpha.100');\n\n  return (\n    <Box\n      as=\"label\"\n      px={ 4 }\n      py={ 2 }\n      cursor=\"pointer\"\n      display=\"flex\"\n      columnGap={ 2 }\n      alignItems=\"center\"\n      _hover={{\n        bgColor: bgColorHover,\n      }}\n    >\n      { props.isChecked ? <IconSvg name=\"check\" boxSize={ 5 }/> : <Box boxSize={ 5 }/> }\n      <input { ...input }/>\n      <Box { ...checkbox }>\n        { props.children }\n      </Box>\n    </Box>\n  );\n};\n\nexport default React.memo(SelectOption);\n","import type { useRadioGroup } from '@chakra-ui/react';\nimport { PopoverBody, PopoverContent } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { SelectOption as TSelectOption } from './types';\n\nimport SelectOption from './SelectOption';\n\ninterface Props {\n  options: Array<TSelectOption>;\n  getRootProps: ReturnType<typeof useRadioGroup>['getRootProps'];\n  getRadioProps: ReturnType<typeof useRadioGroup>['getRadioProps'];\n  value: string | number;\n}\n\nconst SelectContent = ({ options, getRootProps, getRadioProps, value }: Props) => {\n\n  const root = getRootProps();\n\n  return (\n    <PopoverContent w=\"fit-content\" minW=\"150px\">\n      <PopoverBody { ...root } py={ 2 } px={ 0 } display=\"flex\" flexDir=\"column\">\n        { options.map((option) => {\n          const radio = getRadioProps({ value: option.value });\n          return (\n            <SelectOption key={ option.value } { ...radio } isChecked={ radio.isChecked || (!option.value && !value) }>\n              { option.label }\n            </SelectOption>\n          );\n        }) }\n      </PopoverBody>\n    </PopoverContent>\n  );\n};\n\nexport default React.memo(SelectContent);\n","import { PopoverTrigger, chakra, useDisclosure, useRadioGroup } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { SelectOption } from './types';\n\nimport Popover from 'ui/shared/chakra/Popover';\n\nimport SelectButton from './SelectButton';\nimport SelectContent from './SelectContent';\n\ninterface InjectedProps<Value extends string> {\n  isOpen: boolean;\n  onToggle: () => void;\n  value: Value;\n}\n\nexport interface Props<Value extends string> {\n  className?: string;\n  isLoading?: boolean;\n  options: Array<SelectOption<Value>>;\n  name: string;\n  defaultValue?: Value;\n  onChange: (value: Value) => void;\n  children?: (props: InjectedProps<Value>) => React.ReactNode;\n}\n\nconst Select = <Value extends string>({ className, isLoading, options, name, defaultValue, onChange, children }: Props<Value>) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const handleChange = React.useCallback((value: Value) => {\n    onChange(value);\n    onClose();\n  }, [ onChange, onClose ]);\n\n  const { value, getRootProps, getRadioProps, setValue } = useRadioGroup({\n    name,\n    defaultValue,\n    onChange: handleChange,\n  });\n\n  React.useEffect(() => {\n    if (defaultValue) {\n      setValue(defaultValue);\n    }\n  }, [ defaultValue, setValue ]);\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        { children?.({ isOpen, onToggle, value: value as Value }) || (\n          <SelectButton\n            className={ className }\n            onClick={ onToggle }\n            isOpen={ isOpen }\n            isLoading={ isLoading }\n            label={ options.find((option) => option.value === value)?.label || String(value) }\n          />\n        ) }\n      </PopoverTrigger>\n      <SelectContent options={ options } getRootProps={ getRootProps } getRadioProps={ getRadioProps } value={ value }/>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(Select));\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","import {\n  useRadioGroupContext\n} from \"./chunk-QUJ23J4G.mjs\";\n\n// src/use-radio.ts\nimport { useFormControlContext } from \"@chakra-ui/form-control\";\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../visually-hidden/src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/use-radio.ts\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useState, useId } from \"react\";\nfunction useRadio(props = {}) {\n  const {\n    defaultChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled: isDisabledProp,\n    isReadOnly: isReadOnlyProp,\n    isRequired: isRequiredProp,\n    onChange,\n    isInvalid: isInvalidProp,\n    name,\n    value,\n    id: idProp,\n    \"data-radiogroup\": dataRadioGroup,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props;\n  const uuid = `radio-${useId()}`;\n  const formControl = useFormControlContext();\n  const group = useRadioGroupContext();\n  const isWithinRadioGroup = !!group || !!dataRadioGroup;\n  const isWithinFormControl = !!formControl;\n  let id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;\n  id = idProp != null ? idProp : id;\n  const isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;\n  const isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;\n  const isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;\n  const isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovering] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isCheckedState, setChecked] = useState(Boolean(defaultChecked));\n  const isControlled = typeof isCheckedProp !== \"undefined\";\n  const isChecked = isControlled ? isCheckedProp : isCheckedState;\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        setChecked(event.target.checked);\n      }\n      onChange == null ? void 0 : onChange(event);\n    },\n    [isControlled, isDisabled, isReadOnly, onChange]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, () => setActive(true)),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(\n        props2.onMouseEnter,\n        () => setHovering(true)\n      ),\n      onMouseLeave: callAllHandlers(\n        props2.onMouseLeave,\n        () => setHovering(false)\n      )\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      isFocusVisible\n    ]\n  );\n  const { onFocus, onBlur } = formControl != null ? formControl : {};\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const trulyDisabled = isDisabled && !isFocusable;\n      return {\n        ...props2,\n        id,\n        ref,\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          onBlur,\n          props2.onBlur,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          onFocus,\n          props2.onFocus,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        required: isRequired,\n        \"aria-invalid\": ariaAttr(isInvalid),\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        \"aria-required\": ariaAttr(isRequired),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-describedby\": ariaDescribedBy,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      isDisabled,\n      isFocusable,\n      id,\n      name,\n      value,\n      handleChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n      isReadOnly,\n      isRequired,\n      isInvalid,\n      ariaDescribedBy\n    ]\n  );\n  const getLabelProps = (props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const getRootProps = (props2, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getCheckboxProps: getRadioProps,\n    getRadioProps,\n    getInputProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport {\n  useRadio\n};\n","import {\n  useRadioGroup\n} from \"./chunk-ROBJ47HJ.mjs\";\n\n// src/radio-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nvar RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const { value, onChange, getRootProps, name, htmlProps } = useRadioGroup(rest);\n  const group = useMemo(\n    () => ({\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    }),\n    [\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    ]\n  );\n  return /* @__PURE__ */ jsx(RadioGroupProvider, { value: group, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    }\n  ) });\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nexport {\n  useRadioGroupContext,\n  RadioGroup\n};\n","// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport {\n  useRadioGroup\n};\n"],"names":["guessDataType","data","bytes","hexToBytes","filteredBytes","removeNonSignificantZeroBytes","filetype","shouldRemoveBytes","result","index","length","element","filter","item","bytesToBase64","binary","byte","String","fromCharCode","btoa","downloadBlob","blob","filename","url","URL","createObjectURL","link","document","createElement","setAttribute","click","remove","revokeObjectURL","hexToBase64","hex","hexToUtf8","utf8decoder","TextDecoder","decode","ADDRESS_HASH","hash","implementations","is_contract","is_verified","name","private_tags","public_tags","watchlist_names","ens_domain_name","BLOB_PROOF","TX_BLOB","blob_data","BLOB_HASH","kzg_commitment","kzg_proof","transaction_hashes","block_consensus","transaction_hash","TX_HASH","timestamp","fee","type","value","gas_limit","block_number","status","method","confirmations","exchange_rate","to","ADDRESS_PARAMS","transaction_burnt_fee","max_fee_per_gas","gas_price","priority_fee","base_fee_per_gas","from","token_transfers","transaction_types","gas_used","created_contract","position","nonce","has_error_in_internal_transactions","actions","decoded_input","token_transfers_overflow","raw_input","max_priority_fee_per_gas","revert_reason","confirmation_duration","transaction_tag","TX","zkevm_batch_number","zkevm_sequence_hash","zkevm_status","zkevm_verify_hash","pending_transactions_count","transaction_fees_avg_24h","transaction_fees_sum_24h","transactions_count_24h","React","src","BlobDataImage","bgColor","useColorModeValue","Center","p","minH","w","borderRadius","Image","objectFit","maxW","maxH","objectPosition","alt","FORMATS","label","guessedType","BlobData","isLoading","format","setFormat","blobUtils","isImage","mime","startsWith","formats","handleDownloadButtonClick","fileBlob","Blob","fileName","content","RawDataSnippet","showCopy","base64","imgSrc","contentProps","wordBreak","span","GridItem","colSpan","base","undefined","lg","mt","Flex","alignItems","mb","Skeleton","fontWeight","isLoaded","ml","Select","options","defaultValue","onChange","mr","Button","variant","size","onClick","CopyToClipboard","text","BlobInfo","Grid","columnGap","rowGap","templateColumns","Alert","DetailsInfoItem","hint","overflow","whiteSpace","lineHeight","my","replace","toLocaleString","DetailsInfoItemDivider","TxEntity","noIcon","noCopy","router","useRouter","BlobPageContent","getQueryParamString","query","isPlaceholderData","isError","error","useApiQuery","pathParams","queryOptions","placeholderData","BLOB","refetchOnMount","isCustomAppError","throwOnResourceLoadError","resource","DataFetchAlert","titleSecondRow","BlobEntity","noLink","fontFamily","PageTitle","title","secondRow","CUSTOM_STATUS_CODES","includes","chakra","className","ContainerWithScrollY","gradientHeight","children","onScrollVisibilityChange","ref","hasScroll","setHasScroll","current","scrollHeight","clientHeight","gradientEndColor","flexDirection","overflowY","_after","bottom","left","right","height","bgGradient","pr","pb","width","AlertDescription","LabelScrollText","Text","fontSize","align","Label","id","py","_notFirst","HintPopover","Hint","Value","display","flexWrap","pl","ValueWithScroll","borderBottom","borderColor","popoverProps","popoverContentProps","popoverBodyProps","boxSize","Popover","trigger","isLazy","placement","PopoverTrigger","IconSvg","color","_hover","cursor","Portal","PopoverContent","PopoverArrow","PopoverBody","px","DarkMode","BackLink","props","flexShrink","verticalAlign","icon","transform","margin","Tooltip","LinkInternal","href","h","Link","contentAfter","backLink","afterTitle","beforeTitle","tooltip","useDisclosure","isMobile","useIsMobile","isTextTruncated","setIsTextTruncated","headingRef","textRef","updatedTruncateState","headingRect","getBoundingClientRect","textRect","TEXT_MAX_LINES","handleResize","debounce","window","addEventListener","cleanup","removeEventListener","flexDir","isOpen","onClose","closeOnScroll","isDisabled","Heading","as","style","WebkitLineClamp","WebkitBoxOrient","textOverflow","onMouseEnter","onOpen","onMouseLeave","onToggle","_empty","rightSlot","beforeSlot","textareaMaxHeight","textareaMinHeight","Box","justifyContent","overflowX","SelectButton","colorScheme","isActive","SelectOption","getInputProps","getRadioProps","useRadio","input","checkbox","bgColorHover","isChecked","SelectContent","getRootProps","root","minW","map","radio","option","handleChange","setValue","useRadioGroup","find"],"sourceRoot":"","ignoreList":[26,27,28,29]}