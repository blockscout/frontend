{"version":3,"file":"static/chunks/9906.fe549cf655420cbf.js","mappings":"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MA,MAAiD,OAAa,EAC9D,yBACA,SACA,CAAC,EACD,EAAiB,OAAU,SAC3B,IACA,cACA,OACA,UACA,WACA,YACA,aACA,cACA,KACA,CAAI,EACJ,OAAU,gDAAiD,CAAE,MAAa,IAC1E,EAAgB,aAAO,CACvB,MACA,OACA,OACA,WACA,cACA,QACA,UACA,aACA,aACA,EAAK,CACL,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,MAAyB,SAAG,IAAuB,iBAAwC,SAAG,CAC1F,GAAM,KACV,CACA,UACA,UAAiB,QAAE,yBACnB,UACA,EACA,CAAK,CACL,CAAC,EACD,kGCrDA,eAAiC,EACjC,IACA,WACA,QACA,eACA,OACA,aACA,cACA,WACA,KACA,CAAI,EACJ,MAAiC,cAAQ,QACzC,aACA,QACA,EAAc,YAAM,OACpB,EAAgB,iBAAW,MAC3B,gBACA,MACA,OACA,qCACA,kBACA,GAEA,MACA,UACA,MACA,CACA,yBACA,wBACA,mBACA,CAAG,KACH,EAAe,WAAK,GACpB,WAAgC,EAAK,EACrC,OACA,EAAmB,iBAAW,CAC9B,IACA,MAtCA,GAAkB,QAAQ,CAsC1B,IAtCqC,QAAQ,CAsC7C,EAtC6C,QAsC7C,iBACA,GACA,KAEA,qBACA,CAAK,CACL,OA0BA,OACA,aAzBuB,iBAAW,CAClC,KAAgB,YAChB,KACA,IAAW,QAAS,MACpB,iBACA,EAAK,CACL,IAoBA,cAlBwB,iBAAW,CACnC,KAAgB,WAChB,8BACA,OACA,KACA,MACA,OACA,+BACA,YACA,IACA,CAAS,CACT,oBACA,CACA,CAAK,CACL,WAKA,OACA,MACA,QACA,WACA,QACA,WACA,aACA,cACA,WACA,CACA,oCCxFA,gBACA,8BACA,0DAEA,4BACA,WACA,YAAwB,IAAqB,KAC7C,UACA,KACA,kBACA,CACA,QACA","sources":["webpack://_N_E/./stubs/scrollL2.ts","webpack://_N_E/./ui/shared/ad/CoinzillaTextAd.tsx","webpack://_N_E/./ui/shared/ad/TextAd.tsx","webpack://_N_E/./ui/txnBatches/scrollL2/ScrollL2TxnBatchDetails.tsx","webpack://_N_E/./ui/pages/ScrollL2TxnBatch.tsx","webpack://_N_E/./ui/shared/AppError/isCustomAppError.ts","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/DetailsTimestamp.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/PrevNext.tsx","webpack://_N_E/./ui/shared/Tabs/TabsSkeleton.tsx","webpack://_N_E/./ui/shared/batch/ScrollL2TxnBatchDA.tsx","webpack://_N_E/./ui/shared/entities/block/BlockEntityL1.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx","webpack://_N_E/./ui/shared/statusTag/ScrollL2TxnBatchStatus.tsx","webpack://_N_E/./ui/txs/TxsWithFrontendSorting.tsx","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-DZU5YH7Z.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-OLSEFBIG.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-R3K6W4OF.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-VVU6AIWW.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-5XCGGO7V.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-QUJ23J4G.mjs","webpack://_N_E/./node_modules/@chakra-ui/radio/dist/chunk-ROBJ47HJ.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/array/chunk.mjs"],"sourcesContent":["import type { ScrollL2MessageItem, ScrollL2TxnBatch } from 'types/api/scrollL2';\n\nimport { TX_HASH } from './tx';\n\nexport const SCROLL_L2_TXN_BATCH: ScrollL2TxnBatch = {\n  commitment_transaction: {\n    block_number: 4053979,\n    hash: '0xd04d626495ef69abd37ae3ea585ed03319a3d3b50cf10874f7f36741c7b45a18',\n    timestamp: '2023-08-09T08:09:12.000000Z',\n  },\n  confirmation_transaction: {\n    block_number: null,\n    hash: null,\n    timestamp: null,\n  },\n  end_block: 1711,\n  number: 273,\n  start_block: 1697,\n  transaction_count: 15,\n  data_availability: {\n    batch_data_container: 'in_blob4844',\n  },\n};\n\nexport const SCROLL_L2_MESSAGE_ITEM: ScrollL2MessageItem = {\n  id: 930795,\n  origination_transaction_block_number: 20639178,\n  origination_transaction_hash: TX_HASH,\n  origination_timestamp: '2024-08-30T05:03:23.000000Z',\n  completion_transaction_hash: 'TX_HASH',\n  value: '5084131319054877748',\n};\n","import { Box, Image, Link, Text, chakra } from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\n\nimport { ndash } from 'lib/html-entities';\nimport isBrowser from 'lib/isBrowser';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ntype AdData = {\n  ad: {\n    name: string;\n    description_short: string;\n    thumbnail: string;\n    url: string;\n    cta_button: string;\n    impressionUrl?: string;\n  };\n};\n\n// const MOCK: AdData = {\n//   ad: {\n//     url: 'https://unsplash.com/s/photos/cute-kitten',\n//     thumbnail: 'https://placekitten.com/40/40',\n//     name: 'All about kitties',\n//     description_short: 'To see millions picture of cute kitties',\n//     cta_button: 'click here',\n//   },\n// };\n\nconst CoinzillaTextAd = ({ className }: { className?: string }) => {\n  const [ adData, setAdData ] = React.useState<AdData | null>(null);\n  const [ isLoading, setIsLoading ] = React.useState(true);\n\n  useEffect(() => {\n    if (isBrowser()) {\n      fetch('https://request-global.czilladx.com/serve/native.php?z=19260bf627546ab7242')\n        .then(res => res.status === 200 ? res.json() : null)\n        .then((_data) => {\n          const data = _data as AdData;\n          setAdData(data);\n          if (data?.ad?.impressionUrl) {\n            fetch(data.ad.impressionUrl);\n          }\n        })\n        .finally(() => {\n          // setAdData(MOCK);\n          setIsLoading(false);\n        });\n    }\n  }, [ ]);\n\n  if (isLoading) {\n    return (\n      <Skeleton\n        className={ className }\n        h={{ base: 12, lg: 6 }}\n        w=\"100%\"\n        flexGrow={ 1 }\n        maxW=\"800px\"\n        display=\"block\"\n      />\n    );\n  }\n\n  if (!adData) {\n    return null;\n  }\n\n  const urlObject = new URL(adData.ad.url);\n\n  return (\n    <Box className={ className }>\n      <Text\n        as=\"span\"\n        whiteSpace=\"pre-wrap\"\n        fontWeight={ 700 }\n        mr={ 3 }\n        display={{ base: 'none', lg: 'inline' }}\n      >\n        Ads:\n      </Text>\n      { urlObject.hostname === 'nifty.ink' ?\n        <Text as=\"span\" mr={ 1 }>🎨</Text> :\n        <Image src={ adData.ad.thumbnail } width=\"20px\" height=\"20px\" mb=\"-4px\" mr={ 1 } display=\"inline\" alt=\"\"/>\n      }\n      <Text as=\"span\" whiteSpace=\"pre-wrap\">{ `${ adData.ad.name } ${ ndash } ${ adData.ad.description_short } ` }</Text>\n      <Link href={ adData.ad.url }>{ adData.ad.cta_button }</Link>\n    </Box>\n  );\n};\n\nexport default chakra(CoinzillaTextAd);\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport { useAppContext } from 'lib/contexts/app';\nimport * as cookies from 'lib/cookies';\n\nimport CoinzillaTextAd from './CoinzillaTextAd';\n\nconst TextAd = ({ className }: { className?: string }) => {\n  const hasAdblockCookie = cookies.get(cookies.NAMES.ADBLOCK_DETECTED, useAppContext().cookies);\n\n  if (!config.features.adsText.isEnabled || hasAdblockCookie === 'true') {\n    return null;\n  }\n\n  return <CoinzillaTextAd className={ className }/>;\n};\n\nexport default chakra(TextAd);\n","import { Grid } from '@chakra-ui/react';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { ScrollL2TxnBatch } from 'types/api/scrollL2';\n\nimport { route } from 'nextjs-routes';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport ScrollL2TxnBatchDA from 'ui/shared/batch/ScrollL2TxnBatchDA';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport BlockEntityL1 from 'ui/shared/entities/block/BlockEntityL1';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport PrevNext from 'ui/shared/PrevNext';\nimport ScrollL2TxnBatchStatus from 'ui/shared/statusTag/ScrollL2TxnBatchStatus';\n\ninterface Props {\n  query: UseQueryResult<ScrollL2TxnBatch, ResourceError>;\n}\n\nconst ScrollL2TxnBatchDetails = ({ query }: Props) => {\n  const router = useRouter();\n\n  const { data, isPlaceholderData, isError, error } = query;\n\n  const handlePrevNextClick = React.useCallback((direction: 'prev' | 'next') => {\n    if (!data) {\n      return;\n    }\n\n    const increment = direction === 'next' ? +1 : -1;\n    const nextId = String(data.number + increment);\n\n    router.push({ pathname: '/batches/[number]', query: { number: nextId } }, undefined);\n  }, [ data, router ]);\n\n  if (isError) {\n    if (isCustomAppError(error)) {\n      throwOnResourceLoadError({ isError, error });\n    }\n\n    return <DataFetchAlert/>;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const blocksCount = data.end_block - data.start_block + 1;\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Batch number indicates the length of batches produced by grouping L2 blocks to be proven on L1\"\n      >\n        Txn batch number\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.number }\n        </Skeleton>\n        <PrevNext\n          ml={ 6 }\n          onClick={ handlePrevNextClick }\n          prevLabel=\"View previous txn batch\"\n          nextLabel=\"View next txn batch\"\n          isPrevDisabled={ data.number === 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Data availability container\"\n      >\n        Container\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <ScrollL2TxnBatchDA container={ data.data_availability.batch_data_container } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Status of this batch\"\n      >\n        Status\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <ScrollL2TxnBatchStatus status={ data.confirmation_transaction.hash ? 'Finalized' : 'Committed' } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Date and time at which batch is finalized to L1\"\n      >\n        Finalized timestamp\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.confirmation_transaction.timestamp ?\n          <DetailsTimestamp timestamp={ data.confirmation_transaction.timestamp }isLoading={ isPlaceholderData }/> :\n          <Skeleton isLoaded={ !isPlaceholderData } display=\"inline-block\">Pending</Skeleton>\n        }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Number of transactions in this batch\"\n      >\n        Transactions\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/batches/[number]', query: { number: data.number.toString(), tab: 'txs' } }) }>\n            { data.transaction_count.toLocaleString() } transaction{ data.transaction_count === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Number of L2 blocks in this batch\"\n      >\n        Blocks\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          <LinkInternal href={ route({ pathname: '/batches/[number]', query: { number: data.number.toString(), tab: 'blocks' } }) }>\n            { blocksCount.toLocaleString() } block{ blocksCount === 1 ? '' : 's' }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Date and time at which batch is committed to L1\"\n      >\n        Committed timestamp\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.commitment_transaction.timestamp ?\n          <DetailsTimestamp timestamp={ data.commitment_transaction.timestamp }isLoading={ isPlaceholderData }/> :\n          <Skeleton isLoaded={ !isPlaceholderData } display=\"inline-block\">Pending</Skeleton>\n        }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Hash of L1 transaction this batch was committed in\"\n      >\n        Committed transaction hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <TxEntityL1\n          isLoading={ isPlaceholderData }\n          hash={ data.commitment_transaction.hash }\n          maxW=\"100%\"\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"L1 block that includes transaction with this batch commitment\"\n      >\n        Committed block\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <BlockEntityL1\n          isLoading={ isPlaceholderData }\n          number={ data.commitment_transaction.block_number }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Hash of L1 transaction this batch was finalized in\"\n      >\n        Finalized transaction hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.confirmation_transaction.hash ? (\n          <TxEntityL1\n            isLoading={ isPlaceholderData }\n            hash={ data.confirmation_transaction.hash }\n            maxW=\"100%\"\n          />\n        ) : <Skeleton isLoaded={ !isPlaceholderData } display=\"inline-block\">Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"L1 block that includes transaction with this batch finalization data\"\n      >\n        Finalized block\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        { data.confirmation_transaction.block_number ? (\n          <BlockEntityL1\n            isLoading={ isPlaceholderData }\n            number={ data.confirmation_transaction.block_number }\n          />\n        ) : <Skeleton isLoaded={ !isPlaceholderData } display=\"inline-block\">Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n    </Grid>\n  );\n};\n\nexport default ScrollL2TxnBatchDetails;\n","import { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnAbsentParamError from 'lib/errors/throwOnAbsentParamError';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { BLOCK } from 'stubs/block';\nimport { SCROLL_L2_TXN_BATCH } from 'stubs/scrollL2';\nimport { TX } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport BlocksContent from 'ui/blocks/BlocksContent';\nimport TextAd from 'ui/shared/ad/TextAd';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport ScrollL2TxnBatchDetails from 'ui/txnBatches/scrollL2/ScrollL2TxnBatchDetails';\nimport TxsWithFrontendSorting from 'ui/txs/TxsWithFrontendSorting';\n\nconst TAB_LIST_PROPS = {\n  marginBottom: 0,\n  py: 5,\n  marginTop: -5,\n};\n\nconst TABS_HEIGHT = 80;\n\nconst ScrollL2TxnBatch = () => {\n  const router = useRouter();\n  const appProps = useAppContext();\n  const number = getQueryParamString(router.query.number);\n  const tab = getQueryParamString(router.query.tab);\n  const isMobile = useIsMobile();\n\n  const batchQuery = useApiQuery('scroll_l2_txn_batch', {\n    pathParams: { number },\n    queryOptions: {\n      enabled: Boolean(number),\n      placeholderData: SCROLL_L2_TXN_BATCH,\n    },\n  });\n\n  const batchTxsQuery = useQueryWithPages({\n    resourceName: 'scroll_l2_txn_batch_txs',\n    pathParams: { number },\n    options: {\n      enabled: Boolean(!batchQuery.isPlaceholderData && batchQuery.data?.number && tab === 'txs'),\n      placeholderData: generateListStub<'scroll_l2_txn_batch_txs'>(TX, 50, { next_page_params: {\n        batch_number: 8122,\n        block_number: 1338932,\n        index: 0,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  const batchBlocksQuery = useQueryWithPages({\n    resourceName: 'scroll_l2_txn_batch_blocks',\n    pathParams: { number },\n    options: {\n      enabled: Boolean(!batchQuery.isPlaceholderData && batchQuery.data?.number && tab === 'blocks'),\n      placeholderData: generateListStub<'scroll_l2_txn_batch_blocks'>(BLOCK, 50, { next_page_params: {\n        batch_number: 8122,\n        block_number: 1338932,\n        items_count: 50,\n      } }),\n    },\n  });\n\n  throwOnAbsentParamError(number);\n  throwOnResourceLoadError(batchQuery);\n\n  let pagination;\n  if (tab === 'txs') {\n    pagination = batchTxsQuery.pagination;\n  }\n  if (tab === 'blocks') {\n    pagination = batchBlocksQuery.pagination;\n  }\n\n  const hasPagination = !isMobile && pagination?.isVisible;\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => ([\n    { id: 'index', title: 'Details', component: <ScrollL2TxnBatchDetails query={ batchQuery }/> },\n    {\n      id: 'txs',\n      title: 'Transactions',\n      component: <TxsWithFrontendSorting query={ batchTxsQuery } showSocketInfo={ false } top={ hasPagination ? TABS_HEIGHT : 0 }/>,\n    },\n    {\n      id: 'blocks',\n      title: 'Blocks',\n      component: <BlocksContent type=\"block\" query={ batchBlocksQuery } enableSocket={ false } top={ hasPagination ? TABS_HEIGHT : 0 }/>,\n    },\n  ].filter(Boolean)), [ batchQuery, batchTxsQuery, batchBlocksQuery, hasPagination ]);\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.endsWith('/batches');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to txn batches list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  return (\n    <>\n      <TextAd mb={ 6 }/>\n      <PageTitle\n        title={ `Txn batch #${ number }` }\n        backLink={ backLink }\n      />\n      { batchQuery.isPlaceholderData ?\n        <TabsSkeleton tabs={ tabs }/> : (\n          <RoutedTabs\n            tabs={ tabs }\n            tabListProps={ isMobile ? undefined : TAB_LIST_PROPS }\n            rightSlot={ hasPagination && pagination ? <Pagination { ...(pagination) }/> : null }\n            stickyEnabled={ hasPagination }\n          />\n        ) }\n    </>\n  );\n};\n\nexport default ScrollL2TxnBatch;\n","import type { ResourceError } from 'lib/api/resources';\n\n// status codes when custom error screen should be shown\nconst CUSTOM_STATUS_CODES = [ 403, 404, 422, 429 ];\n\nexport default function isCustomAppError(error: ResourceError<unknown>) {\n  return CUSTOM_STATUS_CODES.includes(error.status);\n}\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import React from 'react';\n\nimport dayjs from 'lib/date/dayjs';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\ntype Props = {\n  // should be string, will be fixed on the back-end\n  timestamp: string | number;\n  isLoading?: boolean;\n};\n\nconst DetailsTimestamp = ({ timestamp, isLoading }: Props) => {\n  return (\n    <>\n      <IconSvg name=\"clock\" boxSize={ 5 } color=\"gray.500\" isLoading={ isLoading }/>\n      <Skeleton isLoaded={ !isLoading } ml={ 2 }>\n        { dayjs(timestamp).fromNow() }\n      </Skeleton>\n      <TextSeparator color=\"gray.500\"/>\n      <Skeleton isLoaded={ !isLoading } whiteSpace=\"normal\">\n        { dayjs(timestamp).format('llll') }\n      </Skeleton>\n    </>\n  );\n};\n\nexport default DetailsTimestamp;\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import { Box, IconButton, chakra, Tooltip, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: (direction: 'prev' | 'next') => void;\n  prevLabel?: string;\n  nextLabel?: string;\n  isPrevDisabled?: boolean;\n  isNextDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst PrevNext = ({ className, onClick, prevLabel, nextLabel, isPrevDisabled, isNextDisabled, isLoading }: Props) => {\n  const handelPrevClick = React.useCallback(() => {\n    onClick('prev');\n  }, [ onClick ]);\n\n  const handelNextClick = React.useCallback(() => {\n    onClick('next');\n  }, [ onClick ]);\n\n  if (isLoading) {\n    return (\n      <Flex columnGap=\"10px\" className={ className }>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n      </Flex>\n    );\n  }\n\n  return (\n    <Box className={ className } display=\"flex\">\n      <Tooltip label={ prevLabel }>\n        <IconButton\n          aria-label=\"prev\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 }/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          onClick={ handelPrevClick }\n          isDisabled={ isPrevDisabled }\n        />\n      </Tooltip>\n      <Tooltip label={ nextLabel }>\n        <IconButton\n          aria-label=\"next\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 } transform=\"rotate(180deg)\"/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          ml=\"10px\"\n          onClick={ handelNextClick }\n          isDisabled={ isNextDisabled }\n        />\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default chakra(PrevNext);\n","import { Flex, chakra, Box, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { RoutedTab } from '../Tabs/types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport useTabIndexFromQuery from 'ui/shared/Tabs/useTabIndexFromQuery';\n\ntype TabSize = 'sm' | 'md';\n\nconst SkeletonTabText = ({ size, title }: { size: TabSize; title: RoutedTab['title'] }) => (\n  <Skeleton\n    borderRadius=\"base\"\n    borderWidth={ size === 'sm' ? '2px' : 0 }\n    fontWeight={ 600 }\n    mx={ size === 'sm' ? 3 : 4 }\n    flexShrink={ 0 }\n  >\n    { typeof title === 'string' ? title : title() }\n  </Skeleton>\n);\n\ninterface Props {\n  className?: string;\n  tabs: Array<RoutedTab>;\n  size?: 'sm' | 'md';\n}\n\nconst TabsSkeleton = ({ className, tabs, size = 'md' }: Props) => {\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const tabIndex = useTabIndexFromQuery(tabs || []);\n\n  if (tabs.length === 1) {\n    return null;\n  }\n\n  return (\n    <Flex className={ className } my={ 8 } alignItems=\"center\" overflow=\"hidden\">\n      { tabs.slice(0, tabIndex).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n      { tabs.slice(tabIndex, tabIndex + 1).map(({ title, id }) => (\n        <Box key={ id.toString() } bgColor={ bgColor } py={ size === 'sm' ? 1 : 2 } borderRadius=\"base\" flexShrink={ 0 }>\n          <SkeletonTabText\n            key={ id.toString() }\n            title={ title }\n            size={ size }\n          />\n        </Box>\n      )) }\n      { tabs.slice(tabIndex + 1).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n    </Flex>\n  );\n};\n\nexport default chakra(TabsSkeleton);\n","import React from 'react';\n\nimport type { ScrollL2TxnBatch } from 'types/api/scrollL2';\nimport type { ExcludeUndefined } from 'types/utils';\n\nimport Tag from 'ui/shared/chakra/Tag';\n\nexport interface Props {\n  container: ExcludeUndefined<ScrollL2TxnBatch['data_availability']['batch_data_container']>;\n  isLoading?: boolean;\n}\n\nconst ScrollL2TxnBatchDA = ({ container, isLoading }: Props) => {\n\n  const text = (() => {\n    switch (container) {\n      case 'in_blob4844':\n        return 'EIP-4844 blob';\n      case 'in_calldata':\n        return 'Calldata';\n    }\n  })();\n\n  return (\n    <Tag colorScheme=\"yellow\" isLoading={ isLoading }>\n      { text }\n    </Tag>\n  );\n};\n\nexport default React.memo(ScrollL2TxnBatchDA);\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as BlockEntity from './BlockEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst BlockEntityL1 = (props: BlockEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/block/[height_or_hash]',\n    query: { height_or_hash: props.hash ?? String(props.number) },\n  });\n\n  return <BlockEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(BlockEntityL1);\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/tx/[hash]',\n    query: { hash: props.hash },\n  });\n\n  return <TxEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(TxEntityL1);\n","import React from 'react';\n\nimport type { StatusTagType } from './StatusTag';\nimport StatusTag from './StatusTag';\n\nexport interface Props {\n  status: 'Finalized' | 'Committed';\n  isLoading?: boolean;\n}\n\nconst ZkEvmL2TxnBatchStatus = ({ status, isLoading }: Props) => {\n  let type: StatusTagType;\n\n  switch (status) {\n    case 'Finalized':\n      type = 'ok';\n      break;\n    default:\n      type = 'pending';\n      break;\n  }\n\n  return <StatusTag type={ type } text={ status } isLoading={ isLoading }/>;\n};\n\nexport default ZkEvmL2TxnBatchStatus;\n","import React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\n\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport TxsContent from './TxsContent';\nimport useTxsSort from './useTxsSort';\n\ntype Props = {\n  // eslint-disable-next-line max-len\n  query: QueryWithPagesResult<'txs_validated' | 'txs_pending'> | QueryWithPagesResult<'txs_watchlist'> | QueryWithPagesResult<'block_txs'> | QueryWithPagesResult<'zkevm_l2_txn_batch_txs'>;\n  showBlockInfo?: boolean;\n  showSocketInfo?: boolean;\n  socketInfoAlert?: string;\n  socketInfoNum?: number;\n  currentAddress?: string;\n  filter?: React.ReactNode;\n  filterValue?: AddressFromToFilter;\n  enableTimeIncrement?: boolean;\n  top?: number;\n};\n\nconst TxsWithFrontendSorting = ({\n  filter,\n  filterValue,\n  query,\n  showBlockInfo = true,\n  showSocketInfo = true,\n  socketInfoAlert,\n  socketInfoNum,\n  currentAddress,\n  enableTimeIncrement,\n  top,\n}: Props) => {\n  const { data, isPlaceholderData, isError, setSortByValue, sorting } = useTxsSort(query);\n\n  return (\n    <TxsContent\n      filter={ filter }\n      filterValue={ filterValue }\n      showBlockInfo={ showBlockInfo }\n      showSocketInfo={ showSocketInfo }\n      socketInfoAlert={ socketInfoAlert }\n      socketInfoNum={ socketInfoNum }\n      currentAddress={ currentAddress }\n      enableTimeIncrement={ enableTimeIncrement }\n      top={ top }\n      items={ data?.items }\n      isPlaceholderData={ isPlaceholderData }\n      isError={ isError }\n      setSorting={ setSortByValue }\n      sort={ sorting }\n      query={ query }\n    />\n  );\n};\n\nexport default TxsWithFrontendSorting;\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\nexport {\n  Visibility\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/show.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, ssr, children });\n}\nShow.displayName = \"Show\";\n\nexport {\n  Show\n};\n","// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a, _b;\n  return (_b = (_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) != null ? _b : value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\nexport {\n  useQuery\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/hide.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, hide: true, ssr, children });\n}\nHide.displayName = \"Hide\";\n\nexport {\n  Hide\n};\n","import {\n  useRadioGroupContext\n} from \"./chunk-QUJ23J4G.mjs\";\n\n// src/use-radio.ts\nimport { useFormControlContext } from \"@chakra-ui/form-control\";\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../visually-hidden/src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/use-radio.ts\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback, useEffect, useState, useId } from \"react\";\nfunction useRadio(props = {}) {\n  const {\n    defaultChecked,\n    isChecked: isCheckedProp,\n    isFocusable,\n    isDisabled: isDisabledProp,\n    isReadOnly: isReadOnlyProp,\n    isRequired: isRequiredProp,\n    onChange,\n    isInvalid: isInvalidProp,\n    name,\n    value,\n    id: idProp,\n    \"data-radiogroup\": dataRadioGroup,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props;\n  const uuid = `radio-${useId()}`;\n  const formControl = useFormControlContext();\n  const group = useRadioGroupContext();\n  const isWithinRadioGroup = !!group || !!dataRadioGroup;\n  const isWithinFormControl = !!formControl;\n  let id = isWithinFormControl && !isWithinRadioGroup ? formControl.id : uuid;\n  id = idProp != null ? idProp : id;\n  const isDisabled = isDisabledProp != null ? isDisabledProp : formControl == null ? void 0 : formControl.isDisabled;\n  const isReadOnly = isReadOnlyProp != null ? isReadOnlyProp : formControl == null ? void 0 : formControl.isReadOnly;\n  const isRequired = isRequiredProp != null ? isRequiredProp : formControl == null ? void 0 : formControl.isRequired;\n  const isInvalid = isInvalidProp != null ? isInvalidProp : formControl == null ? void 0 : formControl.isInvalid;\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovering] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isCheckedState, setChecked] = useState(Boolean(defaultChecked));\n  const isControlled = typeof isCheckedProp !== \"undefined\";\n  const isChecked = isControlled ? isCheckedProp : isCheckedState;\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const handleChange = useCallback(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        setChecked(event.target.checked);\n      }\n      onChange == null ? void 0 : onChange(event);\n    },\n    [isControlled, isDisabled, isReadOnly, onChange]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = useCallback(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      ref,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, () => setActive(true)),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(\n        props2.onMouseEnter,\n        () => setHovering(true)\n      ),\n      onMouseLeave: callAllHandlers(\n        props2.onMouseLeave,\n        () => setHovering(false)\n      )\n    }),\n    [\n      isActive,\n      isHovered,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      isFocused,\n      isReadOnly,\n      isFocusVisible\n    ]\n  );\n  const { onFocus, onBlur } = formControl != null ? formControl : {};\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const trulyDisabled = isDisabled && !isFocusable;\n      return {\n        ...props2,\n        id,\n        ref,\n        type: \"radio\",\n        name,\n        value,\n        onChange: callAllHandlers(props2.onChange, handleChange),\n        onBlur: callAllHandlers(\n          onBlur,\n          props2.onBlur,\n          () => setFocused(false)\n        ),\n        onFocus: callAllHandlers(\n          onFocus,\n          props2.onFocus,\n          () => setFocused(true)\n        ),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        required: isRequired,\n        \"aria-invalid\": ariaAttr(isInvalid),\n        \"aria-disabled\": ariaAttr(trulyDisabled),\n        \"aria-required\": ariaAttr(isRequired),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-describedby\": ariaDescribedBy,\n        style: visuallyHiddenStyle\n      };\n    },\n    [\n      isDisabled,\n      isFocusable,\n      id,\n      name,\n      value,\n      handleChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      isChecked,\n      isReadOnly,\n      isRequired,\n      isInvalid,\n      ariaDescribedBy\n    ]\n  );\n  const getLabelProps = (props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const getRootProps = (props2, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  });\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getCheckboxProps: getRadioProps,\n    getRadioProps,\n    getInputProps,\n    getLabelProps,\n    getRootProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport {\n  useRadio\n};\n","import {\n  useRadioGroup\n} from \"./chunk-ROBJ47HJ.mjs\";\n\n// src/radio-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [RadioGroupProvider, useRadioGroupContext] = createContext({\n  name: \"RadioGroupContext\",\n  strict: false\n});\nvar RadioGroup = forwardRef((props, ref) => {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    className,\n    isDisabled,\n    isFocusable,\n    ...rest\n  } = props;\n  const { value, onChange, getRootProps, name, htmlProps } = useRadioGroup(rest);\n  const group = useMemo(\n    () => ({\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    }),\n    [\n      name,\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n      isFocusable\n    ]\n  );\n  return /* @__PURE__ */ jsx(RadioGroupProvider, { value: group, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getRootProps(htmlProps, ref),\n      className: cx(\"chakra-radio-group\", className),\n      children\n    }\n  ) });\n});\nRadioGroup.displayName = \"RadioGroup\";\n\nexport {\n  useRadioGroupContext,\n  RadioGroup\n};\n","// src/use-radio-group.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useRef, useState, useId } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useRadioGroup(props = {}) {\n  const {\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n    name: nameProp,\n    isDisabled,\n    isFocusable,\n    isNative,\n    ...htmlProps\n  } = props;\n  const [valueState, setValue] = useState(defaultValue || \"\");\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const ref = useRef(null);\n  const focus = useCallback(() => {\n    const rootNode = ref.current;\n    if (!rootNode)\n      return;\n    let query = `input:not(:disabled):checked`;\n    const firstEnabledAndCheckedInput = rootNode.querySelector(\n      query\n    );\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    query = `input:not(:disabled)`;\n    const firstEnabledInput = rootNode.querySelector(query);\n    firstEnabledInput == null ? void 0 : firstEnabledInput.focus();\n  }, []);\n  const uuid = useId();\n  const fallbackName = `radio-${uuid}`;\n  const name = nameProp || fallbackName;\n  const onChange = useCallback(\n    (eventOrValue) => {\n      const nextValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp == null ? void 0 : onChangeProp(String(nextValue));\n    },\n    [onChangeProp, isControlled]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: mergeRefs(forwardedRef, ref),\n      role: \"radiogroup\"\n    }),\n    []\n  );\n  const getRadioProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        ref: ref2,\n        name,\n        [checkedKey]: value != null ? props2.value === value : void 0,\n        onChange(event) {\n          onChange(event);\n        },\n        \"data-radiogroup\": true\n      };\n    },\n    [isNative, name, onChange, value]\n  );\n  return {\n    getRootProps,\n    getRadioProps,\n    name,\n    ref,\n    focus,\n    setValue,\n    value,\n    onChange,\n    isDisabled,\n    isFocusable,\n    htmlProps\n  };\n}\n\nexport {\n  useRadioGroup\n};\n","function chunk(arr, size) {\n    if (!Number.isInteger(size) || size <= 0) {\n        throw new Error('Size must be an integer greater than zero.');\n    }\n    const chunkLength = Math.ceil(arr.length / size);\n    const result = Array(chunkLength);\n    for (let index = 0; index < chunkLength; index++) {\n        const start = index * size;\n        const end = start + size;\n        result[index] = arr.slice(start, end);\n    }\n    return result;\n}\n\nexport { chunk };\n"],"names":["SCROLL_L2_TXN_BATCH","commitment_transaction","block_number","hash","timestamp","confirmation_transaction","end_block","number","start_block","transaction_count","data_availability","batch_data_container","id","origination_transaction_block_number","origination_transaction_hash","TX_HASH","origination_timestamp","completion_transaction_hash","value","chakra","CoinzillaTextAd","className","adData","setAdData","React","isLoading","setIsLoading","useEffect","isBrowser","then","res","status","json","data","ad","impressionUrl","fetch","_data","finally","Skeleton","h","base","lg","w","flexGrow","maxW","display","urlObject","URL","url","Box","Text","as","whiteSpace","fontWeight","mr","hostname","Image","src","thumbnail","width","height","mb","alt","ndash","name","description_short","Link","href","cta_button","hasAdblockCookie","cookies","ADBLOCK_DETECTED","useAppContext","config","features","adsText","isEnabled","query","router","useRouter","ScrollL2TxnBatchDetails","isPlaceholderData","isError","error","handlePrevNextClick","nextId","String","direction","increment","push","pathname","undefined","isCustomAppError","throwOnResourceLoadError","DataFetchAlert","blocksCount","Grid","columnGap","rowGap","templateColumns","overflow","DetailsInfoItem","hint","isLoaded","PrevNext","ml","onClick","prevLabel","nextLabel","isPrevDisabled","ScrollL2TxnBatchDA","container","ScrollL2TxnBatchStatus","DetailsTimestamp","LinkInternal","route","toString","tab","toLocaleString","TxEntityL1","BlockEntityL1","TAB_LIST_PROPS","marginBottom","py","marginTop","batchQuery","pagination","ScrollL2TxnBatch","appProps","getQueryParamString","isMobile","useIsMobile","useApiQuery","pathParams","queryOptions","enabled","Boolean","placeholderData","batchTxsQuery","useQueryWithPages","resourceName","options","generateListStub","TX","next_page_params","batch_number","index","items_count","batchBlocksQuery","BLOCK","throwOnAbsentParamError","hasPagination","isVisible","tabs","title","component","TxsWithFrontendSorting","showSocketInfo","top","TABS_HEIGHT","BlocksContent","type","enableSocket","filter","backLink","referrer","endsWith","label","TextAd","PageTitle","TabsSkeleton","RoutedTabs","tabListProps","rightSlot","Pagination","stickyEnabled","CUSTOM_STATUS_CODES","includes","ContainerWithScrollY","gradientHeight","children","onScrollVisibilityChange","ref","hasScroll","setHasScroll","current","scrollHeight","clientHeight","gradientEndColor","useColorModeValue","Flex","flexDirection","overflowY","_after","position","content","bottom","left","right","bgGradient","pr","pb","LabelScrollText","variant","fontSize","align","Label","GridItem","lineHeight","_notFirst","mt","alignItems","HintPopover","my","Hint","Value","flexWrap","pl","ValueWithScroll","IconSvg","boxSize","color","dayjs","fromNow","TextSeparator","format","popoverProps","popoverContentProps","popoverBodyProps","bgColor","borderRadius","Popover","trigger","isLazy","placement","PopoverTrigger","_hover","cursor","Portal","PopoverContent","PopoverArrow","PopoverBody","px","DarkMode","isNextDisabled","handelPrevClick","handelNextClick","Tooltip","IconButton","aria-label","icon","colorScheme","isDisabled","transform","SkeletonTabText","size","borderWidth","mx","flexShrink","tabIndex","useTabIndexFromQuery","length","slice","map","text","Tag","rollupFeature","rollup","props","defaultHref","L1BaseUrl","height_or_hash","BlockEntity","isExternal","TxEntity","ZkEvmL2TxnBatchStatus","StatusTag","filterValue","showBlockInfo","socketInfoAlert","socketInfoNum","currentAddress","enableTimeIncrement","setSortByValue","sorting","useTxsSort","TxsContent","items","setSorting","sort"],"sourceRoot":"","ignoreList":[17,18,19,20,21,22,23,24,25]}