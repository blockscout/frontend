{"version":3,"file":"static/chunks/2975.1a2663e261ce2588.js","mappings":"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","sources":["webpack://_N_E/./node_modules/es-toolkit/dist/compat/util/toString.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/compat/string/padStart.mjs","webpack://_N_E/./ui/blockCountdown/splitSecondsInPeriods.ts","webpack://_N_E/./ui/rewards/dashboard/DailyRewardClaimButton.tsx","webpack://_N_E/./ui/rewards/dashboard/RewardsDashboardCard.tsx","webpack://_N_E/./ui/rewards/dashboard/RewardsDashboardCardValue.tsx","webpack://_N_E/./ui/pages/RewardsDashboard.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/Page/PageTitle.tsx","webpack://_N_E/./ui/snippets/auth/useRedirectForInvalidAuthToken.ts"],"sourcesContent":["function toString(value) {\n    if (value == null) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value.map(toString).join(',');\n    }\n    const result = String(value);\n    if (result === '0' && Object.is(Number(value), -0)) {\n        return '-0';\n    }\n    return result;\n}\n\nexport { toString };\n","import { toString } from '../util/toString.mjs';\n\nfunction padStart(str, length = 0, chars = ' ') {\n    return toString(str).padStart(length, chars);\n}\n\nexport { padStart };\n","import { padStart } from 'es-toolkit/compat';\n\nexport default function splitSecondsInPeriods(value: number) {\n  const seconds = value % 60;\n  const minutes = (value - seconds) / 60 % 60;\n  const hours = (value - seconds - minutes * 60) / (60 * 60) % 24;\n  const days = (value - seconds - minutes * 60 - hours * 60 * 60) / (60 * 60 * 24);\n\n  return {\n    seconds: padStart(String(seconds), 2, '0'),\n    minutes: padStart(String(minutes), 2, '0'),\n    hours: padStart(String(hours), 2, '0'),\n    days: padStart(String(days), 2, '0'),\n  };\n}\n","import { Button, useBoolean, Flex, useColorModeValue } from '@chakra-ui/react';\nimport React, { useCallback, useEffect, useMemo } from 'react';\n\nimport { SECOND } from 'lib/consts';\nimport { useRewardsContext } from 'lib/contexts/rewards';\nimport splitSecondsInPeriods from 'ui/blockCountdown/splitSecondsInPeriods';\n\nconst DailyRewardClaimButton = () => {\n  const { balancesQuery, dailyRewardQuery, claim } = useRewardsContext();\n  const [ isClaiming, setIsClaiming ] = useBoolean(false);\n  const [ timeLeft, setTimeLeft ] = React.useState<string>('');\n\n  const dailyRewardValue = useMemo(() =>\n    dailyRewardQuery.data ?\n      Number(Number(dailyRewardQuery.data.total_reward).toFixed(2)) :\n      0,\n  [ dailyRewardQuery.data ]);\n\n  const handleClaim = useCallback(async() => {\n    setIsClaiming.on();\n    try {\n      await claim();\n      await Promise.all([\n        balancesQuery.refetch(),\n        dailyRewardQuery.refetch(),\n      ]);\n    } catch (error) {}\n    setIsClaiming.off();\n  }, [ claim, setIsClaiming, balancesQuery, dailyRewardQuery ]);\n\n  useEffect(() => {\n    if (!dailyRewardQuery.data?.reset_at) {\n      return;\n    }\n\n    // format the date to be compatible with the Date constructor\n    const formattedDate = dailyRewardQuery.data.reset_at.replace(' ', 'T').replace(' UTC', 'Z');\n    const target = new Date(formattedDate).getTime();\n\n    let interval = 0;\n\n    const updateCountdown = (target: number) => {\n      const now = new Date().getTime();\n      const difference = target - now;\n\n      if (difference > 0) {\n        const { hours, minutes, seconds } = splitSecondsInPeriods(Math.floor(difference / SECOND));\n        setTimeLeft(`${ hours }:${ minutes }:${ seconds }`);\n      } else {\n        setTimeLeft('00:00:00');\n        dailyRewardQuery.refetch();\n        clearInterval(interval);\n      }\n    };\n\n    updateCountdown(target);\n\n    interval = window.setInterval(() => {\n      updateCountdown(target);\n    }, SECOND);\n\n    return () => clearInterval(interval);\n  }, [ dailyRewardQuery ]);\n\n  const isLoading = isClaiming || dailyRewardQuery.isPending || dailyRewardQuery.isFetching;\n  const timerBgColor = useColorModeValue('gray.200', 'gray.800');\n\n  return !isLoading && !dailyRewardQuery.data?.available ? (\n    <Flex\n      h=\"40px\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      borderRadius=\"base\"\n      color=\"gray.500\"\n      bgColor={ timerBgColor }\n      fontSize=\"md\"\n      fontWeight=\"600\"\n      cursor=\"default\"\n    >\n      Next claim in { timeLeft || 'N/A' }\n    </Flex>\n  ) : (\n    <Button onClick={ handleClaim } isLoading={ isLoading }>\n      Claim { dailyRewardValue } Merits\n    </Button>\n  );\n};\n\nexport default DailyRewardClaimButton;\n","import { Flex, Text, useColorModeValue, Tag } from '@chakra-ui/react';\nimport React from 'react';\n\ntype Props = {\n  title?: string;\n  description: string | React.ReactNode;\n  availableSoon?: boolean;\n  blurFilter?: boolean;\n  contentAfter?: React.ReactNode;\n  direction?: 'column' | 'column-reverse' | 'row';\n  reverse?: boolean;\n  children?: React.ReactNode;\n};\n\nconst RewardsDashboardCard = ({\n  title, description, availableSoon, contentAfter,\n  direction = 'column', children, blurFilter,\n}: Props) => {\n  return (\n    <Flex\n      flexDirection={{ base: direction === 'row' ? 'column' : direction, md: direction }}\n      justifyContent={ direction === 'column-reverse' ? 'flex-end' : 'flex-start' }\n      p={{ base: 1.5, md: 2 }}\n      border=\"1px solid\"\n      borderColor={ useColorModeValue('gray.200', 'whiteAlpha.200') }\n      borderRadius=\"lg\"\n      gap={{ base: 1, md: direction === 'row' ? 10 : 1 }}\n      w={ direction === 'row' ? 'full' : 'auto' }\n      flex={ direction !== 'row' ? 1 : '0 1 auto' }\n    >\n      <Flex\n        flexDirection=\"column\"\n        gap={ 2 }\n        p={{ base: 1.5, md: 3 }}\n        w={{ base: 'full', md: direction === 'row' ? '340px' : 'full' }}\n      >\n        { title && (\n          <Flex alignItems=\"center\" gap={ 2 }>\n            <Text fontSize={{ base: 'md', md: 'lg' }} fontWeight=\"500\">{ title }</Text>\n            { availableSoon && <Tag colorScheme=\"blue\">Available soon</Tag> }\n          </Flex>\n        ) }\n        <Text as=\"div\" fontSize=\"sm\">\n          { description }\n        </Text>\n        { contentAfter }\n      </Flex>\n      <Flex\n        alignItems=\"center\"\n        justifyContent=\"space-around\"\n        borderRadius={{ base: 'lg', md: '8px' }}\n        backgroundColor={ useColorModeValue('gray.50', 'whiteAlpha.50') }\n        minH={{ base: '80px', md: '128px' }}\n        filter=\"auto\"\n        blur={ blurFilter ? '4px' : '0' }\n        flex={ direction === 'row' ? 1 : '0 1 auto' }\n      >\n        { children }\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default RewardsDashboardCard;\n","import { Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport HintPopover from 'ui/shared/HintPopover';\n\nimport MeritsIcon from '../MeritsIcon';\n\ntype Props = {\n  label: string;\n  value: number | string | undefined;\n  withIcon?: boolean;\n  hint?: string | React.ReactNode;\n  isLoading?: boolean;\n};\n\nconst RewardsDashboardCard = ({ label, value, withIcon, hint, isLoading }: Props) => (\n  <Flex key={ label } flexDirection=\"column\" alignItems=\"center\" gap={ 2 }>\n    <Flex alignItems=\"center\" gap={ 1 }>\n      { hint && (\n        <HintPopover\n          label={ hint }\n          popoverContentProps={{ maxW: { base: 'calc(100vw - 8px)', lg: '210px' } }}\n          popoverBodyProps={{ textAlign: 'center' }}\n        />\n      ) }\n      <Text fontSize=\"xs\" fontWeight=\"500\" variant=\"secondary\">\n        { label }\n      </Text>\n    </Flex>\n    <Skeleton\n      isLoaded={ !isLoading }\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      gap={ 2 }\n      minW=\"100px\"\n    >\n      { withIcon && <MeritsIcon boxSize={ 8 }/> }\n      <Text fontSize={{ base: '24px', md: '32px' }} lineHeight={{ base: '24px', md: 1.5 }} fontWeight=\"500\">\n        { value }\n      </Text>\n    </Skeleton>\n  </Flex>\n);\n\nexport default RewardsDashboardCard;\n","import { Flex, Image, Alert } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\n\nimport config from 'configs/app';\nimport { useRewardsContext } from 'lib/contexts/rewards';\nimport { apos } from 'lib/html-entities';\nimport DailyRewardClaimButton from 'ui/rewards/dashboard/DailyRewardClaimButton';\nimport RewardsDashboardCard from 'ui/rewards/dashboard/RewardsDashboardCard';\nimport RewardsDashboardCardValue from 'ui/rewards/dashboard/RewardsDashboardCardValue';\nimport RewardsReadOnlyInputWithCopy from 'ui/rewards/RewardsReadOnlyInputWithCopy';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport useRedirectForInvalidAuthToken from 'ui/snippets/auth/useRedirectForInvalidAuthToken';\n\nconst RewardsDashboard = () => {\n  const { balancesQuery, apiToken, referralsQuery, rewardsConfigQuery, dailyRewardQuery, isInitialized } = useRewardsContext();\n\n  const [ isError, setIsError ] = useState(false);\n\n  useRedirectForInvalidAuthToken();\n\n  useEffect(() => {\n    if (!config.features.rewards.isEnabled || (isInitialized && !apiToken)) {\n      window.location.assign('/');\n    }\n  }, [ isInitialized, apiToken ]);\n\n  useEffect(() => {\n    setIsError(balancesQuery.isError || referralsQuery.isError || rewardsConfigQuery.isError || dailyRewardQuery.isError);\n  }, [ balancesQuery.isError, referralsQuery.isError, rewardsConfigQuery.isError, dailyRewardQuery.isError ]);\n\n  if (!config.features.rewards.isEnabled) {\n    return null;\n  }\n\n  let shareText = `Claim your free @blockscoutcom #Merits and start building your daily streak today! #Blockscout #Merits #IYKYK\\n\\nBoost your rewards instantly by using my referral code: ${ referralsQuery.data?.link }`; // eslint-disable-line max-len\n\n  if (dailyRewardQuery.data?.streak && Number(dailyRewardQuery.data.streak) > 0) {\n    const days = `day${ Number(dailyRewardQuery.data.streak) === 1 ? '' : 's' }`;\n    shareText = `I${ apos }ve claimed Merits ${ dailyRewardQuery.data.streak } ${ days } in a row!\\n\\n` + shareText;\n  }\n\n  return (\n    <>\n      <Flex gap={ 3 } justifyContent=\"space-between\">\n        <PageTitle\n          title=\"Dashboard\"\n          secondRow={ (\n            <span>\n              The Blockscout Merits Program is just getting started! Learn more about the details,\n              features, and future plans in our{ ' ' }\n              <LinkExternal href=\"https://www.blog.blockscout.com/blockscout-merits-rewarding-block-explorer-skills\">\n                blog post\n              </LinkExternal>.\n            </span>\n          ) }\n        />\n      </Flex>\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" w=\"full\" gap={ 6 }>\n        { isError && <Alert status=\"error\">Failed to load some data. Please try again later.</Alert> }\n        <Flex gap={ 6 } flexDirection={{ base: 'column', md: 'row' }} w=\"full\">\n          <RewardsDashboardCard\n            title=\"All Merits\"\n            description=\"Claim your daily Merits and any Merits received from referrals.\"\n            direction=\"column-reverse\"\n            contentAfter={ <DailyRewardClaimButton/> }\n          >\n            <RewardsDashboardCardValue\n              label=\"Total balance\"\n              value={ balancesQuery.data?.total || 'N/A' }\n              isLoading={ balancesQuery.isPending }\n              withIcon\n              hint={ (\n                <>\n                  Total number of Merits earned from all activities.{ ' ' }\n                  <LinkExternal href=\"https://docs.blockscout.com/using-blockscout/merits\">\n                    More info on Merits\n                  </LinkExternal>\n                </>\n              ) }\n            />\n          </RewardsDashboardCard>\n          <RewardsDashboardCard\n            title=\"Referrals\"\n            description=\"Total number of users who have joined the program using your code or referral link.\"\n            direction=\"column-reverse\"\n          >\n            <RewardsDashboardCardValue\n              label=\"Referrals\"\n              value={ referralsQuery.data?.referrals ?\n                `${ referralsQuery.data?.referrals } user${ Number(referralsQuery.data?.referrals) === 1 ? '' : 's' }` :\n                'N/A'\n              }\n              isLoading={ referralsQuery.isPending }\n            />\n          </RewardsDashboardCard>\n          <RewardsDashboardCard\n            title=\"Streak\"\n            description={ (\n              <>\n                Current number of consecutive days you{ apos }ve claimed your daily Merits.{ ' ' }\n                The longer your streak, the more daily Merits you can earn.{ ' ' }\n                <LinkExternal\n                  href={ `https://x.com/intent/tweet?text=${ encodeURIComponent(shareText) }` }\n                  fontWeight=\"500\"\n                >\n                  Share on X\n                </LinkExternal>\n              </>\n            ) }\n            direction=\"column-reverse\"\n          >\n            <RewardsDashboardCardValue\n              label=\"Streak\"\n              value={\n                dailyRewardQuery.data?.streak ?\n                  `${ dailyRewardQuery.data?.streak } day${ Number(dailyRewardQuery.data?.streak) === 1 ? '' : 's' }` :\n                  'N/A'\n              }\n              isLoading={ dailyRewardQuery.isPending }\n              hint={ (\n                <>\n                  See the{ ' ' }\n                  <LinkExternal\n                    href=\"https://docs.blockscout.com/using-blockscout/merits/streak-rewards\"\n                    isExternal\n                  >\n                    docs\n                  </LinkExternal>{ ' ' }\n                  to learn how your streak number affects daily rewards\n                </>\n              ) }\n            />\n          </RewardsDashboardCard>\n        </Flex>\n        <Flex gap={ 6 } flexDirection={{ base: 'column', md: 'row' }}>\n          <RewardsDashboardCard\n            title=\"Referral program\"\n            description={ (\n              <>\n                Refer friends and boost your Merits! You receive a{ ' ' }\n                <Skeleton as=\"span\" isLoaded={ !rewardsConfigQuery.isPending }>\n                  { rewardsConfigQuery.data?.rewards.referral_share ?\n                    `${ Number(rewardsConfigQuery.data?.rewards.referral_share) * 100 }%` :\n                    'N/A'\n                  }\n                </Skeleton>\n                { ' ' }bonus on all Merits earned by your referrals.\n              </>\n            ) }\n          >\n            <Flex\n              flex={ 1 }\n              gap={{ base: 2, lg: 6 }}\n              px={{ base: 4, lg: 6 }}\n              py={{ base: 4, lg: 0 }}\n              flexDirection={{ base: 'column', lg: 'row' }}\n            >\n              <RewardsReadOnlyInputWithCopy\n                label=\"Referral link\"\n                value={ referralsQuery.data?.link || 'N/A' }\n                isLoading={ referralsQuery.isPending }\n                flex={ 2 }\n              />\n              <RewardsReadOnlyInputWithCopy\n                label=\"Referral code\"\n                value={ referralsQuery.data?.code || 'N/A' }\n                isLoading={ referralsQuery.isPending }\n                flex={ 1 }\n              />\n            </Flex>\n          </RewardsDashboardCard>\n          <RewardsDashboardCard\n            title=\"Badges\"\n            description={ (\n              <Flex flexDir=\"column\" gap={ 2 }>\n                <span>\n                  Collect limited and legendary badges by completing different Blockscout related tasks.\n                  Go to the badges website to see what{ apos }s available and start your collection today.\n                </span>\n              </Flex>\n            ) }\n          >\n            <Flex\n              flex={ 1 }\n              gap={ 4 }\n              pl={ 10 }\n              pr={ 7 }\n              py={{ base: 4, lg: 0 }}\n              flexDirection={{ base: 'column', lg: 'row' }}\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Image\n                src=\"/static/badges.svg\"\n                alt=\"Badges\"\n                w=\"260px\"\n                h=\"86px\"\n                fallback={ <Skeleton w=\"260px\" h=\"86px\"/> }\n              />\n              <LinkExternal\n                href=\"https://merits.blockscout.com/?tab=badges&utm_source=blockscout&utm_medium=dashboard\"\n                fontSize=\"md\"\n                fontWeight=\"500\"\n              >\n                View badges\n              </LinkExternal>\n            </Flex>\n          </RewardsDashboardCard>\n        </Flex>\n        <Flex gap={ 6 } flexDirection={{ base: 'column', md: 'row' }}>\n          <RewardsDashboardCard\n            title=\"Activity\"\n            description=\"Earn Merits for your everyday Blockscout activities. You deserve to be rewarded for choosing open-source public goods!\"\n            availableSoon\n            blurFilter\n          >\n            <RewardsDashboardCardValue label=\"Activity\" value=\"0%\"/>\n            <RewardsDashboardCardValue label=\"Received\" value=\"0\" withIcon/>\n          </RewardsDashboardCard>\n          <RewardsDashboardCard\n            title=\"Verify contracts\"\n            description=\"Verified contracts are so important for transparency and interaction. Verify your contracts on Blockscout and receive Merits for your efforts.\" // eslint-disable-line max-len\n            availableSoon\n            blurFilter\n          >\n            <RewardsDashboardCardValue label=\"Activity\" value=\"0%\"/>\n            <RewardsDashboardCardValue label=\"Received\" value=\"0\" withIcon/>\n          </RewardsDashboardCard>\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default RewardsDashboard;\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import { Heading, Flex, Tooltip, Link, chakra, useDisclosure } from '@chakra-ui/react';\nimport { debounce } from 'es-toolkit';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ntype BackLinkProp = { label: string; url: string } | { label: string; onClick: () => void };\n\ntype Props = {\n  title: string;\n  className?: string;\n  backLink?: BackLinkProp;\n  beforeTitle?: React.ReactNode;\n  afterTitle?: React.ReactNode;\n  contentAfter?: React.ReactNode;\n  secondRow?: React.ReactNode;\n  isLoading?: boolean;\n  withTextAd?: boolean;\n};\n\nconst TEXT_MAX_LINES = 1;\n\nconst BackLink = (props: BackLinkProp & { isLoading?: boolean }) => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.isLoading) {\n    return (\n      <Skeleton\n        boxSize={ 6 }\n        display=\"inline-block\"\n        flexShrink={ 0 }\n        borderRadius=\"base\"\n        mr={ 3 }\n        my={ 2 }\n        verticalAlign=\"text-bottom\"\n        isLoaded={ !props.isLoading }\n      />\n    );\n  }\n\n  const icon = <IconSvg name=\"arrows/east\" boxSize={ 6 } transform=\"rotate(180deg)\" margin=\"auto\" color=\"gray.400\" flexShrink={ 0 }/>;\n\n  if ('url' in props) {\n    return (\n      <Tooltip label={ props.label }>\n        <LinkInternal display=\"inline-flex\" href={ props.url } h=\"40px\" mr={ 3 }>\n          { icon }\n        </LinkInternal>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ props.label }>\n      <Link display=\"inline-flex\" onClick={ props.onClick } h=\"40px\" mr={ 3 }>\n        { icon }\n      </Link>\n    </Tooltip>\n  );\n};\n\nconst PageTitle = ({ title, contentAfter, backLink, className, isLoading, afterTitle, beforeTitle, secondRow }: Props) => {\n  const tooltip = useDisclosure();\n  const isMobile = useIsMobile();\n  const [ isTextTruncated, setIsTextTruncated ] = React.useState(false);\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const updatedTruncateState = React.useCallback(() => {\n    if (!headingRef.current || !textRef.current) {\n      return;\n    }\n\n    const headingRect = headingRef.current.getBoundingClientRect();\n    const textRect = textRef.current.getBoundingClientRect();\n    if ((TEXT_MAX_LINES + 1) * headingRect.height <= textRect.height) {\n      setIsTextTruncated(true);\n    } else {\n      setIsTextTruncated(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      updatedTruncateState();\n    }\n  }, [ isLoading, updatedTruncateState ]);\n\n  React.useEffect(() => {\n    const handleResize = debounce(updatedTruncateState, 1000);\n    window.addEventListener('resize', handleResize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ updatedTruncateState ]);\n\n  return (\n    <Flex className={ className } flexDir=\"column\" rowGap={ 3 } mb={ 6 }>\n      <Flex\n        flexDir=\"row\"\n        flexWrap=\"wrap\"\n        rowGap={ 3 }\n        columnGap={ 3 }\n        alignItems=\"center\"\n      >\n        <Flex h={{ base: 'auto', lg: isLoading ? 10 : 'auto' }} maxW=\"100%\" alignItems=\"center\">\n          { backLink && <BackLink { ...backLink } isLoading={ isLoading }/> }\n          { beforeTitle }\n          <Skeleton\n            isLoaded={ !isLoading }\n            overflow=\"hidden\"\n          >\n            <Tooltip\n              label={ title }\n              isOpen={ tooltip.isOpen }\n              onClose={ tooltip.onClose }\n              maxW={{ base: 'calc(100vw - 32px)', lg: '500px' }}\n              closeOnScroll={ isMobile ? true : false }\n              isDisabled={ !isTextTruncated }\n            >\n              <Heading\n                ref={ headingRef }\n                as=\"h1\"\n                size=\"lg\"\n                whiteSpace=\"normal\"\n                wordBreak=\"break-all\"\n                style={{\n                  WebkitLineClamp: TEXT_MAX_LINES,\n                  WebkitBoxOrient: 'vertical',\n                  display: '-webkit-box',\n                }}\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                onMouseEnter={ tooltip.onOpen }\n                onMouseLeave={ tooltip.onClose }\n                onClick={ isMobile ? tooltip.onToggle : undefined }\n              >\n                <span ref={ textRef }>\n                  { title }\n                </span>\n              </Heading>\n            </Tooltip>\n          </Skeleton>\n          { afterTitle }\n        </Flex>\n        { contentAfter }\n      </Flex>\n      { secondRow && (\n        <Skeleton isLoaded={ !isLoading } alignItems=\"center\" minH={ 10 } overflow=\"hidden\" display=\"flex\" _empty={{ display: 'none' }}>\n          { secondRow }\n        </Skeleton>\n      ) }\n    </Flex>\n  );\n};\n\nexport default chakra(PageTitle);\n","import React from 'react';\n\nimport * as cookies from 'lib/cookies';\nimport { useRollbar } from 'lib/rollbar';\nimport useProfileQuery from 'ui/snippets/auth/useProfileQuery';\n\nexport default function useRedirectForInvalidAuthToken() {\n  const rollbar = useRollbar();\n  const profileQuery = useProfileQuery();\n  const errorStatus = profileQuery.error?.status;\n\n  React.useEffect(() => {\n    if (errorStatus === 401) {\n      const apiToken = cookies.get(cookies.NAMES.API_TOKEN);\n\n      if (apiToken) {\n        cookies.remove(cookies.NAMES.API_TOKEN);\n        window.location.assign('/');\n      }\n    }\n  }, [ errorStatus, rollbar ]);\n}\n"],"names":["splitSecondsInPeriods","value","seconds","minutes","hours","padStart","String","days","dailyRewardQuery","balancesQuery","DailyRewardClaimButton","claim","useRewardsContext","isClaiming","setIsClaiming","useBoolean","timeLeft","setTimeLeft","React","dailyRewardValue","useMemo","data","Number","total_reward","toFixed","handleClaim","useCallback","on","Promise","all","refetch","error","off","useEffect","reset_at","target","Date","replace","getTime","interval","updateCountdown","difference","now","Math","floor","SECOND","clearInterval","window","setInterval","isLoading","isPending","isFetching","timerBgColor","useColorModeValue","available","Button","onClick","Flex","h","alignItems","justifyContent","borderRadius","color","bgColor","fontSize","fontWeight","cursor","title","description","RewardsDashboardCard","availableSoon","contentAfter","direction","children","blurFilter","flexDirection","base","md","p","border","borderColor","gap","w","flex","Text","Tag","colorScheme","as","backgroundColor","minH","filter","blur","label","withIcon","hint","HintPopover","popoverContentProps","maxW","lg","popoverBodyProps","textAlign","variant","Skeleton","isLoaded","display","minW","MeritsIcon","boxSize","lineHeight","referralsQuery","RewardsDashboard","rewardsConfigQuery","apiToken","isInitialized","isError","setIsError","useState","useRedirectForInvalidAuthToken","config","features","rewards","isEnabled","location","assign","shareText","link","streak","apos","PageTitle","secondRow","span","LinkExternal","href","Alert","status","RewardsDashboardCardValue","total","referrals","encodeURIComponent","isExternal","referral_share","px","py","RewardsReadOnlyInputWithCopy","code","flexDir","pl","pr","Image","src","alt","fallback","chakra","className","popoverProps","Popover","trigger","isLazy","placement","PopoverTrigger","IconSvg","name","_hover","Portal","PopoverContent","PopoverArrow","PopoverBody","DarkMode","BackLink","props","flexShrink","mr","my","verticalAlign","icon","transform","margin","Tooltip","LinkInternal","url","Link","backLink","afterTitle","beforeTitle","tooltip","useDisclosure","isMobile","useIsMobile","isTextTruncated","setIsTextTruncated","headingRef","textRef","updatedTruncateState","current","headingRect","getBoundingClientRect","textRect","TEXT_MAX_LINES","height","handleResize","debounce","addEventListener","cleanup","removeEventListener","rowGap","mb","flexWrap","columnGap","overflow","isOpen","onClose","closeOnScroll","isDisabled","Heading","ref","size","whiteSpace","wordBreak","style","WebkitLineClamp","WebkitBoxOrient","textOverflow","onMouseEnter","onOpen","onMouseLeave","onToggle","undefined","_empty","profileQuery","rollbar","useRollbar","errorStatus","useProfileQuery","cookies","API_TOKEN"],"sourceRoot":"","ignoreList":[0,1]}