{"version":3,"file":"static/chunks/5729-1432959c2711c172.js","mappings":"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","sources":["webpack://_N_E/./lib/hooks/useIsSticky.tsx","webpack://_N_E/./ui/shared/ActionBar.tsx","webpack://_N_E/./ui/shared/DataFetchAlert.tsx","webpack://_N_E/./ui/shared/Page/PageTitle.tsx","webpack://_N_E/./ui/shared/pagination/Pagination.tsx","webpack://_N_E/./ui/shared/pagination/useQueryWithPages.ts"],"sourcesContent":["import { throttle } from 'es-toolkit';\nimport React from 'react';\n\nexport default function useIsSticky(ref: React.RefObject<HTMLDivElement>, offset = 0, isEnabled = true) {\n  const [ isSticky, setIsSticky ] = React.useState(false);\n\n  const handleScroll = React.useCallback(() => {\n    if (\n      Number(ref.current?.getBoundingClientRect().y) < offset\n    ) {\n      setIsSticky(true);\n    } else {\n      setIsSticky(false);\n    }\n  }, [ ref, offset ]);\n\n  React.useEffect(() => {\n    if (!isEnabled) {\n      return;\n    }\n\n    const throttledHandleScroll = throttle(handleScroll, 300);\n\n    window.addEventListener('scroll', throttledHandleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', throttledHandleScroll);\n    };\n  // replicate componentDidMount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ isEnabled ]);\n\n  return isSticky;\n}\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { useScrollDirection } from 'lib/contexts/scrollDirection';\nimport useIsSticky from 'lib/hooks/useIsSticky';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  showShadow?: boolean;\n};\n\nconst TOP_UP = 106;\nconst TOP_DOWN = 0;\nexport const ACTION_BAR_HEIGHT_DESKTOP = 24 + 32 + 12;\nexport const ACTION_BAR_HEIGHT_MOBILE = 24 + 32 + 24;\n\nconst ActionBar = ({ children, className, showShadow }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const scrollDirection = useScrollDirection();\n  const isSticky = useIsSticky(ref, TOP_UP + 5);\n  const bgColor = useColorModeValue('white', 'black');\n\n  if (!React.Children.toArray(children).filter(Boolean).length) {\n    return null;\n  }\n\n  return (\n    <Flex\n      className={ className }\n      backgroundColor={ bgColor }\n      pt={ 6 }\n      pb={{ base: 6, lg: 3 }}\n      mx={{ base: -3, lg: 0 }}\n      px={{ base: 3, lg: 0 }}\n      justifyContent=\"space-between\"\n      width={{ base: '100vw', lg: 'unset' }}\n      position=\"sticky\"\n      top={{ base: scrollDirection === 'down' ? `${ TOP_DOWN }px` : `${ TOP_UP }px`, lg: 0 }}\n      transitionProperty=\"top,box-shadow,background-color,color\"\n      transitionDuration=\"normal\"\n      zIndex={{ base: 'sticky2', lg: 'docked' }}\n      boxShadow={{\n        base: isSticky ? 'md' : 'none',\n        lg: isSticky && showShadow ? 'action_bar' : 'none',\n      }}\n      ref={ ref }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ActionBar);\n","import { Alert, AlertDescription, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nconst DataFetchAlert = ({ className }: { className?: string }) => {\n  return (\n    <Alert status=\"warning\" width=\"fit-content\" className={ className }>\n      <AlertDescription>\n        Something went wrong. Try refreshing the page or come back later.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default chakra(DataFetchAlert);\n","import { Heading, Flex, Tooltip, Link, chakra, useDisclosure } from '@chakra-ui/react';\nimport { debounce } from 'es-toolkit';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ntype BackLinkProp = { label: string; url: string } | { label: string; onClick: () => void };\n\ntype Props = {\n  title: string;\n  className?: string;\n  backLink?: BackLinkProp;\n  beforeTitle?: React.ReactNode;\n  afterTitle?: React.ReactNode;\n  contentAfter?: React.ReactNode;\n  secondRow?: React.ReactNode;\n  isLoading?: boolean;\n  withTextAd?: boolean;\n};\n\nconst TEXT_MAX_LINES = 1;\n\nconst BackLink = (props: BackLinkProp & { isLoading?: boolean }) => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.isLoading) {\n    return (\n      <Skeleton\n        boxSize={ 6 }\n        display=\"inline-block\"\n        flexShrink={ 0 }\n        borderRadius=\"base\"\n        mr={ 3 }\n        my={ 2 }\n        verticalAlign=\"text-bottom\"\n        isLoaded={ !props.isLoading }\n      />\n    );\n  }\n\n  const icon = <IconSvg name=\"arrows/east\" boxSize={ 6 } transform=\"rotate(180deg)\" margin=\"auto\" color=\"gray.400\" flexShrink={ 0 }/>;\n\n  if ('url' in props) {\n    return (\n      <Tooltip label={ props.label }>\n        <LinkInternal display=\"inline-flex\" href={ props.url } h=\"40px\" mr={ 3 }>\n          { icon }\n        </LinkInternal>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ props.label }>\n      <Link display=\"inline-flex\" onClick={ props.onClick } h=\"40px\" mr={ 3 }>\n        { icon }\n      </Link>\n    </Tooltip>\n  );\n};\n\nconst PageTitle = ({ title, contentAfter, backLink, className, isLoading, afterTitle, beforeTitle, secondRow }: Props) => {\n  const tooltip = useDisclosure();\n  const isMobile = useIsMobile();\n  const [ isTextTruncated, setIsTextTruncated ] = React.useState(false);\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const updatedTruncateState = React.useCallback(() => {\n    if (!headingRef.current || !textRef.current) {\n      return;\n    }\n\n    const headingRect = headingRef.current.getBoundingClientRect();\n    const textRect = textRef.current.getBoundingClientRect();\n    if ((TEXT_MAX_LINES + 1) * headingRect.height <= textRect.height) {\n      setIsTextTruncated(true);\n    } else {\n      setIsTextTruncated(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      updatedTruncateState();\n    }\n  }, [ isLoading, updatedTruncateState ]);\n\n  React.useEffect(() => {\n    const handleResize = debounce(updatedTruncateState, 1000);\n    window.addEventListener('resize', handleResize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ updatedTruncateState ]);\n\n  return (\n    <Flex className={ className } flexDir=\"column\" rowGap={ 3 } mb={ 6 }>\n      <Flex\n        flexDir=\"row\"\n        flexWrap=\"wrap\"\n        rowGap={ 3 }\n        columnGap={ 3 }\n        alignItems=\"center\"\n      >\n        <Flex h={{ base: 'auto', lg: isLoading ? 10 : 'auto' }} maxW=\"100%\" alignItems=\"center\">\n          { backLink && <BackLink { ...backLink } isLoading={ isLoading }/> }\n          { beforeTitle }\n          <Skeleton\n            isLoaded={ !isLoading }\n            overflow=\"hidden\"\n          >\n            <Tooltip\n              label={ title }\n              isOpen={ tooltip.isOpen }\n              onClose={ tooltip.onClose }\n              maxW={{ base: 'calc(100vw - 32px)', lg: '500px' }}\n              closeOnScroll={ isMobile ? true : false }\n              isDisabled={ !isTextTruncated }\n            >\n              <Heading\n                ref={ headingRef }\n                as=\"h1\"\n                size=\"lg\"\n                whiteSpace=\"normal\"\n                wordBreak=\"break-all\"\n                style={{\n                  WebkitLineClamp: TEXT_MAX_LINES,\n                  WebkitBoxOrient: 'vertical',\n                  display: '-webkit-box',\n                }}\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                onMouseEnter={ tooltip.onOpen }\n                onMouseLeave={ tooltip.onClose }\n                onClick={ isMobile ? tooltip.onToggle : undefined }\n              >\n                <span ref={ textRef }>\n                  { title }\n                </span>\n              </Heading>\n            </Tooltip>\n          </Skeleton>\n          { afterTitle }\n        </Flex>\n        { contentAfter }\n      </Flex>\n      { secondRow && (\n        <Skeleton isLoaded={ !isLoading } alignItems=\"center\" minH={ 10 } overflow=\"hidden\" display=\"flex\" _empty={{ display: 'none' }}>\n          { secondRow }\n        </Skeleton>\n      ) }\n    </Flex>\n  );\n};\n\nexport default chakra(PageTitle);\n","import { Button, Flex, IconButton, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { PaginationParams } from './types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props extends PaginationParams {\n  className?: string;\n}\n\nconst Pagination = ({ page, onNextPageClick, onPrevPageClick, resetPage, hasPages, hasNextPage, className, canGoBackwards, isLoading, isVisible }: Props) => {\n\n  if (!isVisible) {\n    return null;\n  }\n\n  const showSkeleton = page === 1 && !hasPages && isLoading;\n\n  return (\n    <Flex\n      className={ className }\n      fontSize=\"sm\"\n      alignItems=\"center\"\n    >\n      <Skeleton isLoaded={ !showSkeleton } display=\"inline-block\" mr={ 4 } borderRadius=\"base\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={ resetPage }\n          isDisabled={ page === 1 || isLoading }\n        >\n          First\n        </Button>\n      </Skeleton>\n      <Skeleton isLoaded={ !showSkeleton } display=\"inline-block\" mr={ 3 } borderRadius=\"base\">\n        <IconButton\n          variant=\"outline\"\n          onClick={ onPrevPageClick }\n          size=\"sm\"\n          aria-label=\"Prev page\"\n          w=\"36px\"\n          icon={ <IconSvg name=\"arrows/east-mini\" w={ 5 } h={ 5 }/> }\n          isDisabled={ !canGoBackwards || isLoading }\n        />\n      </Skeleton>\n      <Skeleton isLoaded={ !showSkeleton } display=\"inline-block\" borderRadius=\"base\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          data-selected={ true }\n          borderWidth=\"1px\"\n          fontWeight={ 400 }\n          h={ 8 }\n          minW=\"36px\"\n          cursor=\"unset\"\n        >\n          { page }\n        </Button>\n      </Skeleton>\n      <Skeleton isLoaded={ !showSkeleton } display=\"inline-block\" ml={ 3 } borderRadius=\"base\">\n        <IconButton\n          variant=\"outline\"\n          onClick={ onNextPageClick }\n          size=\"sm\"\n          aria-label=\"Next page\"\n          w=\"36px\"\n          icon={ <IconSvg name=\"arrows/east-mini\" w={ 5 } h={ 5 } transform=\"rotate(180deg)\"/> }\n          isDisabled={ !hasNextPage || isLoading }\n        />\n      </Skeleton>\n      { /* not implemented yet */ }\n      { /* <Flex alignItems=\"center\" width=\"132px\" ml={ 16 } display={{ base: 'none', lg: 'flex' }}>\n            Go to <Input w=\"84px\" size=\"xs\" ml={ 2 }/>\n      </Flex> */ }\n    </Flex>\n\n  );\n};\n\nexport default chakra(Pagination);\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { omit } from 'es-toolkit';\nimport { useRouter } from 'next/router';\nimport React, { useCallback } from 'react';\nimport { animateScroll } from 'react-scroll';\n\nimport type { PaginationParams } from './types';\n\nimport type { Route } from 'nextjs-routes';\n\nimport type { PaginatedResources, PaginationFilters, PaginationSorting, ResourceError, ResourcePayload } from 'lib/api/resources';\nimport { RESOURCES, SORTING_FIELDS } from 'lib/api/resources';\nimport type { Params as UseApiQueryParams } from 'lib/api/useApiQuery';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport getQueryParamString from 'lib/router/getQueryParamString';\n\nexport interface Params<Resource extends PaginatedResources> {\n  resourceName: Resource;\n  options?: UseApiQueryParams<Resource>['queryOptions'];\n  pathParams?: UseApiQueryParams<Resource>['pathParams'];\n  filters?: PaginationFilters<Resource>;\n  sorting?: PaginationSorting<Resource>;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n}\n\ntype NextPageParams = Record<string, unknown>;\n\nconst INITIAL_PAGE_PARAMS = { '1': {} };\n\nfunction getPageFromQuery(query: Route['query']) {\n  return query?.page && !Array.isArray(query.page) ? Number(query.page) : 1;\n}\n\nfunction getPaginationParamsFromQuery(queryString: string | Array<string> | undefined) {\n  if (queryString) {\n    try {\n      return JSON.parse(decodeURIComponent(getQueryParamString(queryString))) as NextPageParams;\n    } catch (error) {}\n  }\n\n  return {};\n}\n\nfunction getNextPageParams<R extends PaginatedResources>(data: ResourcePayload<R> | undefined) {\n\n  // @ts-ignore-next-line\n  if (!data || typeof data !== 'object' || !('next_page_params' in data)) {\n    return;\n  }\n\n  return data.next_page_params;\n}\n\nexport type QueryWithPagesResult<Resource extends PaginatedResources> =\nUseQueryResult<ResourcePayload<Resource>, ResourceError<unknown>> &\n{\n  onFilterChange: <R extends PaginatedResources = Resource>(filters: PaginationFilters<R>) => void;\n  onSortingChange: (sorting?: PaginationSorting<Resource>) => void;\n  pagination: PaginationParams;\n};\n\nexport default function useQueryWithPages<Resource extends PaginatedResources>({\n  resourceName,\n  filters,\n  sorting,\n  options,\n  pathParams,\n  scrollRef,\n}: Params<Resource>): QueryWithPagesResult<Resource> {\n  const resource = RESOURCES[resourceName];\n  const queryClient = useQueryClient();\n  const router = useRouter();\n\n  const [ page, setPage ] = React.useState<number>(getPageFromQuery(router.query));\n  const [ pageParams, setPageParams ] = React.useState<Record<number, NextPageParams>>({\n    [page]: getPaginationParamsFromQuery(router.query.next_page_params),\n  });\n  const [ hasPages, setHasPages ] = React.useState(page > 1);\n\n  const isMounted = React.useRef(false);\n  const queryParams = { ...pageParams[page], ...filters, ...sorting };\n\n  const scrollToTop = useCallback(() => {\n    scrollRef?.current ? scrollRef.current.scrollIntoView(true) : animateScroll.scrollToTop({ duration: 0 });\n  }, [ scrollRef ]);\n\n  const queryResult = useApiQuery(resourceName, {\n    pathParams,\n    queryParams: Object.keys(queryParams).length ? queryParams : undefined,\n    queryOptions: {\n      staleTime: page === 1 ? 0 : Infinity,\n      ...options,\n    },\n  });\n  const { data } = queryResult;\n  const nextPageParams = getNextPageParams(data);\n\n  const onNextPageClick = useCallback(() => {\n    if (!nextPageParams) {\n      // we hide next page button if no next_page_params\n      return;\n    }\n\n    setPageParams((prev) => ({\n      ...prev,\n      [page + 1]: nextPageParams as NextPageParams,\n    }));\n    setPage(prev => prev + 1);\n\n    const nextPageQuery = {\n      ...router.query,\n      page: String(page + 1),\n      next_page_params: encodeURIComponent(JSON.stringify(nextPageParams)),\n    };\n\n    setHasPages(true);\n    scrollToTop();\n    router.push({ pathname: router.pathname, query: nextPageQuery }, undefined, { shallow: true });\n  }, [ nextPageParams, page, router, scrollToTop ]);\n\n  const onPrevPageClick = useCallback(() => {\n    // returning to the first page\n    // we dont have pagination params for the first page\n    let nextPageQuery: typeof router.query = { ...router.query };\n    if (page === 2) {\n      nextPageQuery = omit(router.query, [ 'next_page_params', 'page' ]);\n    } else {\n      nextPageQuery.next_page_params = encodeURIComponent(JSON.stringify(pageParams[page - 1]));\n      nextPageQuery.page = String(page - 1);\n    }\n\n    scrollToTop();\n    router.push({ pathname: router.pathname, query: nextPageQuery }, undefined, { shallow: true })\n      .then(() => {\n        setPage(prev => prev - 1);\n        page === 2 && queryClient.removeQueries({ queryKey: [ resourceName ] });\n      });\n  }, [ router, page, pageParams, scrollToTop, queryClient, resourceName ]);\n\n  const resetPage = useCallback(() => {\n    queryClient.removeQueries({ queryKey: [ resourceName ] });\n\n    scrollToTop();\n    const nextRouterQuery = omit(router.query, [ 'next_page_params', 'page' ]);\n    router.push({ pathname: router.pathname, query: nextRouterQuery }, undefined, { shallow: true }).then(() => {\n      queryClient.removeQueries({ queryKey: [ resourceName ] });\n      setPage(1);\n      setPageParams(INITIAL_PAGE_PARAMS);\n      window.setTimeout(() => {\n        // FIXME after router is updated we still have inactive queries for previously visited page (e.g third), where we came from\n        // so have to remove it but with some delay :)\n        queryClient.removeQueries({ queryKey: [ resourceName ], type: 'inactive' });\n      }, 100);\n    });\n  }, [ queryClient, resourceName, router, scrollToTop ]);\n\n  const onFilterChange = useCallback(<R extends PaginatedResources = Resource>(newFilters: PaginationFilters<R> | undefined) => {\n    const newQuery: typeof router.query = omit(\n      router.query,\n      [\n        'next_page_params',\n        'page',\n        ...('filterFields' in resource ? resource.filterFields : []),\n      ],\n    );\n    if (newFilters) {\n      Object.entries(newFilters).forEach(([ key, value ]) => {\n        const isValidValue = typeof value === 'boolean' || (value && value.length);\n        if (isValidValue) {\n          newQuery[key] = Array.isArray(value) ? value.join(',') : (String(value) || '');\n        }\n      });\n    }\n    scrollToTop();\n    router.push(\n      {\n        pathname: router.pathname,\n        query: newQuery,\n      },\n      undefined,\n      { shallow: true },\n    ).then(() => {\n      setHasPages(false);\n      setPage(1);\n      setPageParams(INITIAL_PAGE_PARAMS);\n    });\n  }, [ router, resource, scrollToTop ]);\n\n  const onSortingChange = useCallback((newSorting: PaginationSorting<Resource> | undefined) => {\n    const newQuery: typeof router.query = {\n      ...omit(router.query, [ 'next_page_params', 'page', ...SORTING_FIELDS ]),\n      ...newSorting,\n    };\n    scrollToTop();\n    router.push(\n      {\n        pathname: router.pathname,\n        query: newQuery,\n      },\n      undefined,\n      { shallow: true },\n    ).then(() => {\n      setHasPages(false);\n      setPage(1);\n      setPageParams(INITIAL_PAGE_PARAMS);\n    });\n  }, [ router, scrollToTop ]);\n\n  const hasNextPage = nextPageParams ? Object.keys(nextPageParams).length > 0 : false;\n\n  const pagination = {\n    page,\n    onNextPageClick,\n    onPrevPageClick,\n    resetPage,\n    hasPages,\n    hasNextPage,\n    canGoBackwards: Boolean(pageParams[page - 1]),\n    isLoading: queryResult.isPlaceholderData,\n    isVisible: hasPages || hasNextPage,\n  };\n\n  React.useEffect(() => {\n    if (page !== 1 && isMounted.current) {\n      queryClient.cancelQueries({ queryKey: [ resourceName ] });\n      setPage(1);\n    }\n  // hook should run only when queryName has changed\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ resourceName ]);\n\n  React.useEffect(() => {\n    window.setTimeout(() => {\n      isMounted.current = true;\n    }, 0);\n  }, []);\n\n  React.useEffect(() => {\n    const pageFromQuery = getPageFromQuery(router.query);\n    const nextPageParamsFromQuery = getPaginationParamsFromQuery(router.query.next_page_params);\n\n    setPage(pageFromQuery);\n    setPageParams(prev => ({\n      ...prev,\n      [pageFromQuery]: nextPageParamsFromQuery,\n    }));\n    setHasPages(pageFromQuery > 1);\n  }, [ router.query ]);\n\n  return { ...queryResult, pagination, onFilterChange, onSortingChange };\n}\n"],"names":["useIsSticky","ref","offset","isEnabled","isSticky","setIsSticky","React","handleScroll","Number","current","getBoundingClientRect","y","throttledHandleScroll","throttle","window","addEventListener","removeEventListener","ACTION_BAR_HEIGHT_DESKTOP","chakra","ActionBar","children","className","showShadow","scrollDirection","useScrollDirection","TOP_UP","bgColor","useColorModeValue","toArray","filter","Boolean","length","Flex","backgroundColor","pt","pb","base","lg","mx","px","justifyContent","width","position","top","TOP_DOWN","transitionProperty","transitionDuration","zIndex","boxShadow","DataFetchAlert","Alert","status","AlertDescription","BackLink","props","isLoading","Skeleton","boxSize","display","flexShrink","borderRadius","mr","my","verticalAlign","isLoaded","icon","IconSvg","name","transform","margin","color","Tooltip","label","LinkInternal","href","url","h","Link","onClick","PageTitle","title","contentAfter","backLink","afterTitle","beforeTitle","secondRow","tooltip","useDisclosure","isMobile","useIsMobile","isTextTruncated","setIsTextTruncated","headingRef","textRef","updatedTruncateState","headingRect","textRect","height","handleResize","debounce","cleanup","flexDir","rowGap","mb","flexWrap","columnGap","alignItems","maxW","overflow","isOpen","onClose","closeOnScroll","isDisabled","Heading","as","size","whiteSpace","wordBreak","style","WebkitLineClamp","TEXT_MAX_LINES","WebkitBoxOrient","textOverflow","onMouseEnter","onOpen","onMouseLeave","onToggle","undefined","span","minH","_empty","Pagination","onNextPageClick","onPrevPageClick","resetPage","hasPages","hasNextPage","canGoBackwards","isVisible","showSkeleton","page","fontSize","Button","variant","IconButton","aria-label","w","data-selected","borderWidth","fontWeight","minW","cursor","ml","INITIAL_PAGE_PARAMS","getPageFromQuery","query","Array","isArray","getPaginationParamsFromQuery","queryString","parse","decodeURIComponent","getQueryParamString","error","useQueryWithPages","resourceName","filters","sorting","options","pathParams","scrollRef","resource","RESOURCES","queryClient","useQueryClient","router","useRouter","setPage","pageParams","setPageParams","next_page_params","setHasPages","isMounted","queryParams","scrollToTop","useCallback","scrollIntoView","animateScroll","duration","queryResult","useApiQuery","Object","keys","queryOptions","staleTime","Infinity","data","nextPageParams","getNextPageParams","prev","nextPageQuery","String","encodeURIComponent","JSON","stringify","push","pathname","shallow","omit","then","removeQueries","queryKey","nextRouterQuery","setTimeout","type","onFilterChange","newQuery","filterFields","newFilters","entries","forEach","key","value","join","onSortingChange","SORTING_FIELDS","newSorting","pagination","isPlaceholderData","cancelQueries","pageFromQuery","nextPageParamsFromQuery"],"sourceRoot":"","ignoreList":[]}