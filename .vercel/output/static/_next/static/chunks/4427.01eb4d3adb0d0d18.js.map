{"version":3,"file":"static/chunks/4427.01eb4d3adb0d0d18.js","mappings":"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","sources":["webpack://_N_E/./lib/pools/getPoolLinks.ts","webpack://_N_E/./lib/pools/getPoolTitle.ts","webpack://_N_E/./stubs/address.ts","webpack://_N_E/./stubs/addressParams.ts","webpack://_N_E/./stubs/mud.ts","webpack://_N_E/./stubs/pools.ts","webpack://_N_E/./stubs/token.ts","webpack://_N_E/./stubs/tx.ts","webpack://_N_E/./stubs/utils.ts","webpack://_N_E/./ui/pool/PoolInfo.tsx","webpack://_N_E/./ui/pages/Pool.tsx","webpack://_N_E/./ui/shared/AppError/isCustomAppError.ts","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DataFetchAlert.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/InfoButton.tsx","webpack://_N_E/./ui/shared/Page/PageTitle.tsx","webpack://_N_E/./ui/shared/PopoverTriggerTooltip.tsx","webpack://_N_E/./ui/shared/VerifyWith.tsx","webpack://_N_E/./ui/shared/entities/pool/PoolEntity.tsx","webpack://_N_E/./node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-DZU5YH7Z.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-OLSEFBIG.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-R3K6W4OF.mjs","webpack://_N_E/./node_modules/@chakra-ui/media-query/dist/chunk-VVU6AIWW.mjs"],"sourcesContent":["import type { Pool } from 'types/api/pools';\n\ntype PoolLink = {\n  url: string;\n  image: string;\n  title: string;\n};\n\nexport default function getPoolLinks(pool?: Pool): Array<PoolLink> {\n  if (!pool) {\n    return [];\n  }\n\n  return [\n    {\n      url: pool.coin_gecko_terminal_url,\n      image: '/static/gecko_terminal.png',\n      title: 'GeckoTerminal',\n    },\n  ].filter(link => Boolean(link.url));\n}\n","import type { Pool } from 'types/api/pools';\n\nexport const getPoolTitle = (pool: Pool) => {\n  return `${ pool.base_token_symbol } / ${ pool.quote_token_symbol } ${ pool.fee ? `(${ pool.fee }%)` : '' }`;\n};\n","import type {\n  Address,\n  AddressCoinBalanceHistoryItem,\n  AddressCollection,\n  AddressCounters,\n  AddressEpochRewardsItem,\n  AddressMudTableItem,\n  AddressNFT,\n  AddressTabsCounters,\n  AddressTokenBalance,\n} from 'types/api/address';\nimport type { AddressesItem } from 'types/api/addresses';\n\nimport { ADDRESS_HASH, ADDRESS_PARAMS } from './addressParams';\nimport { MUD_SCHEMA, MUD_TABLE } from './mud';\nimport { TOKEN_INFO_ERC_1155, TOKEN_INFO_ERC_20, TOKEN_INFO_ERC_721, TOKEN_INFO_ERC_404, TOKEN_INSTANCE } from './token';\nimport { TX_HASH } from './tx';\n\nexport const ADDRESS_INFO: Address = {\n  block_number_balance_updated_at: 8774377,\n  coin_balance: '810941268802273085757',\n  creation_transaction_hash: null,\n  creator_address_hash: ADDRESS_HASH,\n  exchange_rate: null,\n  has_decompiled_code: false,\n  has_logs: true,\n  has_token_transfers: false,\n  has_tokens: false,\n  has_validated_blocks: false,\n  hash: ADDRESS_HASH,\n  implementations: [ { address: ADDRESS_HASH, name: 'Transparent Upgradable Proxy' } ],\n  is_contract: true,\n  is_verified: true,\n  name: 'ChainLink Token (goerli)',\n  token: TOKEN_INFO_ERC_20,\n  private_tags: [],\n  public_tags: [],\n  watchlist_names: [],\n  watchlist_address_id: null,\n  ens_domain_name: null,\n};\n\nexport const ADDRESS_COUNTERS: AddressCounters = {\n  gas_usage_count: '8028907522',\n  token_transfers_count: '420',\n  transactions_count: '119020',\n  validations_count: '0',\n};\n\nexport const ADDRESS_TABS_COUNTERS: AddressTabsCounters = {\n  internal_transactions_count: 10,\n  logs_count: 10,\n  token_balances_count: 10,\n  token_transfers_count: 10,\n  transactions_count: 10,\n  validations_count: 10,\n  withdrawals_count: 10,\n};\n\nexport const TOP_ADDRESS: AddressesItem = {\n  coin_balance: '11886682377162664596540805',\n  transaction_count: '1835',\n  hash: '0x4f7A67464B5976d7547c860109e4432d50AfB38e',\n  implementations: null,\n  is_contract: false,\n  is_verified: null,\n  name: null,\n  private_tags: [],\n  public_tags: [ ],\n  watchlist_names: [],\n  ens_domain_name: null,\n};\n\nexport const ADDRESS_COIN_BALANCE: AddressCoinBalanceHistoryItem = {\n  block_number: 9004413,\n  block_timestamp: '2023-05-15T13:16:24Z',\n  delta: '1000000000000000000',\n  transaction_hash: TX_HASH,\n  value: '953427250000000000000000',\n};\n\nexport const ADDRESS_TOKEN_BALANCE_ERC_20: AddressTokenBalance = {\n  token: TOKEN_INFO_ERC_20,\n  token_id: null,\n  token_instance: null,\n  value: '1000000000000000000000000',\n};\n\nexport const ADDRESS_NFT_721: AddressNFT = {\n  token_type: 'ERC-721',\n  token: TOKEN_INFO_ERC_721,\n  value: '1',\n  ...TOKEN_INSTANCE,\n};\n\nexport const ADDRESS_NFT_1155: AddressNFT = {\n  token_type: 'ERC-1155',\n  token: TOKEN_INFO_ERC_1155,\n  value: '10',\n  ...TOKEN_INSTANCE,\n};\n\nexport const ADDRESS_NFT_404: AddressNFT = {\n  token_type: 'ERC-404',\n  token: TOKEN_INFO_ERC_404,\n  value: '10',\n  ...TOKEN_INSTANCE,\n};\n\nexport const ADDRESS_COLLECTION: AddressCollection = {\n  token: TOKEN_INFO_ERC_1155,\n  amount: '4',\n  token_instances: Array(4).fill(TOKEN_INSTANCE),\n};\n\nexport const ADDRESS_MUD_TABLE_ITEM: AddressMudTableItem = {\n  schema: MUD_SCHEMA,\n  table: MUD_TABLE,\n};\n\nexport const EPOCH_REWARD_ITEM: AddressEpochRewardsItem = {\n  amount: '136609473658452408568',\n  block_number: 10355938,\n  block_timestamp: '2022-05-15T13:16:24Z',\n  type: 'voter',\n  token: TOKEN_INFO_ERC_20,\n  block_hash: '0x5956a847d8089e254e02e5111cad6992b99ceb9e5c2dc4343fd53002834c4dc6',\n  account: ADDRESS_PARAMS,\n  epoch_number: 1234,\n  associated_account: ADDRESS_PARAMS,\n};\n","import type { AddressParam } from 'types/api/addressParams';\n\nexport const ADDRESS_HASH = '0x2B51Ae4412F79c3c1cB12AA40Ea4ECEb4e80511a';\n\nexport const ADDRESS_PARAMS: AddressParam = {\n  hash: ADDRESS_HASH,\n  implementations: null,\n  is_contract: false,\n  is_verified: null,\n  name: null,\n  private_tags: [],\n  public_tags: [],\n  watchlist_names: [],\n  ens_domain_name: null,\n};\n","import type { MudWorldItem, MudWorldSchema, MudWorldTable } from 'types/api/mudWorlds';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const MUD_TABLE: MudWorldTable = {\n  table_full_name: 'ot.Match',\n  table_id: '0x6f7400000000000000000000000000004d617463680000000000000000000000',\n  table_name: 'Match',\n  table_namespace: '',\n  table_type: 'offchain',\n};\n\nexport const MUD_SCHEMA: MudWorldSchema = {\n  key_names: [ 'matchEntityKey', 'entity' ],\n  key_types: [ 'bytes32', 'bytes32' ],\n  value_names: [ 'matchEntity' ],\n  value_types: [ 'bytes32' ],\n};\n\nexport const MUD_WORLD: MudWorldItem = {\n  address: ADDRESS_PARAMS,\n  coin_balance: '7072643779453701031672',\n  transaction_count: 442,\n};\n","export const POOL = {\n  contract_address: '0x6a1041865b76d1dc33da0257582591227c57832c',\n  chain_id: '1',\n  base_token_address: '0xf63e309818e4ea13782678ce6c31c1234fa61809',\n  base_token_symbol: 'JANET',\n  base_token_icon_url: null,\n  quote_token_address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  quote_token_symbol: 'WETH',\n  quote_token_icon_url: 'https://coin-images.coingecko.com/coins/images/2518/small/weth.png?1696503332',\n  fully_diluted_valuation_usd: '15211385',\n  market_cap_usd: '15211385',\n  liquidity: '394101.2428',\n  dex: { id: 'uniswap_v2', name: 'Uniswap V2' },\n  coin_gecko_terminal_url: 'https://www.geckoterminal.com/eth/pools/0x6a1041865b76d1dc33da0257582591227c57832c',\n};\n","import type {\n  TokenCounters,\n  TokenHolder,\n  TokenHolders,\n  TokenHoldersPagination,\n  TokenInfo,\n  TokenInstance,\n  TokenType,\n} from 'types/api/token';\nimport type { TokenInstanceTransferPagination, TokenInstanceTransferResponse } from 'types/api/tokens';\nimport type { TokenTransfer, TokenTransferPagination, TokenTransferResponse } from 'types/api/tokenTransfer';\n\nimport { ADDRESS_PARAMS, ADDRESS_HASH } from './addressParams';\nimport { TX_HASH } from './tx';\nimport { generateListStub } from './utils';\n\nexport const BLOCK_HASH = '0x8fa7b9e5e5e79deeb62d608db22ba9a5cb45388c7ebb9223ae77331c6080dc70';\n\nexport const TOKEN_INFO_ERC_20: TokenInfo<'ERC-20'> = {\n  address: ADDRESS_HASH,\n  circulating_market_cap: '117629601.61913824',\n  decimals: '18',\n  exchange_rate: '0.999997',\n  holders: '16026',\n  name: 'Stub Token (goerli)',\n  symbol: 'STUB',\n  total_supply: '60000000000000000000000',\n  type: 'ERC-20',\n  icon_url: null,\n};\n\nexport const TOKEN_INFO_ERC_721: TokenInfo<'ERC-721'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-721',\n};\n\nexport const TOKEN_INFO_ERC_1155: TokenInfo<'ERC-1155'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-1155',\n};\n\nexport const TOKEN_INFO_ERC_404: TokenInfo<'ERC-404'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-404',\n};\n\nexport const TOKEN_COUNTERS: TokenCounters = {\n  token_holders_count: '123456',\n  transfers_count: '123456',\n};\n\nexport const TOKEN_HOLDER_ERC_20: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  value: '1021378038331138520',\n};\n\nexport const TOKEN_HOLDER_ERC_1155: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  token_id: '12345',\n  value: '1021378038331138520',\n};\n\nexport const getTokenHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_TRANSFER_ERC_20: TokenTransfer = {\n  block_hash: BLOCK_HASH,\n  block_number: '123456',\n  from: ADDRESS_PARAMS,\n  log_index: '4',\n  method: 'addLiquidity',\n  timestamp: '2022-06-24T10:22:11.000000Z',\n  to: ADDRESS_PARAMS,\n  token: TOKEN_INFO_ERC_20,\n  total: {\n    decimals: '18',\n    value: '9851351626684503',\n  },\n  transaction_hash: TX_HASH,\n  type: 'token_minting',\n};\n\nexport const TOKEN_TRANSFER_ERC_721: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n  },\n  token: TOKEN_INFO_ERC_721,\n};\n\nexport const TOKEN_TRANSFER_ERC_1155: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_1155,\n};\n\nexport const TOKEN_TRANSFER_ERC_404: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_404,\n};\n\nexport const getTokenTransfersStub = (type?: TokenType, pagination: TokenTransferPagination | null = null): TokenTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_721, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_404, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceTransfersStub = (type?: TokenType, pagination: TokenInstanceTransferPagination | null = null): TokenInstanceTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_721, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_404, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_INSTANCE: TokenInstance = {\n  animation_url: null,\n  external_app_url: 'https://vipsland.com/nft/collections/genesis/188882',\n  id: '188882',\n  image_url: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n  is_unique: true,\n  metadata: {\n    attributes: Array(3).fill({ trait_type: 'skin tone', value: 'very light skin tone' }),\n    description: '**GENESIS #188882**, **8a77ca1bcaa4036f** :: *844th* generation of *#57806 and #57809* :: **eGenetic Hash Code (eDNA)** = *2822355e953a462d*',\n    external_url: 'https://vipsland.com/nft/collections/genesis/188882',\n    image: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n    name: 'GENESIS #188882, 8a77ca1bcaa4036f',\n  },\n  owner: ADDRESS_PARAMS,\n  holder_address_hash: ADDRESS_HASH,\n  thumbnails: null,\n};\n","import type { RawTracesResponse } from 'types/api/rawTrace';\nimport type { Transaction, TransactionsStats } from 'types/api/transaction';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const TX_HASH = '0x3ed9d81e7c1001bdda1caa1dc62c0acbbe3d2c671cdc20dc1e65efdaa4186967';\n\nexport const TX: Transaction = {\n  timestamp: '2022-11-11T11:11:11.000000Z',\n  fee: {\n    type: 'actual',\n    value: '2100000000000000',\n  },\n  gas_limit: '21000',\n  block_number: 9004925,\n  status: 'ok',\n  method: 'placeholder',\n  confirmations: 71,\n  type: 0,\n  exchange_rate: '1828.71',\n  to: ADDRESS_PARAMS,\n  transaction_burnt_fee: null,\n  max_fee_per_gas: null,\n  result: 'success',\n  hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  gas_price: '100000000000',\n  priority_fee: null,\n  base_fee_per_gas: '24',\n  from: ADDRESS_PARAMS,\n  token_transfers: null,\n  transaction_types: [\n    'coin_transfer',\n  ],\n  gas_used: '21000',\n  created_contract: null,\n  position: 0,\n  nonce: 295929,\n  has_error_in_internal_transactions: false,\n  actions: [],\n  decoded_input: null,\n  token_transfers_overflow: false,\n  raw_input: '0x',\n  value: '42000420000000000000',\n  max_priority_fee_per_gas: null,\n  revert_reason: null,\n  confirmation_duration: [\n    0,\n    14545,\n  ],\n  transaction_tag: null,\n};\n\nexport const TX_ZKEVM_L2: Transaction = {\n  ...TX,\n  zkevm_batch_number: 12345,\n  zkevm_sequence_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n  zkevm_status: 'Confirmed by Sequencer',\n  zkevm_verify_hash: '0x2b824349b320cfa72f292ab26bf525adb00083ba9fa097141896c3c8c74567cc',\n};\n\nexport const TX_RAW_TRACE: RawTracesResponse = [];\n\nexport const TXS_STATS: TransactionsStats = {\n  pending_transactions_count: '4200',\n  transaction_fees_avg_24h: '22342870314428',\n  transaction_fees_sum_24h: '22184012506492688277',\n  transactions_count_24h: '992890',\n};\n","import type { ArrayElement } from 'types/utils';\n\nimport type { PaginatedResources, PaginatedResponse, PaginatedResponseItems } from 'lib/api/resources';\n\nexport function generateListStub<Resource extends PaginatedResources>(\n  stub: ArrayElement<PaginatedResponseItems<Resource>>,\n  num = 50,\n  rest: Omit<PaginatedResponse<Resource>, 'items'>,\n) {\n  return {\n    items: Array(num).fill(stub),\n    ...rest,\n  };\n}\n","import { Grid } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Pool } from 'types/api/pools';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ntype Props = {\n  data: Pool;\n  isPlaceholderData: boolean;\n};\n\nconst PoolInfo = ({ data, isPlaceholderData }: Props) => {\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 1, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"The base token in a liquidity pool pair\"\n      >\n        Base token\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <TokenEntity\n          token={{\n            type: 'ERC-20',\n            address: data.base_token_address,\n            name: data.base_token_symbol,\n            symbol: data.base_token_symbol,\n            icon_url: data.base_token_icon_url,\n          }}\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"The quote token in a liquidity pool pair\"\n      >\n        Quote token\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <TokenEntity\n          token={{\n            type: 'ERC-20',\n            address: data.quote_token_address,\n            name: data.quote_token_symbol,\n            symbol: data.quote_token_symbol,\n            icon_url: data.quote_token_icon_url,\n          }}\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Fully Diluted Valuation: theoretical market cap if all tokens were in circulation\"\n      >\n        FDV\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          ${ Number(data.fully_diluted_valuation_usd).toLocaleString(undefined, { maximumFractionDigits: 2, notation: 'compact' }) }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Current market capitalization of the pool\"\n      >\n        Market cap\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          ${ Number(data.market_cap_usd).toLocaleString(undefined, { maximumFractionDigits: 2, notation: 'compact' }) }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"Current liquidity of the pool\"\n      >\n        Liquidity\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          ${ Number(data.liquidity).toLocaleString(undefined, { maximumFractionDigits: 2, notation: 'compact' }) }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        isLoading={ isPlaceholderData }\n        hint=\"DEX where the pool is traded\"\n      >\n        DEX\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.dex.name }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n    </Grid>\n  );\n};\n\nexport default PoolInfo;\n","import { Tag, Box, Flex, Image } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport config from 'configs/app';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport getPoolLinks from 'lib/pools/getPoolLinks';\nimport { getPoolTitle } from 'lib/pools/getPoolTitle';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport * as addressStubs from 'stubs/address';\nimport { POOL } from 'stubs/pools';\nimport PoolInfo from 'ui/pool/PoolInfo';\nimport isCustomAppError from 'ui/shared/AppError/isCustomAppError';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport * as PoolEntity from 'ui/shared/entities/pool/PoolEntity';\nimport InfoButton from 'ui/shared/InfoButton';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport VerifyWith from 'ui/shared/VerifyWith';\n\nconst Pool = () => {\n  const router = useRouter();\n  const appProps = useAppContext();\n  const hash = getQueryParamString(router.query.hash);\n\n  const { data, isPlaceholderData, isError, error } = useApiQuery('pool', {\n    pathParams: { hash, chainId: config.chain.id },\n    queryOptions: {\n      placeholderData: POOL,\n      refetchOnMount: false,\n    },\n  });\n\n  const addressQuery = useApiQuery('address', {\n    pathParams: { hash: data?.contract_address },\n    queryOptions: {\n      enabled: Boolean(data?.contract_address),\n      placeholderData: addressStubs.ADDRESS_INFO,\n    },\n  });\n\n  const content = (() => {\n    if (isError) {\n      if (isCustomAppError(error)) {\n        throwOnResourceLoadError({ resource: 'pool', error, isError: true });\n      }\n\n      return <DataFetchAlert/>;\n    }\n\n    if (!data) {\n      return null;\n    }\n\n    return (\n      <PoolInfo\n        data={ data }\n        isPlaceholderData={ isPlaceholderData }\n      />\n    );\n  })();\n\n  const externalLinks = getPoolLinks(data);\n  const hasLinks = externalLinks.length > 0;\n\n  const externalLinksComponents = React.useMemo(() => {\n    return externalLinks\n      .map((link) => {\n        return (\n          <LinkExternal h=\"34px\" key={ link.url } href={ link.url } alignItems=\"center\" display=\"inline-flex\" minW=\"120px\">\n            <Image boxSize={ 5 } mr={ 2 } src={ link.image } alt={ `${ link.title } icon` }/>\n            { link.title }\n          </LinkExternal>\n        );\n      });\n  }, [ externalLinks ]);\n\n  const titleSecondRow = (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" w=\"100%\">\n      { addressQuery.data ? <AddressEntity address={ addressQuery.data } isLoading={ addressQuery.isPlaceholderData }/> : <Box/> }\n      <Flex gap={ 2 }>\n        <InfoButton>\n          { `This Liquidity Provider (LP) token represents ${ data?.base_token_symbol }/${ data?.quote_token_symbol } pairing.` }\n        </InfoButton>\n        { hasLinks && (\n          <VerifyWith\n            links={ externalLinksComponents }\n            label=\"Verify with\"\n            longText=\"View in\"\n            shortText=\"\"\n          />\n        ) }\n      </Flex>\n    </Flex>\n  );\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/pools');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to pools list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  const poolTitle = data ? getPoolTitle(data) : '';\n\n  return (\n    <>\n      <PageTitle\n        title={ poolTitle }\n        backLink={ backLink }\n        beforeTitle={ data ? (\n          <PoolEntity.Icon\n            pool={ data }\n            isLoading={ isPlaceholderData }\n            size=\"lg\"\n          />\n        ) : null }\n        contentAfter={ <Skeleton isLoaded={ !isPlaceholderData }><Tag>Pool</Tag></Skeleton> }\n        secondRow={ titleSecondRow }\n        isLoading={ isPlaceholderData }\n        withTextAd\n      />\n      { content }\n    </>\n  );\n};\n\nexport default Pool;\n","import type { ResourceError } from 'lib/api/resources';\n\n// status codes when custom error screen should be shown\nconst CUSTOM_STATUS_CODES = [ 403, 404, 422, 429 ];\n\nexport default function isCustomAppError(error: ResourceError<unknown>) {\n  return CUSTOM_STATUS_CODES.includes(error.status);\n}\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { Alert, AlertDescription, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nconst DataFetchAlert = ({ className }: { className?: string }) => {\n  return (\n    <Alert status=\"warning\" width=\"fit-content\" className={ className }>\n      <AlertDescription>\n        Something went wrong. Try refreshing the page or come back later.\n      </AlertDescription>\n    </Alert>\n  );\n};\n\nexport default chakra(DataFetchAlert);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import {\n  PopoverTrigger, PopoverContent, PopoverBody,\n  Modal, ModalContent, ModalCloseButton,\n  useDisclosure,\n  Button,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Popover from 'ui/shared/chakra/Popover';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst InfoButton = ({ children }: Props) => {\n  const isMobile = useIsMobile();\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  const triggerButton = (\n    <Button\n      size=\"sm\"\n      variant=\"outline\"\n      colorScheme=\"gray\"\n      onClick={ onToggle }\n      isActive={ isOpen }\n      aria-label=\"Show info\"\n      fontWeight={ 500 }\n      lineHeight={ 6 }\n      pl={ 1 }\n      pr={ isMobile ? 1 : 2 }\n      h=\"32px\"\n    >\n      <IconSvg name=\"info\" boxSize={ 6 } mr={ isMobile ? 0 : 1 }/>\n      { !isMobile && <span>Info</span> }\n    </Button>\n  );\n\n  if (isMobile) {\n    return (\n      <>\n        { triggerButton }\n        <Modal isOpen={ isOpen } onClose={ onClose } size=\"full\">\n          <ModalContent>\n            <ModalCloseButton/>\n            { children }\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        { triggerButton }\n      </PopoverTrigger>\n      <PopoverContent w=\"500px\">\n        <PopoverBody px={ 6 } py={ 5 }>\n          { children }\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default React.memo(InfoButton);\n","import { Heading, Flex, Tooltip, Link, chakra, useDisclosure } from '@chakra-ui/react';\nimport { debounce } from 'es-toolkit';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ntype BackLinkProp = { label: string; url: string } | { label: string; onClick: () => void };\n\ntype Props = {\n  title: string;\n  className?: string;\n  backLink?: BackLinkProp;\n  beforeTitle?: React.ReactNode;\n  afterTitle?: React.ReactNode;\n  contentAfter?: React.ReactNode;\n  secondRow?: React.ReactNode;\n  isLoading?: boolean;\n  withTextAd?: boolean;\n};\n\nconst TEXT_MAX_LINES = 1;\n\nconst BackLink = (props: BackLinkProp & { isLoading?: boolean }) => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.isLoading) {\n    return (\n      <Skeleton\n        boxSize={ 6 }\n        display=\"inline-block\"\n        flexShrink={ 0 }\n        borderRadius=\"base\"\n        mr={ 3 }\n        my={ 2 }\n        verticalAlign=\"text-bottom\"\n        isLoaded={ !props.isLoading }\n      />\n    );\n  }\n\n  const icon = <IconSvg name=\"arrows/east\" boxSize={ 6 } transform=\"rotate(180deg)\" margin=\"auto\" color=\"gray.400\" flexShrink={ 0 }/>;\n\n  if ('url' in props) {\n    return (\n      <Tooltip label={ props.label }>\n        <LinkInternal display=\"inline-flex\" href={ props.url } h=\"40px\" mr={ 3 }>\n          { icon }\n        </LinkInternal>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip label={ props.label }>\n      <Link display=\"inline-flex\" onClick={ props.onClick } h=\"40px\" mr={ 3 }>\n        { icon }\n      </Link>\n    </Tooltip>\n  );\n};\n\nconst PageTitle = ({ title, contentAfter, backLink, className, isLoading, afterTitle, beforeTitle, secondRow }: Props) => {\n  const tooltip = useDisclosure();\n  const isMobile = useIsMobile();\n  const [ isTextTruncated, setIsTextTruncated ] = React.useState(false);\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n\n  const updatedTruncateState = React.useCallback(() => {\n    if (!headingRef.current || !textRef.current) {\n      return;\n    }\n\n    const headingRect = headingRef.current.getBoundingClientRect();\n    const textRect = textRef.current.getBoundingClientRect();\n    if ((TEXT_MAX_LINES + 1) * headingRect.height <= textRect.height) {\n      setIsTextTruncated(true);\n    } else {\n      setIsTextTruncated(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!isLoading) {\n      updatedTruncateState();\n    }\n  }, [ isLoading, updatedTruncateState ]);\n\n  React.useEffect(() => {\n    const handleResize = debounce(updatedTruncateState, 1000);\n    window.addEventListener('resize', handleResize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ updatedTruncateState ]);\n\n  return (\n    <Flex className={ className } flexDir=\"column\" rowGap={ 3 } mb={ 6 }>\n      <Flex\n        flexDir=\"row\"\n        flexWrap=\"wrap\"\n        rowGap={ 3 }\n        columnGap={ 3 }\n        alignItems=\"center\"\n      >\n        <Flex h={{ base: 'auto', lg: isLoading ? 10 : 'auto' }} maxW=\"100%\" alignItems=\"center\">\n          { backLink && <BackLink { ...backLink } isLoading={ isLoading }/> }\n          { beforeTitle }\n          <Skeleton\n            isLoaded={ !isLoading }\n            overflow=\"hidden\"\n          >\n            <Tooltip\n              label={ title }\n              isOpen={ tooltip.isOpen }\n              onClose={ tooltip.onClose }\n              maxW={{ base: 'calc(100vw - 32px)', lg: '500px' }}\n              closeOnScroll={ isMobile ? true : false }\n              isDisabled={ !isTextTruncated }\n            >\n              <Heading\n                ref={ headingRef }\n                as=\"h1\"\n                size=\"lg\"\n                whiteSpace=\"normal\"\n                wordBreak=\"break-all\"\n                style={{\n                  WebkitLineClamp: TEXT_MAX_LINES,\n                  WebkitBoxOrient: 'vertical',\n                  display: '-webkit-box',\n                }}\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                onMouseEnter={ tooltip.onOpen }\n                onMouseLeave={ tooltip.onClose }\n                onClick={ isMobile ? tooltip.onToggle : undefined }\n              >\n                <span ref={ textRef }>\n                  { title }\n                </span>\n              </Heading>\n            </Tooltip>\n          </Skeleton>\n          { afterTitle }\n        </Flex>\n        { contentAfter }\n      </Flex>\n      { secondRow && (\n        <Skeleton isLoaded={ !isLoading } alignItems=\"center\" minH={ 10 } overflow=\"hidden\" display=\"flex\" _empty={{ display: 'none' }}>\n          { secondRow }\n        </Skeleton>\n      ) }\n    </Flex>\n  );\n};\n\nexport default chakra(PageTitle);\n","import { Tooltip, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ntype Props = {\n  label: string;\n  isLoading?: boolean;\n  className?: string;\n  children: React.ReactNode;\n};\n\nconst PopoverTriggerTooltip = ({ label, isLoading, className, children }: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n  const isMobile = useIsMobile();\n  return (\n    // tooltip need to be wrapped in div for proper popover positioning\n    <Skeleton isLoaded={ !isLoading } borderRadius=\"base\" ref={ ref } className={ className }>\n      <Tooltip\n        label={ label }\n        isDisabled={ isMobile }\n        // need a delay to avoid flickering when closing the popover\n        openDelay={ 100 }\n      >\n        { children }\n      </Tooltip>\n    </Skeleton>\n  );\n};\n\nexport default chakra(React.forwardRef(PopoverTriggerTooltip));\n","import {\n  Button,\n  PopoverTrigger,\n  PopoverBody,\n  PopoverContent,\n  Show,\n  Hide,\n  chakra,\n  useDisclosure,\n  Grid,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport IconSvg from 'ui/shared/IconSvg';\nimport PopoverTriggerTooltip from 'ui/shared/PopoverTriggerTooltip';\n\ninterface Props {\n  className?: string;\n  links: Array<React.ReactNode>;\n  label: string;\n  longText: string;\n  shortText?: string;\n}\n\nconst VerifyWith = ({ className, links, label, longText, shortText }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <PopoverTriggerTooltip label={ label } className={ className }>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            onClick={ onToggle }\n            isActive={ isOpen }\n            aria-label={ label }\n            fontWeight={ 500 }\n            px={ shortText ? 2 : 1 }\n            h=\"32px\"\n            flexShrink={ 0 }\n          >\n            <IconSvg name=\"explorer\" boxSize={ 5 }/>\n            <Show above=\"xl\">\n              <chakra.span ml={ 1 }>{ longText }</chakra.span>\n            </Show>\n            { shortText && (\n              <Hide above=\"xl\">\n                <chakra.span ml={ 1 }>{ shortText }</chakra.span>\n              </Hide>\n            ) }\n          </Button>\n        </PopoverTriggerTooltip>\n      </PopoverTrigger>\n      <PopoverContent w=\"auto\">\n        <PopoverBody >\n          <chakra.span color=\"text_secondary\" fontSize=\"xs\">{ label }</chakra.span>\n          <Grid\n            alignItems=\"center\"\n            templateColumns={ links.length > 1 ? 'auto auto' : '1fr' }\n            columnGap={ 4 }\n            rowGap={ 2 }\n            mt={ 3 }\n          >\n            { links }\n          </Grid>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default chakra(VerifyWith);\n","import type { As } from '@chakra-ui/react';\nimport { Flex, chakra, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Pool } from 'types/api/pools';\n\nimport { route } from 'nextjs-routes';\n\nimport { getPoolTitle } from 'lib/pools/getPoolTitle';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as EntityBase from 'ui/shared/entities/base/components';\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\nimport { distributeEntityProps } from '../base/utils';\nimport * as TokenEntity from '../token/TokenEntity';\n\ntype LinkProps = EntityBase.LinkBaseProps & Pick<EntityProps, 'pool'>;\n\nconst Link = chakra((props: LinkProps) => {\n  const defaultHref = route({ pathname: '/pools/[hash]', query: { hash: props.pool.contract_address } });\n\n  return (\n    <EntityBase.Link\n      { ...props }\n      href={ props.href ?? defaultHref }\n    >\n      { props.children }\n    </EntityBase.Link>\n  );\n});\n\ntype IconProps = Pick<EntityProps, 'pool' | 'className'> & EntityBase.IconBaseProps;\n\nconst Icon = (props: IconProps) => {\n  const bgColor = useColorModeValue('white', 'black');\n  const borderColor = useColorModeValue('whiteAlpha.800', 'blackAlpha.800');\n  return (\n    <Flex>\n      <Flex\n        bgColor={ bgColor }\n        borderRadius=\"full\"\n        border=\"1px solid\"\n        borderColor={ borderColor }\n      >\n        <TokenEntity.Icon\n          marginRight={ 0 }\n          size={ props.size }\n          token={{\n            icon_url: props.pool.base_token_icon_url,\n            symbol: props.pool.base_token_symbol,\n            address: props.pool.base_token_address,\n            name: '',\n            type: 'ERC-20',\n          }}\n          isLoading={ props.isLoading }\n        />\n      </Flex>\n      <Flex\n        transform=\"translateX(-8px)\"\n        bgColor={ bgColor }\n        borderRadius=\"full\"\n        border=\"1px solid\"\n        borderColor={ borderColor }\n      >\n        <TokenEntity.Icon\n          marginRight={ 0 }\n          size={ props.size }\n          token={{\n            icon_url: props.pool.quote_token_icon_url,\n            symbol: props.pool.quote_token_symbol,\n            address: props.pool.quote_token_address,\n            name: '',\n            type: 'ERC-20',\n          }}\n          isLoading={ props.isLoading }\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\ntype ContentProps = Omit<EntityBase.ContentBaseProps, 'text'> & Pick<EntityProps, 'pool'>;\n\nconst Content = chakra((props: ContentProps) => {\n  const nameString = getPoolTitle(props.pool);\n\n  return (\n    <TruncatedTextTooltip label={ nameString }>\n      <Skeleton\n        isLoaded={ !props.isLoading }\n        display=\"inline-block\"\n        whiteSpace=\"nowrap\"\n        overflow=\"hidden\"\n        textOverflow=\"ellipsis\"\n        height=\"fit-content\"\n      >\n        { nameString }\n      </Skeleton>\n    </TruncatedTextTooltip>\n  );\n});\n\nconst Container = EntityBase.Container;\n\nexport interface EntityProps extends EntityBase.EntityBaseProps {\n  pool: Pool;\n}\n\nconst PoolEntity = (props: EntityProps) => {\n  const partsProps = distributeEntityProps(props);\n\n  return (\n    <Container w=\"100%\" { ...partsProps.container }>\n      <Icon { ...partsProps.icon }/>\n      <Link { ...partsProps.link }>\n        <Content { ...partsProps.content }/>\n      </Link>\n    </Container>\n  );\n};\n\nexport default React.memo(chakra<As, EntityProps>(PoolEntity));\n\nexport {\n  Container,\n  Link,\n  Icon,\n  Content,\n};\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\nexport {\n  Visibility\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/show.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, ssr, children });\n}\nShow.displayName = \"Show\";\n\nexport {\n  Show\n};\n","// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a, _b;\n  return (_b = (_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) != null ? _b : value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\nexport {\n  useQuery\n};\n","import {\n  Visibility\n} from \"./chunk-DZU5YH7Z.mjs\";\nimport {\n  useQuery\n} from \"./chunk-R3K6W4OF.mjs\";\n\n// src/hide.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ jsx(Visibility, { breakpoint: query, hide: true, ssr, children });\n}\nHide.displayName = \"Hide\";\n\nexport {\n  Hide\n};\n"],"names":["getPoolLinks","pool","url","coin_gecko_terminal_url","image","title","filter","link","Boolean","getPoolTitle","base_token_symbol","quote_token_symbol","fee","ADDRESS_INFO","block_number_balance_updated_at","coin_balance","creation_transaction_hash","creator_address_hash","ADDRESS_HASH","exchange_rate","has_decompiled_code","has_logs","has_token_transfers","has_tokens","has_validated_blocks","hash","implementations","address","name","is_contract","is_verified","token","TOKEN_INFO_ERC_20","private_tags","public_tags","watchlist_names","watchlist_address_id","ens_domain_name","gas_usage_count","token_transfers_count","transactions_count","validations_count","internal_transactions_count","logs_count","token_balances_count","withdrawals_count","transaction_count","block_number","block_timestamp","delta","transaction_hash","TX_HASH","value","token_id","token_instance","TOKEN_INFO_ERC_721","TOKEN_INSTANCE","ADDRESS_NFT_1155","token_type","TOKEN_INFO_ERC_1155","TOKEN_INFO_ERC_404","ADDRESS_COLLECTION","amount","token_instances","Array","fill","schema","MUD_SCHEMA","table","MUD_TABLE","type","block_hash","account","ADDRESS_PARAMS","epoch_number","associated_account","table_full_name","table_id","table_name","table_namespace","table_type","key_names","key_types","value_names","value_types","POOL","contract_address","chain_id","base_token_address","base_token_icon_url","quote_token_address","quote_token_icon_url","fully_diluted_valuation_usd","market_cap_usd","liquidity","dex","id","circulating_market_cap","decimals","holders","symbol","total_supply","icon_url","TOKEN_COUNTERS","token_holders_count","transfers_count","pagination","generateListStub","TOKEN_HOLDER_ERC_20","next_page_params","TOKEN_HOLDER_ERC_1155","BLOCK_HASH","from","log_index","method","timestamp","to","total","TOKEN_TRANSFER_ERC_721","TOKEN_TRANSFER_ERC_20","TOKEN_TRANSFER_ERC_1155","TOKEN_TRANSFER_ERC_404","animation_url","external_app_url","image_url","is_unique","metadata","attributes","trait_type","description","external_url","owner","holder_address_hash","thumbnails","gas_limit","status","confirmations","transaction_burnt_fee","max_fee_per_gas","result","gas_price","priority_fee","base_fee_per_gas","token_transfers","transaction_types","gas_used","created_contract","position","nonce","has_error_in_internal_transactions","actions","decoded_input","token_transfers_overflow","raw_input","max_priority_fee_per_gas","revert_reason","confirmation_duration","transaction_tag","TX_ZKEVM_L2","TX","zkevm_batch_number","zkevm_sequence_hash","zkevm_status","zkevm_verify_hash","pending_transactions_count","transaction_fees_avg_24h","transaction_fees_sum_24h","transactions_count_24h","stub","num","rest","items","data","PoolInfo","Grid","columnGap","rowGap","base","lg","templateColumns","overflow","DetailsInfoItem","isLoading","isPlaceholderData","hint","TokenEntity","Skeleton","isLoaded","Number","toLocaleString","undefined","maximumFractionDigits","notation","router","useRouter","Pool","appProps","useAppContext","getQueryParamString","query","isError","error","useApiQuery","pathParams","chainId","config","chain","queryOptions","placeholderData","refetchOnMount","addressQuery","enabled","addressStubs","content","isCustomAppError","throwOnResourceLoadError","resource","DataFetchAlert","externalLinks","hasLinks","length","externalLinksComponents","React","map","LinkExternal","h","href","alignItems","display","minW","Image","boxSize","mr","src","alt","titleSecondRow","Flex","justifyContent","w","AddressEntity","Box","gap","InfoButton","VerifyWith","links","label","longText","shortText","backLink","hasGoBackLink","referrer","includes","poolTitle","PageTitle","beforeTitle","PoolEntity","size","contentAfter","Tag","secondRow","withTextAd","CUSTOM_STATUS_CODES","chakra","className","ContainerWithScrollY","gradientHeight","children","onScrollVisibilityChange","ref","hasScroll","setHasScroll","current","scrollHeight","clientHeight","gradientEndColor","useColorModeValue","flexDirection","overflowY","_after","bottom","left","right","height","bgGradient","pr","pb","Alert","width","AlertDescription","LabelScrollText","Text","fontWeight","variant","fontSize","align","Label","GridItem","py","lineHeight","_notFirst","mt","HintPopover","my","Hint","Value","flexWrap","pl","whiteSpace","ValueWithScroll","popoverProps","popoverContentProps","popoverBodyProps","bgColor","borderRadius","Popover","trigger","isLazy","placement","PopoverTrigger","IconSvg","color","_hover","cursor","Portal","PopoverContent","maxW","PopoverArrow","PopoverBody","px","DarkMode","isMobile","useIsMobile","isOpen","onToggle","onClose","useDisclosure","triggerButton","Button","colorScheme","onClick","isActive","aria-label","span","Modal","ModalContent","ModalCloseButton","BackLink","props","flexShrink","verticalAlign","icon","transform","margin","Tooltip","LinkInternal","Link","afterTitle","tooltip","isTextTruncated","setIsTextTruncated","headingRef","textRef","updatedTruncateState","headingRect","getBoundingClientRect","textRect","TEXT_MAX_LINES","handleResize","debounce","window","addEventListener","cleanup","removeEventListener","flexDir","mb","closeOnScroll","isDisabled","Heading","as","wordBreak","style","WebkitLineClamp","WebkitBoxOrient","textOverflow","onMouseEnter","onOpen","onMouseLeave","minH","_empty","PopoverTriggerTooltip","openDelay","Show","above","ml","Hide","defaultHref","route","pathname","EntityBase","Icon","borderColor","border","marginRight","Content","nameString","TruncatedTextTooltip","Container","partsProps","distributeEntityProps","container"],"sourceRoot":"","ignoreList":[21,22,23,24,25]}