{"version":3,"file":"static/chunks/3473.6344000a602b5235.js","mappings":"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SAAG,CACnC,OACA,CACA,oBACA,gDACA,EAEA,EAEA,CACA,kLC7BA,0CACA,GACA,MACA,QAAc,iBAAqB,IAAkB,MAAO,CAC5D,SAAe,iBAAqB,IAAkB,MACtD,CAAG,CACH,OACA,QAAc,iBAAqB,IAAkB,MAAO,CAC5D,SAAe,iBAAqB,IAAkB,MACtD,CACA,EACA,GACA,OACA,iBACA,iBACA,aACA,gBACA,QACG,IACH,MACA,OACA,OAA6B,iBAA4C,CACzE,SACA,oCACA,6CAAsF,IAAS,eAC/F,CACA,CAAG,CACH,QACA,iBACA,eACA,aACA,gBACA,QACG,IACH,MACA,OACA,OAA6B,UAAY,CACzC,SACA,qCACA,8CAAuF,IAAS,iBAChG,CACA,CACA,EACA,EAAe,gBAAU,CACzB,QACA,IACA,KACA,gBACA,oBACA,mBACA,sBACA,QACA,YACA,aACA,gBACA,KACA,CAAM,EACN,MAAkC,cAAQ,KACtC,eAAS,MACb,sBACA,KACA,CAAO,EACP,yBACA,CAAK,KACD,QAAI,EACR,2BACA,8FACA,CAAK,EACL,iCACA,GACA,iBACA,eACA,iBACA,aAAwD,EAAxD,CAA+B,OAAS,aACxC,eACA,6BACA,8BACA,yBACA,wBACA,CACA,CACA,EACA,QACA,sBACA,MAA2B,SAAG,CAAC,GAAe,EAAI,gCAA0D,SAAG,CACzG,GAAM,KACZ,CACA,MACA,KACA,UAAmB,QAAE,sBACrB,OACA,kBACA,gBACA,KACS,CACT,SACA,WACA,oBACA,UACA,WACA,EACA,CAAO,CACP,GAEA,yBCxGA,MAAqB,OAAU,CAC/B,cACA,cAAY,sBAAkC,EAC9C,cAAY,GAAe,CAAE,OAAmB,GAChD,eAAY,YAAwB,CAAE,OAAuB,GAC7D,SACA,EAAuB,QAAE,8BACzB,EAAmB,QAAkB,GACrC,GACA,gBAEA,MAAkC,SAAG,CAAC,GAAM,MAAQ,+BAA2D,SAC/G,EAGA,EAF6B,SAAG,CAAC,EAAQ,CAAI,KAAJ,GAAI,aAA6C,CAG1F,GAEA,iEC/BA,gBACA,8BACA,0DAEA,4BACA,WACA,YAAwB,IAAqB,KAC7C,UACA,KACA,kBACA,CACA,QACA,8DCSO,cACP,QAAY,mCAAyC,EAOrD,MANmB,OAAY,EAC/B,KACA,MACA,OACA,mBACA,CAAK,EACL,OAAyB,GAAa,CACtC","sources":["webpack://_N_E/./lib/hexToDecimal.ts","webpack://_N_E/./lib/networks/getNetworkValidationActionText.ts","webpack://_N_E/./lib/networks/getNetworkValidatorTitle.ts","webpack://_N_E/./types/api/arbitrumL2.ts","webpack://_N_E/./lib/rollups/arbitrum.ts","webpack://_N_E/./lib/web3/client.ts","webpack://_N_E/./stubs/RPC.ts","webpack://_N_E/./stubs/block.ts","webpack://_N_E/./stubs/token.ts","webpack://_N_E/./stubs/withdrawals.ts","webpack://_N_E/./types/api/zkSyncL2.ts","webpack://_N_E/./ui/block/BlockCeloEpochTag.tsx","webpack://_N_E/./lib/block/getBlockReward.ts","webpack://_N_E/./ui/block/details/BlockDetailsBaseFeeCelo.tsx","webpack://_N_E/./ui/block/details/BlockDetailsBlobInfo.tsx","webpack://_N_E/./ui/block/details/BlockDetailsZilliqaQuorumCertificate.tsx","webpack://_N_E/./ui/block/BlockDetails.tsx","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","webpack://_N_E/./node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","webpack://_N_E/./lib/api/useApiInfiniteQuery.tsx","webpack://_N_E/./ui/shared/pagination/useLazyLoadedList.tsx","webpack://_N_E/./ui/block/epochRewards/utils.ts","webpack://_N_E/./ui/block/epochRewards/BlockEpochElectionRewardDetailsMobile.tsx","webpack://_N_E/./ui/block/epochRewards/BlockEpochElectionRewardsListItem.tsx","webpack://_N_E/./ui/block/epochRewards/BlockEpochElectionRewardDetailsDesktop.tsx","webpack://_N_E/./ui/block/epochRewards/BlockEpochElectionRewardsTableItem.tsx","webpack://_N_E/./ui/block/epochRewards/BlockEpochElectionRewards.tsx","webpack://_N_E/./ui/block/epochRewards/BlockEpochRewardsDistribution.tsx","webpack://_N_E/./ui/block/BlockEpochRewards.tsx","webpack://_N_E/./ui/withdrawals/beaconChain/BeaconChainWithdrawalsList.tsx","webpack://_N_E/./ui/block/BlockWithdrawals.tsx","webpack://_N_E/./ui/block/useBlockBlobTxsQuery.tsx","webpack://_N_E/./ui/block/useBlockQuery.tsx","webpack://_N_E/./ui/shared/pagination/utils.ts","webpack://_N_E/./ui/block/useBlockTxsQuery.tsx","webpack://_N_E/./ui/block/useBlockWithdrawalsQuery.tsx","webpack://_N_E/./ui/pages/Block.tsx","webpack://_N_E/./ui/shared/ContainerWithScrollY.tsx","webpack://_N_E/./ui/shared/DetailsInfoItem.tsx","webpack://_N_E/./ui/shared/DetailsInfoItemDivider.tsx","webpack://_N_E/./ui/shared/DetailsTimestamp.tsx","webpack://_N_E/./ui/shared/EpochRewardTypeTag.tsx","webpack://_N_E/./ui/shared/HintPopover.tsx","webpack://_N_E/./ui/shared/ListItemMobile/ListItemMobileGrid.tsx","webpack://_N_E/./ui/shared/NetworkExplorers.tsx","webpack://_N_E/./ui/shared/PopoverTriggerTooltip.tsx","webpack://_N_E/./ui/shared/PrevNext.tsx","webpack://_N_E/./ui/shared/RawDataSnippet.tsx","webpack://_N_E/./ui/shared/Tabs/RoutedTabs.tsx","webpack://_N_E/./ui/shared/Tabs/TabsSkeleton.tsx","webpack://_N_E/./ui/shared/Tabs/useTabIndexFromQuery.tsx","webpack://_N_E/./ui/shared/TokenTransferSnippet/TokenTransferSnippetFiat.tsx","webpack://_N_E/./ui/shared/TokenTransferSnippet/TokenTransferSnippetNft.tsx","webpack://_N_E/./ui/shared/TokenTransferSnippet/TokenTransferSnippet.tsx","webpack://_N_E/./ui/shared/VerifyWith.tsx","webpack://_N_E/./ui/shared/address/utils.ts","webpack://_N_E/./ui/shared/alerts/ServiceDegradationWarning.tsx","webpack://_N_E/./ui/shared/batch/OptimisticL2TxnBatchDA.tsx","webpack://_N_E/./ui/shared/GasUsedToTargetRatio.tsx","webpack://_N_E/./ui/shared/block/BlockGasUsed.tsx","webpack://_N_E/./ui/shared/entities/block/BatchEntityL2.tsx","webpack://_N_E/./ui/shared/entities/block/BlockEntityL1.tsx","webpack://_N_E/./ui/shared/entities/nft/NftEntity.tsx","webpack://_N_E/./ui/shared/entities/tx/TxEntityL1.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationStep.tsx","webpack://_N_E/./ui/shared/verificationSteps/VerificationSteps.tsx","webpack://_N_E/./ui/txnBatches/zkSyncL2/ZkSyncL2TxnBatchHashesInfo.tsx","webpack://_N_E/./ui/txs/TxsWithFrontendSorting.tsx","webpack://_N_E/./ui/withdrawals/beaconChain/BeaconChainWithdrawalsListItem.tsx","webpack://_N_E/./ui/withdrawals/beaconChain/BeaconChainWithdrawalsTableItem.tsx","webpack://_N_E/./ui/withdrawals/beaconChain/BeaconChainWithdrawalsTable.tsx","webpack://_N_E/./node_modules/@chakra-ui/accordion/dist/chunk-APVWO53B.mjs","webpack://_N_E/./node_modules/@chakra-ui/accordion/dist/chunk-I3JYRBXX.mjs","webpack://_N_E/./node_modules/@chakra-ui/accordion/dist/chunk-IXS34X2E.mjs","webpack://_N_E/./node_modules/@chakra-ui/transition/dist/chunk-LRMLOJAR.mjs","webpack://_N_E/./node_modules/@chakra-ui/accordion/dist/chunk-WA4Q3J7T.mjs","webpack://_N_E/./node_modules/es-toolkit/dist/array/chunk.mjs","webpack://_N_E/./node_modules/viem/_esm/clients/createPublicClient.js"],"sourcesContent":["export default function hetToDecimal(hex: string) {\n  const strippedHex = hex.startsWith('0x') ? hex.slice(2) : hex;\n  return parseInt(strippedHex, 16);\n}\n","import config from 'configs/app';\n\nexport default function getNetworkValidationActionText() {\n  switch (config.chain.verificationType) {\n    case 'validation': {\n      return 'validated';\n    }\n    case 'mining': {\n      return 'mined';\n    }\n    case 'posting': {\n      return 'posted';\n    }\n    case 'sequencing': {\n      return 'sequenced';\n    }\n    default: {\n      return 'miner';\n    }\n  }\n}\n","import config from 'configs/app';\n\nexport default function getNetworkValidatorTitle() {\n  switch (config.chain.verificationType) {\n    case 'validation': {\n      return 'validator';\n    }\n    case 'mining': {\n      return 'miner';\n    }\n    case 'posting': {\n      return 'poster';\n    }\n    case 'sequencing': {\n      return 'sequencer';\n    }\n    default: {\n      return 'miner';\n    }\n  }\n}\n","import type { Block } from './block';\nimport type { Transaction } from './transaction';\n\nexport interface ArbitrumLatestDepositsItem {\n  completion_transaction_hash: string;\n  origination_timestamp: string | null;\n  origination_transaction_block_number: number | null;\n  origination_transaction_hash: string | null;\n}\n\nexport interface ArbitrumLatestDepositsResponse {\n  items: Array<ArbitrumLatestDepositsItem>;\n}\n\nexport type ArbitrumL2MessagesItem = {\n  completion_transaction_hash: string | null;\n  id: number;\n  origination_address: string;\n  origination_timestamp: string | null;\n  origination_transaction_block_number: number | null;\n  origination_transaction_hash: string;\n  status: 'initiated' | 'sent' | 'confirmed' | 'relayed';\n};\n\nexport type ArbitrumL2MessagesResponse = {\n  items: Array<ArbitrumL2MessagesItem>;\n  next_page_params: {\n    direction: string;\n    id: number;\n    items_count: number;\n  };\n};\n\nexport type ArbitrumL2TxData = {\n  hash: string | null;\n  status: string | null;\n  timestamp: string | null;\n};\n\ntype ArbitrumL2BatchCommitmentTx = {\n  block_number: number;\n  hash: string;\n  status: string;\n  timestamp: string;\n};\n\ntype BatchDataContainer = 'in_blob4844' | 'in_calldata' | 'in_anytrust' | 'in_celestia' | null;\n\nexport type ArbitrumL2TxnBatchesItem = {\n  blocks_count: number;\n  commitment_transaction: ArbitrumL2BatchCommitmentTx;\n  number: number;\n  transactions_count: number;\n  batch_data_container: BatchDataContainer;\n};\n\nexport type ArbitrumL2TxnBatchesResponse = {\n  items: Array<ArbitrumL2TxnBatchesItem>;\n  next_page_params: {\n    number: number;\n    items_count: number;\n  } | null;\n};\n\nexport type ArbitrumL2TxnBatchDAAnytrust = {\n  batch_data_container: 'in_anytrust';\n  bls_signature: string;\n  data_hash: string;\n  timeout: string;\n  signers: Array<{\n    key: string;\n    trusted: boolean;\n    proof?: string;\n  }>;\n};\n\nexport type ArbitrumL2TxnBatchDataAvailability = ArbitrumL2TxnBatchDAAnytrust | {\n  batch_data_container: Exclude<BatchDataContainer, 'in_anytrust'>;\n};\n\nexport type ArbitrumL2TxnBatch = {\n  after_acc: string;\n  before_acc: string;\n  commitment_transaction: ArbitrumL2BatchCommitmentTx;\n  end_block: number;\n  start_block: number;\n  number: number;\n  transactions_count: number;\n  data_availability: ArbitrumL2TxnBatchDataAvailability;\n};\n\nexport type ArbitrumL2BatchTxs = {\n  items: Array<Transaction>;\n  next_page_params: {\n    batch_number: string;\n    block_number: number;\n    index: number;\n    items_count: number;\n  } | null;\n};\n\nexport type ArbitrumL2BatchBlocks = {\n  items: Array<Block>;\n  next_page_params: {\n    batch_number: string;\n    block_number: number;\n    items_count: number;\n  } | null;\n};\n\nexport const ARBITRUM_L2_TX_BATCH_STATUSES = [\n  'Processed on rollup' as const,\n  'Sent to base' as const,\n  'Confirmed on base' as const,\n];\n\nexport type ArbitrumBatchStatus = typeof ARBITRUM_L2_TX_BATCH_STATUSES[number];\n\nexport type NewArbitrumBatchSocketResponse = { batch: ArbitrumL2TxnBatchesItem };\n","import { ARBITRUM_L2_TX_BATCH_STATUSES, type ArbitrumBatchStatus, type ArbitrumL2TxData } from 'types/api/arbitrumL2';\n\nimport config from 'configs/app';\n\nconst rollupFeature = config.features.rollup;\n\ntype Args = {\n  status: ArbitrumBatchStatus;\n  commitment_transaction: ArbitrumL2TxData;\n  confirmation_transaction: ArbitrumL2TxData;\n};\n\nexport const VERIFICATION_STEPS_MAP: Record<ArbitrumBatchStatus, string> = {\n  'Processed on rollup': 'Processed on rollup',\n  'Sent to base': rollupFeature.isEnabled && rollupFeature.parentChainName ? `Sent to ${ rollupFeature.parentChainName }` : 'Sent to parent chain',\n  'Confirmed on base': rollupFeature.isEnabled && rollupFeature.parentChainName ?\n    `Confirmed on ${ rollupFeature.parentChainName }` :\n    'Confirmed on parent chain',\n};\n\nexport const verificationSteps = (() => {\n  return ARBITRUM_L2_TX_BATCH_STATUSES.map((status) => VERIFICATION_STEPS_MAP[status]);\n})();\n\nexport function getVerificationStepStatus({\n  status,\n  commitment_transaction: commitTx,\n  confirmation_transaction: confirmTx,\n}: Args) {\n  if (status === 'Sent to base') {\n    if (commitTx.status === 'unfinalized') {\n      return 'pending';\n    }\n  }\n  if (status === 'Confirmed on base') {\n    if (confirmTx.status === 'unfinalized') {\n      return 'pending';\n    }\n  }\n  return 'finalized';\n}\n","import { createPublicClient, http } from 'viem';\n\nimport currentChain from './currentChain';\n\nexport const publicClient = (() => {\n  if (currentChain.rpcUrls.default.http.filter(Boolean).length === 0) {\n    return;\n  }\n\n  try {\n    return createPublicClient({\n      chain: currentChain,\n      transport: http(),\n      batch: {\n        multicall: true,\n      },\n    });\n  } catch (error) {}\n})();\n","import type { Chain, GetBlockReturnType, GetTransactionReturnType, TransactionReceipt, Withdrawal } from 'viem';\n\nimport { ADDRESS_HASH } from './addressParams';\nimport { BLOCK_HASH } from './block';\nimport { TX_HASH } from './tx';\n\nexport const WITHDRAWAL: Withdrawal = {\n  index: '0x1af95d9',\n  validatorIndex: '0x7d748',\n  address: '0x9b52b9033ecbb6635f1c31a646d5691b282878aa',\n  amount: '0x29e16b',\n};\n\nexport const GET_TRANSACTION: GetTransactionReturnType<Chain, 'latest'> = {\n  blockHash: BLOCK_HASH,\n  blockNumber: BigInt(10361367),\n  from: ADDRESS_HASH,\n  gas: BigInt(800000),\n  maxPriorityFeePerGas: BigInt(2),\n  maxFeePerGas: BigInt(14),\n  hash: TX_HASH,\n  input: '0x7898e0',\n  nonce: 117694,\n  to: ADDRESS_HASH,\n  transactionIndex: 60,\n  value: BigInt(42),\n  type: 'eip1559',\n  accessList: [],\n  chainId: 5,\n  v: BigInt(0),\n  r: '0x2c5022ff7f78a22f1a99afbd568f75cb52812189ed8c264c8310e0b8dba2c8a8',\n  s: '0x50938f87c92b9eeb9777507ca8f7397840232d00d1dbac3edac6c115b4656763',\n  yParity: 1,\n  typeHex: '0x2',\n};\n\nexport const GET_TRANSACTION_RECEIPT: TransactionReceipt = {\n  blockHash: BLOCK_HASH,\n  blockNumber: BigInt(10361367),\n  contractAddress: null,\n  cumulativeGasUsed: BigInt(39109),\n  effectiveGasPrice: BigInt(13),\n  from: ADDRESS_HASH,\n  gasUsed: BigInt(39109),\n  logs: [],\n  logsBloom: '0x0',\n  status: 'success',\n  to: ADDRESS_HASH,\n  transactionHash: TX_HASH,\n  transactionIndex: 60,\n  type: '0x2',\n};\n\nexport const GET_TRANSACTION_CONFIRMATIONS = BigInt(420);\n\nexport const GET_BALANCE = BigInt(42_000_000_000_000);\n\nexport const GET_TRANSACTIONS_COUNT = 42;\n\nexport const GET_BLOCK: GetBlockReturnType<Chain, false, 'latest'> = {\n  baseFeePerGas: BigInt(11),\n  difficulty: BigInt(111),\n  extraData: '0xd8830',\n  gasLimit: BigInt(800000),\n  gasUsed: BigInt(42000),\n  hash: BLOCK_HASH,\n  logsBloom: '0x008000',\n  miner: ADDRESS_HASH,\n  mixHash: BLOCK_HASH,\n  nonce: '0x0000000000000000',\n  number: BigInt(10361367),\n  parentHash: BLOCK_HASH,\n  receiptsRoot: BLOCK_HASH,\n  sha3Uncles: BLOCK_HASH,\n  size: BigInt(88),\n  stateRoot: BLOCK_HASH,\n  timestamp: BigInt(1628580000),\n  totalDifficulty: BigInt(10361367),\n  transactions: [\n    TX_HASH,\n  ],\n  transactionsRoot: TX_HASH,\n  uncles: [],\n  withdrawals: Array(10).fill(WITHDRAWAL),\n  withdrawalsRoot: TX_HASH,\n  sealFields: [ '0x00' ],\n  blobGasUsed: BigInt(0),\n  excessBlobGas: BigInt(0),\n};\n\nexport const GET_BLOCK_WITH_TRANSACTIONS: GetBlockReturnType<Chain, true, 'latest'> = {\n  ...GET_BLOCK,\n  transactions: Array(50).fill(GET_TRANSACTION),\n};\n","import type { Block, BlockEpochElectionReward, BlockEpoch } from 'types/api/block';\n\nimport { ADDRESS_PARAMS } from './addressParams';\nimport { TOKEN_INFO_ERC_20, TOKEN_TRANSFER_ERC_20 } from './token';\n\nexport const BLOCK_HASH = '0x8fa7b9e5e5e79deeb62d608db22ba9a5cb45388c7ebb9223ae77331c6080dc70';\n\nexport const BLOCK: Block = {\n  base_fee_per_gas: '10000000000',\n  burnt_fees: '92834504000000000',\n  burnt_fees_percentage: 42.2,\n  difficulty: '340282366920938463463374607431768211451',\n  extra_data: 'TODO',\n  gas_limit: '30000000',\n  gas_target_percentage: 55.79,\n  gas_used: '6631036',\n  gas_used_percentage: 22.10,\n  hash: BLOCK_HASH,\n  height: 8988736,\n  miner: ADDRESS_PARAMS,\n  nonce: '0x0000000000000000',\n  parent_hash: BLOCK_HASH,\n  priority_fee: '19241635454943109',\n  rewards: [\n    {\n      reward: '19241635454943109',\n      type: 'Validator Reward',\n    },\n  ],\n  size: 46406,\n  state_root: 'TODO',\n  timestamp: '2023-05-12T19:29:12.000000Z',\n  total_difficulty: '10837812015930321201107455268036056402048391639',\n  transaction_count: 142,\n  transaction_fees: '19241635547777613',\n  type: 'block',\n  uncles_hashes: [],\n};\n\nconst BLOCK_EPOCH_REWARD: BlockEpochElectionReward = {\n  count: 10,\n  total: '157705500305820107521',\n  token: TOKEN_INFO_ERC_20,\n};\n\nexport const BLOCK_EPOCH: BlockEpoch = {\n  number: 1486,\n  aggregated_election_rewards: {\n    group: BLOCK_EPOCH_REWARD,\n    validator: BLOCK_EPOCH_REWARD,\n    voter: BLOCK_EPOCH_REWARD,\n    delegated_payment: BLOCK_EPOCH_REWARD,\n  },\n  distribution: {\n    carbon_offsetting_transfer: TOKEN_TRANSFER_ERC_20,\n    community_transfer: TOKEN_TRANSFER_ERC_20,\n    reserve_bolster_transfer: TOKEN_TRANSFER_ERC_20,\n  },\n};\n","import type {\n  TokenCounters,\n  TokenHolder,\n  TokenHolders,\n  TokenHoldersPagination,\n  TokenInfo,\n  TokenInstance,\n  TokenType,\n} from 'types/api/token';\nimport type { TokenInstanceTransferPagination, TokenInstanceTransferResponse } from 'types/api/tokens';\nimport type { TokenTransfer, TokenTransferPagination, TokenTransferResponse } from 'types/api/tokenTransfer';\n\nimport { ADDRESS_PARAMS, ADDRESS_HASH } from './addressParams';\nimport { TX_HASH } from './tx';\nimport { generateListStub } from './utils';\n\nexport const BLOCK_HASH = '0x8fa7b9e5e5e79deeb62d608db22ba9a5cb45388c7ebb9223ae77331c6080dc70';\n\nexport const TOKEN_INFO_ERC_20: TokenInfo<'ERC-20'> = {\n  address: ADDRESS_HASH,\n  circulating_market_cap: '117629601.61913824',\n  decimals: '18',\n  exchange_rate: '0.999997',\n  holders: '16026',\n  name: 'Stub Token (goerli)',\n  symbol: 'STUB',\n  total_supply: '60000000000000000000000',\n  type: 'ERC-20',\n  icon_url: null,\n};\n\nexport const TOKEN_INFO_ERC_721: TokenInfo<'ERC-721'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-721',\n};\n\nexport const TOKEN_INFO_ERC_1155: TokenInfo<'ERC-1155'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-1155',\n};\n\nexport const TOKEN_INFO_ERC_404: TokenInfo<'ERC-404'> = {\n  ...TOKEN_INFO_ERC_20,\n  circulating_market_cap: null,\n  type: 'ERC-404',\n};\n\nexport const TOKEN_COUNTERS: TokenCounters = {\n  token_holders_count: '123456',\n  transfers_count: '123456',\n};\n\nexport const TOKEN_HOLDER_ERC_20: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  value: '1021378038331138520',\n};\n\nexport const TOKEN_HOLDER_ERC_1155: TokenHolder = {\n  address: ADDRESS_PARAMS,\n  token_id: '12345',\n  value: '1021378038331138520',\n};\n\nexport const getTokenHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_1155, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_holders'>(TOKEN_HOLDER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceHoldersStub = (type?: TokenType, pagination: TokenHoldersPagination | null = null): TokenHolders => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_1155, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_holders'>(TOKEN_HOLDER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_TRANSFER_ERC_20: TokenTransfer = {\n  block_hash: BLOCK_HASH,\n  block_number: '123456',\n  from: ADDRESS_PARAMS,\n  log_index: '4',\n  method: 'addLiquidity',\n  timestamp: '2022-06-24T10:22:11.000000Z',\n  to: ADDRESS_PARAMS,\n  token: TOKEN_INFO_ERC_20,\n  total: {\n    decimals: '18',\n    value: '9851351626684503',\n  },\n  transaction_hash: TX_HASH,\n  type: 'token_minting',\n};\n\nexport const TOKEN_TRANSFER_ERC_721: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n  },\n  token: TOKEN_INFO_ERC_721,\n};\n\nexport const TOKEN_TRANSFER_ERC_1155: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_1155,\n};\n\nexport const TOKEN_TRANSFER_ERC_404: TokenTransfer = {\n  ...TOKEN_TRANSFER_ERC_20,\n  total: {\n    token_id: '35870',\n    value: '123',\n    decimals: '18',\n  },\n  token: TOKEN_INFO_ERC_404,\n};\n\nexport const getTokenTransfersStub = (type?: TokenType, pagination: TokenTransferPagination | null = null): TokenTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_721, 50, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_1155, 50, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_404, 50, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_transfers'>(TOKEN_TRANSFER_ERC_20, 50, { next_page_params: pagination });\n  }\n};\n\nexport const getTokenInstanceTransfersStub = (type?: TokenType, pagination: TokenInstanceTransferPagination | null = null): TokenInstanceTransferResponse => {\n  switch (type) {\n    case 'ERC-721':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_721, 10, { next_page_params: pagination });\n    case 'ERC-1155':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_1155, 10, { next_page_params: pagination });\n    case 'ERC-404':\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_404, 10, { next_page_params: pagination });\n    default:\n      return generateListStub<'token_instance_transfers'>(TOKEN_TRANSFER_ERC_20, 10, { next_page_params: pagination });\n  }\n};\n\nexport const TOKEN_INSTANCE: TokenInstance = {\n  animation_url: null,\n  external_app_url: 'https://vipsland.com/nft/collections/genesis/188882',\n  id: '188882',\n  image_url: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n  is_unique: true,\n  metadata: {\n    attributes: Array(3).fill({ trait_type: 'skin tone', value: 'very light skin tone' }),\n    description: '**GENESIS #188882**, **8a77ca1bcaa4036f** :: *844th* generation of *#57806 and #57809* :: **eGenetic Hash Code (eDNA)** = *2822355e953a462d*',\n    external_url: 'https://vipsland.com/nft/collections/genesis/188882',\n    image: 'https://ipfs.vipsland.com/nft/collections/genesis/188882.gif',\n    name: 'GENESIS #188882, 8a77ca1bcaa4036f',\n  },\n  owner: ADDRESS_PARAMS,\n  holder_address_hash: ADDRESS_HASH,\n  thumbnails: null,\n};\n","import type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport { ADDRESS_PARAMS } from './addressParams';\n\nexport const WITHDRAWAL: WithdrawalsItem = {\n  amount: '12565723',\n  index: 3810697,\n  receiver: ADDRESS_PARAMS,\n  validator_index: 25987,\n  block_number: 9005713,\n  timestamp: '2023-05-12T19:29:12.000000Z',\n};\n","import type { Transaction } from './transaction';\n\nexport const ZKSYNC_L2_TX_BATCH_STATUSES = [\n  'Processed on L2' as const,\n  'Sealed on L2' as const,\n  'Sent to L1' as const,\n  'Validated on L1' as const,\n  'Executed on L1' as const,\n];\n\nexport type ZkSyncBatchStatus = typeof ZKSYNC_L2_TX_BATCH_STATUSES[number];\n\nexport interface ZkSyncBatchesItem {\n  commit_transaction_hash: string | null;\n  commit_transaction_timestamp: string | null;\n  execute_transaction_hash: string | null;\n  execute_transaction_timestamp: string | null;\n  number: number;\n  prove_transaction_hash: string | null;\n  prove_transaction_timestamp: string | null;\n  status: ZkSyncBatchStatus;\n  timestamp: string;\n  transaction_count: number;\n}\n\nexport type ZkSyncBatchesResponse = {\n  items: Array<ZkSyncBatchesItem>;\n  next_page_params: {\n    number: number;\n    items_count: number;\n  } | null;\n};\n\nexport interface ZkSyncBatch extends Omit<ZkSyncBatchesItem, 'transaction_count'> {\n  start_block: number;\n  end_block: number;\n  l1_gas_price: string;\n  l1_transaction_count: number;\n  l2_fair_gas_price: string;\n  l2_transaction_count: number;\n  root_hash: string;\n}\n\nexport type ZkSyncBatchTxs = {\n  items: Array<Transaction>;\n  next_page_params: {\n    batch_number: string;\n    block_number: number;\n    index: number;\n    items_count: number;\n  } | null;\n};\n","import { Tag, Tooltip, useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\nimport type { BlockQuery } from './useBlockQuery';\n\ninterface Props {\n  blockQuery: BlockQuery;\n}\n\nconst BlockCeloEpochTag = ({ blockQuery }: Props) => {\n  // have to implement controlled tooltip because of the issue - https://github.com/chakra-ui/chakra-ui/issues/7107\n  const { isOpen, onOpen, onToggle, onClose } = useDisclosure();\n\n  if (!blockQuery.data?.celo) {\n    return null;\n  }\n\n  if (!blockQuery.data.celo.is_epoch_block) {\n    const celoConfig = config.features.celo;\n    const epochBlockNumber = celoConfig.isEnabled && celoConfig.L2UpgradeBlock && blockQuery.data.height <= celoConfig.L2UpgradeBlock ?\n      blockQuery.data.celo.epoch_number * celoConfig.BLOCKS_PER_EPOCH :\n      undefined;\n    const tag = (\n      <Tag\n        colorScheme={ epochBlockNumber ? 'gray-blue' : 'gray' }\n        onClick={ epochBlockNumber ? undefined : onToggle }\n        onMouseEnter={ onOpen }\n        onMouseLeave={ onClose }\n      >\n        Epoch #{ blockQuery.data.celo.epoch_number }\n      </Tag>\n    );\n    const content = epochBlockNumber ? (\n      <LinkInternal href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: String(epochBlockNumber) } }) }>\n        { tag }\n      </LinkInternal>\n    ) : tag;\n\n    return (\n      <Tooltip\n        label=\"Displays the epoch this block belongs to before the epoch is finalized\"\n        maxW=\"280px\"\n        textAlign=\"center\"\n        isOpen={ isOpen }\n        onClose={ onClose }\n      >\n        { content }\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip\n      label=\"Displays the epoch finalized by this block\"\n      maxW=\"280px\"\n      textAlign=\"center\"\n      isOpen={ isOpen }\n      onClose={ onClose }\n    >\n      <Tag bgColor=\"celo\" color=\"blackAlpha.800\" onClick={ onToggle } onMouseEnter={ onOpen } onMouseLeave={ onClose }>\n        Finalized epoch #{ blockQuery.data.celo.epoch_number }\n      </Tag>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(BlockCeloEpochTag);\n","import BigNumber from 'bignumber.js';\n\nimport type { Block } from 'types/api/block';\n\nexport default function getBlockReward(block: Block) {\n  const txFees = BigNumber(block.transaction_fees || 0);\n  const burntFees = BigNumber(block.burnt_fees || 0);\n  const minerReward = block.rewards?.find(({ type }) => type === 'Miner Reward' || type === 'Validator Reward')?.reward;\n  const totalReward = BigNumber(minerReward || 0);\n  const staticReward = totalReward.minus(txFees).plus(burntFees);\n\n  return {\n    totalReward,\n    staticReward,\n    txFees,\n    burntFees,\n  };\n}\n","import { Box, Flex, Link } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { AddressParam } from 'types/api/addressParams';\nimport type { BlockBaseFeeCelo } from 'types/api/block';\nimport type { TokenInfo } from 'types/api/token';\n\nimport { WEI, ZERO_ADDRESS } from 'lib/consts';\nimport AddressFromTo from 'ui/shared/address/AddressFromTo';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype ItemProps = BlockBaseFeeCelo['breakdown'][number] & {\n  addressFrom: AddressParam;\n  token: TokenInfo;\n};\n\nconst BreakDownItem = ({ amount, percentage, address, addressFrom, token }: ItemProps) => {\n  const isBurning = address.hash === ZERO_ADDRESS;\n\n  return (\n    <Flex alignItems=\"center\" columnGap={ 2 } rowGap={ 1 } flexWrap=\"wrap\">\n      <Box color=\"text_secondary\">{ percentage }% of amount</Box>\n      <Flex columnGap={ 2 }>\n        { BigNumber(amount).dividedBy(WEI).toFixed() }\n        <TokenEntity token={ token } noCopy onlySymbol/>\n      </Flex>\n      { isBurning ? (\n        <>\n          <AddressEntity address={ addressFrom } truncation=\"constant\"/>\n          <IconSvg name=\"flame\" boxSize={ 5 } color=\"gray.500\"/>\n          <Box color=\"text_secondary\">burnt</Box>\n        </>\n      ) : <AddressFromTo from={ addressFrom } to={ address }/> }\n    </Flex>\n  );\n};\n\ninterface Props {\n  data: BlockBaseFeeCelo;\n}\n\nconst BlockDetailsBaseFeeCelo = ({ data }: Props) => {\n  const totalBaseFee = BigNumber(data.amount).dividedBy(WEI).toFixed();\n\n  const totalFeeLabel = (\n    <Box whiteSpace=\"pre-wrap\">\n      <span>The FeeHandler regularly burns 80% of its tokens. Non-CELO tokens are swapped to CELO beforehand. The remaining 20% are sent to the </span>\n      <Link isExternal href=\"https://www.ultragreen.money\">Green Fund</Link>\n      <span>.</span>\n    </Box>\n  );\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint=\"The contract receiving the base fee, responsible for handling fee usage. This contract is controlled by governance process.\"\n      >\n        Base fee handler\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <AddressEntity address={ data.recipient }/>\n      </DetailsInfoItem.Value>\n      <DetailsInfoItem.Label\n        hint={ totalFeeLabel }\n        type=\"popover\"\n      >\n        Base fee total\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value display=\"block\">\n        <Flex columnGap={ 2 }>\n          { totalBaseFee }\n          <TokenEntity token={ data.token } noCopy onlySymbol/>\n        </Flex>\n        { data.breakdown.length > 0 && (\n          <Flex flexDir=\"column\" rowGap={ 2 } mt={ 2 }>\n            { data.breakdown.map((item, index) => (\n              <BreakDownItem\n                key={ index }\n                { ...item }\n                addressFrom={ data.recipient }\n                token={ data.token }\n              />\n            )) }\n          </Flex>\n        ) }\n      </DetailsInfoItem.Value>\n      <DetailsInfoItemDivider/>\n    </>\n  );\n};\n\nexport default React.memo(BlockDetailsBaseFeeCelo);\n","import { Text, Tooltip } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { Block } from 'types/api/block';\n\nimport { WEI, WEI_IN_GWEI, ZERO } from 'lib/consts';\nimport { space } from 'lib/html-entities';\nimport { currencyUnits } from 'lib/units';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport IconSvg from 'ui/shared/IconSvg';\nimport Utilization from 'ui/shared/Utilization/Utilization';\n\ninterface Props {\n  data: Block;\n}\n\nconst BlockDetailsBlobInfo = ({ data }: Props) => {\n  if (\n    !data.blob_gas_price ||\n    !data.blob_gas_used ||\n    !data.burnt_blob_fees ||\n    !data.excess_blob_gas\n  ) {\n    return null;\n  }\n\n  const burntBlobFees = BigNumber(data.burnt_blob_fees || 0);\n  const blobFees = BigNumber(data.blob_gas_price || 0).multipliedBy(BigNumber(data.blob_gas_used || 0));\n\n  return (\n    <>\n\n      { data.blob_gas_price && (\n        <>\n          <DetailsInfoItem.Label\n            // eslint-disable-next-line max-len\n            hint=\"Price per unit of gas used for for blob deployment. Blob gas is independent of normal gas. Both gas prices can affect the priority of transaction execution.\"\n          >\n            Blob gas price\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Text>{ BigNumber(data.blob_gas_price).dividedBy(WEI).toFixed() } { currencyUnits.ether } </Text>\n            <Text variant=\"secondary\" whiteSpace=\"pre\">\n              { space }({ BigNumber(data.blob_gas_price).dividedBy(WEI_IN_GWEI).toFixed() } { currencyUnits.gwei })\n            </Text>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { data.blob_gas_used && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Actual amount of gas used by the blobs in this block\"\n          >\n            Blob gas used\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Text>{ BigNumber(data.blob_gas_used).toFormat() }</Text>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { !burntBlobFees.isEqualTo(ZERO) && (\n        <>\n          <DetailsInfoItem.Label\n            hint={ `Amount of ${ currencyUnits.ether } used for blobs in this block` }\n          >\n            Blob burnt fees\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <IconSvg name=\"flame\" boxSize={ 5 } color=\"gray.500\" mr={ 2 }/>\n            { burntBlobFees.dividedBy(WEI).toFixed() } { currencyUnits.ether }\n            { !blobFees.isEqualTo(ZERO) && (\n              <Tooltip label=\"Blob burnt fees / Txn fees * 100%\">\n                <div>\n                  <Utilization ml={ 4 } value={ burntBlobFees.dividedBy(blobFees).toNumber() }/>\n                </div>\n              </Tooltip>\n            ) }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { data.excess_blob_gas && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"A running total of blob gas consumed in excess of the target, prior to the block.\"\n          >\n            Excess blob gas\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Text>{ BigNumber(data.excess_blob_gas).dividedBy(WEI).toFixed() } { currencyUnits.ether } </Text>\n            <Text variant=\"secondary\" whiteSpace=\"pre\">\n              { space }({ BigNumber(data.excess_blob_gas).dividedBy(WEI_IN_GWEI).toFixed() } { currencyUnits.gwei })\n            </Text>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      <DetailsInfoItemDivider/>\n    </>\n  );\n};\n\nexport default React.memo(BlockDetailsBlobInfo);\n","import { Accordion, AccordionButton, AccordionIcon, AccordionItem, AccordionPanel, Divider, Grid, GridItem, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { ZilliqaNestedQuorumCertificate, ZilliqaQuorumCertificate } from 'types/api/block';\n\nimport { apos, ndash } from 'lib/html-entities';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport Hint from 'ui/shared/Hint';\n\nfunction formatSigners(signers: Array<number>) {\n  return `[${ signers.join(', ') }]`;\n}\n\ninterface Props {\n  data: ZilliqaQuorumCertificate & {\n    nested_quorum_certificates?: Array<ZilliqaNestedQuorumCertificate>;\n  };\n}\n\nconst BlockDetailsZilliqaQuorumCertificate = ({ data }: Props) => {\n  const nestedBlockBgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  const hint = (isNested?: boolean) => (\n    <>\n      The iteration of the consensus round in which the block was proposed:<br/><br/>\n      View { ndash } the view number of the quorum certificate, indicating the consensus round.<br/><br/>\n      Signature { ndash } aggregated BLS signature representing the validators{ apos } agreement.<br/><br/>\n      Signers { ndash } an array of integers representing the indices of validators who participated in the quorum (indicated by the cosigned bit vector).\n      { isNested && (\n        <>\n          <br/><br/>\n          Proposed by validator { ndash } validator index proposing the nested quorum certificate.\n        </>\n      ) }\n    </>\n  );\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint={ hint() }\n      >\n        { data.nested_quorum_certificates ? 'Aggregate quorum certificate' : 'Quorum certificate' }\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value rowGap={ 0 }>\n        <Grid\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          gridTemplateColumns=\"min-content 1fr\"\n          columnGap={ 5 }\n        >\n          <GridItem fontWeight={ 600 }>View</GridItem>\n          <GridItem>{ data.view }</GridItem>\n          <DetailsInfoItemDivider my={{ base: 2, lg: 2 }} colSpan={ 2 }/>\n          <GridItem fontWeight={ 600 }>Signature</GridItem>\n          <GridItem whiteSpace=\"pre-wrap\" wordBreak=\"break-word\" display=\"flex\" alignItems=\"flex-start\" columnGap={ 5 }>\n            { data.signature }\n            <CopyToClipboard text={ data.signature }/>\n          </GridItem>\n          <DetailsInfoItemDivider my={{ base: 2, lg: 2 }} colSpan={ 2 }/>\n          <GridItem fontWeight={ 600 }>Signers</GridItem>\n          <GridItem >{ formatSigners(data.signers) }</GridItem>\n        </Grid>\n        { data.nested_quorum_certificates && data.nested_quorum_certificates.length > 0 && (\n          <>\n            <Divider my={ 2 }/>\n            <Accordion\n              allowToggle\n              w=\"100%\"\n              fontSize=\"sm\"\n              lineHeight={ 5 }\n            >\n              <AccordionItem borderWidth={ 0 } _last={{ borderBottomWidth: 0 }}>\n                { ({ isExpanded }) => (\n                  <>\n                    <AccordionButton\n                      fontSize=\"sm\"\n                      lineHeight={ 5 }\n                      fontWeight={ 600 }\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      columnGap={ 1 }\n                      px={ 0 }\n                      pt={ 0 }\n                      pb={ 2 }\n                      _hover={{ bgColor: 'inherit' }}\n                    >\n                      <span>Nested quorum certificates</span>\n                      <Hint label={ hint(true) }/>\n                      <AccordionIcon flexShrink={ 0 } boxSize={ 5 } transform={ isExpanded ? 'rotate(0deg)' : 'rotate(-90deg)' } color=\"gray.500\"/>\n                    </AccordionButton>\n                    <AccordionPanel display=\"flex\" flexDirection=\"column\" rowGap={ 2 } p={ 0 }>\n                      { data.nested_quorum_certificates?.map((item, index) => (\n                        <Grid\n                          key={ index }\n                          gridTemplateColumns=\"90px 1fr\"\n                          columnGap={ 3 }\n                          rowGap={ 2 }\n                          bgColor={ nestedBlockBgColor }\n                          p={ 4 }\n                          borderRadius=\"md\"\n                          _first={{ borderTopRightRadius: 0, borderTopLeftRadius: 0 }}\n                        >\n                          <GridItem>View</GridItem>\n                          <GridItem>{ item.view }</GridItem>\n                          <GridItem>Signature</GridItem>\n                          <GridItem whiteSpace=\"pre-wrap\" wordBreak=\"break-word\" display=\"flex\" alignItems=\"flex-start\" columnGap={ 3 }>\n                            { item.signature }\n                            <CopyToClipboard text={ item.signature }/>\n                          </GridItem>\n                          <GridItem>Signers</GridItem>\n                          <GridItem >{ formatSigners(item.signers) }</GridItem>\n                          <GridItem whiteSpace=\"pre-wrap\">Proposed by validator</GridItem>\n                          <GridItem >{ item.proposed_by_validator_index }</GridItem>\n                        </Grid>\n                      )) }\n                    </AccordionPanel>\n                  </>\n                ) }\n              </AccordionItem>\n            </Accordion>\n          </>\n        ) }\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default React.memo(BlockDetailsZilliqaQuorumCertificate);\n","import { Grid, GridItem, Text, Link, Box, Tooltip } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport { capitalize } from 'es-toolkit';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { scroller, Element } from 'react-scroll';\n\nimport { ZKSYNC_L2_TX_BATCH_STATUSES } from 'types/api/zkSyncL2';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport getBlockReward from 'lib/block/getBlockReward';\nimport { GWEI, WEI, WEI_IN_GWEI, ZERO } from 'lib/consts';\nimport { space } from 'lib/html-entities';\nimport getNetworkValidationActionText from 'lib/networks/getNetworkValidationActionText';\nimport getNetworkValidatorTitle from 'lib/networks/getNetworkValidatorTitle';\nimport * as arbitrum from 'lib/rollups/arbitrum';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport { currencyUnits } from 'lib/units';\nimport OptimisticL2TxnBatchDA from 'ui/shared/batch/OptimisticL2TxnBatchDA';\nimport BlockGasUsed from 'ui/shared/block/BlockGasUsed';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BatchEntityL2 from 'ui/shared/entities/block/BatchEntityL2';\nimport BlockEntityL1 from 'ui/shared/entities/block/BlockEntityL1';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport PrevNext from 'ui/shared/PrevNext';\nimport RawDataSnippet from 'ui/shared/RawDataSnippet';\nimport StatusTag from 'ui/shared/statusTag/StatusTag';\nimport Utilization from 'ui/shared/Utilization/Utilization';\nimport VerificationSteps from 'ui/shared/verificationSteps/VerificationSteps';\nimport ZkSyncL2TxnBatchHashesInfo from 'ui/txnBatches/zkSyncL2/ZkSyncL2TxnBatchHashesInfo';\n\nimport BlockDetailsBaseFeeCelo from './details/BlockDetailsBaseFeeCelo';\nimport BlockDetailsBlobInfo from './details/BlockDetailsBlobInfo';\nimport BlockDetailsZilliqaQuorumCertificate from './details/BlockDetailsZilliqaQuorumCertificate';\nimport type { BlockQuery } from './useBlockQuery';\n\ninterface Props {\n  query: BlockQuery;\n}\n\nconst rollupFeature = config.features.rollup;\n\nconst BlockDetails = ({ query }: Props) => {\n  const [ isExpanded, setIsExpanded ] = React.useState(false);\n  const router = useRouter();\n  const heightOrHash = getQueryParamString(router.query.height_or_hash);\n\n  const { data, isPlaceholderData } = query;\n\n  const handleCutClick = React.useCallback(() => {\n    setIsExpanded((flag) => !flag);\n    scroller.scrollTo('BlockDetails__cutLink', {\n      duration: 500,\n      smooth: true,\n    });\n  }, []);\n\n  const handlePrevNextClick = React.useCallback((direction: 'prev' | 'next') => {\n    if (!data) {\n      return;\n    }\n\n    const increment = direction === 'next' ? +1 : -1;\n    const nextId = String(data.height + increment);\n\n    router.push({ pathname: '/block/[height_or_hash]', query: { height_or_hash: nextId } }, undefined);\n  }, [ data, router ]);\n\n  if (!data) {\n    return null;\n  }\n\n  const { totalReward, staticReward, burntFees, txFees } = getBlockReward(data);\n\n  const validatorTitle = getNetworkValidatorTitle();\n\n  const rewardBreakDown = (() => {\n    if (rollupFeature.isEnabled || totalReward.isEqualTo(ZERO) || txFees.isEqualTo(ZERO) || burntFees.isEqualTo(ZERO)) {\n      return null;\n    }\n\n    if (isPlaceholderData) {\n      return <Skeleton w=\"525px\" h=\"20px\"/>;\n    }\n\n    return (\n      <Text variant=\"secondary\" whiteSpace=\"break-spaces\">\n        <Tooltip label=\"Static block reward\">\n          <span>{ staticReward.dividedBy(WEI).toFixed() }</span>\n        </Tooltip>\n        { !txFees.isEqualTo(ZERO) && (\n          <>\n            { space }+{ space }\n            <Tooltip label=\"Txn fees\">\n              <span>{ txFees.dividedBy(WEI).toFixed() }</span>\n            </Tooltip>\n          </>\n        ) }\n        { !burntFees.isEqualTo(ZERO) && (\n          <>\n            { space }-{ space }\n            <Tooltip label=\"Burnt fees\">\n              <span>{ burntFees.dividedBy(WEI).toFixed() }</span>\n            </Tooltip>\n          </>\n        ) }\n      </Text>\n    );\n  })();\n\n  const verificationTitle = `${ capitalize(getNetworkValidationActionText()) } by`;\n\n  const txsNum = (() => {\n    const blockTxsNum = (\n      <LinkInternal href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: heightOrHash, tab: 'txs' } }) }>\n        { data.transaction_count } txn{ data.transaction_count === 1 ? '' : 's' }\n      </LinkInternal>\n    );\n\n    const blockBlobTxsNum = (config.features.dataAvailability.isEnabled && data.blob_transaction_count) ? (\n      <>\n        <span> including </span>\n        <LinkInternal href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: heightOrHash, tab: 'blob_txs' } }) }>\n          { data.blob_transaction_count } blob txn{ data.blob_transaction_count === 1 ? '' : 's' }\n        </LinkInternal>\n      </>\n    ) : null;\n\n    return (\n      <>\n        { blockTxsNum }\n        { blockBlobTxsNum }\n        <span> in this block</span>\n      </>\n    );\n  })();\n\n  const blockTypeLabel = (() => {\n    switch (data.type) {\n      case 'reorg':\n        return 'Reorg';\n      case 'uncle':\n        return 'Uncle';\n      default:\n        return 'Block';\n    }\n  })();\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      <DetailsInfoItem.Label\n        hint=\"The block height of a particular block is defined as the number of blocks preceding it in the blockchain\"\n        isLoading={ isPlaceholderData }\n      >\n        { blockTypeLabel } height\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.height }\n        </Skeleton>\n        { data.height === 0 && <Text whiteSpace=\"pre\"> - Genesis Block</Text> }\n        <PrevNext\n          ml={ 6 }\n          onClick={ handlePrevNextClick }\n          prevLabel=\"View previous block\"\n          nextLabel=\"View next block\"\n          isPrevDisabled={ data.height === 0 }\n          isLoading={ isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n\n      { rollupFeature.isEnabled && rollupFeature.type === 'arbitrum' && data.arbitrum && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"The most recent L1 block height as of this L2 block\"\n            isLoading={ isPlaceholderData }\n          >\n            L1 block height\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <BlockEntityL1 isLoading={ isPlaceholderData } number={ data.arbitrum.l1_block_height }/>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { rollupFeature.isEnabled && rollupFeature.type === 'arbitrum' && data.arbitrum && !config.UI.views.block.hiddenFields?.batch && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Batch number\"\n            isLoading={ isPlaceholderData }\n          >\n            Batch\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            { data.arbitrum.batch_number ?\n              <BatchEntityL2 isLoading={ isPlaceholderData } number={ data.arbitrum.batch_number }/> :\n              <Skeleton isLoaded={ !isPlaceholderData }>Pending</Skeleton> }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { rollupFeature.isEnabled && rollupFeature.type === 'optimistic' && data.optimism && !config.UI.views.block.hiddenFields?.batch && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Batch number\"\n            isLoading={ isPlaceholderData }\n          >\n            Batch\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value columnGap={ 3 }>\n            { data.optimism.internal_id ?\n              <BatchEntityL2 isLoading={ isPlaceholderData } number={ data.optimism.internal_id }/> :\n              <Skeleton isLoaded={ !isPlaceholderData }>Pending</Skeleton> }\n            { data.optimism.batch_data_container && (\n              <OptimisticL2TxnBatchDA\n                container={ data.optimism.batch_data_container }\n                isLoading={ isPlaceholderData }\n              />\n            ) }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      <DetailsInfoItem.Label\n        hint=\"Size of the block in bytes\"\n        isLoading={ isPlaceholderData }\n      >\n        Size\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { data.size.toLocaleString() }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Date & time at which block was produced.\"\n        isLoading={ isPlaceholderData }\n      >\n        Timestamp\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <DetailsTimestamp timestamp={ data.timestamp } isLoading={ isPlaceholderData }/>\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"The number of transactions in the block\"\n        isLoading={ isPlaceholderData }\n      >\n        Transactions\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { txsNum }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      { config.features.beaconChain.isEnabled && Boolean(data.withdrawals_count) && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"The number of beacon withdrawals in the block\"\n            isLoading={ isPlaceholderData }\n          >\n            Withdrawals\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !isPlaceholderData }>\n              <LinkInternal href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: heightOrHash, tab: 'withdrawals' } }) }>\n                { data.withdrawals_count } withdrawal{ data.withdrawals_count === 1 ? '' : 's' }\n              </LinkInternal>\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { rollupFeature.isEnabled && rollupFeature.type === 'zkSync' && data.zksync && !config.UI.views.block.hiddenFields?.batch && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Batch number\"\n            isLoading={ isPlaceholderData }\n          >\n            Batch\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            { data.zksync.batch_number ?\n              <BatchEntityL2 isLoading={ isPlaceholderData } number={ data.zksync.batch_number }/> :\n              <Skeleton isLoaded={ !isPlaceholderData }>Pending</Skeleton> }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { !config.UI.views.block.hiddenFields?.L1_status && rollupFeature.isEnabled &&\n        ((rollupFeature.type === 'zkSync' && data.zksync) || (rollupFeature.type === 'arbitrum' && data.arbitrum)) &&\n      (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Status is the short interpretation of the batch lifecycle\"\n            isLoading={ isPlaceholderData }\n          >\n            Status\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            { rollupFeature.type === 'zkSync' && data.zksync &&\n              <VerificationSteps steps={ ZKSYNC_L2_TX_BATCH_STATUSES } currentStep={ data.zksync.status } isLoading={ isPlaceholderData }/> }\n            { rollupFeature.type === 'arbitrum' && data.arbitrum && (\n              <VerificationSteps\n                steps={ arbitrum.verificationSteps }\n                currentStep={ arbitrum.VERIFICATION_STEPS_MAP[data.arbitrum.status] }\n                currentStepPending={ arbitrum.getVerificationStepStatus(data.arbitrum) === 'pending' }\n                isLoading={ isPlaceholderData }\n              />\n            ) }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { !config.UI.views.block.hiddenFields?.miner && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"A block producer who successfully included the block onto the blockchain\"\n            isLoading={ isPlaceholderData }\n          >\n            { verificationTitle }\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <AddressEntity\n              address={ data.miner }\n              isLoading={ isPlaceholderData }\n            />\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { rollupFeature.isEnabled && rollupFeature.type === 'arbitrum' &&\n        (data.arbitrum?.commitment_transaction.hash || data.arbitrum?.confirmation_transaction.hash) &&\n      (\n        <>\n          <DetailsInfoItemDivider/>\n          { data.arbitrum?.commitment_transaction.hash && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"L1 transaction containing this batch commitment\"\n                isLoading={ isPlaceholderData }\n              >\n                Commitment tx\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                <TxEntityL1 hash={ data.arbitrum?.commitment_transaction.hash } isLoading={ isPlaceholderData }/>\n                { data.arbitrum?.commitment_transaction.status === 'finalized' && <StatusTag type=\"ok\" text=\"Finalized\" ml={ 2 }/> }\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n          { data.arbitrum?.confirmation_transaction.hash && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"L1 transaction containing confirmation of this batch\"\n                isLoading={ isPlaceholderData }\n              >\n                Confirmation tx\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                <TxEntityL1 hash={ data.arbitrum?.confirmation_transaction.hash } isLoading={ isPlaceholderData }/>\n                { data.arbitrum?.commitment_transaction.status === 'finalized' && <StatusTag type=\"ok\" text=\"Finalized\" ml={ 2 }/> }\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n        </>\n      ) }\n\n      { !rollupFeature.isEnabled && !totalReward.isEqualTo(ZERO) && !config.UI.views.block.hiddenFields?.total_reward && (\n        <>\n          <DetailsInfoItem.Label\n            hint={\n              `For each block, the ${ validatorTitle } is rewarded with a finite amount of ${ config.chain.currency.symbol || 'native token' } \n          on top of the fees paid for all transactions in the block`\n            }\n            isLoading={ isPlaceholderData }\n          >\n            Block reward\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value columnGap={ 1 }>\n            <Skeleton isLoaded={ !isPlaceholderData }>\n              { totalReward.dividedBy(WEI).toFixed() } { currencyUnits.ether }\n            </Skeleton>\n            { rewardBreakDown }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { data.rewards\n        ?.filter(({ type }) => type !== 'Validator Reward' && type !== 'Miner Reward')\n        .map(({ type, reward }) => (\n          <React.Fragment key={ type }>\n            <DetailsInfoItem.Label\n              hint={ `Amount of distributed reward. ${ capitalize(validatorTitle) }s receive a static block reward + Tx fees + uncle fees` }\n            >\n              { type }\n            </DetailsInfoItem.Label>\n            <DetailsInfoItem.Value>\n              { BigNumber(reward).dividedBy(WEI).toFixed() } { currencyUnits.ether }\n            </DetailsInfoItem.Value>\n          </React.Fragment>\n        ))\n      }\n\n      { typeof data.zilliqa?.view === 'number' && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"The iteration of the consensus round in which the block was proposed\"\n            isLoading={ isPlaceholderData }\n          >\n            View\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !isPlaceholderData }>\n              { data.zilliqa.view }\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      <DetailsInfoItemDivider/>\n\n      { data.celo?.base_fee && <BlockDetailsBaseFeeCelo data={ data.celo.base_fee }/> }\n\n      <DetailsInfoItem.Label\n        hint=\"The total gas amount used in the block and its percentage of gas filled in the block\"\n        isLoading={ isPlaceholderData }\n      >\n        Gas used\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { BigNumber(data.gas_used || 0).toFormat() }\n        </Skeleton>\n        <BlockGasUsed\n          gasUsed={ data.gas_used }\n          gasLimit={ data.gas_limit }\n          isLoading={ isPlaceholderData }\n          ml={ 4 }\n          gasTarget={ data.gas_target_percentage }\n        />\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Total gas limit provided by all transactions in the block\"\n        isLoading={ isPlaceholderData }\n      >\n        Gas limit\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !isPlaceholderData }>\n          { BigNumber(data.gas_limit).toFormat() }\n        </Skeleton>\n      </DetailsInfoItem.Value>\n\n      { data.minimum_gas_price && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"The minimum gas price a transaction should have in order to be included in this block\"\n            isLoading={ isPlaceholderData }\n          >\n            Minimum gas price\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !isPlaceholderData }>\n              { BigNumber(data.minimum_gas_price).dividedBy(GWEI).toFormat() } { currencyUnits.gwei }\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { data.base_fee_per_gas && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Minimum fee required per unit of gas. Fee adjusts based on network congestion\"\n            isLoading={ isPlaceholderData }\n          >\n            Base fee per gas\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            { isPlaceholderData ? (\n              <Skeleton isLoaded={ !isPlaceholderData } h=\"20px\" maxW=\"380px\" w=\"100%\"/>\n            ) : (\n              <>\n                <Text>{ BigNumber(data.base_fee_per_gas).dividedBy(WEI).toFixed() } { currencyUnits.ether } </Text>\n                <Text variant=\"secondary\" whiteSpace=\"pre\">\n                  { space }({ BigNumber(data.base_fee_per_gas).dividedBy(WEI_IN_GWEI).toFixed() } { currencyUnits.gwei })\n                </Text>\n              </>\n            ) }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { !config.UI.views.block.hiddenFields?.burnt_fees && !burntFees.isEqualTo(ZERO) && (\n        <>\n          <DetailsInfoItem.Label\n            hint={\n              `Amount of ${ config.chain.currency.symbol || 'native token' } burned from transactions included in the block. \n              Equals Block Base Fee per Gas * Gas Used`\n            }\n            isLoading={ isPlaceholderData }\n          >\n            Burnt fees\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <IconSvg name=\"flame\" boxSize={ 5 } color=\"gray.500\" isLoading={ isPlaceholderData }/>\n            <Skeleton isLoaded={ !isPlaceholderData } ml={ 2 }>\n              { burntFees.dividedBy(WEI).toFixed() } { currencyUnits.ether }\n            </Skeleton>\n            { !txFees.isEqualTo(ZERO) && (\n              <Tooltip label=\"Burnt fees / Txn fees * 100%\">\n                <Box>\n                  <Utilization\n                    ml={ 4 }\n                    value={ burntFees.dividedBy(txFees).toNumber() }\n                    isLoading={ isPlaceholderData }\n                  />\n                </Box>\n              </Tooltip>\n            ) }\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { data.priority_fee !== null && BigNumber(data.priority_fee).gt(ZERO) && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"User-defined tips sent to validator for transaction priority/inclusion\"\n            isLoading={ isPlaceholderData }\n          >\n            Priority fee / Tip\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Skeleton isLoaded={ !isPlaceholderData }>\n              { BigNumber(data.priority_fee).dividedBy(WEI).toFixed() } { currencyUnits.ether }\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n\n      { /* CUT */ }\n      <GridItem colSpan={{ base: undefined, lg: 2 }}>\n        <Element name=\"BlockDetails__cutLink\">\n          <Skeleton isLoaded={ !isPlaceholderData } mt={ 6 } display=\"inline-block\">\n            <Link\n              fontSize=\"sm\"\n              textDecorationLine=\"underline\"\n              textDecorationStyle=\"dashed\"\n              onClick={ handleCutClick }\n            >\n              { isExpanded ? 'Hide details' : 'View details' }\n            </Link>\n          </Skeleton>\n        </Element>\n      </GridItem>\n\n      { /* ADDITIONAL INFO */ }\n      { isExpanded && !isPlaceholderData && (\n        <>\n          <GridItem colSpan={{ base: undefined, lg: 2 }} mt={{ base: 1, lg: 4 }}/>\n\n          { rollupFeature.isEnabled && rollupFeature.type === 'zkSync' && data.zksync &&\n            <ZkSyncL2TxnBatchHashesInfo data={ data.zksync } isLoading={ isPlaceholderData }/> }\n\n          { !isPlaceholderData && <BlockDetailsBlobInfo data={ data }/> }\n\n          { data.bitcoin_merged_mining_header && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Merged-mining field: Bitcoin header\"\n              >\n                Bitcoin merged mining header\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value\n                flexWrap=\"nowrap\"\n                alignSelf=\"flex-start\"\n              >\n                <Box whiteSpace=\"nowrap\" overflow=\"hidden\">\n                  <HashStringShortenDynamic hash={ data.bitcoin_merged_mining_header }/>\n                </Box>\n                <CopyToClipboard text={ data.bitcoin_merged_mining_header }/>\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          { data.bitcoin_merged_mining_coinbase_transaction && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Merged-mining field: Coinbase transaction\"\n              >\n                Bitcoin merged mining coinbase transaction\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                <RawDataSnippet\n                  data={ data.bitcoin_merged_mining_coinbase_transaction }\n                  isLoading={ isPlaceholderData }\n                  showCopy={ false }\n                  textareaMaxHeight=\"100px\"\n                />\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          { data.bitcoin_merged_mining_merkle_proof && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Merged-mining field: Merkle proof\"\n              >\n                Bitcoin merged mining Merkle proof\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                <RawDataSnippet\n                  data={ data.bitcoin_merged_mining_merkle_proof }\n                  isLoading={ isPlaceholderData }\n                  showCopy={ false }\n                  textareaMaxHeight=\"100px\"\n                />\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          { data.hash_for_merged_mining && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Merged-mining field: Rootstock block header hash\"\n              >\n                Hash for merged mining\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value\n                flexWrap=\"nowrap\"\n                alignSelf=\"flex-start\"\n              >\n                <Box whiteSpace=\"nowrap\" overflow=\"hidden\">\n                  <HashStringShortenDynamic hash={ data.hash_for_merged_mining }/>\n                </Box>\n                <CopyToClipboard text={ data.hash_for_merged_mining }/>\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          <DetailsInfoItem.Label\n            hint={ `Block difficulty for ${ validatorTitle }, used to calibrate block generation time` }\n          >\n            Difficulty\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value overflow=\"hidden\">\n            <HashStringShortenDynamic hash={ BigNumber(data.difficulty).toFormat() }/>\n          </DetailsInfoItem.Value>\n\n          { data.total_difficulty && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Total difficulty of the chain until this block\"\n              >\n                Total difficulty\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value overflow=\"hidden\">\n                <HashStringShortenDynamic hash={ BigNumber(data.total_difficulty).toFormat() }/>\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          <DetailsInfoItemDivider/>\n\n          <DetailsInfoItem.Label\n            hint=\"The SHA256 hash of the block\"\n          >\n            Hash\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value flexWrap=\"nowrap\">\n            <Box overflow=\"hidden\" >\n              <HashStringShortenDynamic hash={ data.hash }/>\n            </Box>\n            <CopyToClipboard text={ data.hash }/>\n          </DetailsInfoItem.Value>\n\n          { data.height > 0 && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"The hash of the block from which this block was generated\"\n              >\n                Parent hash\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value flexWrap=\"nowrap\">\n                <LinkInternal\n                  href={ route({ pathname: '/block/[height_or_hash]', query: { height_or_hash: String(data.height - 1) } }) }\n                  overflow=\"hidden\"\n                  whiteSpace=\"nowrap\"\n                >\n                  <HashStringShortenDynamic\n                    hash={ data.parent_hash }\n                  />\n                </LinkInternal>\n                <CopyToClipboard text={ data.parent_hash }/>\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          { rollupFeature.isEnabled && rollupFeature.type === 'arbitrum' && data.arbitrum && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"The cumulative number of L2 to L1 transactions as of this block\"\n                isLoading={ isPlaceholderData }\n              >\n                Send count\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                { data.arbitrum.send_count.toLocaleString() }\n              </DetailsInfoItem.Value>\n\n              <DetailsInfoItem.Label\n                hint=\"The root of the Merkle accumulator representing all L2 to L1 transactions as of this block\"\n                isLoading={ isPlaceholderData }\n              >\n                Send root\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                { data.arbitrum.send_root }\n              </DetailsInfoItem.Value>\n\n              <DetailsInfoItem.Label\n                hint=\"The number of delayed L1 to L2 messages read as of this block\"\n                isLoading={ isPlaceholderData }\n              >\n                Delayed messages\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                { data.arbitrum.delayed_messages.toLocaleString() }\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          { !config.UI.views.block.hiddenFields?.nonce && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Block nonce is a value used during mining to demonstrate proof of work for a block\"\n              >\n                Nonce\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                { data.nonce }\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          { data.zilliqa && (\n            <>\n              <DetailsInfoItemDivider/>\n              <BlockDetailsZilliqaQuorumCertificate data={ data.zilliqa?.quorum_certificate }/>\n              { data.zilliqa?.aggregate_quorum_certificate && (\n                <>\n                  <GridItem colSpan={{ base: undefined, lg: 2 }} mt={{ base: 1, lg: 2 }}/>\n                  <BlockDetailsZilliqaQuorumCertificate data={ data.zilliqa?.aggregate_quorum_certificate }/>\n                </>\n              ) }\n            </>\n          ) }\n        </>\n      ) }\n    </Grid>\n  );\n};\n\nexport default BlockDetails;\n","// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior()\n      },\n      notifyOptions\n    );\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const parentResult = super.createResult(query, options);\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult;\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction;\n    const isFetchNextPageError = isError && fetchDirection === \"forward\";\n    const isFetchingNextPage = isFetching && fetchDirection === \"forward\";\n    const isFetchPreviousPageError = isError && fetchDirection === \"backward\";\n    const isFetchingPreviousPage = isFetching && fetchDirection === \"backward\";\n    const result = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError: isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n    return result;\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","import type { InfiniteData, QueryKey, UseInfiniteQueryResult, UseInfiniteQueryOptions } from '@tanstack/react-query';\nimport { useInfiniteQuery } from '@tanstack/react-query';\n\nimport type { PaginatedResources, ResourceError, ResourcePayload } from 'lib/api/resources';\nimport useApiFetch from 'lib/api/useApiFetch';\nimport type { Params as ApiFetchParams } from 'lib/api/useApiFetch';\n\nimport { getResourceKey } from './useApiQuery';\n\ntype TQueryData<R extends PaginatedResources> = ResourcePayload<R>;\ntype TError = ResourceError<unknown>;\ntype TPageParam<R extends PaginatedResources> = ApiFetchParams<R>['queryParams'] | null;\n\nexport interface Params<R extends PaginatedResources> {\n  resourceName: R;\n  // eslint-disable-next-line max-len\n  queryOptions?: Omit<UseInfiniteQueryOptions<TQueryData<R>, TError, InfiniteData<TQueryData<R>>, TQueryData<R>, QueryKey, TPageParam<R>>, 'queryKey' | 'queryFn' | 'getNextPageParam' | 'initialPageParam'>;\n  pathParams?: ApiFetchParams<R>['pathParams'];\n}\n\ntype ReturnType<Resource extends PaginatedResources> = UseInfiniteQueryResult<InfiniteData<ResourcePayload<Resource>>, ResourceError<unknown>>;\n\nexport default function useApiInfiniteQuery<R extends PaginatedResources>({\n  resourceName,\n  queryOptions,\n  pathParams,\n}: Params<R>): ReturnType<R> {\n  const apiFetch = useApiFetch();\n\n  return useInfiniteQuery<TQueryData<R>, TError, InfiniteData<TQueryData<R>>, QueryKey, TPageParam<R>>({\n    queryKey: getResourceKey(resourceName, { pathParams }),\n    queryFn: (context) => {\n      const queryParams = 'pageParam' in context ? (context.pageParam || undefined) : undefined;\n      return apiFetch(resourceName, { pathParams, queryParams }) as Promise<TQueryData<R>>;\n    },\n    initialPageParam: null,\n    getNextPageParam: (lastPage) => {\n\n      // @ts-ignore-next-line\n      return lastPage.next_page_params as TPageParam<R>;\n    },\n    ...queryOptions,\n  });\n}\n","import type { InfiniteData, UseInfiniteQueryResult } from '@tanstack/react-query';\nimport React from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nimport type { PaginatedResources, ResourceError, ResourcePayload } from 'lib/api/resources';\nimport type { Params as ApiInfiniteQueryParams } from 'lib/api/useApiInfiniteQuery';\nimport useApiInfiniteQuery from 'lib/api/useApiInfiniteQuery';\n\ninterface Params<Resource extends PaginatedResources> extends ApiInfiniteQueryParams<Resource> {\n  rootRef: React.RefObject<HTMLElement>;\n}\n\ninterface ReturnType<Resource extends PaginatedResources> {\n  cutRef: (node?: Element | null) => void;\n  query: UseInfiniteQueryResult<InfiniteData<ResourcePayload<Resource>>, ResourceError<unknown>>;\n}\n\nexport default function useLazyLoadedList<Resource extends PaginatedResources>({\n  rootRef,\n  resourceName,\n  queryOptions,\n  pathParams,\n}: Params<Resource>): ReturnType<Resource> {\n  const query = useApiInfiniteQuery({\n    resourceName,\n    pathParams,\n    queryOptions,\n  });\n\n  const { ref, inView } = useInView({\n    root: rootRef.current,\n    triggerOnce: false,\n    skip: queryOptions?.enabled === false || query.isFetchingNextPage || !query.hasNextPage,\n  });\n\n  React.useEffect(() => {\n    if (inView) {\n      query.fetchNextPage();\n    }\n    // should run only on inView state change\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ inView ]);\n\n  return { cutRef: ref, query };\n}\n","import type { BlockEpoch } from 'types/api/block';\n\nexport function getRewardNumText(type: keyof BlockEpoch['aggregated_election_rewards'], num: number) {\n  const postfix1 = num !== 1 ? 's' : '';\n  const postfix2 = num !== 1 ? 'es' : '';\n\n  const text = (() => {\n    switch (type) {\n      case 'delegated_payment':\n        return 'payment' + postfix1;\n      case 'group':\n        return 'group reward' + postfix1;\n      case 'validator':\n        return 'validator' + postfix1;\n      case 'voter':\n        return 'voting address' + postfix2;\n      default:\n        return '';\n    }\n  })();\n\n  if (!text) {\n    return '';\n  }\n\n  return `${ num } ${ text }`;\n}\n\nexport function getRewardDetailsTableTitles(type: keyof BlockEpoch['aggregated_election_rewards']): [string, string] {\n  switch (type) {\n    case 'delegated_payment':\n      return [ 'Beneficiary', 'Validator' ];\n    case 'group':\n      return [ 'Validator group', 'Associated validator' ];\n    case 'validator':\n      return [ 'Validator', 'Validator group' ];\n    case 'voter':\n      return [ 'Voter', 'Validator group' ];\n  }\n}\n\nexport function formatRewardType(type: keyof BlockEpoch['aggregated_election_rewards']) {\n  return type.replaceAll('_', '-');\n}\n","import { Box, Flex, Text, useColorModeValue } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { BlockEpoch } from 'types/api/block';\nimport type { TokenInfo } from 'types/api/token';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport ContentLoader from 'ui/shared/ContentLoader';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport useLazyLoadedList from 'ui/shared/pagination/useLazyLoadedList';\n\nimport { formatRewardType } from './utils';\n\ninterface Props {\n  type: keyof BlockEpoch['aggregated_election_rewards'];\n  token: TokenInfo;\n}\n\nconst BlockEpochElectionRewardDetailsMobile = ({ type, token }: Props) => {\n  const rootRef = React.useRef<HTMLDivElement>(null);\n\n  const router = useRouter();\n  const heightOrHash = getQueryParamString(router.query.height_or_hash);\n\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  const { cutRef, query } = useLazyLoadedList({\n    rootRef,\n    resourceName: 'block_election_rewards',\n    pathParams: { height_or_hash: heightOrHash, reward_type: formatRewardType(type) },\n    queryOptions: {\n      refetchOnMount: false,\n    },\n  });\n\n  return (\n    <Flex flexDir=\"column\" rowGap={ 3 } p={ 4 } bgColor={ bgColor } borderRadius=\"base\" maxH=\"360px\" overflowY=\"scroll\">\n\n      { query.data?.pages\n        .map((page) => page.items)\n        .flat()\n        .map((item, index) => {\n\n          const amount = getCurrencyValue({\n            value: item.amount,\n            decimals: token.decimals,\n          });\n\n          return (\n            <Flex key={ index } flexDir=\"column\" alignItems=\"flex-start\" rowGap={ 1 } fontWeight={ 400 }>\n              <AddressEntity address={ item.account } noIcon w=\"100%\"/>\n              <Flex columnGap={ 1 } alignItems=\"center\">\n                <Box flexShrink={ 0 } color=\"text_secondary\">got</Box>\n                <Box>{ amount.valueStr }</Box>\n                <TokenEntity token={ token } noIcon onlySymbol w=\"auto\"/>\n              </Flex>\n              <Flex columnGap={ 1 } alignItems=\"center\" w=\"100%\">\n                <Box flexShrink={ 0 } color=\"text_secondary\">on behalf of</Box>\n                <AddressEntity address={ item.associated_account } noIcon/>\n              </Flex>\n            </Flex>\n          );\n        }) }\n\n      { query.isFetching && <ContentLoader maxW=\"200px\" mt={ 3 }/> }\n\n      { query.isError && <Text color=\"error\" mt={ 3 }>Something went wrong. Unable to load next page.</Text> }\n\n      <Box h=\"0\" w=\"100px\" mt=\"-12px\" ref={ cutRef }/>\n    </Flex>\n  );\n};\n\nexport default React.memo(BlockEpochElectionRewardDetailsMobile);\n","import { Box, Flex, IconButton, useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { BlockEpoch, BlockEpochElectionReward } from 'types/api/block';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport EpochRewardTypeTag from 'ui/shared/EpochRewardTypeTag';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport BlockEpochElectionRewardDetailsMobile from './BlockEpochElectionRewardDetailsMobile';\n\ninterface Props {\n  data: BlockEpochElectionReward;\n  type: keyof BlockEpoch['aggregated_election_rewards'];\n  isLoading?: boolean;\n}\n\nconst BlockEpochElectionRewardsListItem = ({ data, isLoading, type }: Props) => {\n  const section = useDisclosure();\n\n  const { valueStr } = getCurrencyValue({\n    value: data.total,\n    decimals: data.token.decimals,\n    accuracy: 2,\n  });\n\n  return (\n    <Box\n      py={ 3 }\n      borderBottomWidth=\"1px\"\n      borderColor=\"divider\"\n      fontSize=\"sm\"\n      onClick={ isLoading || !data.count ? undefined : section.onToggle }\n      cursor={ isLoading || !data.count ? undefined : 'pointer' }\n    >\n      <Flex my=\"3px\" columnGap={ 3 } alignItems=\"center\" flexWrap=\"wrap\" rowGap={ 2 }>\n        { data.count ? (\n          <Skeleton isLoaded={ !isLoading } display=\"flex\" borderRadius=\"sm\">\n            <IconButton\n              aria-label={ section.isOpen ? 'Collapse section' : 'Expand section' }\n              variant=\"link\"\n              boxSize={ 6 }\n              flexShrink={ 0 }\n              icon={ (\n                <IconSvg\n                  name=\"arrows/east-mini\"\n                  boxSize={ 6 }\n                  transform={ section.isOpen ? 'rotate(270deg)' : 'rotate(180deg)' }\n                  transitionDuration=\"faster\"\n                />\n              ) }\n            />\n          </Skeleton>\n        ) : <Box boxSize={ 6 }/> }\n        <EpochRewardTypeTag type={ type } isLoading={ isLoading }/>\n        <Skeleton isLoaded={ !isLoading }>{ data.count }</Skeleton>\n        <Flex columnGap={ 2 } alignItems=\"center\" ml={{ base: 9, lg: 'auto' }} w={{ base: '100%', lg: 'fit-content' }} fontWeight={ 500 }>\n          <Skeleton isLoaded={ !isLoading }>{ valueStr }</Skeleton>\n          <TokenEntity\n            token={ data.token }\n            noCopy\n            onlySymbol\n            w=\"auto\"\n            isLoading={ isLoading }\n          />\n        </Flex>\n      </Flex>\n      { section.isOpen && (\n        <Box mt={ 2 }>\n          <BlockEpochElectionRewardDetailsMobile type={ type } token={ data.token }/>\n        </Box>\n      ) }\n    </Box>\n  );\n};\n\nexport default React.memo(BlockEpochElectionRewardsListItem);\n","import { Box, Grid, GridItem, Text, useColorModeValue } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { BlockEpoch } from 'types/api/block';\nimport type { TokenInfo } from 'types/api/token';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport ContentLoader from 'ui/shared/ContentLoader';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport useLazyLoadedList from 'ui/shared/pagination/useLazyLoadedList';\n\nimport { formatRewardType, getRewardDetailsTableTitles } from './utils';\n\ninterface Props {\n  type: keyof BlockEpoch['aggregated_election_rewards'];\n  token: TokenInfo;\n}\n\nconst BlockEpochElectionRewardDetailsDesktop = ({ type, token }: Props) => {\n  const rootRef = React.useRef<HTMLDivElement>(null);\n\n  const router = useRouter();\n  const heightOrHash = getQueryParamString(router.query.height_or_hash);\n\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  const { cutRef, query } = useLazyLoadedList({\n    rootRef,\n    resourceName: 'block_election_rewards',\n    pathParams: { height_or_hash: heightOrHash, reward_type: formatRewardType(type) },\n    queryOptions: {\n      refetchOnMount: false,\n    },\n  });\n\n  const titles = getRewardDetailsTableTitles(type);\n\n  return (\n    <Box\n      p={ 4 }\n      bgColor={ bgColor }\n      borderRadius=\"base\"\n      maxH=\"360px\"\n      overflowY=\"scroll\"\n      fontWeight={ 400 }\n      lineHeight={ 5 }\n    >\n      { query.data && (\n        <Grid\n          gridTemplateColumns=\"min-content min-content min-content\"\n          rowGap={ 5 }\n          columnGap={ 5 }\n        >\n          <GridItem fontWeight={ 600 } mb={ 1 } whiteSpace=\"nowrap\">\n            { titles[0] }\n          </GridItem>\n          <GridItem fontWeight={ 600 } mb={ 1 } whiteSpace=\"nowrap\" textAlign=\"right\">\n            Amount { token.symbol }\n          </GridItem>\n          <GridItem fontWeight={ 600 } mb={ 1 } whiteSpace=\"nowrap\">\n            { titles[1] }\n          </GridItem>\n\n          { query.data?.pages\n            .map((page) => page.items)\n            .flat()\n            .map((item, index) => {\n\n              const amount = getCurrencyValue({\n                value: item.amount,\n                decimals: token.decimals,\n              });\n\n              return (\n                <React.Fragment key={ index }>\n                  <GridItem>\n                    <AddressEntity address={ item.account } noIcon truncation=\"constant\"/>\n                  </GridItem>\n                  <GridItem textAlign=\"right\">\n                    { amount.valueStr }\n                  </GridItem>\n                  <GridItem>\n                    <AddressEntity address={ item.associated_account } noIcon truncation=\"constant\"/>\n                  </GridItem>\n                </React.Fragment>\n              );\n            }) }\n        </Grid>\n      ) }\n\n      { query.isFetching && <ContentLoader maxW=\"200px\" mt={ 3 }/> }\n\n      { query.isError && <Text color=\"error\" mt={ 3 }>Something went wrong. Unable to load next page.</Text> }\n\n      <Box h=\"0\" w=\"100px\" ref={ cutRef }/>\n    </Box>\n  );\n};\n\nexport default React.memo(BlockEpochElectionRewardDetailsDesktop);\n","import { Flex, IconButton, Td, Tr, useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { BlockEpoch, BlockEpochElectionReward } from 'types/api/block';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport EpochRewardTypeTag from 'ui/shared/EpochRewardTypeTag';\nimport IconSvg from 'ui/shared/IconSvg';\n\nimport BlockEpochElectionRewardDetailsDesktop from './BlockEpochElectionRewardDetailsDesktop';\nimport { getRewardNumText } from './utils';\n\ninterface Props {\n  data: BlockEpochElectionReward;\n  type: keyof BlockEpoch['aggregated_election_rewards'];\n  isLoading?: boolean;\n}\n\nconst BlockEpochElectionRewardsTableItem = ({ isLoading, data, type }: Props) => {\n  const section = useDisclosure();\n\n  const { valueStr } = getCurrencyValue({\n    value: data.total,\n    decimals: data.token.decimals,\n  });\n\n  const mainRowBorderColor = section.isOpen ? 'transparent' : 'divider';\n\n  return (\n    <>\n      <Tr\n        onClick={ isLoading || !data.count ? undefined : section.onToggle }\n        cursor={ isLoading || !data.count ? undefined : 'pointer' }\n      >\n        <Td borderColor={ mainRowBorderColor }>\n          { Boolean(data.count) && (\n            <Skeleton isLoaded={ !isLoading } display=\"flex\" borderRadius=\"sm\">\n              <IconButton\n                aria-label={ section.isOpen ? 'Collapse section' : 'Expand section' }\n                variant=\"link\"\n                boxSize={ 6 }\n                flexShrink={ 0 }\n                icon={ (\n                  <IconSvg\n                    name=\"arrows/east-mini\"\n                    boxSize={ 6 }\n                    transform={ section.isOpen ? 'rotate(270deg)' : 'rotate(180deg)' }\n                    transitionDuration=\"faster\"\n                  />\n                ) }\n              />\n            </Skeleton>\n          ) }\n        </Td>\n        <Td borderColor={ mainRowBorderColor }>\n          <EpochRewardTypeTag type={ type } isLoading={ isLoading }/>\n        </Td>\n        <Td borderColor={ mainRowBorderColor }>\n          <Skeleton isLoaded={ !isLoading } fontWeight={ 400 } my={ 1 }>\n            { getRewardNumText(type, data.count) }\n          </Skeleton>\n        </Td>\n        <Td borderColor={ mainRowBorderColor }>\n          <Flex columnGap={ 2 } alignItems=\"center\" justifyContent=\"flex-end\" my=\"2px\">\n            <Skeleton isLoaded={ !isLoading }>{ valueStr }</Skeleton>\n            <TokenEntity\n              token={ data.token }\n              noCopy\n              onlySymbol\n              w=\"auto\"\n              isLoading={ isLoading }\n            />\n          </Flex>\n        </Td>\n      </Tr>\n      { section.isOpen && (\n        <Tr>\n          <Td/>\n          <Td colSpan={ 3 } pr={ 0 } pt={ 0 }>\n            <BlockEpochElectionRewardDetailsDesktop type={ type } token={ data.token }/>\n          </Td>\n        </Tr>\n      ) }\n    </>\n  );\n};\n\nexport default React.memo(BlockEpochElectionRewardsTableItem);\n","import { Box, Heading, Hide, Show, Table, Tbody, Th, Thead, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { BlockEpoch } from 'types/api/block';\n\nimport BlockEpochElectionRewardsListItem from './BlockEpochElectionRewardsListItem';\nimport BlockEpochElectionRewardsTableItem from './BlockEpochElectionRewardsTableItem';\n\ninterface Props {\n  data: BlockEpoch;\n  isLoading?: boolean;\n}\n\nconst BlockEpochElectionRewards = ({ data, isLoading }: Props) => {\n  return (\n    <Box mt={ 8 }>\n      <Heading as=\"h4\" size=\"sm\" mb={ 3 }>Election rewards</Heading>\n      <Hide below=\"lg\" ssr={ false }>\n        <Table style={{ tableLayout: 'auto' }}>\n          <Thead>\n            <Tr>\n              <Th width=\"24px\"/>\n              <Th width=\"180px\">Reward type</Th>\n              <Th/>\n              <Th isNumeric>Value</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            { Object.entries(data.aggregated_election_rewards).map((entry) => {\n              const key = entry[0] as keyof BlockEpoch['aggregated_election_rewards'];\n              const value = entry[1];\n\n              if (!value) {\n                return null;\n              }\n\n              return (\n                <BlockEpochElectionRewardsTableItem\n                  key={ key }\n                  type={ key }\n                  isLoading={ isLoading }\n                  data={ value }\n                />\n              );\n            }) }\n          </Tbody>\n        </Table>\n      </Hide>\n      <Show below=\"lg\" ssr={ false }>\n        { Object.entries(data.aggregated_election_rewards).map((entry) => {\n          const key = entry[0] as keyof BlockEpoch['aggregated_election_rewards'];\n          const value = entry[1];\n\n          if (!value) {\n            return null;\n          }\n\n          return (\n            <BlockEpochElectionRewardsListItem\n              key={ key }\n              type={ key }\n              isLoading={ isLoading }\n              data={ value }\n            />\n          );\n        }) }\n      </Show>\n    </Box>\n  );\n};\n\nexport default React.memo(BlockEpochElectionRewards);\n","import { Grid } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { BlockEpoch } from 'types/api/block';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport TokenTransferSnippet from 'ui/shared/TokenTransferSnippet/TokenTransferSnippet';\n\ninterface Props {\n  data: BlockEpoch;\n  isLoading?: boolean;\n}\n\nconst BlockEpochRewardsDistribution = ({ data, isLoading }: Props) => {\n  const isMobile = useIsMobile();\n\n  if (!data.distribution.community_transfer && !data.distribution.carbon_offsetting_transfer && !data.distribution.reserve_bolster_transfer) {\n    return null;\n  }\n\n  return (\n    <Grid\n      columnGap={ 8 }\n      rowGap={{ base: 3, lg: 3 }}\n      templateColumns={{ base: 'minmax(0, 1fr)', lg: 'minmax(min-content, 200px) minmax(0, 1fr)' }}\n      overflow=\"hidden\"\n    >\n      { data.distribution.community_transfer && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Funds allocation to support Celo projects and community initiatives\"\n            isLoading={ isLoading }\n          >\n            Community fund\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <TokenTransferSnippet data={ data.distribution.community_transfer } isLoading={ isLoading } noAddressIcons={ isMobile }/>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { data.distribution.carbon_offsetting_transfer && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Funds allocation to support projects that make Celo carbon-negative\"\n            isLoading={ isLoading }\n          >\n            Carbon offset fund\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <TokenTransferSnippet data={ data.distribution.carbon_offsetting_transfer } isLoading={ isLoading } noAddressIcons={ isMobile }/>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { data.distribution.reserve_bolster_transfer && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"Funds allocation to strengthen Celo’s reserve for network stability and security\"\n            isLoading={ isLoading }\n          >\n            Reserve bolster\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <TokenTransferSnippet data={ data.distribution.reserve_bolster_transfer } isLoading={ isLoading } noAddressIcons={ isMobile }/>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n    </Grid>\n  );\n};\n\nexport default React.memo(BlockEpochRewardsDistribution);\n","import React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { BLOCK_EPOCH } from 'stubs/block';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\n\nimport BlockEpochElectionRewards from './epochRewards/BlockEpochElectionRewards';\nimport BlockEpochRewardsDistribution from './epochRewards/BlockEpochRewardsDistribution';\n\ninterface Props {\n  heightOrHash: string;\n}\n\nconst BlockEpochRewards = ({ heightOrHash }: Props) => {\n  const query = useApiQuery('block_epoch', {\n    pathParams: {\n      height_or_hash: heightOrHash,\n    },\n    queryOptions: {\n      placeholderData: BLOCK_EPOCH,\n    },\n  });\n\n  if (query.isError) {\n    return <DataFetchAlert/>;\n  }\n\n  if (!query.data) {\n    return <span>No block epoch rewards data</span>;\n  }\n\n  return (\n    <>\n      <BlockEpochRewardsDistribution data={ query.data } isLoading={ query.isPlaceholderData }/>\n      <BlockEpochElectionRewards data={ query.data } isLoading={ query.isPlaceholderData }/>\n    </>\n  );\n};\n\nexport default React.memo(BlockEpochRewards);\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport useLazyRenderedList from 'lib/hooks/useLazyRenderedList';\n\nimport BeaconChainWithdrawalsListItem from './BeaconChainWithdrawalsListItem';\n\ntype Props = {\n  isLoading?: boolean;\n} & ({\n  items: Array<WithdrawalsItem>;\n  view: 'list';\n} | {\n  items: Array<AddressWithdrawalsItem>;\n  view: 'address';\n} | {\n  items: Array<BlockWithdrawalsItem>;\n  view: 'block';\n});\n\nconst WithdrawalsList = ({ items, view, isLoading }: Props) => {\n  const { cutRef, renderedItemsNum } = useLazyRenderedList(items, !isLoading);\n\n  return (\n    <Box>\n      { items.slice(0, renderedItemsNum).map((item, index) => {\n\n        const key = item.index + (isLoading ? String(index) : '');\n\n        switch (view) {\n          case 'address': {\n            return (\n              <BeaconChainWithdrawalsListItem\n                key={ key }\n                item={ item as AddressWithdrawalsItem }\n                view={ view }\n                isLoading={ isLoading }\n              />\n            );\n          }\n          case 'block': {\n            return (\n              <BeaconChainWithdrawalsListItem\n                key={ key }\n                item={ item as BlockWithdrawalsItem }\n                view={ view }\n                isLoading={ isLoading }\n              />\n            );\n          }\n          case 'list': {\n            return (\n              <BeaconChainWithdrawalsListItem\n                key={ key }\n                item={ item as WithdrawalsItem }\n                view={ view }\n                isLoading={ isLoading }\n              />\n            );\n          }\n        }\n      }) }\n      <div ref={ cutRef }/>\n    </Box>\n  );\n};\n\nexport default React.memo(WithdrawalsList);\n","import { Show, Hide } from '@chakra-ui/react';\nimport React from 'react';\n\nimport DataListDisplay from 'ui/shared/DataListDisplay';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport BeaconChainWithdrawalsList from 'ui/withdrawals/beaconChain/BeaconChainWithdrawalsList';\nimport BeaconChainWithdrawalsTable from 'ui/withdrawals/beaconChain/BeaconChainWithdrawalsTable';\n\ntype Props = {\n  blockWithdrawalsQuery: QueryWithPagesResult<'block_withdrawals'>;\n};\nconst TABS_HEIGHT = 88;\n\nconst BlockWithdrawals = ({ blockWithdrawalsQuery }: Props) => {\n  const content = blockWithdrawalsQuery.data?.items ? (\n    <>\n      <Show below=\"lg\" ssr={ false }>\n        <BeaconChainWithdrawalsList\n          items={ blockWithdrawalsQuery.data.items }\n          isLoading={ blockWithdrawalsQuery.isPlaceholderData }\n          view=\"block\"\n        />\n      </Show>\n      <Hide below=\"lg\" ssr={ false }>\n        <BeaconChainWithdrawalsTable\n          items={ blockWithdrawalsQuery.data.items }\n          isLoading={ blockWithdrawalsQuery.isPlaceholderData }\n          top={ blockWithdrawalsQuery.pagination.isVisible ? TABS_HEIGHT : 0 }\n          view=\"block\"\n        />\n      </Hide>\n    </>\n  ) : null ;\n\n  return (\n    <DataListDisplay\n      isError={ blockWithdrawalsQuery.isError }\n      items={ blockWithdrawalsQuery.data?.items }\n      emptyText=\"There are no withdrawals for this block.\"\n      content={ content }\n    />\n  );\n};\n\nexport default BlockWithdrawals;\n","import { TX } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\n\nimport type { BlockQuery } from './useBlockQuery';\n\ninterface Params {\n  heightOrHash: string;\n  blockQuery: BlockQuery;\n  tab: string;\n}\n\nexport default function useBlockBlobTxsQuery({ heightOrHash, blockQuery, tab }: Params) {\n  const apiQuery = useQueryWithPages({\n    resourceName: 'block_txs',\n    pathParams: { height_or_hash: heightOrHash },\n    filters: { type: 'blob_transaction' },\n    options: {\n      enabled: Boolean(tab === 'blob_txs' && !blockQuery.isPlaceholderData && blockQuery.data?.blob_transaction_count),\n      placeholderData: generateListStub<'block_txs'>(TX, 3, { next_page_params: null }),\n      refetchOnMount: false,\n    },\n  });\n\n  return apiQuery;\n}\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport type { Chain, GetBlockReturnType } from 'viem';\n\nimport type { Block } from 'types/api/block';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { retry } from 'lib/api/useQueryClientConfig';\nimport { SECOND } from 'lib/consts';\nimport dayjs from 'lib/date/dayjs';\nimport { publicClient } from 'lib/web3/client';\nimport { BLOCK } from 'stubs/block';\nimport { GET_BLOCK } from 'stubs/RPC';\nimport { unknownAddress } from 'ui/shared/address/utils';\n\ntype RpcResponseType = GetBlockReturnType<Chain, false, 'latest'> | null;\n\nexport type BlockQuery = UseQueryResult<Block, ResourceError<{ status: number }>> & {\n  isDegradedData: boolean;\n};\n\ninterface Params {\n  heightOrHash: string;\n}\n\nexport default function useBlockQuery({ heightOrHash }: Params): BlockQuery {\n  const [ isRefetchEnabled, setRefetchEnabled ] = React.useState(false);\n\n  const apiQuery = useApiQuery<'block', { status: number }>('block', {\n    pathParams: { height_or_hash: heightOrHash },\n    queryOptions: {\n      enabled: Boolean(heightOrHash),\n      placeholderData: BLOCK,\n      refetchOnMount: false,\n      retry: (failureCount, error) => {\n        if (isRefetchEnabled) {\n          return false;\n        }\n\n        return retry(failureCount, error);\n      },\n      refetchInterval: (): number | false => {\n        return isRefetchEnabled ? 15 * SECOND : false;\n      },\n    },\n  });\n\n  const rpcQuery = useQuery<RpcResponseType, unknown, Block | null>({\n    queryKey: [ 'RPC', 'block', { heightOrHash } ],\n    queryFn: async() => {\n      if (!publicClient) {\n        return null;\n      }\n\n      const blockParams = heightOrHash.startsWith('0x') ? { blockHash: heightOrHash as `0x${ string }` } : { blockNumber: BigInt(heightOrHash) };\n      return publicClient.getBlock(blockParams).catch(() => null);\n    },\n    select: (block) => {\n      if (!block) {\n        return null;\n      }\n\n      return {\n        height: Number(block.number),\n        timestamp: dayjs.unix(Number(block.timestamp)).format(),\n        transaction_count: block.transactions.length,\n        miner: { ...unknownAddress, hash: block.miner },\n        size: Number(block.size),\n        hash: block.hash,\n        parent_hash: block.parentHash,\n        difficulty: block.difficulty.toString(),\n        total_difficulty: block.totalDifficulty?.toString() ?? null,\n        gas_used: block.gasUsed.toString(),\n        gas_limit: block.gasLimit.toString(),\n        nonce: block.nonce,\n        base_fee_per_gas: block.baseFeePerGas?.toString() ?? null,\n        burnt_fees: null,\n        priority_fee: null,\n        extra_data: block.extraData,\n        state_root: block.stateRoot,\n        gas_target_percentage: null,\n        gas_used_percentage: null,\n        burnt_fees_percentage: null,\n        type: 'block', // we can't get this type from RPC, so it will always be a regular block\n        transaction_fees: null,\n        uncles_hashes: block.uncles,\n        withdrawals_count: block.withdrawals?.length,\n      };\n    },\n    placeholderData: GET_BLOCK,\n    enabled: publicClient !== undefined && (apiQuery.isError || apiQuery.errorUpdateCount > 0),\n    retry: false,\n    refetchOnMount: false,\n  });\n\n  React.useEffect(() => {\n    if (apiQuery.isPlaceholderData || !publicClient) {\n      return;\n    }\n\n    if (apiQuery.isError && apiQuery.errorUpdateCount === 1) {\n      setRefetchEnabled(true);\n    } else if (!apiQuery.isError) {\n      setRefetchEnabled(false);\n    }\n  }, [ apiQuery.errorUpdateCount, apiQuery.isError, apiQuery.isPlaceholderData ]);\n\n  React.useEffect(() => {\n    if (!rpcQuery.isPlaceholderData && !rpcQuery.data) {\n      setRefetchEnabled(false);\n    }\n  }, [ rpcQuery.data, rpcQuery.isPlaceholderData ]);\n\n  const isRpcQuery = Boolean(publicClient && (apiQuery.isError || apiQuery.isPlaceholderData) && apiQuery.errorUpdateCount > 0 && rpcQuery.data);\n  const query = isRpcQuery ? rpcQuery as UseQueryResult<Block, ResourceError<{ status: number }>> : apiQuery;\n\n  return {\n    ...query,\n    isDegradedData: isRpcQuery,\n  };\n}\n","import type { PaginationParams } from './types';\n\nexport const emptyPagination: PaginationParams = {\n  page: 1,\n  onNextPageClick: () => {},\n  onPrevPageClick: () => {},\n  resetPage: () => {},\n  hasPages: false,\n  hasNextPage: false,\n  canGoBackwards: false,\n  isLoading: false,\n  isVisible: false,\n};\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport type { Chain, GetBlockReturnType } from 'viem';\n\nimport type { BlockTransactionsResponse } from 'types/api/block';\n\nimport type { ResourceError } from 'lib/api/resources';\nimport { retry } from 'lib/api/useQueryClientConfig';\nimport { SECOND } from 'lib/consts';\nimport dayjs from 'lib/date/dayjs';\nimport hexToDecimal from 'lib/hexToDecimal';\nimport { publicClient } from 'lib/web3/client';\nimport { GET_BLOCK_WITH_TRANSACTIONS } from 'stubs/RPC';\nimport { TX } from 'stubs/tx';\nimport { generateListStub } from 'stubs/utils';\nimport { unknownAddress } from 'ui/shared/address/utils';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport { emptyPagination } from 'ui/shared/pagination/utils';\n\nimport type { BlockQuery } from './useBlockQuery';\n\ntype RpcResponseType = GetBlockReturnType<Chain, boolean, 'latest'> | null;\n\nexport type BlockTxsQuery = QueryWithPagesResult<'block_txs'> & {\n  isDegradedData: boolean;\n};\n\ninterface Params {\n  heightOrHash: string;\n  blockQuery: BlockQuery;\n  tab: string;\n}\n\nexport default function useBlockTxsQuery({ heightOrHash, blockQuery, tab }: Params): BlockTxsQuery {\n  const [ isRefetchEnabled, setRefetchEnabled ] = React.useState(false);\n\n  const apiQuery = useQueryWithPages({\n    resourceName: 'block_txs',\n    pathParams: { height_or_hash: heightOrHash },\n    options: {\n      enabled: Boolean(tab === 'txs' && !blockQuery.isPlaceholderData && !blockQuery.isDegradedData),\n      placeholderData: generateListStub<'block_txs'>(TX, 50, { next_page_params: {\n        block_number: 9004925,\n        index: 49,\n        items_count: 50,\n      } }),\n      refetchOnMount: false,\n      retry: (failureCount, error) => {\n        if (isRefetchEnabled) {\n          return false;\n        }\n\n        return retry(failureCount, error);\n      },\n      refetchInterval: (): number | false => {\n        return isRefetchEnabled ? 15 * SECOND : false;\n      },\n    },\n  });\n\n  const rpcQuery = useQuery<RpcResponseType, unknown, BlockTransactionsResponse | null>({\n    queryKey: [ 'RPC', 'block_txs', { heightOrHash } ],\n    queryFn: async() => {\n      if (!publicClient) {\n        return null;\n      }\n\n      const blockParams = heightOrHash.startsWith('0x') ?\n        { blockHash: heightOrHash as `0x${ string }`, includeTransactions: true } :\n        { blockNumber: BigInt(heightOrHash), includeTransactions: true };\n      return publicClient.getBlock(blockParams).catch(() => null);\n    },\n    select: (block) => {\n      if (!block) {\n        return null;\n      }\n\n      return {\n        items: block.transactions\n          .map((tx) => {\n            if (typeof tx === 'string') {\n              return;\n            }\n\n            return {\n              from: { ...unknownAddress, hash: tx.from as string },\n              to: tx.to ? { ...unknownAddress, hash: tx.to as string } : null,\n              hash: tx.hash as string,\n              timestamp: block?.timestamp ? dayjs.unix(Number(block.timestamp)).format() : null,\n              confirmation_duration: null,\n              status: undefined,\n              block_number: Number(block.number),\n              value: tx.value.toString(),\n              gas_price: tx.gasPrice?.toString() ?? null,\n              base_fee_per_gas: block?.baseFeePerGas?.toString() ?? null,\n              max_fee_per_gas: tx.maxFeePerGas?.toString() ?? null,\n              max_priority_fee_per_gas: tx.maxPriorityFeePerGas?.toString() ?? null,\n              nonce: tx.nonce,\n              position: tx.transactionIndex,\n              type: tx.typeHex ? hexToDecimal(tx.typeHex) : null,\n              raw_input: tx.input,\n              gas_used: null,\n              gas_limit: tx.gas.toString(),\n              confirmations: 0,\n              fee: {\n                value: null,\n                type: 'actual',\n              },\n              created_contract: null,\n              result: '',\n              priority_fee: null,\n              transaction_burnt_fee: null,\n              revert_reason: null,\n              decoded_input: null,\n              has_error_in_internal_transactions: null,\n              token_transfers: null,\n              token_transfers_overflow: false,\n              exchange_rate: null,\n              method: null,\n              transaction_types: [],\n              transaction_tag: null,\n              actions: [],\n            };\n          })\n          .filter(Boolean),\n        next_page_params: null,\n      };\n    },\n    placeholderData: GET_BLOCK_WITH_TRANSACTIONS,\n    enabled: publicClient !== undefined && tab === 'txs' && (blockQuery.isDegradedData || apiQuery.isError || apiQuery.errorUpdateCount > 0),\n    retry: false,\n    refetchOnMount: false,\n  });\n\n  React.useEffect(() => {\n    if (apiQuery.isPlaceholderData || !publicClient) {\n      return;\n    }\n\n    if (apiQuery.isError && apiQuery.errorUpdateCount === 1) {\n      setRefetchEnabled(true);\n    } else if (!apiQuery.isError) {\n      setRefetchEnabled(false);\n    }\n  }, [ apiQuery.errorUpdateCount, apiQuery.isError, apiQuery.isPlaceholderData ]);\n\n  React.useEffect(() => {\n    if (!rpcQuery.isPlaceholderData && !rpcQuery.data) {\n      setRefetchEnabled(false);\n    }\n  }, [ rpcQuery.data, rpcQuery.isPlaceholderData ]);\n\n  const isRpcQuery = Boolean((\n    blockQuery.isDegradedData ||\n    ((apiQuery.isError || apiQuery.isPlaceholderData) && apiQuery.errorUpdateCount > 0)\n  ) && rpcQuery.data && publicClient);\n\n  const rpcQueryWithPages: QueryWithPagesResult<'block_txs'> = {\n    ...rpcQuery as UseQueryResult<BlockTransactionsResponse, ResourceError>,\n    pagination: emptyPagination,\n    onFilterChange: () => {},\n    onSortingChange: () => {},\n  };\n\n  const query = isRpcQuery ? rpcQueryWithPages : apiQuery;\n\n  return {\n    ...query,\n    isDegradedData: isRpcQuery,\n  };\n}\n","import type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport type { Chain, GetBlockReturnType } from 'viem';\n\nimport type { BlockWithdrawalsResponse } from 'types/api/block';\n\nimport config from 'configs/app';\nimport type { ResourceError } from 'lib/api/resources';\nimport { retry } from 'lib/api/useQueryClientConfig';\nimport { SECOND } from 'lib/consts';\nimport hexToDecimal from 'lib/hexToDecimal';\nimport { publicClient } from 'lib/web3/client';\nimport { GET_BLOCK } from 'stubs/RPC';\nimport { generateListStub } from 'stubs/utils';\nimport { WITHDRAWAL } from 'stubs/withdrawals';\nimport { unknownAddress } from 'ui/shared/address/utils';\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport { emptyPagination } from 'ui/shared/pagination/utils';\n\nimport type { BlockQuery } from './useBlockQuery';\n\ntype RpcResponseType = GetBlockReturnType<Chain, false, 'latest'> | null;\n\nexport type BlockWithdrawalsQuery = QueryWithPagesResult<'block_withdrawals'> & {\n  isDegradedData: boolean;\n};\n\ninterface Params {\n  heightOrHash: string;\n  blockQuery: BlockQuery;\n  tab: string;\n}\n\nexport default function useBlockWithdrawalsQuery({ heightOrHash, blockQuery, tab }: Params): BlockWithdrawalsQuery {\n  const [ isRefetchEnabled, setRefetchEnabled ] = React.useState(false);\n\n  const apiQuery = useQueryWithPages({\n    resourceName: 'block_withdrawals',\n    pathParams: { height_or_hash: heightOrHash },\n    options: {\n      enabled:\n        tab === 'withdrawals' &&\n        config.features.beaconChain.isEnabled &&\n        !blockQuery.isPlaceholderData && !blockQuery.isDegradedData,\n      placeholderData: generateListStub<'block_withdrawals'>(WITHDRAWAL, 50, { next_page_params: {\n        index: 5,\n        items_count: 50,\n      } }),\n      refetchOnMount: false,\n      retry: (failureCount, error) => {\n        if (isRefetchEnabled) {\n          return false;\n        }\n\n        return retry(failureCount, error);\n      },\n      refetchInterval: (): number | false => {\n        return isRefetchEnabled ? 15 * SECOND : false;\n      },\n    },\n  });\n\n  const rpcQuery = useQuery<RpcResponseType, unknown, BlockWithdrawalsResponse | null>({\n    queryKey: [ 'RPC', 'block', { heightOrHash } ],\n    queryFn: async() => {\n      if (!publicClient) {\n        return null;\n      }\n\n      const blockParams = heightOrHash.startsWith('0x') ? { blockHash: heightOrHash as `0x${ string }` } : { blockNumber: BigInt(heightOrHash) };\n      return publicClient.getBlock(blockParams).catch(() => null);\n    },\n    select: (block) => {\n      if (!block) {\n        return null;\n      }\n\n      return {\n        items: block.withdrawals\n          ?.map((withdrawal) => {\n            return {\n              amount: hexToDecimal(withdrawal.amount).toString(),\n              index: hexToDecimal(withdrawal.index),\n              validator_index: hexToDecimal(withdrawal.validatorIndex),\n              receiver: { ...unknownAddress, hash: withdrawal.address },\n            };\n          })\n          .sort((a, b) => b.index - a.index) ?? [],\n        next_page_params: null,\n      };\n    },\n    placeholderData: GET_BLOCK,\n    enabled:\n      publicClient !== undefined &&\n      tab === 'withdrawals' &&\n      config.features.beaconChain.isEnabled &&\n      (blockQuery.isDegradedData || apiQuery.isError || apiQuery.errorUpdateCount > 0),\n    retry: false,\n    refetchOnMount: false,\n  });\n\n  React.useEffect(() => {\n    if (apiQuery.isPlaceholderData || !publicClient) {\n      return;\n    }\n\n    if (apiQuery.isError && apiQuery.errorUpdateCount === 1) {\n      setRefetchEnabled(true);\n    } else if (!apiQuery.isError) {\n      setRefetchEnabled(false);\n    }\n  }, [ apiQuery.errorUpdateCount, apiQuery.isError, apiQuery.isPlaceholderData ]);\n\n  React.useEffect(() => {\n    if (!rpcQuery.isPlaceholderData && !rpcQuery.data) {\n      setRefetchEnabled(false);\n    }\n  }, [ rpcQuery.data, rpcQuery.isPlaceholderData ]);\n\n  const isRpcQuery = Boolean((\n    blockQuery.isDegradedData ||\n    ((apiQuery.isError || apiQuery.isPlaceholderData) && apiQuery.errorUpdateCount > 0)\n  ) && rpcQuery.data && publicClient);\n\n  const rpcQueryWithPages: QueryWithPagesResult<'block_withdrawals'> = {\n    ...rpcQuery as UseQueryResult<BlockWithdrawalsResponse, ResourceError>,\n    pagination: emptyPagination,\n    onFilterChange: () => {},\n    onSortingChange: () => {},\n  };\n\n  const query = isRpcQuery ? rpcQueryWithPages : apiQuery;\n\n  return {\n    ...query,\n    isDegradedData: isRpcQuery,\n  };\n}\n","import { chakra } from '@chakra-ui/react';\nimport { capitalize } from 'es-toolkit';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { PaginationParams } from 'ui/shared/pagination/types';\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport config from 'configs/app';\nimport { useAppContext } from 'lib/contexts/app';\nimport throwOnAbsentParamError from 'lib/errors/throwOnAbsentParamError';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport getNetworkValidationActionText from 'lib/networks/getNetworkValidationActionText';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport BlockCeloEpochTag from 'ui/block/BlockCeloEpochTag';\nimport BlockDetails from 'ui/block/BlockDetails';\nimport BlockEpochRewards from 'ui/block/BlockEpochRewards';\nimport BlockWithdrawals from 'ui/block/BlockWithdrawals';\nimport useBlockBlobTxsQuery from 'ui/block/useBlockBlobTxsQuery';\nimport useBlockQuery from 'ui/block/useBlockQuery';\nimport useBlockTxsQuery from 'ui/block/useBlockTxsQuery';\nimport useBlockWithdrawalsQuery from 'ui/block/useBlockWithdrawalsQuery';\nimport ServiceDegradationWarning from 'ui/shared/alerts/ServiceDegradationWarning';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport NetworkExplorers from 'ui/shared/NetworkExplorers';\nimport PageTitle from 'ui/shared/Page/PageTitle';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TabsSkeleton from 'ui/shared/Tabs/TabsSkeleton';\nimport TxsWithFrontendSorting from 'ui/txs/TxsWithFrontendSorting';\n\nconst TAB_LIST_PROPS = {\n  marginBottom: 0,\n  pt: 6,\n  pb: 6,\n  marginTop: -5,\n};\nconst TABS_HEIGHT = 88;\n\nconst BlockPageContent = () => {\n  const router = useRouter();\n  const isMobile = useIsMobile();\n  const appProps = useAppContext();\n  const heightOrHash = getQueryParamString(router.query.height_or_hash);\n  const tab = getQueryParamString(router.query.tab);\n\n  const blockQuery = useBlockQuery({ heightOrHash });\n  const blockTxsQuery = useBlockTxsQuery({ heightOrHash, blockQuery, tab });\n  const blockWithdrawalsQuery = useBlockWithdrawalsQuery({ heightOrHash, blockQuery, tab });\n  const blockBlobTxsQuery = useBlockBlobTxsQuery({ heightOrHash, blockQuery, tab });\n\n  const hasPagination = !isMobile && (\n    (tab === 'txs' && blockTxsQuery.pagination.isVisible) ||\n    (tab === 'withdrawals' && blockWithdrawalsQuery.pagination.isVisible)\n  );\n\n  const tabs: Array<RoutedTab> = React.useMemo(() => ([\n    {\n      id: 'index',\n      title: 'Details',\n      component: (\n        <>\n          { blockQuery.isDegradedData && <ServiceDegradationWarning isLoading={ blockQuery.isPlaceholderData } mb={ 6 }/> }\n          <BlockDetails query={ blockQuery }/>\n        </>\n      ),\n    },\n    {\n      id: 'txs',\n      title: 'Transactions',\n      component: (\n        <>\n          { blockTxsQuery.isDegradedData && <ServiceDegradationWarning isLoading={ blockTxsQuery.isPlaceholderData } mb={ 6 }/> }\n          <TxsWithFrontendSorting query={ blockTxsQuery } showBlockInfo={ false } showSocketInfo={ false } top={ hasPagination ? TABS_HEIGHT : 0 }/>\n        </>\n      ),\n    },\n    config.features.dataAvailability.isEnabled && blockQuery.data?.blob_transaction_count ?\n      {\n        id: 'blob_txs',\n        title: 'Blob txns',\n        component: (\n          <TxsWithFrontendSorting query={ blockBlobTxsQuery } showBlockInfo={ false } showSocketInfo={ false }/>\n        ),\n      } : null,\n    config.features.beaconChain.isEnabled && Boolean(blockQuery.data?.withdrawals_count) ?\n      {\n        id: 'withdrawals',\n        title: 'Withdrawals',\n        component: (\n          <>\n            { blockWithdrawalsQuery.isDegradedData && <ServiceDegradationWarning isLoading={ blockWithdrawalsQuery.isPlaceholderData } mb={ 6 }/> }\n            <BlockWithdrawals blockWithdrawalsQuery={ blockWithdrawalsQuery }/>\n          </>\n        ),\n      } : null,\n    blockQuery.data?.celo?.is_epoch_block ? {\n      id: 'epoch_rewards',\n      title: 'Epoch rewards',\n      component: <BlockEpochRewards heightOrHash={ heightOrHash }/>,\n    } : null,\n  ].filter(Boolean)), [ blockBlobTxsQuery, blockQuery, blockTxsQuery, blockWithdrawalsQuery, hasPagination, heightOrHash ]);\n\n  let pagination;\n  if (tab === 'txs') {\n    pagination = blockTxsQuery.pagination;\n  } else if (tab === 'withdrawals') {\n    pagination = blockWithdrawalsQuery.pagination;\n  }\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes('/blocks');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to blocks list',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer ]);\n\n  throwOnAbsentParamError(heightOrHash);\n\n  if (blockQuery.isError) {\n    if (!blockQuery.isDegradedData && blockQuery.error.status === 404 && !heightOrHash.startsWith('0x')) {\n      router.push({ pathname: '/block/countdown/[height]', query: { height: heightOrHash } });\n      return null;\n    } else {\n      throwOnResourceLoadError(blockQuery);\n    }\n  }\n\n  const title = (() => {\n    switch (blockQuery.data?.type) {\n      case 'reorg':\n        return `Reorged block #${ blockQuery.data?.height }`;\n\n      case 'uncle':\n        return `Uncle block #${ blockQuery.data?.height }`;\n\n      default:\n        return `Block #${ blockQuery.data?.height }`;\n    }\n  })();\n\n  const titleSecondRow = (\n    <>\n      { !config.UI.views.block.hiddenFields?.miner && blockQuery.data?.miner && (\n        <Skeleton\n          isLoaded={ !blockQuery.isPlaceholderData }\n          fontFamily=\"heading\"\n          display=\"flex\"\n          minW={ 0 }\n          columnGap={ 2 }\n          fontWeight={ 500 }\n        >\n          <chakra.span flexShrink={ 0 }>\n            { `${ capitalize(getNetworkValidationActionText()) } by` }\n          </chakra.span>\n          <AddressEntity address={ blockQuery.data.miner }/>\n        </Skeleton>\n      ) }\n      <NetworkExplorers type=\"block\" pathParam={ heightOrHash } ml={{ base: config.UI.views.block.hiddenFields?.miner ? 0 : 3, lg: 'auto' }}/>\n    </>\n  );\n\n  return (\n    <>\n      <PageTitle\n        title={ title }\n        backLink={ backLink }\n        contentAfter={ <BlockCeloEpochTag blockQuery={ blockQuery }/> }\n        secondRow={ titleSecondRow }\n        isLoading={ blockQuery.isPlaceholderData }\n      />\n      { blockQuery.isPlaceholderData ? <TabsSkeleton tabs={ tabs }/> : (\n        <RoutedTabs\n          tabs={ tabs }\n          tabListProps={ isMobile ? undefined : TAB_LIST_PROPS }\n          rightSlot={ hasPagination ? <Pagination { ...(pagination as PaginationParams) }/> : null }\n          stickyEnabled={ hasPagination }\n        />\n      ) }\n    </>\n  );\n};\n\nexport default BlockPageContent;\n","import { Flex, useColorModeValue, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nexport type Props = {\n  children: React.ReactNode;\n  gradientHeight: number;\n  className?: string;\n  onScrollVisibilityChange?: (isVisible: boolean) => void;\n};\n\nconst ContainerWithScrollY = ({ className, gradientHeight, children, onScrollVisibilityChange }: Props) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [ hasScroll, setHasScroll ] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const hasScroll = ref.current.scrollHeight >= ref.current.clientHeight + gradientHeight / 2;\n    setHasScroll(hasScroll);\n    onScrollVisibilityChange?.(hasScroll);\n  }, [ gradientHeight, onScrollVisibilityChange ]);\n\n  const gradientEndColor = useColorModeValue('white', 'black');\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      className={ className }\n      overflowY={ hasScroll ? 'scroll' : 'auto' }\n      ref={ ref }\n      _after={ hasScroll ? {\n        position: 'absolute',\n        content: '\"\"',\n        bottom: 0,\n        left: 0,\n        right: '20px',\n        height: `${ gradientHeight }px`,\n        bgGradient: `linear(to-b, transparent, ${ gradientEndColor })`,\n      } : undefined }\n      pr={ hasScroll ? 5 : 0 }\n      pb={ hasScroll ? `${ gradientHeight }px` : 0 }\n    >\n      { children }\n    </Flex>\n  );\n};\n\nexport default chakra(ContainerWithScrollY);\n","import { chakra, GridItem, Flex, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as ContainerWithScrollY from 'ui/shared/ContainerWithScrollY';\nimport Hint from 'ui/shared/Hint';\nimport HintPopover from 'ui/shared/HintPopover';\n\nconst LabelScrollText = () => (\n  <Text fontWeight={ 500 } variant=\"secondary\" fontSize=\"xs\" className=\"note\" align=\"right\">\n    Scroll to see more\n  </Text>\n);\n\ninterface LabelProps {\n  hint?: React.ReactNode;\n  children: React.ReactNode;\n  isLoading?: boolean;\n  className?: string;\n  id?: string;\n  hasScroll?: boolean;\n  type?: 'tooltip' | 'popover';\n}\n\nconst Label = chakra(({ hint, children, isLoading, id, className, hasScroll, type }: LabelProps) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      _notFirst={{ mt: { base: 3, lg: 0 } }}\n    >\n      <Flex columnGap={ 2 } alignItems=\"flex-start\">\n        { hint && (type === 'popover' ?\n          <HintPopover label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/> :\n          <Hint label={ hint } isLoading={ isLoading } my={{ lg: '2px' }}/>) }\n        <Skeleton isLoaded={ !isLoading } fontWeight={{ base: 700, lg: 500 }}>\n          { children }\n          { hasScroll && <LabelScrollText/> }\n        </Skeleton>\n      </Flex>\n    </GridItem>\n  );\n});\n\ninterface ValueProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n      rowGap={ 3 }\n      pl={{ base: 7, lg: 0 }}\n      py={ 1 }\n      lineHeight={{ base: 5, lg: 6 }}\n      whiteSpace=\"nowrap\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ValueWithScroll = chakra(({ children, gradientHeight, onScrollVisibilityChange, className }: ContainerWithScrollY.Props) => {\n  return (\n    <Value position=\"relative\">\n      <ContainerWithScrollY.default\n        className={ className }\n        gradientHeight={ gradientHeight }\n        onScrollVisibilityChange={ onScrollVisibilityChange }\n      >\n        { children }\n      </ContainerWithScrollY.default>\n    </Value>\n  );\n});\n\nexport {\n  Label,\n  Value,\n  ValueWithScroll,\n};\n","import type { ResponsiveValue } from '@chakra-ui/react';\nimport { GridItem, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  id?: string;\n  colSpan?: ResponsiveValue<number | 'auto'>;\n}\n\nconst DetailsInfoItemDivider = ({ className, id, colSpan }: Props) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      colSpan={ colSpan || { base: undefined, lg: 2 } }\n      mt={{ base: 2, lg: 3 }}\n      mb={{ base: 0, lg: 3 }}\n      borderBottom=\"1px solid\"\n      borderColor=\"divider\"\n    />\n  );\n};\n\nexport default chakra(DetailsInfoItemDivider);\n","import React from 'react';\n\nimport dayjs from 'lib/date/dayjs';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\nimport TextSeparator from 'ui/shared/TextSeparator';\n\ntype Props = {\n  // should be string, will be fixed on the back-end\n  timestamp: string | number;\n  isLoading?: boolean;\n};\n\nconst DetailsTimestamp = ({ timestamp, isLoading }: Props) => {\n  return (\n    <>\n      <IconSvg name=\"clock\" boxSize={ 5 } color=\"gray.500\" isLoading={ isLoading }/>\n      <Skeleton isLoaded={ !isLoading } ml={ 2 }>\n        { dayjs(timestamp).fromNow() }\n      </Skeleton>\n      <TextSeparator color=\"gray.500\"/>\n      <Skeleton isLoaded={ !isLoading } whiteSpace=\"normal\">\n        { dayjs(timestamp).format('llll') }\n      </Skeleton>\n    </>\n  );\n};\n\nexport default DetailsTimestamp;\n","import { Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { EpochRewardsType } from 'types/api/block';\n\nimport Tag from 'ui/shared/chakra/Tag';\n\ntype Props = {\n  type: EpochRewardsType;\n  isLoading?: boolean;\n};\n\nconst TYPE_TAGS: Record<EpochRewardsType, { text: string; label: string; color: string }> = {\n  group: {\n    text: 'Validator group rewards',\n    // eslint-disable-next-line max-len\n    label: 'Reward given to a validator group. The address being viewed is the group\\'s address; the associated address is the validator\\'s address on whose behalf the reward was paid.',\n    color: 'teal',\n  },\n  validator: {\n    text: 'Validator rewards',\n    label: 'Reward given to a validator. The address being viewed is the validator\\'s address; the associated address is the validator group\\'s address.',\n    color: 'purple',\n  },\n  delegated_payment: {\n    text: 'Delegated payments',\n    // eslint-disable-next-line max-len\n    label: 'Reward portion delegated by a validator to another address. The address being viewed is the beneficiary receiving the reward; the associated address is the validator who set the delegation.',\n    color: 'blue',\n  },\n  voter: {\n    text: 'Voting rewards',\n    label: 'Reward given to a voter. The address being viewed is the voter\\'s address; the associated address is the group address.',\n    color: 'yellow',\n  },\n};\n\nconst EpochRewardTypeTag = ({ type, isLoading }: Props) => {\n  const { text, label, color } = TYPE_TAGS[type];\n\n  return (\n    <Tooltip label={ label } maxW=\"322px\" textAlign=\"center\">\n      <Tag colorScheme={ color } isLoading={ isLoading }>\n        { text }\n      </Tag>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(EpochRewardTypeTag);\n","import type {\n  PopoverBodyProps,\n  PopoverContentProps,\n  PopoverProps } from '@chakra-ui/react';\nimport {\n  DarkMode,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  chakra,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport IconSvg from './IconSvg';\n\ninterface Props {\n  label: React.ReactNode;\n  className?: string;\n  isLoading?: boolean;\n  popoverProps?: Partial<PopoverProps>;\n  popoverContentProps?: Partial<PopoverContentProps>;\n  popoverBodyProps?: Partial<PopoverBodyProps>;\n}\n\nconst HintPopover = ({ label, isLoading, className, popoverProps, popoverContentProps, popoverBodyProps }: Props) => {\n  const bgColor = useColorModeValue('gray.700', 'gray.900');\n\n  if (isLoading) {\n    return <Skeleton className={ className } boxSize={ 5 } borderRadius=\"sm\"/>;\n  }\n\n  return (\n    <Popover trigger=\"hover\" isLazy placement=\"top\" { ...popoverProps }>\n      <PopoverTrigger>\n        <IconSvg className={ className } name=\"info\" boxSize={ 5 } color=\"icon_info\" _hover={{ color: 'link_hovered' }} cursor=\"pointer\"/>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent bgColor={ bgColor } maxW={{ base: 'calc(100vw - 8px)', lg: '320px' }} borderRadius=\"sm\" { ...popoverContentProps }>\n          <PopoverArrow bgColor={ bgColor }/>\n          <PopoverBody color=\"white\" fontSize=\"sm\" lineHeight=\"20px\" px={ 2 } py=\"2px\" { ...popoverBodyProps }>\n            <DarkMode>\n              { label }\n            </DarkMode>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(HintPopover));\n","import { Grid, chakra, GridItem } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ninterface ContainerProps {\n  className?: string;\n  isAnimated?: boolean;\n  children: React.ReactNode;\n}\n\nconst Container = chakra(({ isAnimated, children, className }: ContainerProps) => {\n  return (\n    <Grid\n      as={ motion.div }\n      w=\"100%\"\n      initial={ isAnimated ? { opacity: 0, scale: 0.97 } : { opacity: 1, scale: 1 } }\n      animate={{ opacity: 1, scale: 1 }}\n      transitionDuration=\"normal\"\n      transitionTimingFunction=\"linear\"\n      rowGap={ 2 }\n      columnGap={ 2 }\n      gridTemplateColumns=\"86px auto\"\n      alignItems=\"start\"\n      paddingY={ 4 }\n      borderColor=\"divider\"\n      borderTopWidth=\"1px\"\n      _last={{\n        borderBottomWidth: '1px',\n      }}\n      className={ className }\n      fontSize=\"sm\"\n      lineHeight=\"20px\"\n    >\n      { children }\n    </Grid>\n  );\n});\n\ninterface LabelProps {\n  className?: string;\n  children: React.ReactNode;\n  isLoading?: boolean;\n}\n\nconst Label = chakra(({ children, className, isLoading }: LabelProps) => {\n  return (\n    <Skeleton\n      className={ className }\n      isLoaded={ !isLoading }\n      fontWeight={ 500 }\n      my=\"5px\"\n      justifySelf=\"start\"\n    >\n      { children }\n    </Skeleton>\n  );\n});\n\ninterface ValueProps {\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst Value = chakra(({ children, className }: ValueProps) => {\n  return (\n    <GridItem\n      className={ className }\n      py=\"5px\"\n      color=\"text_secondary\"\n      overflow=\"hidden\"\n    >\n      { children }\n    </GridItem>\n  );\n});\n\nconst ListItemMobileGrid = {\n  Container,\n  Label,\n  Value,\n};\n\nexport default ListItemMobileGrid;\n","import {\n  Image,\n  useColorModeValue,\n  chakra,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { NetworkExplorer as TNetworkExplorer } from 'types/networks';\n\nimport config from 'configs/app';\nimport stripTrailingSlash from 'lib/stripTrailingSlash';\nimport IconSvg from 'ui/shared/IconSvg';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport VerifyWith from 'ui/shared/VerifyWith';\n\ninterface Props {\n  className?: string;\n  type: keyof TNetworkExplorer['paths'];\n  pathParam: string;\n}\n\nconst NetworkExplorers = ({ className, type, pathParam }: Props) => {\n  const defaultIconColor = useColorModeValue('gray.400', 'gray.500');\n\n  const explorersLinks = React.useMemo(() => {\n    return config.UI.explorers.items\n      .filter((explorer) => typeof explorer.paths[type] === 'string')\n      .map((explorer) => {\n        const url = new URL(stripTrailingSlash(explorer.paths[type] || '') + '/' + pathParam, explorer.baseUrl);\n        return (\n          <LinkExternal h=\"34px\" key={ explorer.baseUrl } href={ url.toString() } alignItems=\"center\" display=\"inline-flex\" minW=\"120px\">\n            { explorer.logo ?\n              <Image boxSize={ 5 } mr={ 2 } src={ explorer.logo } alt={ `${ explorer.title } icon` }/> :\n              <IconSvg name=\"explorer\" boxSize={ 5 } color={ defaultIconColor } mr={ 2 }/>\n            }\n            { explorer.title }\n          </LinkExternal>\n        );\n      });\n  }, [ pathParam, type, defaultIconColor ]);\n\n  if (explorersLinks.length === 0) {\n    return null;\n  }\n\n  return (\n    <VerifyWith\n      className={ className }\n      links={ explorersLinks }\n      label=\"Verify with other explorers\"\n      longText={ `${ explorersLinks.length } Explorer${ explorersLinks.length > 1 ? 's' : '' }` }\n      shortText={ explorersLinks.length.toString() }\n    />\n  );\n};\n\nexport default React.memo(chakra(NetworkExplorers));\n","import { Tooltip, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ntype Props = {\n  label: string;\n  isLoading?: boolean;\n  className?: string;\n  children: React.ReactNode;\n};\n\nconst PopoverTriggerTooltip = ({ label, isLoading, className, children }: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n  const isMobile = useIsMobile();\n  return (\n    // tooltip need to be wrapped in div for proper popover positioning\n    <Skeleton isLoaded={ !isLoading } borderRadius=\"base\" ref={ ref } className={ className }>\n      <Tooltip\n        label={ label }\n        isDisabled={ isMobile }\n        // need a delay to avoid flickering when closing the popover\n        openDelay={ 100 }\n      >\n        { children }\n      </Tooltip>\n    </Skeleton>\n  );\n};\n\nexport default chakra(React.forwardRef(PopoverTriggerTooltip));\n","import { Box, IconButton, chakra, Tooltip, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  className?: string;\n  onClick: (direction: 'prev' | 'next') => void;\n  prevLabel?: string;\n  nextLabel?: string;\n  isPrevDisabled?: boolean;\n  isNextDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst PrevNext = ({ className, onClick, prevLabel, nextLabel, isPrevDisabled, isNextDisabled, isLoading }: Props) => {\n  const handelPrevClick = React.useCallback(() => {\n    onClick('prev');\n  }, [ onClick ]);\n\n  const handelNextClick = React.useCallback(() => {\n    onClick('next');\n  }, [ onClick ]);\n\n  if (isLoading) {\n    return (\n      <Flex columnGap=\"10px\" className={ className }>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n        <Skeleton boxSize={ 6 } borderRadius=\"sm\"/>\n      </Flex>\n    );\n  }\n\n  return (\n    <Box className={ className } display=\"flex\">\n      <Tooltip label={ prevLabel }>\n        <IconButton\n          aria-label=\"prev\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 }/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          onClick={ handelPrevClick }\n          isDisabled={ isPrevDisabled }\n        />\n      </Tooltip>\n      <Tooltip label={ nextLabel }>\n        <IconButton\n          aria-label=\"next\"\n          icon={ <IconSvg name=\"arrows/east-mini\" boxSize={ 6 } transform=\"rotate(180deg)\"/> }\n          h={ 6 }\n          borderRadius=\"sm\"\n          variant=\"subtle\"\n          colorScheme=\"gray\"\n          ml=\"10px\"\n          onClick={ handelNextClick }\n          isDisabled={ isNextDisabled }\n        />\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default chakra(PrevNext);\n","import type { ChakraProps } from '@chakra-ui/react';\nimport { Box, Flex, chakra, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport CopyToClipboard from './CopyToClipboard';\n\ninterface Props {\n  data: React.ReactNode;\n  title?: string;\n  className?: string;\n  rightSlot?: React.ReactNode;\n  beforeSlot?: React.ReactNode;\n  textareaMaxHeight?: string;\n  textareaMinHeight?: string;\n  showCopy?: boolean;\n  isLoading?: boolean;\n  contentProps?: ChakraProps;\n}\n\nconst RawDataSnippet = ({\n  data,\n  className,\n  title,\n  rightSlot,\n  beforeSlot,\n  textareaMaxHeight,\n  textareaMinHeight,\n  showCopy = true,\n  isLoading,\n  contentProps,\n}: Props) => {\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1362573\n  // there is a problem with scrollbar color in chromium\n  // so blackAlpha.50 here is replaced with #f5f5f6\n  // and whiteAlpha.50 is replaced with #1a1b1b\n  // const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const bgColor = useColorModeValue('#f5f5f6', '#1a1b1b');\n  return (\n    <Box className={ className } as=\"section\" title={ title }>\n      { (title || rightSlot || showCopy) && (\n        <Flex justifyContent={ title ? 'space-between' : 'flex-end' } alignItems=\"center\" mb={ 3 }>\n          { title && <Skeleton fontWeight={ 500 } isLoaded={ !isLoading }>{ title }</Skeleton> }\n          { rightSlot }\n          { typeof data === 'string' && showCopy && <CopyToClipboard text={ data } isLoading={ isLoading }/> }\n        </Flex>\n      ) }\n      { beforeSlot }\n      <Skeleton\n        p={ 4 }\n        bgColor={ isLoading ? 'inherit' : bgColor }\n        maxH={ textareaMaxHeight || '400px' }\n        minH={ textareaMinHeight || (isLoading ? '200px' : undefined) }\n        fontSize=\"sm\"\n        borderRadius=\"md\"\n        wordBreak=\"break-all\"\n        whiteSpace=\"pre-wrap\"\n        overflowX=\"hidden\"\n        overflowY=\"auto\"\n        isLoaded={ !isLoading }\n        { ...contentProps }\n      >\n        { data }\n      </Skeleton>\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(RawDataSnippet));\n","import type { ChakraProps, ThemingProps } from '@chakra-ui/react';\nimport { chakra } from '@chakra-ui/react';\nimport { pickBy } from 'es-toolkit';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useRef } from 'react';\n\nimport type { RoutedTab } from './types';\n\nimport TabsWithScroll from './TabsWithScroll';\nimport useTabIndexFromQuery from './useTabIndexFromQuery';\n\ninterface Props extends ThemingProps<'Tabs'> {\n  tabs: Array<RoutedTab>;\n  tabListProps?: ChakraProps | (({ isSticky, activeTabIndex }: { isSticky: boolean; activeTabIndex: number }) => ChakraProps);\n  rightSlot?: React.ReactNode;\n  rightSlotProps?: ChakraProps;\n  leftSlot?: React.ReactNode;\n  leftSlotProps?: ChakraProps;\n  stickyEnabled?: boolean;\n  className?: string;\n  onTabChange?: (index: number) => void;\n  isLoading?: boolean;\n}\n\nconst RoutedTabs = ({\n  tabs,\n  tabListProps,\n  rightSlot,\n  rightSlotProps,\n  leftSlot,\n  leftSlotProps,\n  stickyEnabled,\n  className,\n  onTabChange,\n  isLoading,\n  ...themeProps\n}: Props) => {\n  const router = useRouter();\n  const tabIndex = useTabIndexFromQuery(tabs);\n  const tabsRef = useRef<HTMLDivElement>(null);\n\n  const handleTabChange = React.useCallback((index: number) => {\n    const nextTab = tabs[index];\n\n    const queryForPathname = pickBy(router.query, (value, key) => router.pathname.includes(`[${ key }]`));\n    const tabId = Array.isArray(nextTab.id) ? nextTab.id[0] : nextTab.id;\n    router.push(\n      { pathname: router.pathname, query: { ...queryForPathname, tab: tabId } },\n      undefined,\n      { shallow: true },\n    );\n\n    onTabChange?.(index);\n  }, [ tabs, router, onTabChange ]);\n\n  useEffect(() => {\n    if (router.query.scroll_to_tabs) {\n      tabsRef?.current?.scrollIntoView(true);\n      delete router.query.scroll_to_tabs;\n      router.push(\n        {\n          pathname: router.pathname,\n          query: router.query,\n        },\n        undefined,\n        { shallow: true },\n      );\n    }\n  // replicate componentDidMount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TabsWithScroll\n      tabs={ tabs }\n      tabListProps={ tabListProps }\n      leftSlot={ leftSlot }\n      leftSlotProps={ leftSlotProps }\n      rightSlot={ rightSlot }\n      rightSlotProps={ rightSlotProps }\n      stickyEnabled={ stickyEnabled }\n      onTabChange={ handleTabChange }\n      defaultTabIndex={ tabIndex }\n      isLoading={ isLoading }\n      { ...themeProps }\n    />\n  );\n};\n\nexport default React.memo(chakra(RoutedTabs));\n","import { Flex, chakra, Box, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { RoutedTab } from '../Tabs/types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport useTabIndexFromQuery from 'ui/shared/Tabs/useTabIndexFromQuery';\n\ntype TabSize = 'sm' | 'md';\n\nconst SkeletonTabText = ({ size, title }: { size: TabSize; title: RoutedTab['title'] }) => (\n  <Skeleton\n    borderRadius=\"base\"\n    borderWidth={ size === 'sm' ? '2px' : 0 }\n    fontWeight={ 600 }\n    mx={ size === 'sm' ? 3 : 4 }\n    flexShrink={ 0 }\n  >\n    { typeof title === 'string' ? title : title() }\n  </Skeleton>\n);\n\ninterface Props {\n  className?: string;\n  tabs: Array<RoutedTab>;\n  size?: 'sm' | 'md';\n}\n\nconst TabsSkeleton = ({ className, tabs, size = 'md' }: Props) => {\n  const bgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n  const tabIndex = useTabIndexFromQuery(tabs || []);\n\n  if (tabs.length === 1) {\n    return null;\n  }\n\n  return (\n    <Flex className={ className } my={ 8 } alignItems=\"center\" overflow=\"hidden\">\n      { tabs.slice(0, tabIndex).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n      { tabs.slice(tabIndex, tabIndex + 1).map(({ title, id }) => (\n        <Box key={ id.toString() } bgColor={ bgColor } py={ size === 'sm' ? 1 : 2 } borderRadius=\"base\" flexShrink={ 0 }>\n          <SkeletonTabText\n            key={ id.toString() }\n            title={ title }\n            size={ size }\n          />\n        </Box>\n      )) }\n      { tabs.slice(tabIndex + 1).map(({ title, id }) => (\n        <SkeletonTabText\n          key={ id.toString() }\n          title={ title }\n          size={ size }\n        />\n      )) }\n    </Flex>\n  );\n};\n\nexport default chakra(TabsSkeleton);\n","import { useRouter } from 'next/router';\n\nimport type { RoutedTab } from './types';\n\nimport getQueryParamString from 'lib/router/getQueryParamString';\n\nexport default function useTabIndexFromQuery(tabs: Array<RoutedTab>) {\n  const router = useRouter();\n  const tabFromQuery = getQueryParamString(router.query.tab);\n\n  if (!tabFromQuery) {\n    return 0;\n  }\n\n  const tabIndex = tabs.findIndex(({ id, subTabs }) => {\n    if (Array.isArray(id)) {\n      return id.includes(tabFromQuery);\n    }\n\n    return id === tabFromQuery || subTabs?.some((id) => id === tabFromQuery);\n  });\n\n  if (tabIndex < 0) {\n    return 0;\n  }\n\n  return tabIndex;\n}\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ninterface Props {\n  token: TokenInfo;\n  value: string;\n  decimals: string | null;\n}\nconst FtTokenTransferSnippet = ({ token, value, decimals }: Props) => {\n  const { valueStr, usd } = getCurrencyValue({\n    value: value,\n    exchangeRate: token.exchange_rate,\n    accuracyUsd: 2,\n    decimals: decimals,\n  });\n\n  return (\n    <>\n      <chakra.span color=\"text_secondary\">for</chakra.span>\n      <span>{ valueStr }</span>\n      <TokenEntity\n        token={{ ...token, name: token.symbol || token.name }}\n        noCopy\n        noSymbol\n        w=\"auto\"\n      />\n      { usd && <chakra.span color=\"text_secondary\">(${ usd })</chakra.span> }\n    </>\n  );\n};\n\nexport default React.memo(FtTokenTransferSnippet);\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo } from 'types/api/token';\n\nimport NftEntity from 'ui/shared/entities/nft/NftEntity';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ninterface Props {\n  token: TokenInfo;\n  value: string;\n  tokenId: string | null;\n}\n\nconst NftTokenTransferSnippet = ({ value, token, tokenId }: Props) => {\n  const num = value === '1' ? '' : value;\n\n  const tokenIdContent = (() => {\n    if (tokenId === null) {\n      // ERC-404 may not have an ID\n      if (token.type === 'ERC-404') {\n        return null;\n      }\n      return <chakra.span color=\"text_secondary\"> N/A </chakra.span>;\n    }\n\n    return (\n      <NftEntity\n        hash={ token.address }\n        id={ tokenId }\n        fontWeight={ 600 }\n        icon={{ size: 'md' }}\n        maxW={{ base: '100%', lg: '150px' }}\n        w=\"auto\"\n        flexShrink={ 0 }\n      />\n    );\n\n  })();\n\n  return (\n    <>\n      { num ? (\n        <>\n          <chakra.span color=\"text_secondary\">for</chakra.span>\n          <span>{ num }</span>\n          <chakra.span color=\"text_secondary\">token ID</chakra.span>\n        </>\n      ) : (\n        <chakra.span color=\"text_secondary\">for token ID</chakra.span>\n      ) }\n      { tokenIdContent }\n      <chakra.span color=\"text_secondary\">of</chakra.span>\n      <TokenEntity\n        token={ token }\n        noCopy\n        w=\"auto\"\n        flexGrow={ 1 }\n      />\n    </>\n  );\n};\n\nexport default React.memo(NftTokenTransferSnippet);\n","import { Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type {\n  TokenTransfer,\n  Erc20TotalPayload,\n  Erc721TotalPayload,\n  Erc1155TotalPayload,\n  Erc404TotalPayload,\n} from 'types/api/tokenTransfer';\n\nimport AddressFromTo from 'ui/shared/address/AddressFromTo';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport TokenTransferSnippetFiat from './TokenTransferSnippetFiat';\nimport TokenTransferSnippetNft from './TokenTransferSnippetNft';\n\ninterface Props {\n  data: TokenTransfer;\n  noAddressIcons?: boolean;\n  isLoading?: boolean;\n}\n\nconst TokenTransferSnippet = ({ data, isLoading, noAddressIcons = true }: Props) => {\n\n  const content = (() => {\n\n    if (isLoading) {\n      return <Skeleton w=\"250px\" h={ 6 }/>;\n    }\n\n    switch (data.token?.type) {\n      case 'ERC-20': {\n        const total = data.total as Erc20TotalPayload | null;\n        if (total === null || total.value === null) {\n          return null;\n        }\n        return <TokenTransferSnippetFiat token={ data.token } value={ total.value } decimals={ total.decimals }/>;\n      }\n\n      case 'ERC-721': {\n        const total = data.total as Erc721TotalPayload;\n        return (\n          <TokenTransferSnippetNft\n            token={ data.token }\n            tokenId={ total.token_id }\n            value=\"1\"\n          />\n        );\n      }\n\n      case 'ERC-1155': {\n        const total = data.total as Erc1155TotalPayload;\n        return (\n          <TokenTransferSnippetNft\n            key={ total.token_id }\n            token={ data.token }\n            tokenId={ total.token_id }\n            value={ total.value }\n          />\n        );\n      }\n\n      case 'ERC-404': {\n        const total = data.total as Erc404TotalPayload | null;\n        if (total === null) {\n          return null;\n        }\n\n        if (total.token_id !== null) {\n          return (\n            <TokenTransferSnippetNft\n              token={ data.token }\n              tokenId={ total.token_id }\n              value=\"1\"\n            />\n          );\n        } else {\n          if (total.value === null) {\n            return null;\n          }\n\n          return <TokenTransferSnippetFiat token={ data.token } value={ total.value } decimals={ total.decimals }/>;\n        }\n      }\n      default: {\n        return null;\n      }\n    }\n  })();\n\n  return (\n    <Flex\n      alignItems=\"flex-start\"\n      flexWrap=\"wrap\"\n      columnGap={ 2 }\n      rowGap={ 3 }\n      flexDir=\"row\"\n      w=\"100%\"\n      fontWeight={ 500 }\n    >\n      <AddressFromTo\n        from={ data.from }\n        to={ data.to }\n        truncation=\"constant\"\n        noIcon={ noAddressIcons }\n        fontWeight=\"500\"\n        isLoading={ isLoading }\n      />\n      { content }\n    </Flex>\n  );\n};\n\nexport default React.memo(TokenTransferSnippet);\n","import {\n  Button,\n  PopoverTrigger,\n  PopoverBody,\n  PopoverContent,\n  Show,\n  Hide,\n  chakra,\n  useDisclosure,\n  Grid,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Popover from 'ui/shared/chakra/Popover';\nimport IconSvg from 'ui/shared/IconSvg';\nimport PopoverTriggerTooltip from 'ui/shared/PopoverTriggerTooltip';\n\ninterface Props {\n  className?: string;\n  links: Array<React.ReactNode>;\n  label: string;\n  longText: string;\n  shortText?: string;\n}\n\nconst VerifyWith = ({ className, links, label, longText, shortText }: Props) => {\n  const { isOpen, onToggle, onClose } = useDisclosure();\n\n  return (\n    <Popover isOpen={ isOpen } onClose={ onClose } placement=\"bottom-start\" isLazy>\n      <PopoverTrigger>\n        <PopoverTriggerTooltip label={ label } className={ className }>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            colorScheme=\"gray\"\n            onClick={ onToggle }\n            isActive={ isOpen }\n            aria-label={ label }\n            fontWeight={ 500 }\n            px={ shortText ? 2 : 1 }\n            h=\"32px\"\n            flexShrink={ 0 }\n          >\n            <IconSvg name=\"explorer\" boxSize={ 5 }/>\n            <Show above=\"xl\">\n              <chakra.span ml={ 1 }>{ longText }</chakra.span>\n            </Show>\n            { shortText && (\n              <Hide above=\"xl\">\n                <chakra.span ml={ 1 }>{ shortText }</chakra.span>\n              </Hide>\n            ) }\n          </Button>\n        </PopoverTriggerTooltip>\n      </PopoverTrigger>\n      <PopoverContent w=\"auto\">\n        <PopoverBody >\n          <chakra.span color=\"text_secondary\" fontSize=\"xs\">{ label }</chakra.span>\n          <Grid\n            alignItems=\"center\"\n            templateColumns={ links.length > 1 ? 'auto auto' : '1fr' }\n            columnGap={ 4 }\n            rowGap={ 2 }\n            mt={ 3 }\n          >\n            { links }\n          </Grid>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default chakra(VerifyWith);\n","import type { AddressParam } from 'types/api/addressParams';\n\nexport type TxCourseType = 'in' | 'out' | 'self' | 'unspecified';\n\nexport function getTxCourseType(from: string, to: string | undefined, current?: string): TxCourseType {\n  if (current === undefined) {\n    return 'unspecified';\n  }\n\n  if (to && from === to && from === current) {\n    return 'self';\n  }\n\n  if (from === current) {\n    return 'out';\n  }\n\n  if (to && to === current) {\n    return 'in';\n  }\n\n  return 'unspecified';\n}\n\nexport const unknownAddress: Omit<AddressParam, 'hash'> = {\n  is_contract: false,\n  is_verified: false,\n  implementations: null,\n  name: '',\n  private_tags: [],\n  public_tags: [],\n  watchlist_names: [],\n  ens_domain_name: null,\n};\n","import { Alert, Spinner, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ninterface Props {\n  isLoading?: boolean;\n  className?: string;\n}\n\nconst ServiceDegradationWarning = ({ isLoading, className }: Props) => {\n  return (\n    <Skeleton className={ className } isLoaded={ !isLoading }>\n      <Alert status=\"warning\" colorScheme=\"gray\" alignItems={{ base: 'flex-start', lg: 'center' }}>\n        <Spinner size=\"sm\" mr={ 2 } my={{ base: '3px', lg: 0 }} flexShrink={ 0 }/>\n        Data sync in progress... page will refresh automatically once data is available\n      </Alert>\n    </Skeleton>\n  );\n};\n\nexport default React.memo(chakra(ServiceDegradationWarning));\n","import React from 'react';\n\nimport type { OptimisticL2TxnBatchesItem } from 'types/api/optimisticL2';\nimport type { ExcludeUndefined } from 'types/utils';\n\nimport Tag from 'ui/shared/chakra/Tag';\n\nexport interface Props {\n  container: ExcludeUndefined<OptimisticL2TxnBatchesItem['batch_data_container']>;\n  isLoading?: boolean;\n}\n\nconst OptimisticL2TxnBatchDA = ({ container, isLoading }: Props) => {\n\n  const text = (() => {\n    switch (container) {\n      case 'in_blob4844':\n        return 'EIP-4844 blob';\n      case 'in_calldata':\n        return 'Calldata';\n      case 'in_celestia':\n        return 'Celestia blob';\n    }\n  })();\n\n  return (\n    <Tag colorScheme=\"yellow\" isLoading={ isLoading }>\n      { text }\n    </Tag>\n  );\n};\n\nexport default React.memo(OptimisticL2TxnBatchDA);\n","import { Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ntype Props = {\n  value: number;\n  isLoading?: boolean;\n};\n\nconst GasUsedToTargetRatio = ({ value, isLoading }: Props) => {\n  return (\n    <Tooltip label=\"% of Gas Target\">\n      <Skeleton color=\"text_secondary\" isLoaded={ !isLoading }>\n        <span>{ (value > 0 ? '+' : '') + value.toLocaleString(undefined, { maximumFractionDigits: 2 }) }%</span>\n      </Skeleton>\n    </Tooltip>\n  );\n};\n\nexport default React.memo(GasUsedToTargetRatio);\n","import { chakra, Tooltip, Box, useColorModeValue } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport config from 'configs/app';\n\nimport GasUsedToTargetRatio from '../GasUsedToTargetRatio';\nimport TextSeparator from '../TextSeparator';\nimport Utilization from '../Utilization/Utilization';\n\nconst rollupFeature = config.features.rollup;\n\ninterface Props {\n  className?: string;\n  gasUsed?: string;\n  gasLimit: string;\n  gasTarget?: number;\n  isLoading?: boolean;\n}\n\nconst BlockGasUsed = ({ className, gasUsed, gasLimit, gasTarget, isLoading }: Props) => {\n  const hasGasUtilization =\n    gasUsed && gasUsed !== '0' &&\n    (!rollupFeature.isEnabled || rollupFeature.type === 'optimistic' || rollupFeature.type === 'shibarium');\n\n  const separatorColor = useColorModeValue('gray.200', 'gray.700');\n\n  if (!hasGasUtilization) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip label={ isLoading ? undefined : 'Gas Used %' }>\n        <Box>\n          <Utilization\n            colorScheme=\"gray\"\n            value={ BigNumber(gasUsed).dividedBy(BigNumber(gasLimit)).toNumber() }\n            isLoading={ isLoading }\n            className={ className }\n          />\n        </Box>\n      </Tooltip>\n      { gasTarget && (\n        <>\n          <TextSeparator color={ separatorColor } mx={ 1 }/>\n          <GasUsedToTargetRatio value={ gasTarget } isLoading={ isLoading }/>\n        </>\n      ) }\n    </>\n  );\n};\n\nexport default React.memo(chakra(BlockGasUsed));\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as BlockEntity from './BlockEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst BatchEntityL2 = (props: BlockEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = route({ pathname: '/batches/[number]', query: { number: props.number.toString() } });\n\n  return (\n    <BlockEntity.default\n      { ...props }\n      href={ props.href ?? defaultHref }\n      icon={{ name: 'txn_batches_slim' }}\n    />\n  );\n};\n\nexport default chakra(BatchEntityL2);\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as BlockEntity from './BlockEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst BlockEntityL1 = (props: BlockEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/block/[height_or_hash]',\n    query: { height_or_hash: props.hash ?? String(props.number) },\n  });\n\n  return <BlockEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(BlockEntityL1);\n","import type { As } from '@chakra-ui/react';\nimport { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport * as EntityBase from 'ui/shared/entities/base/components';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\n\nimport { distributeEntityProps } from '../base/utils';\n\nconst Container = EntityBase.Container;\n\nconst Icon = (props: EntityBase.IconBaseProps) => {\n  if (props.noIcon) {\n    return null;\n  }\n\n  return (\n    <EntityBase.Icon\n      { ...props }\n      size={ props.size ?? 'lg' }\n      name={ props.name ?? 'nft_shield' }\n    />\n  );\n};\n\ntype LinkProps = EntityBase.LinkBaseProps & Pick<EntityProps, 'hash' | 'id'>;\n\nconst Link = chakra((props: LinkProps) => {\n  const defaultHref = route({ pathname: '/token/[hash]/instance/[id]', query: { hash: props.hash, id: props.id } });\n\n  return (\n    <EntityBase.Link\n      { ...props }\n      href={ props.href ?? defaultHref }\n    >\n      { props.children }\n    </EntityBase.Link>\n  );\n});\n\ntype ContentProps = Omit<EntityBase.ContentBaseProps, 'text'> & Pick<EntityProps, 'id'>;\n\nconst Content = chakra((props: ContentProps) => {\n  return (\n    <TruncatedValue\n      isLoading={ props.isLoading }\n      value={ props.id }\n    />\n  );\n});\n\nexport interface EntityProps extends EntityBase.EntityBaseProps {\n  hash: string;\n  id: string;\n}\n\nconst NftEntity = (props: EntityProps) => {\n  const partsProps = distributeEntityProps(props);\n\n  return (\n    <Container w=\"100%\" { ...partsProps.container }>\n      <Icon { ...partsProps.icon }/>\n      <Link { ...partsProps.link }>\n        <Content { ...partsProps.content }/>\n      </Link>\n    </Container>\n  );\n};\n\nexport default React.memo(chakra<As, EntityProps>(NftEntity));\n\nexport {\n  Container,\n  Link,\n  Icon,\n  Content,\n};\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nimport * as TxEntity from './TxEntity';\n\nconst rollupFeature = config.features.rollup;\n\nconst TxEntityL1 = (props: TxEntity.EntityProps) => {\n  if (!rollupFeature.isEnabled) {\n    return null;\n  }\n\n  const defaultHref = rollupFeature.L1BaseUrl + route({\n    pathname: '/tx/[hash]',\n    query: { hash: props.hash },\n  });\n\n  return <TxEntity.default { ...props } href={ props.href ?? defaultHref } isExternal/>;\n};\n\nexport default chakra(TxEntityL1);\n","import { HStack, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport IconSvg from 'ui/shared/IconSvg';\n\ntype Props = {\n  step: Step;\n  isLast: boolean;\n  isPassed: boolean;\n  isPending?: boolean;\n};\n\nconst VerificationStep = ({ step, isLast, isPassed, isPending }: Props) => {\n  let stepColor = 'text_secondary';\n  if (isPending) {\n    stepColor = 'yellow.500';\n  } else if (isPassed) {\n    stepColor = 'green.500';\n  }\n\n  return (\n    <HStack gap={ 2 } color={ stepColor }>\n      <IconSvg name={ isPassed ? 'verification-steps/finalized' : 'verification-steps/unfinalized' } boxSize={ 5 }/>\n      <Box color={ stepColor }>{ typeof step === 'string' ? step : step.content }</Box>\n      { !isLast && <IconSvg name=\"arrows/east\" boxSize={ 5 }/> }\n    </HStack>\n  );\n};\n\nexport default VerificationStep;\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Step } from './types';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\nimport VerificationStep from './VerificationStep';\n\nexport interface Props {\n  currentStep: string;\n  currentStepPending?: boolean;\n  steps: Array<Step>;\n  isLoading?: boolean;\n  rightSlot?: React.ReactNode;\n  className?: string;\n}\n\nconst VerificationSteps = ({ currentStep, currentStepPending, steps, isLoading, rightSlot, className }: Props) => {\n  const currentStepIndex = steps.findIndex((step) => {\n    const label = typeof step === 'string' ? step : step.label;\n    return label === currentStep;\n  });\n\n  return (\n    <Skeleton\n      className={ className }\n      isLoaded={ !isLoading }\n      display=\"flex\"\n      gap={ 2 }\n      alignItems=\"center\"\n      flexWrap=\"wrap\"\n    >\n      { steps.map((step, index) => (\n        <VerificationStep\n          key={ index }\n          step={ step }\n          isLast={ index === steps.length - 1 && !rightSlot }\n          isPassed={ index <= currentStepIndex }\n          isPending={ index === currentStepIndex && currentStepPending }\n        />\n      )) }\n      { rightSlot }\n    </Skeleton>\n  );\n};\n\nexport default chakra(VerificationSteps);\n","import { Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { ZkSyncBatch } from 'types/api/zkSyncL2';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsTimestamp from 'ui/shared/DetailsTimestamp';\nimport TxEntityL1 from 'ui/shared/entities/tx/TxEntityL1';\n\ninterface Props {\n  isLoading: boolean;\n  data: Pick<\n    ZkSyncBatch,\n  'commit_transaction_hash' |\n  'commit_transaction_timestamp' |\n  'prove_transaction_hash' |\n  'prove_transaction_timestamp' |\n  'execute_transaction_hash' |\n  'execute_transaction_timestamp'\n  >;\n}\n\nconst ZkSyncL2TxnBatchHashesInfo = ({ isLoading, data }: Props) => {\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint=\"Hash of L1 tx on which the batch was committed\"\n        isLoading={ isLoading }\n      >\n        Commit tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexDir=\"column\"\n        alignItems=\"flex-start\"\n      >\n        { data.commit_transaction_hash ? (\n          <>\n            <TxEntityL1\n              isLoading={ isLoading }\n              hash={ data.commit_transaction_hash }\n              maxW=\"100%\"\n              noCopy={ false }\n            />\n            { data.commit_transaction_timestamp && (\n              <Flex alignItems=\"center\" flexWrap=\"wrap\" rowGap={ 3 }>\n                <DetailsTimestamp timestamp={ data.commit_transaction_timestamp } isLoading={ isLoading }/>\n              </Flex>\n            ) }\n          </>\n        ) : <Skeleton isLoaded={ !isLoading }>Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Hash of L1 tx on which the batch was proven\"\n        isLoading={ isLoading }\n      >\n        Prove tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexDir=\"column\"\n        alignItems=\"flex-start\"\n      >\n        { data.prove_transaction_hash ? (\n          <>\n            <TxEntityL1\n              isLoading={ isLoading }\n              hash={ data.prove_transaction_hash }\n              maxW=\"100%\"\n              noCopy={ false }\n            />\n            { data.prove_transaction_timestamp && (\n              <Flex alignItems=\"center\" flexWrap=\"wrap\" rowGap={ 3 }>\n                <DetailsTimestamp timestamp={ data.prove_transaction_timestamp } isLoading={ isLoading }/>\n              </Flex>\n            ) }\n          </>\n        ) : <Skeleton isLoaded={ !isLoading }>Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n\n      <DetailsInfoItem.Label\n        hint=\"Hash of L1 tx on which the batch was executed and finalized\"\n        isLoading={ isLoading }\n      >\n        Execute tx hash\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value\n        flexDir=\"column\"\n        alignItems=\"flex-start\"\n      >\n        { data.execute_transaction_hash ? (\n          <>\n            <TxEntityL1\n              isLoading={ isLoading }\n              hash={ data.execute_transaction_hash }\n              maxW=\"100%\"\n              noCopy={ false }\n            />\n            { data.execute_transaction_timestamp && (\n              <Flex alignItems=\"center\" flexWrap=\"wrap\" rowGap={ 3 }>\n                <DetailsTimestamp timestamp={ data.execute_transaction_timestamp } isLoading={ isLoading }/>\n              </Flex>\n            ) }\n          </>\n        ) : <Skeleton isLoaded={ !isLoading }>Pending</Skeleton> }\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default React.memo(ZkSyncL2TxnBatchHashesInfo);\n","import React from 'react';\n\nimport type { AddressFromToFilter } from 'types/api/address';\n\nimport type { QueryWithPagesResult } from 'ui/shared/pagination/useQueryWithPages';\n\nimport TxsContent from './TxsContent';\nimport useTxsSort from './useTxsSort';\n\ntype Props = {\n  // eslint-disable-next-line max-len\n  query: QueryWithPagesResult<'txs_validated' | 'txs_pending'> | QueryWithPagesResult<'txs_watchlist'> | QueryWithPagesResult<'block_txs'> | QueryWithPagesResult<'zkevm_l2_txn_batch_txs'>;\n  showBlockInfo?: boolean;\n  showSocketInfo?: boolean;\n  socketInfoAlert?: string;\n  socketInfoNum?: number;\n  currentAddress?: string;\n  filter?: React.ReactNode;\n  filterValue?: AddressFromToFilter;\n  enableTimeIncrement?: boolean;\n  top?: number;\n};\n\nconst TxsWithFrontendSorting = ({\n  filter,\n  filterValue,\n  query,\n  showBlockInfo = true,\n  showSocketInfo = true,\n  socketInfoAlert,\n  socketInfoNum,\n  currentAddress,\n  enableTimeIncrement,\n  top,\n}: Props) => {\n  const { data, isPlaceholderData, isError, setSortByValue, sorting } = useTxsSort(query);\n\n  return (\n    <TxsContent\n      filter={ filter }\n      filterValue={ filterValue }\n      showBlockInfo={ showBlockInfo }\n      showSocketInfo={ showSocketInfo }\n      socketInfoAlert={ socketInfoAlert }\n      socketInfoNum={ socketInfoNum }\n      currentAddress={ currentAddress }\n      enableTimeIncrement={ enableTimeIncrement }\n      top={ top }\n      items={ data?.items }\n      isPlaceholderData={ isPlaceholderData }\n      isError={ isError }\n      setSorting={ setSortByValue }\n      sort={ sorting }\n      query={ query }\n    />\n  );\n};\n\nexport default TxsWithFrontendSorting;\n","import React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport config from 'configs/app';\nimport { currencyUnits } from 'lib/units';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport ListItemMobileGrid from 'ui/shared/ListItemMobile/ListItemMobileGrid';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\nconst feature = config.features.beaconChain;\n\ntype Props = ({\n  item: WithdrawalsItem;\n  view: 'list';\n} | {\n  item: AddressWithdrawalsItem;\n  view: 'address';\n} | {\n  item: BlockWithdrawalsItem;\n  view: 'block';\n}) & { isLoading?: boolean };\n\nconst BeaconChainWithdrawalsListItem = ({ item, isLoading, view }: Props) => {\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <ListItemMobileGrid.Container gridTemplateColumns=\"100px auto\">\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      <ListItemMobileGrid.Label isLoading={ isLoading }>Validator index</ListItemMobileGrid.Label>\n      <ListItemMobileGrid.Value>\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.validator_index }</Skeleton>\n      </ListItemMobileGrid.Value>\n\n      { view !== 'block' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Block</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <BlockEntity\n              number={ item.block_number }\n              isLoading={ isLoading }\n              fontSize=\"sm\"\n              lineHeight={ 5 }\n            />\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n      { view !== 'address' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>To</ListItemMobileGrid.Label><ListItemMobileGrid.Value>\n            <AddressEntity\n              address={ item.receiver }\n              isLoading={ isLoading }\n              truncation=\"constant\"\n            />\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n      { view !== 'block' && (\n        <>\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Age</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <TimeAgoWithTooltip\n              timestamp={ item.timestamp }\n              isLoading={ isLoading }\n              display=\"inline-block\"\n            />\n          </ListItemMobileGrid.Value>\n\n          <ListItemMobileGrid.Label isLoading={ isLoading }>Value</ListItemMobileGrid.Label>\n          <ListItemMobileGrid.Value>\n            <CurrencyValue value={ item.amount } currency={ currencyUnits.ether } isLoading={ isLoading }/>\n          </ListItemMobileGrid.Value>\n        </>\n      ) }\n\n    </ListItemMobileGrid.Container>\n  );\n};\n\nexport default BeaconChainWithdrawalsListItem;\n","import { Td, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport BlockEntity from 'ui/shared/entities/block/BlockEntity';\nimport TimeAgoWithTooltip from 'ui/shared/TimeAgoWithTooltip';\n\ntype Props = ({\n  item: WithdrawalsItem;\n  view: 'list';\n} | {\n  item: AddressWithdrawalsItem;\n  view: 'address';\n} | {\n  item: BlockWithdrawalsItem;\n  view: 'block';\n}) & { isLoading?: boolean };\n\nconst BeaconChainWithdrawalsTableItem = ({ item, view, isLoading }: Props) => {\n  return (\n    <Tr>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.index }</Skeleton>\n      </Td>\n      <Td verticalAlign=\"middle\">\n        <Skeleton isLoaded={ !isLoading } display=\"inline-block\">{ item.validator_index }</Skeleton>\n      </Td>\n      { view !== 'block' && (\n        <Td verticalAlign=\"middle\">\n          <BlockEntity\n            number={ item.block_number }\n            isLoading={ isLoading }\n            fontSize=\"sm\"\n            lineHeight={ 5 }\n            noIcon\n          />\n        </Td>\n      ) }\n      { view !== 'address' && (\n        <Td verticalAlign=\"middle\">\n          <AddressEntity\n            address={ item.receiver }\n            isLoading={ isLoading }\n            truncation=\"constant\"\n          />\n        </Td>\n      ) }\n      { view !== 'block' && (\n        <Td verticalAlign=\"middle\" pr={ 12 }>\n          <TimeAgoWithTooltip\n            timestamp={ item.timestamp }\n            isLoading={ isLoading }\n            color=\"text_secondary\"\n            display=\"inline-block\"\n          />\n        </Td>\n      ) }\n      <Td verticalAlign=\"middle\">\n        <CurrencyValue value={ item.amount } isLoading={ isLoading }/>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default BeaconChainWithdrawalsTableItem;\n","import { Table, Tbody, Th, Tr } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressWithdrawalsItem } from 'types/api/address';\nimport type { BlockWithdrawalsItem } from 'types/api/block';\nimport type { WithdrawalsItem } from 'types/api/withdrawals';\n\nimport config from 'configs/app';\nimport useLazyRenderedList from 'lib/hooks/useLazyRenderedList';\nimport { default as Thead } from 'ui/shared/TheadSticky';\n\nimport BeaconChainWithdrawalsTableItem from './BeaconChainWithdrawalsTableItem';\n\nconst feature = config.features.beaconChain;\n\n type Props = {\n   top: number;\n   isLoading?: boolean;\n } & ({\n   items: Array<WithdrawalsItem>;\n   view: 'list';\n } | {\n   items: Array<AddressWithdrawalsItem>;\n   view: 'address';\n } | {\n   items: Array<BlockWithdrawalsItem>;\n   view: 'block';\n });\n\nconst BeaconChainWithdrawalsTable = ({ items, isLoading, top, view }: Props) => {\n  const { cutRef, renderedItemsNum } = useLazyRenderedList(items, !isLoading);\n\n  if (!feature.isEnabled) {\n    return null;\n  }\n\n  return (\n    <Table style={{ tableLayout: 'auto' }} minW=\"950px\">\n      <Thead top={ top }>\n        <Tr>\n          <Th minW=\"140px\">Index</Th>\n          <Th minW=\"200px\">Validator index</Th>\n          { view !== 'block' && <Th w=\"25%\">Block</Th> }\n          { view !== 'address' && <Th w=\"25%\">To</Th> }\n          { view !== 'block' && <Th w=\"25%\">Age</Th> }\n          <Th w=\"25%\">{ `Value ${ feature.currency.symbol }` }</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { view === 'list' && (items as Array<WithdrawalsItem>).slice(0, renderedItemsNum).map((item, index) => (\n          <BeaconChainWithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"list\" isLoading={ isLoading }/>\n        )) }\n        { view === 'address' && (items as Array<AddressWithdrawalsItem>).slice(0, renderedItemsNum).map((item, index) => (\n          <BeaconChainWithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"address\" isLoading={ isLoading }/>\n        )) }\n        { view === 'block' && (items as Array<BlockWithdrawalsItem>).slice(0, renderedItemsNum).map((item, index) => (\n          <BeaconChainWithdrawalsTableItem key={ item.index + (isLoading ? String(index) : '') } item={ item } view=\"block\" isLoading={ isLoading }/>\n        )) }\n        <tr ref={ cutRef }/>\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default BeaconChainWithdrawalsTable;\n","import {\n  useAccordionItemContext,\n  useAccordionStyles\n} from \"./chunk-JST25EWU.mjs\";\n\n// src/accordion-button.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionButton = forwardRef(\n  function AccordionButton2(props, ref) {\n    const { getButtonProps } = useAccordionItemContext();\n    const buttonProps = getButtonProps(props, ref);\n    const styles = useAccordionStyles();\n    const buttonStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.button\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.button,\n      {\n        ...buttonProps,\n        className: cx(\"chakra-accordion__button\", props.className),\n        __css: buttonStyles\n      }\n    );\n  }\n);\nAccordionButton.displayName = \"AccordionButton\";\n\nexport {\n  AccordionButton\n};\n","import {\n  useAccordionItem\n} from \"./chunk-JDQBKIKM.mjs\";\nimport {\n  AccordionItemProvider,\n  useAccordionStyles\n} from \"./chunk-JST25EWU.mjs\";\n\n// src/accordion-item.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionItem = forwardRef(\n  function AccordionItem2(props, ref) {\n    const { children, className } = props;\n    const { htmlProps, ...context } = useAccordionItem(props);\n    const styles = useAccordionStyles();\n    const containerStyles = {\n      ...styles.container,\n      overflowAnchor: \"none\"\n    };\n    const ctx = useMemo(() => context, [context]);\n    return /* @__PURE__ */ jsx(AccordionItemProvider, { value: ctx, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        ...htmlProps,\n        className: cx(\"chakra-accordion__item\", className),\n        __css: containerStyles,\n        children: typeof children === \"function\" ? children({\n          isExpanded: !!context.isOpen,\n          isDisabled: !!context.isDisabled\n        }) : children\n      }\n    ) });\n  }\n);\nAccordionItem.displayName = \"AccordionItem\";\n\nexport {\n  AccordionItem\n};\n","import {\n  useAccordionContext\n} from \"./chunk-JDQBKIKM.mjs\";\nimport {\n  useAccordionItemContext,\n  useAccordionStyles\n} from \"./chunk-JST25EWU.mjs\";\n\n// src/accordion-icon.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AccordionIcon(props) {\n  const { isOpen, isDisabled } = useAccordionItemContext();\n  const { reduceMotion } = useAccordionContext();\n  const _className = cx(\"chakra-accordion__icon\", props.className);\n  const styles = useAccordionStyles();\n  const iconStyles = {\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : void 0,\n    transition: reduceMotion ? void 0 : \"transform 0.2s\",\n    transformOrigin: \"center\",\n    ...styles.icon\n  };\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      viewBox: \"0 0 24 24\",\n      \"aria-hidden\": true,\n      className: _className,\n      __css: iconStyles,\n      ...props,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n        }\n      )\n    }\n  );\n}\nAccordionIcon.displayName = \"AccordionIcon\";\n\nexport {\n  AccordionIcon\n};\n","import {\n  TRANSITION_EASINGS,\n  withDelay\n} from \"./chunk-LB6CWFOC.mjs\";\n\n// src/collapse.tsx\nimport { cx, warn } from \"@chakra-ui/shared-utils\";\nimport {\n  AnimatePresence,\n  motion\n} from \"framer-motion\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar isNumeric = (value) => value != null && parseInt(value.toString(), 10) > 0;\nvar defaultTransitions = {\n  exit: {\n    height: { duration: 0.2, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.3, ease: TRANSITION_EASINGS.ease }\n  },\n  enter: {\n    height: { duration: 0.3, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.4, ease: TRANSITION_EASINGS.ease }\n  }\n};\nvar variants = {\n  exit: ({\n    animateOpacity,\n    startingHeight,\n    transition,\n    transitionEnd,\n    delay\n  }) => {\n    var _a;\n    return {\n      ...animateOpacity && { opacity: isNumeric(startingHeight) ? 1 : 0 },\n      height: startingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransitions.exit, delay)\n    };\n  },\n  enter: ({\n    animateOpacity,\n    endingHeight,\n    transition,\n    transitionEnd,\n    delay\n  }) => {\n    var _a;\n    return {\n      ...animateOpacity && { opacity: 1 },\n      height: endingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransitions.enter, delay)\n    };\n  }\n};\nvar Collapse = forwardRef(\n  (props, ref) => {\n    const {\n      in: isOpen,\n      unmountOnExit,\n      animateOpacity = true,\n      startingHeight = 0,\n      endingHeight = \"auto\",\n      style,\n      className,\n      transition,\n      transitionEnd,\n      ...rest\n    } = props;\n    const [mounted, setMounted] = useState(false);\n    useEffect(() => {\n      const timeout = setTimeout(() => {\n        setMounted(true);\n      });\n      return () => clearTimeout(timeout);\n    }, []);\n    warn({\n      condition: Number(startingHeight) > 0 && !!unmountOnExit,\n      message: `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`\n    });\n    const hasStartingHeight = parseFloat(startingHeight.toString()) > 0;\n    const custom = {\n      startingHeight,\n      endingHeight,\n      animateOpacity,\n      transition: !mounted ? { enter: { duration: 0 } } : transition,\n      transitionEnd: {\n        enter: transitionEnd == null ? void 0 : transitionEnd.enter,\n        exit: unmountOnExit ? transitionEnd == null ? void 0 : transitionEnd.exit : {\n          ...transitionEnd == null ? void 0 : transitionEnd.exit,\n          display: hasStartingHeight ? \"block\" : \"none\"\n        }\n      }\n    };\n    const show = unmountOnExit ? isOpen : true;\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n    return /* @__PURE__ */ jsx(AnimatePresence, { initial: false, custom, children: show && /* @__PURE__ */ jsx(\n      motion.div,\n      {\n        ref,\n        ...rest,\n        className: cx(\"chakra-collapse\", className),\n        style: {\n          overflow: \"hidden\",\n          display: \"block\",\n          ...style\n        },\n        custom,\n        variants,\n        initial: unmountOnExit ? \"exit\" : false,\n        animate,\n        exit: \"exit\"\n      }\n    ) });\n  }\n);\nCollapse.displayName = \"Collapse\";\n\nexport {\n  Collapse\n};\n","import {\n  useAccordionContext\n} from \"./chunk-JDQBKIKM.mjs\";\nimport {\n  useAccordionItemContext,\n  useAccordionStyles\n} from \"./chunk-JST25EWU.mjs\";\n\n// src/accordion-panel.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionPanel = forwardRef(\n  function AccordionPanel2(props, ref) {\n    const { className, motionProps, ...rest } = props;\n    const { reduceMotion } = useAccordionContext();\n    const { getPanelProps, isOpen } = useAccordionItemContext();\n    const panelProps = getPanelProps(rest, ref);\n    const _className = cx(\"chakra-accordion__panel\", className);\n    const styles = useAccordionStyles();\n    if (!reduceMotion) {\n      delete panelProps.hidden;\n    }\n    const child = /* @__PURE__ */ jsx(chakra.div, { ...panelProps, __css: styles.panel, className: _className });\n    if (!reduceMotion) {\n      return /* @__PURE__ */ jsx(Collapse, { in: isOpen, ...motionProps, children: child });\n    }\n    return child;\n  }\n);\nAccordionPanel.displayName = \"AccordionPanel\";\n\nexport {\n  AccordionPanel\n};\n","function chunk(arr, size) {\n    if (!Number.isInteger(size) || size <= 0) {\n        throw new Error('Size must be an integer greater than zero.');\n    }\n    const chunkLength = Math.ceil(arr.length / size);\n    const result = Array(chunkLength);\n    for (let index = 0; index < chunkLength; index++) {\n        const start = index * size;\n        const end = start + size;\n        result[index] = arr.slice(start, end);\n    }\n    return result;\n}\n\nexport { chunk };\n","import { createClient, } from './createClient.js';\nimport { publicActions } from './decorators/public.js';\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/public\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient(parameters) {\n    const { key = 'public', name = 'Public Client' } = parameters;\n    const client = createClient({\n        ...parameters,\n        key,\n        name,\n        type: 'publicClient',\n    });\n    return client.extend(publicActions);\n}\n//# sourceMappingURL=createPublicClient.js.map"],"names":["hetToDecimal","hex","parseInt","strippedHex","startsWith","slice","getNetworkValidationActionText","config","chain","verificationType","getNetworkValidatorTitle","rollupFeature","ARBITRUM_L2_TX_BATCH_STATUSES","features","rollup","VERIFICATION_STEPS_MAP","isEnabled","parentChainName","status","getVerificationStepStatus","commitment_transaction","commitTx","confirmation_transaction","confirmTx","publicClient","currentChain","rpcUrls","default","http","filter","Boolean","length","createPublicClient","transport","batch","multicall","error","GET_TRANSACTION","blockHash","BLOCK_HASH","blockNumber","BigInt","from","ADDRESS_HASH","gas","maxPriorityFeePerGas","maxFeePerGas","hash","TX_HASH","input","nonce","to","transactionIndex","value","type","accessList","chainId","v","r","s","yParity","typeHex","GET_TRANSACTION_RECEIPT","contractAddress","cumulativeGasUsed","effectiveGasPrice","gasUsed","logs","logsBloom","transactionHash","GET_TRANSACTIONS_COUNT","baseFeePerGas","difficulty","extraData","gasLimit","miner","mixHash","number","parentHash","receiptsRoot","sha3Uncles","size","stateRoot","timestamp","totalDifficulty","transactions","transactionsRoot","uncles","withdrawals","Array","fill","index","validatorIndex","address","amount","withdrawalsRoot","sealFields","blobGasUsed","excessBlobGas","GET_BLOCK","base_fee_per_gas","burnt_fees","burnt_fees_percentage","extra_data","gas_limit","gas_target_percentage","gas_used","gas_used_percentage","height","ADDRESS_PARAMS","parent_hash","priority_fee","rewards","reward","state_root","total_difficulty","transaction_count","transaction_fees","uncles_hashes","count","total","token","TOKEN_INFO_ERC_20","BLOCK_EPOCH","aggregated_election_rewards","group","BLOCK_EPOCH_REWARD","validator","voter","delegated_payment","distribution","carbon_offsetting_transfer","TOKEN_TRANSFER_ERC_20","community_transfer","reserve_bolster_transfer","circulating_market_cap","decimals","exchange_rate","holders","name","symbol","total_supply","icon_url","token_holders_count","transfers_count","TOKEN_HOLDER_ERC_20","token_id","pagination","generateListStub","next_page_params","TOKEN_HOLDER_ERC_1155","block_hash","block_number","log_index","method","transaction_hash","TOKEN_INFO_ERC_721","TOKEN_INFO_ERC_1155","TOKEN_INFO_ERC_404","TOKEN_TRANSFER_ERC_721","TOKEN_TRANSFER_ERC_1155","TOKEN_TRANSFER_ERC_404","animation_url","external_app_url","id","image_url","is_unique","metadata","attributes","trait_type","description","external_url","image","owner","holder_address_hash","thumbnails","WITHDRAWAL","receiver","validator_index","ZKSYNC_L2_TX_BATCH_STATUSES","React","blockQuery","BlockCeloEpochTag","isOpen","onOpen","onToggle","onClose","useDisclosure","data","celo","is_epoch_block","celoConfig","epochBlockNumber","L2UpgradeBlock","epoch_number","BLOCKS_PER_EPOCH","undefined","tag","Tag","colorScheme","onClick","onMouseEnter","onMouseLeave","content","LinkInternal","href","route","pathname","query","height_or_hash","String","Tooltip","label","maxW","textAlign","bgColor","color","BreakDownItem","percentage","addressFrom","isBurning","ZERO_ADDRESS","Flex","alignItems","columnGap","rowGap","flexWrap","Box","BigNumber","dividedBy","WEI","toFixed","TokenEntity","noCopy","onlySymbol","AddressEntity","truncation","IconSvg","boxSize","AddressFromTo","BlockDetailsBaseFeeCelo","totalBaseFee","totalFeeLabel","whiteSpace","span","Link","isExternal","DetailsInfoItem","hint","recipient","display","breakdown","flexDir","mt","map","item","DetailsInfoItemDivider","blob_gas_price","blob_gas_used","burnt_blob_fees","excess_blob_gas","burntBlobFees","blobFees","multipliedBy","Text","currencyUnits","ether","variant","space","WEI_IN_GWEI","gwei","toFormat","isEqualTo","ZERO","mr","div","Utilization","ml","toNumber","formatSigners","signers","join","nestedBlockBgColor","useColorModeValue","BlockDetailsZilliqaQuorumCertificate","br","ndash","apos","isNested","nested_quorum_certificates","Grid","fontSize","lineHeight","gridTemplateColumns","GridItem","fontWeight","view","my","base","lg","colSpan","wordBreak","signature","CopyToClipboard","text","Divider","Accordion","allowToggle","w","AccordionItem","borderWidth","_last","borderBottomWidth","isExpanded","AccordionButton","px","pt","pb","_hover","Hint","AccordionIcon","flexShrink","transform","AccordionPanel","flexDirection","p","borderRadius","_first","borderTopRightRadius","borderTopLeftRadius","proposed_by_validator_index","BlockDetails","setIsExpanded","router","useRouter","heightOrHash","getQueryParamString","isPlaceholderData","handleCutClick","flag","scroller","scrollTo","duration","smooth","handlePrevNextClick","nextId","increment","direction","push","totalReward","staticReward","burntFees","txFees","getBlockReward","block","minerReward","find","minus","plus","validatorTitle","rewardBreakDown","Skeleton","h","verificationTitle","capitalize","txsNum","blockTxsNum","tab","blockBlobTxsNum","dataAvailability","blob_transaction_count","blockTypeLabel","templateColumns","overflow","isLoading","isLoaded","PrevNext","prevLabel","nextLabel","isPrevDisabled","arbitrum","BlockEntityL1","l1_block_height","UI","views","hiddenFields","batch_number","BatchEntityL2","optimism","internal_id","batch_data_container","OptimisticL2TxnBatchDA","container","toLocaleString","DetailsTimestamp","beaconChain","withdrawals_count","zksync","L1_status","VerificationSteps","steps","currentStep","currentStepPending","TxEntityL1","StatusTag","total_reward","currency","zilliqa","base_fee","BlockGasUsed","gasTarget","minimum_gas_price","GWEI","gt","Element","textDecorationLine","textDecorationStyle","ZkSyncL2TxnBatchHashesInfo","BlockDetailsBlobInfo","bitcoin_merged_mining_header","alignSelf","HashStringShortenDynamic","bitcoin_merged_mining_coinbase_transaction","RawDataSnippet","showCopy","textareaMaxHeight","bitcoin_merged_mining_merkle_proof","hash_for_merged_mining","send_count","send_root","delayed_messages","quorum_certificate","aggregate_quorum_certificate","useLazyLoadedList","rootRef","resourceName","queryOptions","pathParams","useApiInfiniteQuery","apiFetch","useApiFetch","queryKey","getResourceKey","useInfiniteQuery","queryFn","queryParams","context","pageParam","initialPageParam","getNextPageParam","lastPage","ref","inView","useInView","root","current","triggerOnce","skip","enabled","isFetchingNextPage","hasNextPage","fetchNextPage","cutRef","formatRewardType","replaceAll","BlockEpochElectionRewardDetailsMobile","reward_type","refetchOnMount","maxH","overflowY","pages","page","items","flat","getCurrencyValue","account","noIcon","valueStr","associated_account","isFetching","ContentLoader","isError","section","accuracy","py","borderColor","cursor","IconButton","aria-label","icon","transitionDuration","EpochRewardTypeTag","BlockEpochElectionRewardDetailsDesktop","titles","getRewardDetailsTableTitles","mb","BlockEpochElectionRewardsTableItem","mainRowBorderColor","Tr","Td","getRewardNumText","num","postfix1","postfix2","justifyContent","pr","Heading","as","Hide","below","ssr","Table","style","tableLayout","Thead","Th","width","isNumeric","Tbody","Object","entries","key","entry","Show","BlockEpochElectionRewardsListItem","isMobile","useIsMobile","TokenTransferSnippet","noAddressIcons","BlockEpochRewards","useApiQuery","placeholderData","DataFetchAlert","BlockEpochRewardsDistribution","BlockEpochElectionRewards","WithdrawalsList","renderedItemsNum","useLazyRenderedList","BeaconChainWithdrawalsListItem","blockWithdrawalsQuery","BlockWithdrawals","BeaconChainWithdrawalsList","BeaconChainWithdrawalsTable","top","isVisible","TABS_HEIGHT","DataListDisplay","emptyText","emptyPagination","onNextPageClick","onPrevPageClick","resetPage","hasPages","canGoBackwards","TAB_LIST_PROPS","marginBottom","marginTop","BlockPageContent","appProps","useAppContext","useBlockQuery","isRefetchEnabled","setRefetchEnabled","apiQuery","BLOCK","retry","failureCount","refetchInterval","SECOND","rpcQuery","useQuery","blockParams","getBlock","catch","select","Number","dayjs","unix","format","unknownAddress","toString","errorUpdateCount","isRpcQuery","isDegradedData","blockTxsQuery","useBlockTxsQuery","useQueryWithPages","options","TX","items_count","includeTransactions","tx","confirmation_duration","gas_price","gasPrice","max_fee_per_gas","max_priority_fee_per_gas","position","hexToDecimal","raw_input","confirmations","fee","created_contract","result","transaction_burnt_fee","revert_reason","decoded_input","has_error_in_internal_transactions","token_transfers","token_transfers_overflow","transaction_types","transaction_tag","actions","GET_BLOCK_WITH_TRANSACTIONS","rpcQueryWithPages","onFilterChange","onSortingChange","useBlockWithdrawalsQuery","withdrawal","sort","a","b","blockBlobTxsQuery","useBlockBlobTxsQuery","filters","hasPagination","tabs","title","component","ServiceDegradationWarning","TxsWithFrontendSorting","showBlockInfo","showSocketInfo","backLink","referrer","includes","url","throwOnAbsentParamError","throwOnResourceLoadError","titleSecondRow","fontFamily","minW","chakra","NetworkExplorers","pathParam","PageTitle","contentAfter","secondRow","TabsSkeleton","RoutedTabs","tabListProps","rightSlot","Pagination","stickyEnabled","className","ContainerWithScrollY","gradientHeight","children","onScrollVisibilityChange","hasScroll","setHasScroll","scrollHeight","clientHeight","gradientEndColor","_after","bottom","left","right","bgGradient","LabelScrollText","align","Label","_notFirst","HintPopover","Value","pl","ValueWithScroll","borderBottom","fromNow","TextSeparator","TYPE_TAGS","popoverProps","popoverContentProps","popoverBodyProps","Popover","trigger","isLazy","placement","PopoverTrigger","Portal","PopoverContent","PopoverArrow","PopoverBody","DarkMode","Container","isAnimated","motion","initial","opacity","scale","animate","transitionTimingFunction","paddingY","borderTopWidth","ListItemMobileGrid","justifySelf","defaultIconColor","explorersLinks","explorers","explorer","paths","URL","stripTrailingSlash","baseUrl","LinkExternal","logo","Image","src","alt","VerifyWith","links","longText","shortText","PopoverTriggerTooltip","isDisabled","openDelay","isNextDisabled","handelPrevClick","handelNextClick","beforeSlot","textareaMinHeight","contentProps","minH","overflowX","rightSlotProps","leftSlot","leftSlotProps","onTabChange","themeProps","tabIndex","useTabIndexFromQuery","tabsRef","useRef","handleTabChange","nextTab","queryForPathname","pickBy","tabId","isArray","shallow","useEffect","scroll_to_tabs","scrollIntoView","TabsWithScroll","defaultTabIndex","SkeletonTabText","mx","tabFromQuery","findIndex","subTabs","some","usd","exchangeRate","accuracyUsd","noSymbol","NftTokenTransferSnippet","tokenId","tokenIdContent","NftEntity","flexGrow","TokenTransferSnippetFiat","TokenTransferSnippetNft","Button","isActive","above","is_contract","is_verified","implementations","private_tags","public_tags","watchlist_names","ens_domain_name","Alert","Spinner","GasUsedToTargetRatio","maximumFractionDigits","hasGasUtilization","separatorColor","props","defaultHref","BlockEntity","L1BaseUrl","EntityBase","Icon","Content","TruncatedValue","partsProps","distributeEntityProps","link","TxEntity","step","isLast","isPassed","VerificationStep","isPending","stepColor","HStack","gap","currentStepIndex","commit_transaction_hash","commit_transaction_timestamp","prove_transaction_hash","prove_transaction_timestamp","execute_transaction_hash","execute_transaction_timestamp","filterValue","socketInfoAlert","socketInfoNum","currentAddress","enableTimeIncrement","setSortByValue","sorting","useTxsSort","TxsContent","setSorting","feature","TimeAgoWithTooltip","CurrencyValue","BeaconChainWithdrawalsTableItem","verticalAlign","tr"],"sourceRoot":"","ignoreList":[17,18,71,72,73,74,75,76,77]}