{"version":3,"file":"static/chunks/3080-8d171cc89f8013fe.js","mappings":"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","sources":["webpack://_N_E/./lib/capitalizeFirstLetter.ts","webpack://_N_E/./lib/getCurrencyValue.ts","webpack://_N_E/./lib/getValueWithUnit.tsx","webpack://_N_E/./ui/shared/CurrencyValue.tsx","webpack://_N_E/./ui/shared/SocketNewItemsNotice.tsx","webpack://_N_E/./lib/hooks/useTimeAgoIncrement.tsx","webpack://_N_E/./ui/shared/TimeAgoWithTooltip.tsx","webpack://_N_E/./ui/shared/Utilization/Utilization.tsx","webpack://_N_E/./ui/shared/entities/address/AddressEntityWithTokenFilter.tsx","webpack://_N_E/./ui/shared/address/AddressFromTo.tsx","webpack://_N_E/./ui/shared/chakra/Tag.tsx","webpack://_N_E/./ui/shared/statusTag/StatusTag.tsx","webpack://_N_E/./ui/shared/tx/TxFee.tsx","webpack://_N_E/./ui/shared/AdditionalInfoButton.tsx","webpack://_N_E/./ui/txs/TxAdditionalInfoContent.tsx","webpack://_N_E/./ui/txs/TxAdditionalInfoContainer.tsx","webpack://_N_E/./ui/txs/TxAdditionalInfo.tsx"],"sourcesContent":["export default function capitalizeFirstLetter(text: string) {\n  if (!text || !text.length) {\n    return '';\n  }\n\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n","import BigNumber from 'bignumber.js';\n\nimport { ZERO } from 'lib/consts';\n\ninterface Params {\n  value: string;\n  exchangeRate?: string | null;\n  accuracy?: number;\n  accuracyUsd?: number;\n  decimals?: string | null;\n}\n\nexport default function getCurrencyValue({ value, accuracy, accuracyUsd, decimals, exchangeRate }: Params) {\n  const valueCurr = BigNumber(value).div(BigNumber(10 ** Number(decimals || '18')));\n  const valueResult = accuracy ? valueCurr.dp(accuracy).toFormat() : valueCurr.toFormat();\n\n  let usdResult: string | undefined;\n  let usdBn = ZERO;\n\n  if (exchangeRate) {\n    const exchangeRateBn = new BigNumber(exchangeRate);\n    usdBn = valueCurr.times(exchangeRateBn);\n    if (accuracyUsd && !usdBn.isEqualTo(0)) {\n      const usdBnDp = usdBn.dp(accuracyUsd);\n      usdResult = usdBnDp.isEqualTo(0) ? usdBn.precision(accuracyUsd).toFormat() : usdBnDp.toFormat();\n    } else {\n      usdResult = usdBn.toFormat();\n    }\n  }\n\n  return { valueStr: valueResult, usd: usdResult, usdBn };\n}\n","import BigNumber from 'bignumber.js';\n\nimport type { Unit } from 'types/unit';\n\nimport { WEI, GWEI } from 'lib/consts';\n\nexport default function getValueWithUnit(value: string | number, unit: Unit = 'wei') {\n  let unitBn: BigNumber.Value;\n  switch (unit) {\n    case 'wei':\n      unitBn = WEI;\n      break;\n    case 'gwei':\n      unitBn = GWEI;\n      break;\n    default:\n      unitBn = new BigNumber(1);\n  }\n\n  const valueBn = new BigNumber(value);\n  const valueCurr = valueBn.dividedBy(unitBn);\n  return valueCurr;\n}\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ninterface Props {\n  value: string;\n  currency?: string;\n  exchangeRate?: string | null;\n  className?: string;\n  accuracy?: number;\n  accuracyUsd?: number;\n  decimals?: string | null;\n  isLoading?: boolean;\n}\n\nconst CurrencyValue = ({ value, currency = '', decimals, exchangeRate, className, accuracy, accuracyUsd, isLoading }: Props) => {\n  if (isLoading) {\n    return (\n      <Skeleton className={ className } display=\"inline-block\">0.00 ($0.00)</Skeleton>\n    );\n  }\n\n  if (value === undefined || value === null) {\n    return (\n      <chakra.span className={ className }>\n        -\n      </chakra.span>\n    );\n  }\n  const { valueStr: valueResult, usd: usdResult } = getCurrencyValue({ value, accuracy, accuracyUsd, exchangeRate, decimals });\n\n  return (\n    <chakra.span className={ className } display=\"inline-flex\" rowGap={ 3 } fontSize=\"14px\" columnGap={ 1 }>\n      <chakra.span display=\"inline-block\">\n        { valueResult }{ currency ? ` ${ currency }` : '' }\n      </chakra.span>\n      { usdResult && <chakra.span color=\"text_secondary\" fontWeight={ 400 }>(${ usdResult })</chakra.span> }\n    </chakra.span>\n  );\n};\n\nexport default React.memo(chakra(CurrencyValue));\n","import { Alert, Link, Text, chakra, Tr, Td } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ninterface InjectedProps {\n  content: React.ReactNode;\n}\n\ninterface Props {\n  type?: 'transaction' | 'token_transfer' | 'deposit' | 'block';\n  children?: (props: InjectedProps) => React.JSX.Element;\n  className?: string;\n  url: string;\n  alert?: string;\n  num?: number;\n  isLoading?: boolean;\n}\n\nconst SocketNewItemsNotice = chakra(({ children, className, url, num, alert, type = 'transaction', isLoading }: Props) => {\n  const alertContent = (() => {\n    if (alert) {\n      return alert;\n    }\n\n    let name;\n\n    switch (type) {\n      case 'token_transfer':\n        name = 'token transfer';\n        break;\n      case 'deposit':\n        name = 'deposit';\n        break;\n      case 'block':\n        name = 'block';\n        break;\n      default:\n        name = 'transaction';\n        break;\n    }\n\n    if (!num) {\n      return `scanning new ${ name }s...`;\n    }\n\n    return (\n      <>\n        <Link href={ url }>{ num.toLocaleString() } more { name }{ num > 1 ? 's' : '' }</Link>\n        <Text whiteSpace=\"pre\"> ha{ num > 1 ? 've' : 's' } come in</Text>\n      </>\n    );\n  })();\n\n  const color = 'black';\n  const bgColor = 'linear-gradient(90deg, #FE6901 -7.32%, #FF7FFE 81.62%)';\n\n  const content = !isLoading ? (\n    <Alert\n      className={ className }\n      status=\"warning\"\n      px={ 4 }\n      py=\"6px\"\n      fontWeight={ 400 }\n      fontSize=\"sm\"\n      lineHeight={ 5 }\n      bg={ bgColor }\n      color={ color }\n    >\n      { alertContent }\n    </Alert>\n  ) : <Skeleton className={ className } h=\"33px\"/>;\n\n  return children ? children({ content }) : content;\n});\n\nexport default SocketNewItemsNotice;\n\nexport const Desktop = ({ ...props }: Props) => {\n  return (\n    <SocketNewItemsNotice\n      borderRadius={ props.isLoading ? 'sm' : 0 }\n      h={ props.isLoading ? 5 : 'auto' }\n      maxW={ props.isLoading ? '215px' : undefined }\n      w=\"100%\"\n      mx={ props.isLoading ? 4 : 0 }\n      my={ props.isLoading ? '6px' : 0 }\n      { ...props }\n    >\n      { ({ content }) => <Tr><Td colSpan={ 100 } p={ 0 } _first={{ p: 0 }} _last={{ p: 0 }}>{ content }</Td></Tr> }\n    </SocketNewItemsNotice>\n  );\n};\n\nexport const Mobile = ({ ...props }: Props) => {\n  return (\n    <SocketNewItemsNotice\n      borderBottomRadius={ 0 }\n      { ...props }\n    />\n  );\n};\n","import React from 'react';\n\nimport { DAY, HOUR, MINUTE, SECOND } from 'lib/consts';\nimport dayjs from 'lib/date/dayjs';\n\nfunction getUnits(diff: number) {\n  if (diff < MINUTE) {\n    return [ SECOND, MINUTE ];\n  }\n\n  if (diff < HOUR) {\n    return [ MINUTE, HOUR ];\n  }\n\n  if (diff < DAY) {\n    return [ HOUR, DAY ];\n  }\n\n  return [ DAY, 2 * DAY ];\n}\n\nfunction getUpdateParams(ts: string | number) {\n  const timeDiff = Date.now() - new Date(ts).getTime();\n  const [ unit, higherUnit ] = getUnits(timeDiff);\n\n  if (unit === DAY) {\n    return { interval: DAY };\n  }\n\n  const leftover = unit - timeDiff % unit;\n\n  return {\n    startTimeout: unit === SECOND ?\n      0 :\n      // here we assume that in current dayjs locale time difference is rounded by Math.round function\n      // so we have to update displayed value whenever time comes over the middle of the unit interval\n      // since it will be rounded to the upper bound\n      (leftover < unit / 2 ? leftover + unit / 2 : leftover - unit / 2) + SECOND,\n    endTimeout: higherUnit - timeDiff + SECOND,\n    interval: unit,\n  };\n}\n\nexport default function useTimeAgoIncrement(ts: string | number | null, isEnabled?: boolean) {\n  const [ value, setValue ] = React.useState(ts ? dayjs(ts).fromNow() : null);\n\n  React.useEffect(() => {\n    if (ts !== null) {\n      const timeouts: Array<number> = [];\n      const intervals: Array<number> = [];\n\n      const startIncrement = () => {\n        const { startTimeout, interval, endTimeout } = getUpdateParams(ts);\n        if (!startTimeout && !endTimeout) {\n          return;\n        }\n\n        let intervalId: number;\n\n        const startTimeoutId = window.setTimeout(() => {\n          setValue(dayjs(ts).fromNow());\n\n          intervalId = window.setInterval(() => {\n            setValue(dayjs(ts).fromNow());\n          }, interval);\n\n          intervals.push(intervalId);\n        }, startTimeout);\n\n        const endTimeoutId = window.setTimeout(() => {\n          window.clearInterval(intervalId);\n          startIncrement();\n        }, endTimeout);\n\n        timeouts.push(startTimeoutId);\n        timeouts.push(endTimeoutId);\n      };\n\n      isEnabled && startIncrement();\n\n      !isEnabled && setValue(dayjs(ts).fromNow());\n\n      return () => {\n        timeouts.forEach(window.clearTimeout);\n        intervals.forEach(window.clearInterval);\n      };\n    }\n  }, [ isEnabled, ts ]);\n\n  return value;\n}\n","import { Tooltip, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport dayjs from 'lib/date/dayjs';\nimport useTimeAgoIncrement from 'lib/hooks/useTimeAgoIncrement';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\n\ntype Props = {\n  timestamp?: string | number | null;\n  fallbackText?: string;\n  isLoading?: boolean;\n  enableIncrement?: boolean;\n  className?: string;\n};\n\nconst TimeAgoWithTooltip = ({ timestamp, fallbackText, isLoading, enableIncrement, className }: Props) => {\n  const timeAgo = useTimeAgoIncrement(timestamp || '', enableIncrement && !isLoading);\n  if (!timestamp && !fallbackText) {\n    return null;\n  }\n\n  const content = timestamp ?\n    <Tooltip label={ dayjs(timestamp).format('llll') }><span>{ timeAgo }</span></Tooltip> :\n    <span>{ fallbackText }</span>;\n\n  return (\n    <Skeleton isLoaded={ !isLoading } className={ className }>\n      { content }\n    </Skeleton>\n  );\n};\n\nexport default chakra(TimeAgoWithTooltip);\n","import { Box, Flex, chakra, useColorModeValue } from '@chakra-ui/react';\nimport { clamp } from 'es-toolkit';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\ninterface Props {\n  className?: string;\n  value: number;\n  colorScheme?: 'green' | 'gray';\n  isLoading?: boolean;\n}\n\nconst WIDTH = 50;\n\nconst Utilization = ({ className, value, colorScheme = 'green', isLoading }: Props) => {\n  const valueString = (clamp(value * 100 || 0, 0, 100)).toLocaleString(undefined, { maximumFractionDigits: 2 }) + '%';\n  const colorGrayScheme = useColorModeValue('gray.500', 'gray.400');\n  const color = colorScheme === 'gray' ? colorGrayScheme : 'green.500';\n\n  return (\n    <Flex className={ className } alignItems=\"center\" columnGap={ 2 }>\n      <Skeleton isLoaded={ !isLoading } w={ `${ WIDTH }px` } h=\"4px\" borderRadius=\"full\" overflow=\"hidden\">\n        <Box bg={ useColorModeValue('blackAlpha.200', 'whiteAlpha.200') } h=\"100%\">\n          <Box bg={ color } w={ valueString } h=\"100%\"/>\n        </Box>\n      </Skeleton>\n      <Skeleton isLoaded={ !isLoading } color={ color } fontWeight=\"bold\">\n        <span>\n          { valueString }\n        </span>\n      </Skeleton>\n    </Flex>\n  );\n};\n\nexport default React.memo(chakra(Utilization));\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport * as AddressEntity from './AddressEntity';\n\ninterface Props extends AddressEntity.EntityProps {\n  tokenHash: string;\n}\n\nconst AddressEntityWithTokenFilter = (props: Props) => {\n  const defaultHref = route({\n    pathname: '/address/[hash]',\n    query: {\n      ...props.query,\n      hash: props.address.hash,\n      tab: 'token_transfers',\n      token: props.tokenHash,\n      scroll_to_tabs: 'true',\n    },\n  });\n\n  return (\n    <AddressEntity.default { ...props } href={ props.href ?? defaultHref }/>\n  );\n};\n\nexport default chakra(AddressEntityWithTokenFilter);\n","import type { ThemeTypings } from '@chakra-ui/react';\nimport { Flex, Grid, chakra, useBreakpointValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { AddressParam } from 'types/api/addressParams';\n\nimport type { EntityProps } from 'ui/shared/entities/address/AddressEntity';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport AddressEntityWithTokenFilter from 'ui/shared/entities/address/AddressEntityWithTokenFilter';\n\ntype Mode = 'compact' | 'long';\n\ninterface Props {\n  from: AddressParam;\n  to: AddressParam | null;\n  current?: string;\n  mode?: Mode | Partial<Record<ThemeTypings['breakpoints'], Mode>>;\n  className?: string;\n  isLoading?: boolean;\n  tokenHash?: string;\n  truncation?: EntityProps['truncation'];\n  noIcon?: boolean;\n}\n\nconst AddressFromTo = ({ from, to, current, mode: modeProp, className, isLoading, tokenHash = '', noIcon }: Props) => {\n  const mode = useBreakpointValue(\n    {\n      base: (typeof modeProp === 'object' ? modeProp.base : modeProp),\n      lg: (typeof modeProp === 'object' ? modeProp.lg : modeProp),\n      xl: (typeof modeProp === 'object' ? modeProp.xl : modeProp),\n    },\n  ) ?? 'long';\n\n  const Entity = tokenHash ? AddressEntityWithTokenFilter : AddressEntity;\n\n  if (mode === 'compact') {\n    return (\n      <Flex className={ className } flexDir=\"column\" rowGap={ 3 }>\n        <Flex alignItems=\"center\" columnGap={ 2 }>\n          <Entity\n            address={ from }\n            isLoading={ isLoading }\n            noLink={ current === from.hash }\n            noCopy={ current === from.hash }\n            noIcon={ noIcon }\n            tokenHash={ tokenHash }\n            truncation=\"constant\"\n            maxW=\"calc(100% - 28px)\"\n            w=\"min-content\"\n          />\n        </Flex>\n        { to && (\n          <Entity\n            address={ to }\n            isLoading={ isLoading }\n            noLink={ current === to.hash }\n            noCopy={ current === to.hash }\n            noIcon={ noIcon }\n            tokenHash={ tokenHash }\n            truncation=\"constant\"\n            maxW=\"calc(100% - 28px)\"\n            w=\"min-content\"\n          />\n        ) }\n      </Flex>\n    );\n  }\n\n  const isOutgoing = current === from.hash;\n  const iconSize = 20;\n\n  return (\n    <Grid className={ className } alignItems=\"center\" gridTemplateColumns={ `minmax(auto, min-content) ${ iconSize }px minmax(auto, min-content)` }>\n      <Entity\n        address={ from }\n        isLoading={ isLoading }\n        noLink={ isOutgoing }\n        noCopy={ isOutgoing }\n        noIcon={ noIcon }\n        tokenHash={ tokenHash }\n        truncation=\"constant\"\n        mr={ isOutgoing ? 4 : 2 }\n      />\n      { to && (\n        <Entity\n          address={ to }\n          isLoading={ isLoading }\n          noLink={ current === to.hash }\n          noCopy={ current === to.hash }\n          noIcon={ noIcon }\n          tokenHash={ tokenHash }\n          truncation=\"constant\"\n          ml={ 3 }\n        />\n      ) }\n    </Grid>\n  );\n};\n\nexport default chakra(AddressFromTo);\n","import { Tag as ChakraTag } from '@chakra-ui/react';\nimport type { TagProps } from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport TruncatedTextTooltip from 'ui/shared/TruncatedTextTooltip';\n\nexport interface Props extends TagProps {\n  isLoading?: boolean;\n}\n\nconst Tag = ({ isLoading, ...props }: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n\n  if (props.isTruncated && typeof props.children === 'string') {\n    if (!props.children) {\n      return null;\n    }\n\n    return (\n      <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"12px\" maxW=\"100%\">\n        <TruncatedTextTooltip label={ props.children }>\n          <ChakraTag { ...props } ref={ ref }/>\n        </TruncatedTextTooltip>\n      </Skeleton>\n    );\n  }\n  return (\n    <Skeleton isLoaded={ !isLoading } display=\"inline-block\" borderRadius=\"12px\" maxW=\"100%\">\n      <ChakraTag { ...props } ref={ ref }/>\n    </Skeleton>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tag));\n","import { TagLabel, Tooltip, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport capitalizeFirstLetter from 'lib/capitalizeFirstLetter';\nimport Tag from 'ui/shared/chakra/Tag';\n\nexport type StatusTagType = 'ok' | 'error' | 'pending';\n\nexport interface Props {\n  type: 'ok' | 'error' | 'pending';\n  text: string;\n  errorText?: string | null;\n  isLoading?: boolean;\n  className?: string;\n}\n\nconst StatusTag = ({ type, text, errorText, isLoading, className }: Props) => {\n  let colorScheme;\n\n  const capitalizedText = capitalizeFirstLetter(text);\n\n  switch (type) {\n    case 'ok':\n      colorScheme = 'green';\n      break;\n    case 'error':\n      colorScheme = 'red';\n      break;\n    case 'pending':\n      colorScheme = 'gray';\n      break;\n  }\n\n  return (\n    <Tooltip label={ errorText }>\n      <Tag colorScheme={ colorScheme } display=\"flex\" px=\"8px\" isLoading={ isLoading } className={ className }>\n        <TagLabel display=\"block\" fontSize=\"12px\">{ capitalizedText }</TagLabel>\n      </Tag>\n    </Tooltip>\n  );\n};\n\nexport default chakra(StatusTag);\n","import { chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Transaction } from 'types/api/transaction';\n\nimport config from 'configs/app';\nimport getCurrencyValue from 'lib/getCurrencyValue';\nimport { currencyUnits } from 'lib/units';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CurrencyValue from 'ui/shared/CurrencyValue';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\n\ninterface Props {\n  className?: string;\n  isLoading?: boolean;\n  tx: Transaction;\n  withCurrency?: boolean;\n  withUsd?: boolean;\n  accuracy?: number;\n  accuracyUsd?: number;\n}\n\nconst TxFee = ({ className, tx, accuracy, accuracyUsd, isLoading, withCurrency = true, withUsd }: Props) => {\n\n  if (tx.celo?.gas_token) {\n    const token = tx.celo.gas_token;\n    const { valueStr, usd } = getCurrencyValue({\n      value: tx.fee.value || '0',\n      exchangeRate: token.exchange_rate,\n      decimals: token.decimals,\n      accuracy,\n      accuracyUsd,\n    });\n    return (\n      <Skeleton whiteSpace=\"pre-wrap\" wordBreak=\"break-word\" isLoaded={ !isLoading } display=\"flex\" flexWrap=\"wrap\" className={ className }>\n        <span>{ valueStr } </span>\n        <TokenEntity token={ token } noCopy onlySymbol w=\"auto\" ml={ 1 }/>\n        { usd && withUsd && <chakra.span color=\"text_secondary\"> (${ usd })</chakra.span> }\n      </Skeleton>\n    );\n  }\n\n  if (tx.stability_fee) {\n    const token = tx.stability_fee.token;\n    const { valueStr, usd } = getCurrencyValue({\n      value: tx.stability_fee.total_fee,\n      exchangeRate: token.exchange_rate,\n      decimals: token.decimals,\n      accuracy,\n      accuracyUsd,\n    });\n\n    return (\n      <Skeleton whiteSpace=\"pre\" isLoaded={ !isLoading } display=\"flex\" className={ className }>\n        <span>{ valueStr } </span>\n        { valueStr !== '0' && <TokenEntity token={ token } noCopy onlySymbol w=\"auto\" ml={ 1 }/> }\n        { usd && withUsd && <chakra.span color=\"text_secondary\"> (${ usd })</chakra.span> }\n      </Skeleton>\n    );\n  }\n\n  const showCurrency = withCurrency && !config.UI.views.tx.hiddenFields?.fee_currency;\n\n  return (\n    <CurrencyValue\n      value={ tx.fee.value }\n      currency={ showCurrency ? currencyUnits.ether : '' }\n      exchangeRate={ withUsd ? tx.exchange_rate : null }\n      accuracy={ accuracy }\n      accuracyUsd={ accuracyUsd }\n      flexWrap=\"wrap\"\n      className={ className }\n      isLoading={ isLoading }\n    />\n  );\n};\n\nexport default React.memo(chakra(TxFee));\n","import {\n  chakra,\n  Button,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport IconSvg from 'ui/shared/IconSvg';\n\ninterface Props {\n  isOpen?: boolean;\n  isLoading?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nconst AdditionalInfoButton = ({ isOpen, onClick, className, isLoading }: Props, ref: React.ForwardedRef<HTMLButtonElement>) => {\n  if (isLoading) {\n    return <Skeleton boxSize={ 6 } borderRadius=\"sm\" flexShrink={ 0 }/>;\n  }\n\n  return (\n    <Button\n      variant=\"unstyled\"\n      display=\"inline-flex\"\n      alignItems=\"center\"\n      className={ className }\n      ref={ ref }\n      borderRadius=\"8px\"\n      w=\"24px\"\n      h=\"24px\"\n      onClick={ onClick }\n      cursor=\"pointer\"\n      flexShrink={ 0 }\n      aria-label=\"Transaction info\"\n    >\n      <IconSvg\n        name=\"info\"\n        boxSize={ 5 }\n        color={ isOpen ? 'white' : 'white' }\n        _hover={{ color: 'white' }}\n      />\n    </Button>\n  );\n};\n\nexport default chakra(React.forwardRef(AdditionalInfoButton));\n","import { Box, Heading, Text, Flex } from '@chakra-ui/react';\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\n\nimport type { Transaction } from 'types/api/transaction';\n\nimport { route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport getValueWithUnit from 'lib/getValueWithUnit';\nimport { currencyUnits } from 'lib/units';\nimport BlobEntity from 'ui/shared/entities/blob/BlobEntity';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\nimport TextSeparator from 'ui/shared/TextSeparator';\nimport TxFee from 'ui/shared/tx/TxFee';\nimport Utilization from 'ui/shared/Utilization/Utilization';\n\nconst TxAdditionalInfoContent = ({ tx }: { tx: Transaction }) => {\n  const sectionProps = {\n    borderBottom: '1px solid',\n    borderColor: 'divider',\n    paddingBottom: 4,\n  };\n\n  const sectionTitleProps = {\n    color: 'gray.500',\n    fontWeight: 600,\n    marginBottom: 3,\n  };\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"sm\" mb={ 6 }>Additional info </Heading>\n      { tx.blob_versioned_hashes && tx.blob_versioned_hashes.length > 0 && (\n        <Box { ...sectionProps } mb={ 4 }>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Text { ...sectionTitleProps }>Blobs: { tx.blob_versioned_hashes.length }</Text>\n            { tx.blob_versioned_hashes.length > 3 && (\n              <LinkInternal\n                href={ route({ pathname: '/tx/[hash]', query: { hash: tx.hash, tab: 'blobs' } }) }\n                mb={ 3 }\n              >\n                view all\n              </LinkInternal>\n            ) }\n          </Flex>\n          <Flex flexDir=\"column\" rowGap={ 3 }>\n            { tx.blob_versioned_hashes.slice(0, 3).map((hash, index) => (\n              <Flex key={ hash } columnGap={ 2 }>\n                <Box fontWeight={ 500 }>{ index + 1 }</Box>\n                <BlobEntity hash={ hash } noIcon/>\n              </Flex>\n            )) }\n          </Flex>\n        </Box>\n      ) }\n      { !config.UI.views.tx.hiddenFields?.tx_fee && (\n        <Box { ...sectionProps } mb={ 4 }>\n          { (tx.stability_fee !== undefined || tx.fee.value !== null) && (\n            <>\n              <Text { ...sectionTitleProps }>Transaction fee</Text>\n              <TxFee tx={ tx } withUsd accuracyUsd={ 2 } rowGap={ 0 }/>\n            </>\n          ) }\n        </Box>\n      ) }\n      { tx.gas_used !== null && (\n        <Box { ...sectionProps } mb={ 4 }>\n          <Text { ...sectionTitleProps }>Gas limit & usage by transaction</Text>\n          <Flex>\n            <Text>{ BigNumber(tx.gas_used).toFormat() }</Text>\n            <TextSeparator/>\n            <Text>{ BigNumber(tx.gas_limit).toFormat() }</Text>\n            <Utilization ml={ 4 } value={ Number(BigNumber(tx.gas_used).dividedBy(BigNumber(tx.gas_limit)).toFixed(2)) }/>\n          </Flex>\n        </Box>\n      ) }\n      { !config.UI.views.tx.hiddenFields?.gas_fees &&\n        (tx.base_fee_per_gas !== null || tx.max_fee_per_gas !== null || tx.max_priority_fee_per_gas !== null) && (\n        <Box { ...sectionProps } mb={ 4 }>\n          <Text { ...sectionTitleProps }>Gas fees ({ currencyUnits.gwei })</Text>\n          { tx.base_fee_per_gas !== null && (\n            <Box>\n              <Text as=\"span\" fontWeight=\"500\">Base: </Text>\n              <Text fontWeight=\"700\" as=\"span\">{ getValueWithUnit(tx.base_fee_per_gas, 'gwei').toFormat() }</Text>\n            </Box>\n          ) }\n          { tx.max_fee_per_gas !== null && (\n            <Box mt={ 1 }>\n              <Text as=\"span\" fontWeight=\"500\">Max: </Text>\n              <Text fontWeight=\"700\" as=\"span\">{ getValueWithUnit(tx.max_fee_per_gas, 'gwei').toFormat() }</Text>\n            </Box>\n          ) }\n          { tx.max_priority_fee_per_gas !== null && (\n            <Box mt={ 1 }>\n              <Text as=\"span\" fontWeight=\"500\">Max priority: </Text>\n              <Text fontWeight=\"700\" as=\"span\">{ getValueWithUnit(tx.max_priority_fee_per_gas, 'gwei').toFormat() }</Text>\n            </Box>\n          ) }\n        </Box>\n      ) }\n      { !(tx.blob_versioned_hashes && tx.blob_versioned_hashes.length > 0) && (\n        <Box { ...sectionProps } mb={ 4 }>\n          <Text { ...sectionTitleProps }>Others</Text>\n          <Box>\n            <Text as=\"span\" fontWeight=\"500\">Txn type: </Text>\n            <Text fontWeight=\"600\" as=\"span\">{ tx.type }</Text>\n            { tx.type === 2 && <Text fontWeight=\"400\" as=\"span\" ml={ 1 } color=\"gray.500\">(EIP-1559)</Text> }\n          </Box>\n          <Box mt={ 1 }>\n            <Text as=\"span\" fontWeight=\"500\">Nonce: </Text>\n            <Text fontWeight=\"600\" as=\"span\">{ tx.nonce }</Text>\n          </Box>\n          <Box mt={ 1 }>\n            <Text as=\"span\" fontWeight=\"500\">Position: </Text>\n            <Text fontWeight=\"600\" as=\"span\">{ tx.position }</Text>\n          </Box>\n        </Box>\n      ) }\n      <LinkInternal href={ route({ pathname: '/tx/[hash]', query: { hash: tx.hash } }) }>More details</LinkInternal>\n    </>\n  );\n};\n\nexport default React.memo(TxAdditionalInfoContent);\n","import { Box, Divider } from '@chakra-ui/react';\nimport React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport DataFetchAlert from 'ui/shared/DataFetchAlert';\n\nimport TxAdditionalInfoContent from './TxAdditionalInfoContent';\n\ninterface Props {\n  hash: string;\n}\n\nconst TxAdditionalInfoContainer = ({ hash }: Props) => {\n  const { data, isError, isPending } = useApiQuery('tx', {\n    pathParams: { hash },\n    queryOptions: {\n      refetchOnMount: false,\n    },\n  });\n\n  if (isPending) {\n    return (\n      <Box>\n        <Skeleton w=\"130px\" h=\"24px\" borderRadius=\"full\" mb={ 6 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"100%\" h=\"16px\" borderRadius=\"full\"/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"100%\" h=\"16px\" borderRadius=\"full\"/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"100%\" h=\"16px\" borderRadius=\"full\"/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Box>\n          <Skeleton w=\"110px\" h=\"16px\" borderRadius=\"full\" mb={ 3 }/>\n          <Skeleton w=\"75%\" h=\"16px\" borderRadius=\"full\"/>\n          <Skeleton w=\"75%\" h=\"16px\" borderRadius=\"full\" mt={ 1 }/>\n          <Skeleton w=\"75%\" h=\"16px\" borderRadius=\"full\" mt={ 1 }/>\n        </Box>\n        <Divider my={ 4 }/>\n        <Skeleton w=\"80px\" h=\"16px\" borderRadius=\"full\"/>\n      </Box>\n    );\n  }\n\n  if (isError) {\n    return <DataFetchAlert/>;\n  }\n\n  return <TxAdditionalInfoContent tx={ data }/>;\n};\n\nexport default React.memo(TxAdditionalInfoContainer);\n","import {\n  chakra,\n  Modal,\n  ModalContent,\n  ModalCloseButton,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { Transaction } from 'types/api/transaction';\n\nimport AdditionalInfoButton from 'ui/shared/AdditionalInfoButton';\nimport Popover from 'ui/shared/chakra/Popover';\n\nimport TxAdditionalInfoContainer from './TxAdditionalInfoContainer';\nimport TxAdditionalInfoContent from './TxAdditionalInfoContent';\n\ntype Props =\n  ({\n    hash: string;\n    tx?: undefined;\n  } |\n  {\n    hash?: undefined;\n    tx: Transaction;\n  }) & {\n    isMobile?: boolean;\n    isLoading?: boolean;\n    className?: string;\n  };\n\nconst TxAdditionalInfo = ({ hash, tx, isMobile, isLoading, className }: Props) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const content = hash !== undefined ? <TxAdditionalInfoContainer hash={ hash }/> : <TxAdditionalInfoContent tx={ tx }/>;\n\n  if (isMobile) {\n    return (\n      <>\n        <AdditionalInfoButton onClick={ onOpen } isLoading={ isLoading } className={ className }/>\n        <Modal isOpen={ isOpen } onClose={ onClose } size=\"full\">\n          <ModalContent paddingTop={ 4 }>\n            <ModalCloseButton/>\n            { content }\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n  return (\n    <Popover placement=\"right-start\" openDelay={ 300 } isLazy>\n      { ({ isOpen }) => (\n        <>\n          <PopoverTrigger>\n            <AdditionalInfoButton isOpen={ isOpen } isLoading={ isLoading } className={ className }/>\n          </PopoverTrigger>\n          <PopoverContent border=\"1px solid\" borderColor=\"divider\">\n            <PopoverBody fontWeight={ 400 } fontSize=\"sm\">\n              { content }\n            </PopoverBody>\n          </PopoverContent>\n        </>\n      ) }\n    </Popover>\n  );\n};\n\nexport default React.memo(chakra(TxAdditionalInfo));\n"],"names":["capitalizeFirstLetter","text","length","charAt","toUpperCase","slice","getCurrencyValue","usdResult","value","accuracy","accuracyUsd","decimals","exchangeRate","valueCurr","BigNumber","div","Number","valueResult","dp","toFormat","usdBn","ZERO","exchangeRateBn","times","isEqualTo","usdBnDp","precision","valueStr","usd","getValueWithUnit","unitBn","unit","WEI","GWEI","valueBn","dividedBy","React","chakra","CurrencyValue","currency","className","isLoading","Skeleton","display","undefined","span","rowGap","fontSize","columnGap","color","fontWeight","SocketNewItemsNotice","children","url","num","alert","type","alertContent","name","Link","href","toLocaleString","Text","whiteSpace","content","h","Alert","status","px","py","lineHeight","bg","bgColor","Desktop","props","borderRadius","maxW","w","mx","my","Tr","Td","colSpan","p","_first","_last","borderBottomRadius","TimeAgoWithTooltip","timestamp","fallbackText","enableIncrement","timeAgo","useTimeAgoIncrement","isEnabled","setValue","ts","dayjs","fromNow","timeouts","intervals","startIncrement","intervalId","startTimeout","interval","endTimeout","getUpdateParams","timeDiff","Date","now","getTime","higherUnit","diff","MINUTE","SECOND","HOUR","DAY","leftover","startTimeoutId","window","setTimeout","setInterval","push","endTimeoutId","clearInterval","forEach","clearTimeout","Tooltip","label","format","isLoaded","Utilization","colorScheme","valueString","maximumFractionDigits","colorGrayScheme","useColorModeValue","Flex","alignItems","overflow","Box","defaultHref","route","pathname","AddressEntityWithTokenFilter","query","hash","address","tab","token","tokenHash","scroll_to_tabs","AddressEntity","useBreakpointValue","AddressFromTo","from","to","current","mode","modeProp","noIcon","base","lg","xl","Entity","flexDir","noLink","noCopy","truncation","isOutgoing","Grid","gridTemplateColumns","iconSize","mr","ml","Tag","ref","isTruncated","TruncatedTextTooltip","ChakraTag","errorText","capitalizedText","TagLabel","TxFee","tx","config","withCurrency","withUsd","celo","gas_token","fee","exchange_rate","wordBreak","flexWrap","TokenEntity","onlySymbol","stability_fee","total_fee","showCurrency","UI","views","hiddenFields","fee_currency","currencyUnits","ether","isOpen","AdditionalInfoButton","onClick","boxSize","flexShrink","Button","variant","cursor","aria-label","IconSvg","_hover","TxAdditionalInfoContent","sectionProps","borderBottom","borderColor","paddingBottom","sectionTitleProps","marginBottom","Heading","as","size","mb","blob_versioned_hashes","justifyContent","LinkInternal","map","index","BlobEntity","tx_fee","gas_used","TextSeparator","gas_limit","toFixed","gas_fees","base_fee_per_gas","max_fee_per_gas","max_priority_fee_per_gas","gwei","mt","nonce","position","TxAdditionalInfoContainer","data","isError","isPending","useApiQuery","pathParams","queryOptions","refetchOnMount","Divider","DataFetchAlert","TxAdditionalInfo","isMobile","onOpen","onClose","useDisclosure","Modal","ModalContent","paddingTop","ModalCloseButton","Popover","placement","openDelay","isLazy","PopoverTrigger","PopoverContent","border","PopoverBody"],"sourceRoot":"","ignoreList":[]}