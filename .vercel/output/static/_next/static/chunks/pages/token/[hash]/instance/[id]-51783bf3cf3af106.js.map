{"version":3,"file":"static/chunks/pages/token/[hash]/instance/[id]-51783bf3cf3af106.js","mappings":"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","sources":["webpack://_N_E/?6d3d","webpack://_N_E/./lib/networks/getNetworkTitle.ts","webpack://_N_E/./lib/metadata/compileValue.ts","webpack://_N_E/./lib/metadata/getCanonicalUrl.ts","webpack://_N_E/./lib/metadata/getPageOgType.ts","webpack://_N_E/./lib/metadata/templates/title.ts","webpack://_N_E/./lib/metadata/templates/description.ts","webpack://_N_E/./lib/metadata/templates/index.ts","webpack://_N_E/./lib/metadata/generate.ts","webpack://_N_E/./lib/metadata/update.ts","webpack://_N_E/./lib/metadata/index.ts","webpack://_N_E/./lib/hooks/useAdblockDetect.tsx","webpack://_N_E/./nextjs/PageNextJs.tsx","webpack://_N_E/./ui/tokenInstance/details/TokenInstanceCreatorAddress.tsx","webpack://_N_E/./lib/token/metadata/attributesParser.ts","webpack://_N_E/./lib/token/parseMetadata.ts","webpack://_N_E/./ui/tokenInstance/details/TokenInstanceMetadataInfo.tsx","webpack://_N_E/./ui/tokenInstance/details/TokenInstanceTransfersCount.tsx","webpack://_N_E/./ui/tokenInstance/TokenInstanceDetails.tsx","webpack://_N_E/./ui/tokenInstance/metadata/MetadataAccordionItem.tsx","webpack://_N_E/./ui/tokenInstance/metadata/utils.ts","webpack://_N_E/./ui/tokenInstance/metadata/MetadataAccordionItemTitle.tsx","webpack://_N_E/./lib/token/metadata/urlParser.ts","webpack://_N_E/./ui/tokenInstance/metadata/MetadataItemPrimitive.tsx","webpack://_N_E/./ui/tokenInstance/metadata/MetadataItemArray.tsx","webpack://_N_E/./ui/tokenInstance/metadata/MetadataItemObject.tsx","webpack://_N_E/./ui/tokenInstance/metadata/MetadataAccordion.tsx","webpack://_N_E/./ui/tokenInstance/TokenInstanceMetadata.tsx","webpack://_N_E/./ui/tokenInstance/TokenInstanceMetadataFetcher.tsx","webpack://_N_E/./ui/tokenInstance/TokenInstancePageTitle.tsx","webpack://_N_E/./ui/pages/TokenInstance.tsx","webpack://_N_E/./pages/token/[hash]/instance/[id].tsx","webpack://_N_E/./ui/shared/DetailsInfoItemDivider.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/token/[hash]/instance/[id]\",\n      function () {\n        return require(\"private-next-pages/token/[hash]/instance/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/token/[hash]/instance/[id]\"])\n      });\n    }\n  ","import config from 'configs/app';\n\n// TODO delete when page descriptions is refactored\nexport default function getNetworkTitle() {\n  return config.chain.name + (config.chain.shortName ? ` (${ config.chain.shortName })` : '') + ' Explorer';\n}\n","export default function compileValue(template: string, params: Record<string, string | Array<string> | undefined>) {\n  const PLACEHOLDER_REGEX = /%(\\w+)%/g;\n  return template.replaceAll(PLACEHOLDER_REGEX, (match, p1) => {\n    const value = params[p1];\n\n    if (Array.isArray(value)) {\n      return value.join(', ');\n    }\n\n    if (value === undefined) {\n      return '';\n    }\n\n    return value;\n  });\n}\n","import type { Route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nconst CANONICAL_ROUTES: Array<Route['pathname']> = [\n  '/',\n  '/txs',\n  '/ops',\n  '/verified-contracts',\n  '/name-domains',\n  '/withdrawals',\n  '/tokens',\n  '/stats',\n  '/api-docs',\n  '/graphiql',\n  '/gas-tracker',\n  '/apps',\n];\n\nexport default function getCanonicalUrl(pathname: Route['pathname']) {\n  if (CANONICAL_ROUTES.includes(pathname)) {\n    return config.app.baseUrl + pathname;\n  }\n}\n","import type { Route } from 'nextjs-routes';\n\ntype OGPageType = 'Homepage' | 'Root page' | 'Regular page';\n\nconst OG_TYPE_DICT: Record<Route['pathname'], OGPageType> = {\n  '/': 'Homepage',\n  '/txs': 'Root page',\n  '/txs/kettle/[hash]': 'Regular page',\n  '/tx/[hash]': 'Regular page',\n  '/blocks': 'Root page',\n  '/block/[height_or_hash]': 'Regular page',\n  '/block/countdown': 'Regular page',\n  '/block/countdown/[height]': 'Regular page',\n  '/accounts': 'Root page',\n  '/accounts/label/[slug]': 'Root page',\n  '/address/[hash]': 'Regular page',\n  '/verified-contracts': 'Root page',\n  '/contract-verification': 'Root page',\n  '/address/[hash]/contract-verification': 'Regular page',\n  '/tokens': 'Root page',\n  '/token/[hash]': 'Regular page',\n  '/token/[hash]/instance/[id]': 'Regular page',\n  '/apps': 'Root page',\n  '/apps/[id]': 'Regular page',\n  '/stats': 'Root page',\n  '/stats/[id]': 'Regular page',\n  '/api-docs': 'Regular page',\n  '/graphiql': 'Regular page',\n  '/search-results': 'Regular page',\n  '/auth/profile': 'Root page',\n  '/account/rewards': 'Regular page',\n  '/account/watchlist': 'Regular page',\n  '/account/api-key': 'Regular page',\n  '/account/custom-abi': 'Regular page',\n  '/account/tag-address': 'Regular page',\n  '/account/verified-addresses': 'Root page',\n  '/public-tags/submit': 'Regular page',\n  '/withdrawals': 'Root page',\n  '/visualize/sol2uml': 'Regular page',\n  '/csv-export': 'Regular page',\n  '/deposits': 'Root page',\n  '/output-roots': 'Root page',\n  '/dispute-games': 'Root page',\n  '/batches': 'Root page',\n  '/batches/[number]': 'Regular page',\n  '/blobs/[hash]': 'Regular page',\n  '/ops': 'Root page',\n  '/op/[hash]': 'Regular page',\n  '/404': 'Regular page',\n  '/name-domains': 'Root page',\n  '/name-domains/[name]': 'Regular page',\n  '/validators': 'Root page',\n  '/gas-tracker': 'Root page',\n  '/mud-worlds': 'Root page',\n  '/token-transfers': 'Root page',\n  '/advanced-filter': 'Root page',\n  '/pools': 'Root page',\n  '/pools/[hash]': 'Regular page',\n\n  // service routes, added only to make typescript happy\n  '/login': 'Regular page',\n  '/sprite': 'Regular page',\n  '/api/metrics': 'Regular page',\n  '/api/monitoring/invalid-api-schema': 'Regular page',\n  '/api/log': 'Regular page',\n  '/api/media-type': 'Regular page',\n  '/api/proxy': 'Regular page',\n  '/api/csrf': 'Regular page',\n  '/api/healthz': 'Regular page',\n  '/api/config': 'Regular page',\n  '/api/sprite': 'Regular page',\n};\n\nexport default function getPageOgType(pathname: Route['pathname']) {\n  return OG_TYPE_DICT[pathname];\n}\n","import type { Route } from 'nextjs-routes';\n\nimport config from 'configs/app';\n\nconst TEMPLATE_MAP: Record<Route['pathname'], string> = {\n  '/': '%network_name% blockchain explorer - View %network_name% stats',\n  '/txs': '%network_name% transactions - %network_name% explorer',\n  '/txs/kettle/[hash]': '%network_name% kettle %hash% transactions',\n  '/tx/[hash]': '%network_name% transaction %hash%',\n  '/blocks': '%network_name% blocks',\n  '/block/[height_or_hash]': '%network_name% block %height_or_hash%',\n  '/block/countdown': '%network_name% block countdown index',\n  '/block/countdown/[height]': '%network_name% block %height% countdown',\n  '/accounts': '%network_name% top accounts',\n  '/accounts/label/[slug]': '%network_name% addresses search by label',\n  '/address/[hash]': '%network_name% address details for %hash%',\n  '/verified-contracts': 'Verified %network_name% contracts lookup - %network_name% explorer',\n  '/contract-verification': '%network_name% verify contract',\n  '/address/[hash]/contract-verification': '%network_name% contract verification for %hash%',\n  '/tokens': 'Tokens list - %network_name% explorer',\n  '/token/[hash]': '%network_name% token details',\n  '/token/[hash]/instance/[id]': '%network_name% NFT instance',\n  '/apps': '%network_name% DApps - Explore top apps',\n  '/apps/[id]': '%network_name% marketplace app',\n  '/stats': '%network_name% stats - %network_name% network insights',\n  '/stats/[id]': '%network_name% stats - %id% chart',\n  '/api-docs': '%network_name% API docs - %network_name% developer tools',\n  '/graphiql': 'GraphQL for %network_name% - %network_name% data query',\n  '/search-results': '%network_name% search result for %q%',\n  '/auth/profile': '%network_name% - my profile',\n  '/account/rewards': '%network_name% - rewards',\n  '/account/watchlist': '%network_name% - watchlist',\n  '/account/api-key': '%network_name% - API keys',\n  '/account/custom-abi': '%network_name% - custom ABI',\n  '/account/tag-address': '%network_name% - private tags',\n  '/account/verified-addresses': '%network_name% - my verified addresses',\n  '/public-tags/submit': '%network_name% - public tag requests',\n  '/withdrawals': '%network_name% withdrawals - track on %network_name% explorer',\n  '/visualize/sol2uml': '%network_name% Solidity UML diagram',\n  '/csv-export': '%network_name% export data to CSV',\n  '/deposits': '%network_name% deposits (L1 > L2)',\n  '/output-roots': '%network_name% output roots',\n  '/dispute-games': '%network_name% dispute games',\n  '/batches': '%network_name% txn batches',\n  '/batches/[number]': '%network_name% L2 txn batch %number%',\n  '/blobs/[hash]': '%network_name% blob %hash% details',\n  '/ops': 'User operations on %network_name% - %network_name% explorer',\n  '/op/[hash]': '%network_name% user operation %hash%',\n  '/404': '%network_name% error - page not found',\n  '/name-domains': '%network_name% name domains - %network_name% explorer',\n  '/name-domains/[name]': '%network_name% %name% domain details',\n  '/validators': '%network_name% validators list',\n  '/gas-tracker': 'Track %network_name% gas fees in %network_gwei%',\n  '/mud-worlds': '%network_name% MUD worlds list',\n  '/token-transfers': '%network_name% token transfers',\n  '/advanced-filter': '%network_name% advanced filter',\n  '/pools': '%network_name% DEX pools',\n  '/pools/[hash]': '%network_name% pool details',\n\n  // service routes, added only to make typescript happy\n  '/login': '%network_name% login',\n  '/sprite': '%network_name% SVG sprite',\n  '/api/metrics': '%network_name% node API prometheus metrics',\n  '/api/monitoring/invalid-api-schema': '%network_name% node API prometheus metrics',\n  '/api/log': '%network_name% node API request log',\n  '/api/media-type': '%network_name% node API media type',\n  '/api/proxy': '%network_name% node API proxy',\n  '/api/csrf': '%network_name% node API CSRF token',\n  '/api/healthz': '%network_name% node API health check',\n  '/api/config': '%network_name% node API app config',\n  '/api/sprite': '%network_name% node API SVG sprite content',\n};\n\nconst TEMPLATE_MAP_ENHANCED: Partial<Record<Route['pathname'], string>> = {\n  '/token/[hash]': '%network_name% %symbol% token details',\n  '/token/[hash]/instance/[id]': '%network_name% token instance for %symbol%',\n  '/apps/[id]': '%network_name% - %app_name%',\n  '/address/[hash]': '%network_name% address details for %domain_name%',\n  '/stats/[id]': '%title% chart on %network_name%',\n};\n\nexport function make(pathname: Route['pathname'], isEnriched = false) {\n  const template = (isEnriched ? TEMPLATE_MAP_ENHANCED[pathname] : undefined) ?? TEMPLATE_MAP[pathname];\n  const postfix = config.meta.promoteBlockscoutInTitle ? ' | Blockscout' : '';\n\n  return (template + postfix).trim();\n}\n","/* eslint-disable max-len */\nimport type { Route } from 'nextjs-routes';\n\n// equal og:description\nconst DEFAULT_TEMPLATE = 'Open-source block explorer by Blockscout. Search transactions, verify smart contracts, analyze addresses, and track network activity. Complete blockchain data and APIs for the %network_title% network.';\n\n// FIXME all page descriptions will be updated later\nconst TEMPLATE_MAP: Record<Route['pathname'], string> = {\n  '/': DEFAULT_TEMPLATE,\n  '/txs': DEFAULT_TEMPLATE,\n  '/txs/kettle/[hash]': DEFAULT_TEMPLATE,\n  '/tx/[hash]': 'View transaction %hash% on %network_title%',\n  '/blocks': DEFAULT_TEMPLATE,\n  '/block/[height_or_hash]': 'View the transactions, token transfers, and uncles for block %height_or_hash%',\n  '/block/countdown': DEFAULT_TEMPLATE,\n  '/block/countdown/[height]': DEFAULT_TEMPLATE,\n  '/accounts': DEFAULT_TEMPLATE,\n  '/accounts/label/[slug]': DEFAULT_TEMPLATE,\n  '/address/[hash]': 'View the account balance, transactions, and other data for %hash% on the %network_title%',\n  '/verified-contracts': DEFAULT_TEMPLATE,\n  '/contract-verification': DEFAULT_TEMPLATE,\n  '/address/[hash]/contract-verification': 'View the account balance, transactions, and other data for %hash% on the %network_title%',\n  '/tokens': DEFAULT_TEMPLATE,\n  '/token/[hash]': '%hash%, balances and analytics on the %network_title%',\n  '/token/[hash]/instance/[id]': '%hash%, balances and analytics on the %network_title%',\n  '/apps': DEFAULT_TEMPLATE,\n  '/apps/[id]': DEFAULT_TEMPLATE,\n  '/stats': DEFAULT_TEMPLATE,\n  '/stats/[id]': DEFAULT_TEMPLATE,\n  '/api-docs': DEFAULT_TEMPLATE,\n  '/graphiql': DEFAULT_TEMPLATE,\n  '/search-results': DEFAULT_TEMPLATE,\n  '/auth/profile': DEFAULT_TEMPLATE,\n  '/account/rewards': DEFAULT_TEMPLATE,\n  '/account/watchlist': DEFAULT_TEMPLATE,\n  '/account/api-key': DEFAULT_TEMPLATE,\n  '/account/custom-abi': DEFAULT_TEMPLATE,\n  '/account/tag-address': DEFAULT_TEMPLATE,\n  '/account/verified-addresses': DEFAULT_TEMPLATE,\n  '/public-tags/submit': 'Propose a new public tag for your address, contract or set of contracts for your dApp. Our team will review and approve your submission. Public tags are incredible tool which helps users identify contracts and addresses.',\n  '/withdrawals': DEFAULT_TEMPLATE,\n  '/visualize/sol2uml': DEFAULT_TEMPLATE,\n  '/csv-export': DEFAULT_TEMPLATE,\n  '/deposits': DEFAULT_TEMPLATE,\n  '/output-roots': DEFAULT_TEMPLATE,\n  '/dispute-games': DEFAULT_TEMPLATE,\n  '/batches': DEFAULT_TEMPLATE,\n  '/batches/[number]': DEFAULT_TEMPLATE,\n  '/blobs/[hash]': DEFAULT_TEMPLATE,\n  '/ops': DEFAULT_TEMPLATE,\n  '/op/[hash]': DEFAULT_TEMPLATE,\n  '/404': DEFAULT_TEMPLATE,\n  '/name-domains': DEFAULT_TEMPLATE,\n  '/name-domains/[name]': DEFAULT_TEMPLATE,\n  '/validators': DEFAULT_TEMPLATE,\n  '/gas-tracker': 'Explore real-time %network_title% gas fees with Blockscout\\'s advanced gas fee tracker. Get accurate %network_gwei% estimates and track transaction costs live.',\n  '/mud-worlds': DEFAULT_TEMPLATE,\n  '/token-transfers': DEFAULT_TEMPLATE,\n  '/advanced-filter': DEFAULT_TEMPLATE,\n  '/pools': DEFAULT_TEMPLATE,\n  '/pools/[hash]': DEFAULT_TEMPLATE,\n\n  // service routes, added only to make typescript happy\n  '/login': DEFAULT_TEMPLATE,\n  '/sprite': DEFAULT_TEMPLATE,\n  '/api/metrics': DEFAULT_TEMPLATE,\n  '/api/monitoring/invalid-api-schema': DEFAULT_TEMPLATE,\n  '/api/log': DEFAULT_TEMPLATE,\n  '/api/media-type': DEFAULT_TEMPLATE,\n  '/api/proxy': DEFAULT_TEMPLATE,\n  '/api/csrf': DEFAULT_TEMPLATE,\n  '/api/healthz': DEFAULT_TEMPLATE,\n  '/api/config': DEFAULT_TEMPLATE,\n  '/api/sprite': DEFAULT_TEMPLATE,\n};\n\nconst TEMPLATE_MAP_ENHANCED: Partial<Record<Route['pathname'], string>> = {\n  '/stats/[id]': '%description%',\n};\n\nexport function make(pathname: Route['pathname'], isEnriched = false) {\n  return (isEnriched ? TEMPLATE_MAP_ENHANCED[pathname] : undefined) ?? TEMPLATE_MAP[pathname] ?? '';\n}\n","export * as title from './title';\nexport * as description from './description';\n","import type { ApiData, Metadata } from './types';\nimport type { RouteParams } from 'nextjs/types';\n\nimport type { Route } from 'nextjs-routes';\n\nimport config from 'configs/app';\nimport getNetworkTitle from 'lib/networks/getNetworkTitle';\nimport { currencyUnits } from 'lib/units';\n\nimport compileValue from './compileValue';\nimport getCanonicalUrl from './getCanonicalUrl';\nimport getPageOgType from './getPageOgType';\nimport * as templates from './templates';\n\nexport default function generate<Pathname extends Route['pathname']>(route: RouteParams<Pathname>, apiData: ApiData<Pathname> = null): Metadata {\n  const params = {\n    ...route.query,\n    ...apiData,\n    network_name: config.chain.name,\n    network_title: getNetworkTitle(),\n    network_gwei: currencyUnits.gwei,\n  };\n\n  const title = compileValue(templates.title.make(route.pathname, Boolean(apiData)), params);\n  const description = compileValue(templates.description.make(route.pathname, Boolean(apiData)), params);\n\n  const pageOgType = getPageOgType(route.pathname);\n\n  return {\n    title: title,\n    description,\n    opengraph: {\n      title: title,\n      description: pageOgType !== 'Regular page' ? config.meta.og.description : '',\n      imageUrl: pageOgType !== 'Regular page' ? config.meta.og.imageUrl : '',\n    },\n    canonical: getCanonicalUrl(route.pathname),\n  };\n}\n","import type { ApiData } from './types';\nimport type { RouteParams } from 'nextjs/types';\n\nimport type { Route } from 'nextjs-routes';\n\nimport generate from './generate';\n\nexport default function update<Pathname extends Route['pathname']>(route: RouteParams<Pathname>, apiData: ApiData<Pathname>) {\n  const { title, description } = generate(route, apiData);\n\n  window.document.title = title;\n  window.document.querySelector('meta[name=\"description\"]')?.setAttribute('content', description);\n}\n","export { default as generate } from './generate';\nexport { default as update } from './update';\nexport * from './types';\n","import { useEffect } from 'react';\n\nimport type { AdBannerProviders } from 'types/client/adProviders';\n\nimport config from 'configs/app';\nimport { useAppContext } from 'lib/contexts/app';\nimport * as cookies from 'lib/cookies';\nimport isBrowser from 'lib/isBrowser';\n\nconst DEFAULT_URL = 'https://request-global.czilladx.com';\n\n// in general, detect should work with any ad-provider url (that is alive)\n// but we see some false-positive results in certain browsers\nconst TEST_URLS: Record<AdBannerProviders, string> = {\n  slise: 'https://v1.slise.xyz/serve',\n  coinzilla: 'https://request-global.czilladx.com',\n  adbutler: 'https://servedbyadbutler.com/app.js',\n  hype: 'https://api.hypelab.com/v1/scripts/hp-sdk.js',\n  // I don't have an url for getit to test\n  // getit: DEFAULT_URL,\n  none: DEFAULT_URL,\n};\n\nconst feature = config.features.adsBanner;\n\nexport default function useAdblockDetect() {\n  const hasAdblockCookie = cookies.get(cookies.NAMES.ADBLOCK_DETECTED, useAppContext().cookies);\n  const provider = feature.isEnabled && feature.provider;\n\n  useEffect(() => {\n    if (isBrowser() && !hasAdblockCookie && provider) {\n      const url = TEST_URLS[provider] || DEFAULT_URL;\n      fetch(url, {\n        method: 'HEAD',\n        mode: 'no-cors',\n        cache: 'no-store',\n      })\n        .then(() => {\n          cookies.set(cookies.NAMES.ADBLOCK_DETECTED, 'false', { expires: 1 });\n        })\n        .catch(() => {\n          cookies.set(cookies.NAMES.ADBLOCK_DETECTED, 'true', { expires: 1 });\n        });\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n","import Head from 'next/head';\nimport React from 'react';\n\nimport type { Route } from 'nextjs-routes';\nimport type { Props as PageProps } from 'nextjs/getServerSideProps';\n\nimport config from 'configs/app';\nimport useAdblockDetect from 'lib/hooks/useAdblockDetect';\nimport useGetCsrfToken from 'lib/hooks/useGetCsrfToken';\nimport * as metadata from 'lib/metadata';\nimport * as mixpanel from 'lib/mixpanel';\n\ninterface Props<Pathname extends Route['pathname']> {\n  pathname: Pathname;\n  children: React.ReactNode;\n  query?: PageProps<Pathname>['query'];\n  apiData?: PageProps<Pathname>['apiData'];\n}\n\nconst PageNextJs = <Pathname extends Route['pathname']>(props: Props<Pathname>) => {\n  const { title, description, opengraph, canonical } = metadata.generate(props, props.apiData);\n\n  useGetCsrfToken();\n  useAdblockDetect();\n\n  const isMixpanelInited = mixpanel.useInit();\n  mixpanel.useLogPageView(isMixpanelInited);\n\n  return (\n    <>\n      <Head>\n        <title>{ title }</title>\n        <meta name=\"description\" content={ description }/>\n        { canonical && <link rel=\"canonical\" href={ canonical }/> }\n\n        { /* OG TAGS */ }\n        <meta property=\"og:title\" content={ opengraph.title }/>\n        { opengraph.description && <meta property=\"og:description\" content={ opengraph.description }/> }\n        <meta property=\"og:image\" content={ opengraph.imageUrl }/>\n        <meta property=\"og:type\" content=\"website\"/>\n\n        { /* Twitter Meta Tags */ }\n        <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n        <meta property=\"twitter:domain\" content={ config.app.host }/>\n        <meta name=\"twitter:title\" content={ opengraph.title }/>\n        { opengraph.description && <meta name=\"twitter:description\" content={ opengraph.description }/> }\n        <meta property=\"twitter:image\" content={ opengraph.imageUrl }/>\n      </Head>\n      { props.children }\n    </>\n  );\n};\n\nexport default React.memo(PageNextJs);\n","import React from 'react';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport { ADDRESS_INFO } from 'stubs/address';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\n\ninterface Props {\n  hash: string;\n}\n\nconst TokenInstanceCreatorAddress = ({ hash }: Props) => {\n  const addressQuery = useApiQuery('address', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: Boolean(hash),\n      placeholderData: ADDRESS_INFO,\n    },\n  });\n\n  if (addressQuery.isError) {\n    return null;\n  }\n\n  if (!addressQuery.data?.creator_address_hash) {\n    return null;\n  }\n\n  const creatorAddress = {\n    hash: addressQuery.data.creator_address_hash,\n    filecoin: {\n      robust: addressQuery.data.creator_filecoin_robust_address,\n    },\n    is_contract: false,\n    implementations: null,\n  };\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint=\"Address that deployed this token contract\"\n        isLoading={ addressQuery.isPlaceholderData }\n      >\n        Creator\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <AddressEntity\n          address={ creatorAddress }\n          isLoading={ addressQuery.isPlaceholderData }\n        />\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default TokenInstanceCreatorAddress;\n","import { upperFirst } from 'es-toolkit';\n\nimport type { Metadata, MetadataAttributes } from 'types/client/token';\n\nimport dayjs from 'lib/date/dayjs';\n\nfunction formatValue(value: string | number, display: string | undefined, trait: string | undefined): Pick<MetadataAttributes, 'value' | 'value_type'> {\n  // https://docs.opensea.io/docs/metadata-standards#attributes\n  switch (display) {\n    case 'boost_number': {\n      return {\n        value: `+${ value } boost`,\n      };\n    }\n    case 'boost_percentage': {\n      return {\n        value: `${ value }% boost`,\n      };\n    }\n    case 'date': {\n      return {\n        value: dayjs(Number(value) * 1000).format('YYYY-MM-DD'),\n      };\n    }\n    default: {\n      try {\n        if (trait?.toLowerCase().includes('url') || value.toString().startsWith('http')) {\n          const url = new URL(String(value));\n          return {\n            value: url.toString(),\n            value_type: 'URL',\n          };\n        }\n        throw new Error();\n      } catch (error) {\n        return {\n          value: String(value),\n        };\n      }\n    }\n  }\n}\n\nexport default function attributesParser(attributes: Array<unknown>): Metadata['attributes'] {\n  return attributes\n    .map((item) => {\n      if (typeof item !== 'object' || !item) {\n        return;\n      }\n\n      const value = (() => {\n        if (!('value' in item)) {\n          return;\n        }\n        switch (typeof item.value) {\n          case 'string':\n          case 'number':\n            return item.value;\n          case 'boolean':\n            return String(item.value);\n          case 'object':\n            return JSON.stringify(item.value);\n        }\n      })();\n\n      const trait = 'trait_type' in item && typeof item.trait_type === 'string' ? item.trait_type : undefined;\n      const display = 'display_type' in item && typeof item.display_type === 'string' ? item.display_type : undefined;\n\n      if (value === undefined) {\n        return;\n      }\n\n      return {\n        ...formatValue(value, display, trait),\n        trait_type: upperFirst(trait || 'property'),\n      };\n    })\n    .filter((item) => item?.value)\n    .filter(Boolean);\n}\n","import type { TokenInstance } from 'types/api/token';\nimport type { Metadata } from 'types/client/token';\n\nimport attributesParser from './metadata/attributesParser';\n\nexport default function parseMetadata(raw: TokenInstance['metadata'] | undefined): Metadata | undefined {\n  if (!raw) {\n    return;\n  }\n\n  const parsed: Metadata = {};\n\n  if ('name' in raw && typeof raw.name === 'string') {\n    parsed.name = raw.name;\n  }\n\n  if ('description' in raw && typeof raw.description === 'string') {\n    parsed.description = raw.description;\n  }\n\n  if ('attributes' in raw && Array.isArray(raw.attributes)) {\n    parsed.attributes = attributesParser(raw.attributes);\n  }\n\n  if (Object.keys(parsed).length === 0) {\n    return;\n  }\n\n  return parsed;\n}\n","import { Grid, GridItem, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInstance } from 'types/api/token';\nimport type { MetadataAttributes } from 'types/client/token';\n\nimport parseMetadata from 'lib/token/parseMetadata';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport TruncatedValue from 'ui/shared/TruncatedValue';\n\nimport { useMetadataUpdateContext } from '../contexts/metadataUpdate';\n\ninterface Props {\n  data?: TokenInstance;\n  isLoading?: boolean;\n}\n\ninterface ItemProps {\n  data: MetadataAttributes;\n  isLoading?: boolean;\n}\n\nconst Item = ({ data, isLoading }: ItemProps) => {\n  const attributeBgColor = useColorModeValue('blackAlpha.50', 'whiteAlpha.50');\n\n  const value = (() => {\n    if (data.value_type === 'URL') {\n      return (\n        <LinkExternal\n          whiteSpace=\"nowrap\"\n          display=\"inline-flex\"\n          alignItems=\"center\"\n          w=\"100%\"\n          overflow=\"hidden\"\n          href={ data.value }\n          fontSize=\"sm\"\n          lineHeight={ 5 }\n          isLoading={ isLoading }\n        >\n          <TruncatedValue value={ data.value } w=\"calc(100% - 16px)\" isLoading={ isLoading }/>\n        </LinkExternal>\n      );\n    }\n\n    return <TruncatedValue value={ data.value } fontSize=\"sm\" w=\"100%\" isLoading={ isLoading }/>;\n  })();\n\n  return (\n    <GridItem\n      bgColor={ attributeBgColor }\n      borderRadius=\"md\"\n      px={ 4 }\n      py={ 2 }\n      display=\"flex\"\n      flexDir=\"column\"\n      alignItems=\"flex-start\"\n    >\n      <TruncatedValue\n        value={ data.trait_type }\n        fontSize=\"xs\"\n        w=\"100%\"\n        lineHeight={ 4 }\n        color=\"text_secondary\"\n        fontWeight={ 500 }\n        mb={ 1 }\n        isLoading={ isLoading }\n      />\n      { value }\n    </GridItem>\n  );\n};\n\nconst TokenInstanceMetadataInfo = ({ data, isLoading: isLoadingProp }: Props) => {\n  const { status: refetchStatus } = useMetadataUpdateContext() || {};\n\n  const metadata = React.useMemo(() => parseMetadata(data?.metadata), [ data ]);\n\n  const hasMetadata = metadata && Boolean((metadata.name || metadata.description || metadata.attributes));\n  if (!hasMetadata) {\n    return null;\n  }\n\n  const isLoading = isLoadingProp || refetchStatus === 'WAITING_FOR_RESPONSE';\n\n  return (\n    <>\n      <DetailsInfoItemDivider/>\n      { metadata?.name && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"NFT name\"\n            isLoading={ isLoading }\n          >\n            Name\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value\n            whiteSpace=\"normal\"\n            wordBreak=\"break-word\"\n          >\n            <Skeleton isLoaded={ !isLoading }>\n              { metadata.name }\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { metadata?.description && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"NFT description\"\n            isLoading={ isLoading }\n          >\n            Description\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value\n            whiteSpace=\"normal\"\n            wordBreak=\"break-word\"\n          >\n            <Skeleton isLoaded={ !isLoading }>\n              { metadata.description }\n            </Skeleton>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n      { metadata?.attributes && metadata.attributes.length > 0 && (\n        <>\n          <DetailsInfoItem.Label\n            hint=\"NFT attributes\"\n            isLoading={ isLoading }\n          >\n            Attributes\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Grid gap={ 2 } templateColumns=\"repeat(auto-fill,minmax(160px, 1fr))\" w=\"100%\" whiteSpace=\"normal\">\n              { metadata.attributes\n                .filter((attribute) => attribute.value)\n                .map((attribute, index) => <Item key={ index } data={ attribute } isLoading={ isLoading }/>) }\n            </Grid>\n          </DetailsInfoItem.Value>\n        </>\n      ) }\n    </>\n  );\n};\n\nexport default React.memo(TokenInstanceMetadataInfo);\n","import React from 'react';\n\nimport { route } from 'nextjs-routes';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport LinkInternal from 'ui/shared/links/LinkInternal';\n\ninterface Props {\n  hash: string;\n  id: string;\n  onClick: () => void;\n}\n\nconst TokenInstanceTransfersCount = ({ hash, id, onClick }: Props) => {\n  const transfersCountQuery = useApiQuery('token_instance_transfers_count', {\n    pathParams: { hash, id },\n    queryOptions: {\n      enabled: Boolean(hash && id),\n      placeholderData: {\n        transfers_count: 420,\n      },\n    },\n  });\n\n  if (transfersCountQuery.isError) {\n    return null;\n  }\n\n  if (!transfersCountQuery.data?.transfers_count) {\n    return null;\n  }\n\n  const url = transfersCountQuery.data.transfers_count > 0 ?\n    route({ pathname: '/token/[hash]/instance/[id]', query: { hash, id, tab: 'token_transfers' } }) :\n    undefined;\n\n  return (\n    <>\n      <DetailsInfoItem.Label\n        hint=\"Number of transfer for the token instance\"\n        isLoading={ transfersCountQuery.isPlaceholderData }\n      >\n        Transfers\n      </DetailsInfoItem.Label>\n      <DetailsInfoItem.Value>\n        <Skeleton isLoaded={ !transfersCountQuery.isPlaceholderData } display=\"inline-block\">\n          <LinkInternal\n            href={ url }\n            onClick={ transfersCountQuery.data.transfers_count > 0 ? onClick : undefined }\n          >\n            { transfersCountQuery.data.transfers_count.toLocaleString() }\n          </LinkInternal>\n        </Skeleton>\n      </DetailsInfoItem.Value>\n    </>\n  );\n};\n\nexport default TokenInstanceTransfersCount;\n","import { Flex, Grid } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo, TokenInstance } from 'types/api/token';\n\nimport config from 'configs/app';\nimport useIsMounted from 'lib/hooks/useIsMounted';\nimport AppActionButton from 'ui/shared/AppActionButton/AppActionButton';\nimport useAppActionData from 'ui/shared/AppActionButton/useAppActionData';\nimport Skeleton from 'ui/shared/chakra/Skeleton';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport * as DetailsInfoItem from 'ui/shared/DetailsInfoItem';\nimport DetailsInfoItemDivider from 'ui/shared/DetailsInfoItemDivider';\nimport AddressEntity from 'ui/shared/entities/address/AddressEntity';\nimport HashStringShortenDynamic from 'ui/shared/HashStringShortenDynamic';\nimport NftMedia from 'ui/shared/nft/NftMedia';\nimport TokenNftMarketplaces from 'ui/token/TokenNftMarketplaces';\n\nimport TokenInstanceCreatorAddress from './details/TokenInstanceCreatorAddress';\nimport TokenInstanceMetadataInfo from './details/TokenInstanceMetadataInfo';\nimport TokenInstanceTransfersCount from './details/TokenInstanceTransfersCount';\n\ninterface Props {\n  data?: TokenInstance;\n  token?: TokenInfo;\n  isLoading?: boolean;\n  scrollRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst TokenInstanceDetails = ({ data, token, scrollRef, isLoading }: Props) => {\n  const appActionData = useAppActionData(token?.address, !isLoading);\n  const isMounted = useIsMounted();\n\n  const handleCounterItemClick = React.useCallback(() => {\n    window.setTimeout(() => {\n      // cannot do scroll instantly, have to wait a little\n      scrollRef?.current?.scrollIntoView({ behavior: 'smooth' });\n    }, 500);\n  }, [ scrollRef ]);\n\n  if (!data || !token || !isMounted) {\n    return null;\n  }\n\n  return (\n    <>\n      <Flex alignItems=\"flex-start\" flexDir={{ base: 'column-reverse', lg: 'row' }} columnGap={ 6 } rowGap={ 6 }>\n        <Grid\n          flexGrow={ 1 }\n          columnGap={ 8 }\n          rowGap={{ base: 1, lg: 3 }}\n          templateColumns={{ base: 'minmax(0, 1fr)', lg: '200px minmax(0, 1fr)' }}\n          overflow=\"hidden\"\n        >\n          { data.is_unique && data.owner && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Current owner of this token instance\"\n                isLoading={ isLoading }\n              >\n                Owner\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value>\n                <AddressEntity\n                  address={ data.owner }\n                  isLoading={ isLoading }\n                />\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n\n          <TokenInstanceCreatorAddress hash={ isLoading ? '' : token.address }/>\n\n          <DetailsInfoItem.Label\n            hint=\"This token instance unique token ID\"\n            isLoading={ isLoading }\n          >\n            Token ID\n          </DetailsInfoItem.Label>\n          <DetailsInfoItem.Value>\n            <Flex alignItems=\"center\" overflow=\"hidden\">\n              <Skeleton isLoaded={ !isLoading } overflow=\"hidden\" display=\"inline-block\" w=\"100%\">\n                <HashStringShortenDynamic hash={ data.id }/>\n              </Skeleton>\n              <CopyToClipboard text={ data.id } isLoading={ isLoading }/>\n            </Flex>\n          </DetailsInfoItem.Value>\n\n          <TokenInstanceTransfersCount hash={ isLoading ? '' : token.address } id={ isLoading ? '' : data.id } onClick={ handleCounterItemClick }/>\n\n          <TokenNftMarketplaces\n            isLoading={ isLoading }\n            hash={ token.address }\n            id={ data.id }\n            appActionData={ appActionData }\n            source=\"NFT item\"\n          />\n\n          { (config.UI.views.nft.marketplaces.length === 0 && appActionData) && (\n            <>\n              <DetailsInfoItem.Label\n                hint=\"Link to the dapp\"\n              >\n                Dapp\n              </DetailsInfoItem.Label>\n              <DetailsInfoItem.Value py=\"1px\">\n                <AppActionButton data={ appActionData } height=\"30px\" source=\"NFT item\"/>\n              </DetailsInfoItem.Value>\n            </>\n          ) }\n        </Grid>\n        <NftMedia\n          data={ data }\n          isLoading={ isLoading }\n          withFullscreen\n          w=\"250px\"\n          flexShrink={ 0 }\n          alignSelf={{ base: 'center', lg: 'flex-start' }}\n        />\n      </Flex>\n      <Grid\n        mt={ 5 }\n        columnGap={ 8 }\n        rowGap={{ base: 1, lg: 3 }}\n        templateColumns={{ base: 'minmax(0, 1fr)', lg: '200px minmax(0, 1fr)' }}\n        overflow=\"hidden\"\n      >\n        <TokenInstanceMetadataInfo data={ data } isLoading={ isLoading }/>\n        <DetailsInfoItemDivider/>\n      </Grid>\n    </>\n  );\n};\n\nexport default React.memo(TokenInstanceDetails);\n","import { AccordionItem, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  level?: number;\n  className?: string;\n  isFlat?: boolean;\n}\n\nconst MetadataAccordionItem = ({ children, className, level, isFlat }: Props) => {\n  return (\n    <AccordionItem\n      className={ className }\n      display=\"flex\"\n      alignItems=\"flex-start\"\n      flexDir={{ base: 'column', lg: 'row' }}\n      py={ 2 }\n      pl={ isFlat ? 0 : 6 }\n      columnGap={ 3 }\n      borderTopWidth=\"1px\"\n      borderColor=\"divider\"\n      wordBreak=\"break-all\"\n      rowGap={ 1 }\n      _last={{\n        borderBottomWidth: level === 0 ? '1px' : '0px',\n      }}\n      _first={{\n        borderTopWidth: level === 0 ? '1px' : '0px',\n      }}\n    >\n      { children }\n    </AccordionItem>\n  );\n};\n\nexport default React.memo(chakra(MetadataAccordionItem));\n","import { upperFirst } from 'es-toolkit';\n\nexport function formatName(_name: string) {\n  const name = _name\n    .replaceAll('_', ' ')\n    .replaceAll(/\\burl|nft|id\\b/gi, (str) => str.toUpperCase());\n\n  return upperFirst(name.trim());\n}\n\nconst PINNED_FIELDS = [ 'name', 'description' ];\n\nexport function sortFields([ nameA ]: [string, unknown], [ nameB ]: [string, unknown]): number {\n  const pinnedIndexA = PINNED_FIELDS.indexOf(nameA.toLowerCase());\n  const pinnedIndexB = PINNED_FIELDS.indexOf(nameB.toLowerCase());\n\n  if (pinnedIndexA === -1 && pinnedIndexB === -1) {\n    return 0;\n  }\n\n  if (pinnedIndexB === -1) {\n    return -1;\n  }\n\n  if (pinnedIndexA === -1) {\n    return 1;\n  }\n\n  return pinnedIndexA > pinnedIndexB ? 1 : -1;\n}\n","import { Box, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport { formatName } from './utils';\n\ninterface Props {\n  name: string;\n  className?: string;\n}\n\nconst MetadataAccordionItemTitle = ({ name, className }: Props) => {\n  return (\n    <Box w={{ base: 'auto', lg: '90px' }} flexShrink={ 0 } fontWeight={ 600 } wordBreak=\"break-word\" className={ className }>\n      { formatName(name) }\n    </Box>\n  );\n};\n\nexport default React.memo(chakra(MetadataAccordionItemTitle));\n","import * as regexp from 'lib/regexp';\n\nexport default function urlParser(maybeUrl: string): URL | undefined {\n  try {\n    return constructUrl(maybeUrl);\n  } catch (error) {}\n}\n\nfunction constructUrl(maybeUrl: string) {\n  if (regexp.IPFS_PREFIX.test(maybeUrl)) {\n    return new URL(maybeUrl.replace(regexp.IPFS_PREFIX, 'https://ipfs.io/ipfs/'));\n  }\n\n  if (regexp.URL_PREFIX.test(maybeUrl)) {\n    return new URL(maybeUrl);\n  }\n}\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport type { Primitive } from 'react-hook-form';\n\nimport urlParser from 'lib/token/metadata/urlParser';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\n\nimport MetadataAccordionItem from './MetadataAccordionItem';\nimport MetadataAccordionItemTitle from './MetadataAccordionItemTitle';\n\ninterface Props {\n  name?: string;\n  value: Primitive;\n  isItem?: boolean;\n  isFlat?: boolean;\n  level: number;\n}\n\nconst MetadataItemPrimitive = ({ name, value, isItem = true, isFlat, level }: Props) => {\n\n  const Component = isItem ? MetadataAccordionItem : Box;\n\n  const content = (() => {\n    switch (typeof value) {\n      case 'string': {\n        const url = urlParser(value);\n        if (url) {\n          return <LinkExternal href={ url.toString() }>{ value }</LinkExternal>;\n        }\n        if (value === '') {\n          return <div>&quot;&quot;</div>;\n        }\n      }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        return <div>{ String(value) }</div>;\n      }\n    }\n  })();\n\n  return (\n    <Component level={ level } { ...(isItem ? { isFlat } : {}) }>\n      { name && <MetadataAccordionItemTitle name={ name }/> }\n      { content }\n    </Component>\n  );\n};\n\nexport default React.memo(MetadataItemPrimitive);\n","import { AccordionButton, AccordionIcon, AccordionPanel, Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport MetadataAccordionItem from './MetadataAccordionItem';\nimport MetadataAccordionItemTitle from './MetadataAccordionItemTitle';\nimport MetadataItemPrimitive from './MetadataItemPrimitive';\n\ninterface Props {\n  name: string;\n  value: Array<unknown>;\n  level: number;\n}\n\nconst MetadataItemArray = ({ name, value, level }: Props) => {\n\n  return (\n    <MetadataAccordionItem\n      flexDir={{ lg: 'column' }}\n      alignItems=\"stretch\"\n      pl={{ base: 0, lg: 0 }}\n      py={ 0 }\n    >\n      <AccordionButton\n        px={ 0 }\n        py={ 2 }\n        _hover={{ bgColor: 'inherit' }}\n        fontSize=\"sm\"\n        textAlign=\"left\"\n        _expanded={{\n          borderColor: 'divider',\n          borderBottomWidth: '1px',\n        }}\n      >\n        <AccordionIcon boxSize={ 6 } p={ 1 }/>\n        <MetadataAccordionItemTitle name={ name }/>\n      </AccordionButton>\n      <AccordionPanel p={ 0 } ml={{ base: 6, lg: level === 0 ? '126px' : 6 }}>\n        { value.map((item, index) => {\n          const content = (() => {\n            switch (typeof item) {\n              case 'string':\n              case 'number':\n              case 'boolean': {\n                return <MetadataItemPrimitive value={ item } isItem={ false } level={ level }/>;\n              }\n              case 'object': {\n                if (item) {\n                  if (Array.isArray(item)) {\n                    return <span>{ JSON.stringify(item, undefined, 2) }</span>;\n                  } else {\n                    return Object.entries(item).map(([ name, value ], index) => {\n                      return (\n                        <Flex key={ index } columnGap={ 3 }>\n                          <MetadataAccordionItemTitle name={ name } fontWeight={ 400 } w={{ base: '90px' }}/>\n                          <MetadataItemPrimitive\n                            value={ typeof value === 'object' ? JSON.stringify(value, undefined, 2) : value }\n                            isItem={ false }\n                            level={ level }\n                          />\n                        </Flex>\n                      );\n                    });\n                  }\n                } else {\n                  return <span>{ String(item) }</span>;\n                }\n              }\n              default: {\n                return <span>{ String(item) }</span>;\n              }\n            }\n          })();\n\n          return (\n            <Flex\n              key={ index }\n              py={ 2 }\n              _notFirst={{ borderColor: 'divider', borderTopWidth: '1px' }}\n              flexDir=\"column\"\n              rowGap={ 2 }\n            >\n              { content }\n            </Flex>\n          );\n        }) }\n      </AccordionPanel>\n    </MetadataAccordionItem>\n  );\n};\n\nexport default React.memo(MetadataItemArray);\n","import { AccordionButton, AccordionIcon, AccordionPanel, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nimport MetadataAccordion from './MetadataAccordion';\nimport MetadataAccordionItem from './MetadataAccordionItem';\nimport MetadataAccordionItemTitle from './MetadataAccordionItemTitle';\n\ninterface Props {\n  name: string;\n  value: Record<string, unknown>;\n  level: number;\n}\n\nconst MetadataItemObject = ({ name, value, level }: Props) => {\n\n  if (level >= 4) {\n    return (\n      <MetadataAccordionItem level={ level } isFlat>\n        <MetadataAccordionItemTitle name={ name }/>\n        <Box whiteSpace=\"pre-wrap\">{ JSON.stringify(value, undefined, 2) }</Box>\n      </MetadataAccordionItem>\n    );\n  }\n\n  return (\n    <MetadataAccordionItem\n      flexDir={{ lg: 'column' }}\n      alignItems=\"stretch\"\n      py={ 0 }\n      isFlat\n      level={ level }\n    >\n      <AccordionButton\n        px={ 0 }\n        py={ 2 }\n        _hover={{ bgColor: 'inherit' }}\n        fontSize=\"sm\"\n        textAlign=\"left\"\n        _expanded={{\n          borderColor: 'divider',\n          borderBottomWidth: '1px',\n        }}\n      >\n        <AccordionIcon boxSize={ 6 } p={ 1 }/>\n        <MetadataAccordionItemTitle name={ name }/>\n      </AccordionButton>\n      <AccordionPanel p={ 0 }>\n        <MetadataAccordion data={ value as Record<string, unknown> } level={ level + 1 }/>\n      </AccordionPanel>\n    </MetadataAccordionItem>\n  );\n};\n\nexport default React.memo(MetadataItemObject);\n","import { Accordion } from '@chakra-ui/react';\nimport React from 'react';\n\nimport MetadataItemArray from './MetadataItemArray';\nimport MetadataItemObject from './MetadataItemObject';\nimport MetadataItemPrimitive from './MetadataItemPrimitive';\nimport { sortFields } from './utils';\n\ninterface Props {\n  data: Record<string, unknown>;\n  level?: number;\n}\n\nconst MetadataAccordion = ({ data, level = 0 }: Props) => {\n  const ml = (() => {\n    if (level === 0) {\n      return 0;\n    }\n\n    if (level === 1) {\n      return 126;\n    }\n\n    return 24;\n  })();\n\n  const isFlat = Object.entries(data).every(([ , value ]) => typeof value !== 'object');\n\n  const renderItem = React.useCallback((name: string, value: unknown) => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean': {\n        return <MetadataItemPrimitive key={ name } name={ name } value={ value } isFlat={ isFlat } level={ level }/>;\n      }\n\n      case 'object': {\n        if (value === null) {\n          return <MetadataItemPrimitive key={ name } name={ name } value={ value } isFlat={ isFlat } level={ level }/>;\n        }\n\n        if (Array.isArray(value) && value.length > 0) {\n          return <MetadataItemArray key={ name } name={ name } value={ value } level={ level }/>;\n        }\n\n        if (Object.keys(value).length > 0) {\n          return <MetadataItemObject key={ name } name={ name } value={ value as Record<string, unknown> } level={ level }/>;\n        }\n      }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        return <MetadataItemPrimitive key={ name } name={ name } value={ String(value) } isFlat={ isFlat } level={ level }/>;\n      }\n    }\n  }, [ level, isFlat ]);\n\n  return (\n    <Accordion allowMultiple fontSize=\"sm\" ml={{ base: level === 0 ? 0 : 6, lg: `${ ml }px` }} defaultIndex={ level === 0 ? [ 0 ] : undefined }>\n      { Object.entries(data).sort(sortFields).map(([ key, value ]) => renderItem(key, value)) }\n    </Accordion>\n  );\n};\n\nexport default React.memo(MetadataAccordion);\n","import { Alert, Box, Flex, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInstance } from 'types/api/token';\n\nimport ContentLoader from 'ui/shared/ContentLoader';\nimport CopyToClipboard from 'ui/shared/CopyToClipboard';\nimport RawDataSnippet from 'ui/shared/RawDataSnippet';\nimport Select from 'ui/shared/select/Select';\n\nimport { useMetadataUpdateContext } from './contexts/metadataUpdate';\nimport MetadataAccordion from './metadata/MetadataAccordion';\n\nconst OPTIONS = [\n  { label: 'Table', value: 'Table' as const },\n  { label: 'JSON', value: 'JSON' as const },\n];\n\ntype Format = (typeof OPTIONS)[number]['value'];\n\ninterface Props {\n  data: TokenInstance['metadata'] | undefined;\n  isPlaceholderData?: boolean;\n}\n\nconst TokenInstanceMetadata = ({ data, isPlaceholderData }: Props) => {\n  const [ format, setFormat ] = React.useState<Format>('Table');\n\n  const { status: refetchStatus } = useMetadataUpdateContext() || {};\n\n  if (isPlaceholderData || refetchStatus === 'WAITING_FOR_RESPONSE') {\n    return <ContentLoader/>;\n  }\n\n  if (!data) {\n    return <Box>There is no metadata for this NFT</Box>;\n  }\n\n  const content = format === 'Table' ?\n    <MetadataAccordion data={ data }/> :\n    <RawDataSnippet data={ JSON.stringify(data, undefined, 4) } showCopy={ false }/>;\n\n  return (\n    <Box>\n      { refetchStatus === 'ERROR' && (\n        <Alert status=\"warning\" display=\"flow\" mb={ 6 }>\n          <chakra.span fontWeight={ 600 }>Ooops! </chakra.span>\n          <span>We { `couldn't` } refresh metadata. Please try again now or later.</span>\n        </Alert>\n      ) }\n      <Flex alignItems=\"center\" mb={ 6 }>\n        <chakra.span fontWeight={ 500 }>Metadata</chakra.span>\n        <Select\n          options={ OPTIONS }\n          name=\"metadata-format\"\n          defaultValue=\"Table\"\n          onChange={ setFormat }\n          w=\"85px\"\n          ml={ 5 }\n        />\n        { format === 'JSON' && <CopyToClipboard text={ JSON.stringify(data) } ml=\"auto\"/> }\n      </Flex>\n      { content }\n    </Box>\n  );\n};\n\nexport default React.memo(TokenInstanceMetadata);\n","import type { ToastId } from '@chakra-ui/react';\nimport { Alert, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Spinner, Center } from '@chakra-ui/react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { SocketMessage } from 'lib/socket/types';\nimport type { TokenInstance } from 'types/api/token';\n\nimport config from 'configs/app';\nimport useApiFetch from 'lib/api/useApiFetch';\nimport { getResourceKey } from 'lib/api/useApiQuery';\nimport { MINUTE, SECOND } from 'lib/consts';\nimport getErrorMessage from 'lib/errors/getErrorMessage';\nimport useToast from 'lib/hooks/useToast';\nimport useSocketChannel from 'lib/socket/useSocketChannel';\nimport useSocketMessage from 'lib/socket/useSocketMessage';\nimport ReCaptcha from 'ui/shared/reCaptcha/ReCaptcha';\nimport useReCaptcha from 'ui/shared/reCaptcha/useReCaptcha';\n\nimport { useMetadataUpdateContext } from './contexts/metadataUpdate';\n\ninterface Props {\n  hash: string;\n  id: string;\n}\n\nconst TokenInstanceMetadataFetcher = ({ hash, id }: Props) => {\n  const timeoutId = React.useRef<number>();\n  const toastId = React.useRef<ToastId>();\n\n  const { status, setStatus } = useMetadataUpdateContext() || {};\n  const apiFetch = useApiFetch();\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const recaptcha = useReCaptcha();\n\n  const handleRefreshError = React.useCallback(() => {\n    setStatus?.('ERROR');\n    toastId.current && toast.update(toastId.current, {\n      title: 'Error',\n      description: 'The refreshing process has failed. Please try again.',\n      status: 'warning',\n      duration: 5 * SECOND,\n      isClosable: true,\n    });\n  }, [ setStatus, toast ]);\n\n  const initializeUpdate = React.useCallback(async(tokenProp?: string) => {\n    try {\n      const token = tokenProp || await recaptcha.executeAsync();\n      await apiFetch<'token_instance_refresh_metadata', unknown, unknown>('token_instance_refresh_metadata', {\n        pathParams: { hash, id },\n        fetchParams: {\n          method: 'PATCH',\n          body: { recaptcha_response: token },\n        },\n      });\n      setStatus?.('WAITING_FOR_RESPONSE');\n      toastId.current = toast({\n        title: 'Please wait',\n        description: 'Refetching metadata request sent',\n        icon: <Spinner size=\"sm\" mr={ 2 }/>,\n        status: 'warning',\n        duration: null,\n        isClosable: false,\n      });\n      timeoutId.current = window.setTimeout(handleRefreshError, 2 * MINUTE);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: getErrorMessage(error) || 'Unable to initialize metadata update',\n        status: 'warning',\n      });\n      setStatus?.('ERROR');\n    }\n\n  }, [ apiFetch, handleRefreshError, hash, id, recaptcha, setStatus, toast ]);\n\n  const handleModalClose = React.useCallback(() => {\n    setStatus?.('INITIAL');\n  }, [ setStatus ]);\n\n  const handleSocketMessage: SocketMessage.TokenInstanceMetadataFetched['handler'] = React.useCallback((payload) => {\n    if (String(payload.token_id) !== id) {\n      return;\n    }\n\n    const queryKey = getResourceKey('token_instance', { queryParams: { hash, id } });\n    queryClient.setQueryData(queryKey, (prevData: TokenInstance | undefined): TokenInstance | undefined => {\n      if (!prevData) {\n        return;\n      }\n\n      const castToString = (value: unknown) => typeof value === 'string' ? value : undefined;\n\n      return {\n        ...prevData,\n        external_app_url: castToString(payload.fetched_metadata?.external_url) ?? null,\n        animation_url: castToString(payload.fetched_metadata?.animation_url) ?? null,\n        image_url: castToString(\n          payload.fetched_metadata?.image ||\n            payload.fetched_metadata?.image_url ||\n            payload.fetched_metadata?.animation_url,\n        ) ?? null,\n        metadata: payload.fetched_metadata,\n      };\n    });\n\n    toastId.current && toast.update(toastId.current, {\n      title: 'Success!',\n      description: 'Metadata has been refreshed',\n      status: 'success',\n      duration: 5 * SECOND,\n      isClosable: true,\n    });\n\n    setStatus?.('SUCCESS');\n\n    window.clearTimeout(timeoutId.current);\n  }, [ hash, id, queryClient, setStatus, toast ]);\n\n  const channel = useSocketChannel({\n    topic: `token_instances:${ hash.toLowerCase() }`,\n    onSocketClose: handleRefreshError,\n    onSocketError: handleRefreshError,\n    isDisabled: status !== 'WAITING_FOR_RESPONSE',\n  });\n\n  useSocketMessage({\n    channel,\n    event: 'fetched_token_instance_metadata',\n    handler: handleSocketMessage,\n  });\n\n  React.useEffect(() => {\n    if (status !== 'MODAL_OPENED') {\n      return;\n    }\n\n    const timeoutId = window.setTimeout(initializeUpdate, 100);\n    return () => window.clearTimeout(timeoutId);\n  }, [ status, initializeUpdate ]);\n\n  React.useEffect(() => {\n    return () => {\n      timeoutId.current && window.clearTimeout(timeoutId.current);\n      toastId.current && toast.close(toastId.current);\n    };\n  // run only on mount/unmount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (status !== 'MODAL_OPENED') {\n    return null;\n  }\n\n  return (\n    <Modal isOpen={ status === 'MODAL_OPENED' } onClose={ handleModalClose } size={{ base: 'full', lg: 'sm' }}>\n      <ModalOverlay/>\n      <ModalContent>\n        <ModalHeader fontWeight=\"500\" textStyle=\"h3\" mb={ 4 }>Sending request</ModalHeader>\n        <ModalCloseButton/>\n        <ModalBody mb={ 0 } minH=\"78px\">\n          { config.services.reCaptchaV2.siteKey ? (\n            <>\n              <Center h=\"80px\">\n                <Spinner size=\"lg\"/>\n              </Center>\n              <ReCaptcha ref={ recaptcha.ref }/>\n            </>\n          ) : (\n            <Alert status=\"error\">\n              Metadata refresh is not available at the moment since reCaptcha is not configured for this application.\n              Please contact the service maintainer to make necessary changes in the service configuration.\n            </Alert>\n          ) }\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default React.memo(TokenInstanceMetadataFetcher);\n","import { Flex } from '@chakra-ui/react';\nimport React from 'react';\n\nimport type { TokenInfo, TokenInstance } from 'types/api/token';\n\nimport { useAppContext } from 'lib/contexts/app';\nimport * as regexp from 'lib/regexp';\nimport { getTokenTypeName } from 'lib/token/tokenTypes';\nimport AddressQrCode from 'ui/address/details/AddressQrCode';\nimport AccountActionsMenu from 'ui/shared/AccountActionsMenu/AccountActionsMenu';\nimport AddressAddToWallet from 'ui/shared/address/AddressAddToWallet';\nimport Tag from 'ui/shared/chakra/Tag';\nimport TokenEntity from 'ui/shared/entities/token/TokenEntity';\nimport LinkExternal from 'ui/shared/links/LinkExternal';\nimport PageTitle from 'ui/shared/Page/PageTitle';\n\ninterface Props {\n  isLoading: boolean;\n  token: TokenInfo | undefined;\n  instance: TokenInstance | undefined;\n  hash: string | undefined;\n}\n\nconst TokenInstancePageTitle = ({ isLoading, token, instance, hash }: Props) => {\n  const appProps = useAppContext();\n\n  const title = (() => {\n    if (typeof instance?.metadata?.name === 'string') {\n      return instance.metadata.name;\n    }\n\n    if (!instance) {\n      return `Unknown token instance`;\n    }\n\n    if (token?.name || token?.symbol) {\n      return (token.name || token.symbol) + ' #' + instance.id;\n    }\n\n    return `ID ${ instance.id }`;\n  })();\n\n  const backLink = React.useMemo(() => {\n    const hasGoBackLink = appProps.referrer && appProps.referrer.includes(`/token/${ hash }`) && !appProps.referrer.includes('instance');\n\n    if (!hasGoBackLink) {\n      return;\n    }\n\n    return {\n      label: 'Back to token page',\n      url: appProps.referrer,\n    };\n  }, [ appProps.referrer, hash ]);\n\n  const tokenTag = token ? <Tag isLoading={ isLoading }>{ getTokenTypeName(token.type) }</Tag> : null;\n\n  const appLink = (() => {\n    if (!instance?.external_app_url) {\n      return null;\n    }\n\n    try {\n      const url = regexp.URL_PREFIX.test(instance.external_app_url) ?\n        new URL(instance.external_app_url) :\n        new URL('https://' + instance.external_app_url);\n\n      return (\n        <LinkExternal href={ url.toString() } variant=\"subtle\" isLoading={ isLoading } ml={{ base: 0, lg: 'auto' }}>\n          { url.hostname || instance.external_app_url }\n        </LinkExternal>\n      );\n    } catch (error) {\n      return (\n        <LinkExternal href={ instance.external_app_url } isLoading={ isLoading } ml={{ base: 0, lg: 'auto' }}>\n          View in app\n        </LinkExternal>\n      );\n    }\n  })();\n\n  const address = {\n    hash: hash || '',\n    is_contract: true,\n    implementations: null,\n    watchlist_names: [],\n    watchlist_address_id: null,\n  };\n\n  const titleSecondRow = (\n    <Flex alignItems=\"center\" w=\"100%\" minW={ 0 } columnGap={ 2 } rowGap={ 2 } flexWrap={{ base: 'wrap', lg: 'nowrap' }}>\n      { token && (\n        <TokenEntity\n          token={ token }\n          isLoading={ isLoading }\n          noSymbol\n          noCopy\n          jointSymbol\n          fontFamily=\"heading\"\n          fontSize=\"lg\"\n          fontWeight={ 500 }\n          w=\"auto\"\n          maxW=\"700px\"\n        />\n      ) }\n      { !isLoading && <AddressAddToWallet token={ token } variant=\"button\"/> }\n      <AddressQrCode address={ address } isLoading={ isLoading }/>\n      <AccountActionsMenu isLoading={ isLoading } showUpdateMetadataItem/>\n      { appLink }\n    </Flex>\n  );\n\n  return (\n    <PageTitle\n      title={ title }\n      backLink={ backLink }\n      contentAfter={ tokenTag }\n      secondRow={ titleSecondRow }\n      isLoading={ isLoading }\n    />\n  );\n};\n\nexport default React.memo(TokenInstancePageTitle);\n","import { Box } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\n\nimport type { PaginationParams } from 'ui/shared/pagination/types';\nimport type { RoutedTab } from 'ui/shared/Tabs/types';\n\nimport useApiQuery from 'lib/api/useApiQuery';\nimport throwOnResourceLoadError from 'lib/errors/throwOnResourceLoadError';\nimport useIsMobile from 'lib/hooks/useIsMobile';\nimport * as metadata from 'lib/metadata';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport {\n  TOKEN_INSTANCE,\n  TOKEN_INFO_ERC_1155,\n  getTokenInstanceTransfersStub,\n  getTokenInstanceHoldersStub,\n} from 'stubs/token';\nimport Pagination from 'ui/shared/pagination/Pagination';\nimport useQueryWithPages from 'ui/shared/pagination/useQueryWithPages';\nimport RoutedTabs from 'ui/shared/Tabs/RoutedTabs';\nimport TokenHolders from 'ui/token/TokenHolders/TokenHolders';\nimport TokenTransfer from 'ui/token/TokenTransfer/TokenTransfer';\nimport { MetadataUpdateProvider } from 'ui/tokenInstance/contexts/metadataUpdate';\nimport TokenInstanceDetails from 'ui/tokenInstance/TokenInstanceDetails';\nimport TokenInstanceMetadata from 'ui/tokenInstance/TokenInstanceMetadata';\nimport TokenInstanceMetadataFetcher from 'ui/tokenInstance/TokenInstanceMetadataFetcher';\nimport TokenInstancePageTitle from 'ui/tokenInstance/TokenInstancePageTitle';\n\nexport type TokenTabs = 'token_transfers' | 'holders';\n\nconst TokenInstanceContent = () => {\n  const router = useRouter();\n  const isMobile = useIsMobile();\n\n  const hash = getQueryParamString(router.query.hash);\n  const id = getQueryParamString(router.query.id);\n  const tab = getQueryParamString(router.query.tab);\n\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  const tokenQuery = useApiQuery('token', {\n    pathParams: { hash },\n    queryOptions: {\n      enabled: Boolean(hash && id),\n      placeholderData: TOKEN_INFO_ERC_1155,\n    },\n  });\n\n  const tokenInstanceQuery = useApiQuery('token_instance', {\n    pathParams: { hash, id },\n    queryOptions: {\n      enabled: Boolean(hash && id),\n      placeholderData: TOKEN_INSTANCE,\n    },\n  });\n\n  const transfersQuery = useQueryWithPages({\n    resourceName: 'token_instance_transfers',\n    pathParams: { hash, id },\n    scrollRef,\n    options: {\n      enabled: Boolean(hash && id && (!tab || tab === 'token_transfers')),\n      placeholderData: getTokenInstanceTransfersStub(tokenQuery.data?.type, null),\n    },\n  });\n\n  const shouldFetchHolders =\n    !tokenQuery.isPlaceholderData &&\n    !tokenInstanceQuery.isPlaceholderData &&\n    tokenInstanceQuery.data &&\n    !tokenInstanceQuery.data.is_unique;\n\n  const holdersQuery = useQueryWithPages({\n    resourceName: 'token_instance_holders',\n    pathParams: { hash, id },\n    scrollRef,\n    options: {\n      enabled: Boolean(hash && tab === 'holders' && shouldFetchHolders),\n      placeholderData: getTokenInstanceHoldersStub(tokenQuery.data?.type, null),\n    },\n  });\n\n  const isLoading = tokenInstanceQuery.isPlaceholderData || tokenQuery.isPlaceholderData;\n\n  React.useEffect(() => {\n    if (tokenInstanceQuery.data && !tokenInstanceQuery.isPlaceholderData && tokenQuery.data && !tokenQuery.isPlaceholderData) {\n      metadata.update(\n        { pathname: '/token/[hash]/instance/[id]', query: { hash: tokenQuery.data.address, id: tokenInstanceQuery.data.id } },\n        { symbol: tokenQuery.data.symbol ?? '' },\n      );\n    }\n  }, [ tokenInstanceQuery.data, tokenInstanceQuery.isPlaceholderData, tokenQuery.data, tokenQuery.isPlaceholderData ]);\n\n  const tabs: Array<RoutedTab> = [\n    {\n      id: 'token_transfers',\n      title: 'Token transfers',\n      component: <TokenTransfer transfersQuery={ transfersQuery } tokenId={ id } tokenQuery={ tokenQuery } shouldRender={ !isLoading }/>,\n    },\n    shouldFetchHolders ?\n      { id: 'holders', title: 'Holders', component: <TokenHolders holdersQuery={ holdersQuery } token={ tokenQuery.data } shouldRender={ !isLoading }/> } :\n      undefined,\n    { id: 'metadata', title: 'Metadata', component: (\n      <TokenInstanceMetadata\n        data={ tokenInstanceQuery.data?.metadata }\n        isPlaceholderData={ isLoading }\n      />\n    ) },\n  ].filter(Boolean);\n\n  throwOnResourceLoadError(tokenInstanceQuery);\n\n  let pagination: PaginationParams | undefined;\n\n  if (tab === 'token_transfers') {\n    pagination = transfersQuery.pagination;\n  } else if (tab === 'holders') {\n    pagination = holdersQuery.pagination;\n  }\n\n  return (\n    <MetadataUpdateProvider>\n      <TokenInstancePageTitle\n        isLoading={ isLoading }\n        token={ tokenQuery.data }\n        instance={ tokenInstanceQuery.data }\n        hash={ hash }\n      />\n\n      <TokenInstanceDetails data={ tokenInstanceQuery?.data } isLoading={ isLoading } scrollRef={ scrollRef } token={ tokenQuery.data }/>\n\n      { /* should stay before tabs to scroll up with pagination */ }\n      <Box ref={ scrollRef }></Box>\n\n      <RoutedTabs\n        tabs={ tabs }\n        tabListProps={ isMobile ? { mt: 8 } : { mt: 3, py: 5, marginBottom: 0 } }\n        isLoading={ isLoading }\n        rightSlot={ !isMobile && pagination?.isVisible ? <Pagination { ...pagination }/> : null }\n        stickyEnabled={ !isMobile }\n      />\n\n      <TokenInstanceMetadataFetcher hash={ hash } id={ id }/>\n    </MetadataUpdateProvider>\n  );\n};\n\nexport default React.memo(TokenInstanceContent);\n","import type { GetServerSideProps, NextPage } from 'next';\nimport React from 'react';\n\nimport type { Route } from 'nextjs-routes';\nimport type { Props } from 'nextjs/getServerSideProps';\nimport * as gSSP from 'nextjs/getServerSideProps';\nimport PageNextJs from 'nextjs/PageNextJs';\nimport detectBotRequest from 'nextjs/utils/detectBotRequest';\nimport fetchApi from 'nextjs/utils/fetchApi';\n\nimport config from 'configs/app';\nimport getQueryParamString from 'lib/router/getQueryParamString';\nimport TokenInstance from 'ui/pages/TokenInstance';\n\nconst pathname: Route['pathname'] = '/token/[hash]/instance/[id]';\n\nconst Page: NextPage<Props<typeof pathname>> = (props: Props<typeof pathname>) => {\n  return (\n    <PageNextJs pathname={ pathname } query={ props.query } apiData={ props.apiData }>\n      <TokenInstance/>\n    </PageNextJs>\n  );\n};\n\nexport default Page;\n\nexport const getServerSideProps: GetServerSideProps<Props<typeof pathname>> = async(ctx) => {\n  const baseResponse = await gSSP.base<typeof pathname>(ctx);\n\n  if (config.meta.og.enhancedDataEnabled && 'props' in baseResponse) {\n    const botInfo = detectBotRequest(ctx.req);\n\n    if (botInfo?.type === 'social_preview') {\n      const tokenData = await fetchApi({\n        resource: 'token',\n        pathParams: { hash: getQueryParamString(ctx.query.hash) },\n        timeout: 1_000,\n      });\n\n      (await baseResponse.props).apiData = tokenData && tokenData.symbol ? {\n        symbol: tokenData.symbol,\n      } : null;\n    }\n  }\n\n  return baseResponse;\n};\n","import type { ResponsiveValue } from '@chakra-ui/react';\nimport { GridItem, chakra } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  id?: string;\n  colSpan?: ResponsiveValue<number | 'auto'>;\n}\n\nconst DetailsInfoItemDivider = ({ className, id, colSpan }: Props) => {\n  return (\n    <GridItem\n      id={ id }\n      className={ className }\n      colSpan={ colSpan || { base: undefined, lg: 2 } }\n      mt={{ base: 2, lg: 3 }}\n      mb={{ base: 0, lg: 3 }}\n      borderBottom=\"1px solid\"\n      borderColor=\"divider\"\n    />\n  );\n};\n\nexport default chakra(DetailsInfoItemDivider);\n"],"names":["compileValue","template","params","replaceAll","match","p1","value","Array","isArray","join","undefined","CANONICAL_ROUTES","OG_TYPE_DICT","TEMPLATE_MAP","TEMPLATE_MAP_ENHANCED","DEFAULT_TEMPLATE","generate","route","apiData","query","network_name","config","chain","name","network_title","getNetworkTitle","shortName","network_gwei","currencyUnits","gwei","title","make","isEnriched","postfix","pathname","meta","promoteBlockscoutInTitle","trim","Boolean","description","pageOgType","getPageOgType","opengraph","og","imageUrl","canonical","getCanonicalUrl","includes","app","baseUrl","update","window","document","querySelector","setAttribute","DEFAULT_URL","TEST_URLS","slise","coinzilla","adbutler","hype","none","feature","features","adsBanner","React","PageNextJs","metadata","props","useGetCsrfToken","useAdblockDetect","hasAdblockCookie","cookies","ADBLOCK_DETECTED","useAppContext","provider","isEnabled","useEffect","isBrowser","fetch","url","method","mode","cache","then","expires","catch","isMixpanelInited","mixpanel","Head","content","link","rel","href","property","host","children","addressQuery","hash","useApiQuery","TokenInstanceCreatorAddress","pathParams","queryOptions","enabled","placeholderData","ADDRESS_INFO","isError","data","creator_address_hash","creatorAddress","filecoin","robust","creator_filecoin_robust_address","is_contract","implementations","DetailsInfoItem","hint","isLoading","isPlaceholderData","AddressEntity","address","Item","attributeBgColor","useColorModeValue","value_type","LinkExternal","whiteSpace","display","alignItems","w","overflow","fontSize","lineHeight","TruncatedValue","GridItem","bgColor","borderRadius","px","py","flexDir","trait_type","color","fontWeight","mb","isLoadingProp","TokenInstanceMetadataInfo","status","refetchStatus","useMetadataUpdateContext","parseMetadata","raw","parsed","attributes","map","attributesParser","item","String","JSON","stringify","trait","display_type","formatValue","dayjs","Number","format","toLowerCase","toString","startsWith","URL","Error","error","upperFirst","filter","Object","keys","length","hasMetadata","DetailsInfoItemDivider","wordBreak","Skeleton","isLoaded","Grid","gap","templateColumns","attribute","index","transfersCountQuery","id","onClick","TokenInstanceTransfersCount","transfers_count","tab","LinkInternal","toLocaleString","token","TokenInstanceDetails","scrollRef","appActionData","useAppActionData","isMounted","useIsMounted","handleCounterItemClick","setTimeout","current","scrollIntoView","behavior","Flex","base","lg","columnGap","rowGap","flexGrow","is_unique","owner","HashStringShortenDynamic","CopyToClipboard","text","TokenNftMarketplaces","source","UI","views","nft","marketplaces","AppActionButton","height","NftMedia","withFullscreen","flexShrink","alignSelf","mt","chakra","MetadataAccordionItem","className","level","isFlat","AccordionItem","pl","borderTopWidth","borderColor","_last","borderBottomWidth","_first","PINNED_FIELDS","sortFields","nameA","nameB","pinnedIndexA","indexOf","pinnedIndexB","Box","formatName","_name","str","toUpperCase","isItem","Component","urlParser","constructUrl","regexp","test","maybeUrl","replace","div","MetadataAccordionItemTitle","MetadataItemArray","AccordionButton","_hover","textAlign","_expanded","AccordionIcon","boxSize","p","AccordionPanel","ml","MetadataItemPrimitive","span","entries","_notFirst","MetadataItemObject","MetadataAccordion","every","renderItem","Accordion","allowMultiple","defaultIndex","sort","key","OPTIONS","label","TokenInstanceMetadata","setFormat","ContentLoader","RawDataSnippet","showCopy","Alert","Select","options","defaultValue","onChange","timeoutId","TokenInstanceMetadataFetcher","toastId","setStatus","apiFetch","useApiFetch","toast","useToast","queryClient","useQueryClient","recaptcha","useReCaptcha","handleRefreshError","duration","SECOND","isClosable","initializeUpdate","tokenProp","executeAsync","fetchParams","body","recaptcha_response","icon","Spinner","size","mr","MINUTE","getErrorMessage","handleModalClose","payload","token_id","queryKey","getResourceKey","queryParams","setQueryData","castToString","prevData","external_app_url","fetched_metadata","external_url","animation_url","image_url","image","clearTimeout","channel","useSocketChannel","topic","onSocketClose","onSocketError","isDisabled","useSocketMessage","event","handler","handleSocketMessage","close","Modal","isOpen","onClose","ModalOverlay","ModalContent","ModalHeader","textStyle","ModalCloseButton","ModalBody","minH","services","reCaptchaV2","siteKey","Center","h","ReCaptcha","ref","TokenInstancePageTitle","instance","appProps","symbol","backLink","referrer","tokenTag","Tag","getTokenTypeName","type","appLink","variant","hostname","titleSecondRow","minW","flexWrap","TokenEntity","noSymbol","noCopy","jointSymbol","fontFamily","maxW","AddressAddToWallet","AddressQrCode","watchlist_names","watchlist_address_id","AccountActionsMenu","showUpdateMetadataItem","PageTitle","contentAfter","secondRow","tokenQuery","tokenInstanceQuery","pagination","router","useRouter","isMobile","useIsMobile","getQueryParamString","TOKEN_INFO_ERC_1155","TOKEN_INSTANCE","transfersQuery","useQueryWithPages","resourceName","getTokenInstanceTransfersStub","shouldFetchHolders","holdersQuery","getTokenInstanceHoldersStub","tabs","component","TokenTransfer","tokenId","shouldRender","TokenHolders","throwOnResourceLoadError","MetadataUpdateProvider","RoutedTabs","tabListProps","marginBottom","rightSlot","isVisible","Pagination","stickyEnabled","Page","TokenInstance","colSpan","borderBottom"],"sourceRoot":"","ignoreList":[]}